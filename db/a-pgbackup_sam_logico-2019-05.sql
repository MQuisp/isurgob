--
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

-- CREACIÓN DEL LOGIN GCM
CREATE USER webusr WITH LOGIN NOSUPERUSER NOCREATEDB NOCREATEROLE INHERIT NOREPLICATION CONNECTION LIMIT -1 PASSWORD 'test';

COMMENT ON ROLE webusr IS 'Rol de Acceso a ISUR-Gob';

-- CREAMOS LA BASE DE DATOS
CREATE DATABASE "isurgob";
 
-- ACTIVAMOS LA BASE DE DATOS QUE ACABAMOS DE CREAR
\c "isurgob"

--
-- Name: sam; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA sam;


ALTER SCHEMA sam OWNER TO postgres;

--
-- Name: temp; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA temp;


ALTER SCHEMA temp OWNER TO postgres;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Dependencies: 1
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET default_tablespace = '';

SET default_with_oids = false;

--
-- TOC entry 174 (class 1259 OID 5283682)
-- Name: banco; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.banco (
    bco_ent smallint NOT NULL,
    bco_suc smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    domi character varying(50) NOT NULL,
    tel character varying(15),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.banco OWNER TO postgres;

--
-- TOC entry 5725 (class 0 OID 0)
-- Dependencies: 174
-- Name: TABLE banco; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.banco IS 'BANCOS';


--
-- TOC entry 5726 (class 0 OID 0)
-- Dependencies: 174
-- Name: COLUMN banco.bco_ent; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco.bco_ent IS 'CODIGO DE ENTIDAD BANCARIA';


--
-- TOC entry 5727 (class 0 OID 0)
-- Dependencies: 174
-- Name: COLUMN banco.bco_suc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco.bco_suc IS 'CODIGO DE SUCURSAL';


--
-- TOC entry 5728 (class 0 OID 0)
-- Dependencies: 174
-- Name: COLUMN banco.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco.nombre IS 'NOMBRE';


--
-- TOC entry 5729 (class 0 OID 0)
-- Dependencies: 174
-- Name: COLUMN banco.domi; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco.domi IS 'DOMICILIO';


--
-- TOC entry 5730 (class 0 OID 0)
-- Dependencies: 174
-- Name: COLUMN banco.tel; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco.tel IS 'TELEFONO';


--
-- TOC entry 5731 (class 0 OID 0)
-- Dependencies: 174
-- Name: COLUMN banco.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 5732 (class 0 OID 0)
-- Dependencies: 174
-- Name: COLUMN banco.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 188 (class 1259 OID 5283999)
-- Name: banco_cuenta; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.banco_cuenta (
    bcocta_id integer NOT NULL,
    titular character varying(50) NOT NULL,
    cbu character varying(22) NOT NULL,
    tipo smallint NOT NULL,
    tmoneda smallint NOT NULL,
    interna smallint NOT NULL,
    ultcheque integer NOT NULL,
    est character varying(1) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.banco_cuenta OWNER TO postgres;

--
-- TOC entry 5733 (class 0 OID 0)
-- Dependencies: 188
-- Name: TABLE banco_cuenta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.banco_cuenta IS 'CUENTAS DE BANCOS';


--
-- TOC entry 5734 (class 0 OID 0)
-- Dependencies: 188
-- Name: COLUMN banco_cuenta.bcocta_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco_cuenta.bcocta_id IS 'CODIGO DE LA CUENTA';


--
-- TOC entry 5735 (class 0 OID 0)
-- Dependencies: 188
-- Name: COLUMN banco_cuenta.titular; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco_cuenta.titular IS 'TITULAR DE LA CUENTA';


--
-- TOC entry 5736 (class 0 OID 0)
-- Dependencies: 188
-- Name: COLUMN banco_cuenta.cbu; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco_cuenta.cbu IS 'NUMERO DE CLAVE BANCARIA ÚNICA';


--
-- TOC entry 5737 (class 0 OID 0)
-- Dependencies: 188
-- Name: COLUMN banco_cuenta.tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco_cuenta.tipo IS 'TIPO DE CUENTA';


--
-- TOC entry 5738 (class 0 OID 0)
-- Dependencies: 188
-- Name: COLUMN banco_cuenta.tmoneda; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco_cuenta.tmoneda IS 'TIPO DE MONEDA';


--
-- TOC entry 5739 (class 0 OID 0)
-- Dependencies: 188
-- Name: COLUMN banco_cuenta.interna; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco_cuenta.interna IS 'INDICA SI ES UNA CUENTA INTERNA DE LA ORGANIZACIÓN';


--
-- TOC entry 5740 (class 0 OID 0)
-- Dependencies: 188
-- Name: COLUMN banco_cuenta.ultcheque; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco_cuenta.ultcheque IS 'ÚLTIMO CHEQUE GENERADO';


--
-- TOC entry 5741 (class 0 OID 0)
-- Dependencies: 188
-- Name: COLUMN banco_cuenta.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco_cuenta.est IS 'ESTADO DE LA CUENTA (A/B)';


--
-- TOC entry 5742 (class 0 OID 0)
-- Dependencies: 188
-- Name: COLUMN banco_cuenta.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco_cuenta.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 5743 (class 0 OID 0)
-- Dependencies: 188
-- Name: COLUMN banco_cuenta.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco_cuenta.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 175 (class 1259 OID 5283686)
-- Name: banco_entidad; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.banco_entidad (
    bco_ent smallint NOT NULL,
    nombre character varying(40) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.banco_entidad OWNER TO postgres;

--
-- TOC entry 5744 (class 0 OID 0)
-- Dependencies: 175
-- Name: TABLE banco_entidad; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.banco_entidad IS 'ENTIDADES BANCARIAS';


--
-- TOC entry 5745 (class 0 OID 0)
-- Dependencies: 175
-- Name: COLUMN banco_entidad.bco_ent; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco_entidad.bco_ent IS 'CODIGO DE ENTIDAD BANCARIA';


--
-- TOC entry 5746 (class 0 OID 0)
-- Dependencies: 175
-- Name: COLUMN banco_entidad.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco_entidad.nombre IS 'NOMBRE';


--
-- TOC entry 5747 (class 0 OID 0)
-- Dependencies: 175
-- Name: COLUMN banco_entidad.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco_entidad.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 5748 (class 0 OID 0)
-- Dependencies: 175
-- Name: COLUMN banco_entidad.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco_entidad.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 189 (class 1259 OID 5284003)
-- Name: banco_tcuenta; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.banco_tcuenta (
    cod smallint NOT NULL,
    nombre character varying(35) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.banco_tcuenta OWNER TO postgres;

--
-- TOC entry 5749 (class 0 OID 0)
-- Dependencies: 189
-- Name: TABLE banco_tcuenta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.banco_tcuenta IS 'TIPOS DE CUENTA';


--
-- TOC entry 5750 (class 0 OID 0)
-- Dependencies: 189
-- Name: COLUMN banco_tcuenta.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco_tcuenta.cod IS 'CODIGO';


--
-- TOC entry 5751 (class 0 OID 0)
-- Dependencies: 189
-- Name: COLUMN banco_tcuenta.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco_tcuenta.nombre IS 'NOMBRE';


--
-- TOC entry 5752 (class 0 OID 0)
-- Dependencies: 189
-- Name: COLUMN banco_tcuenta.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco_tcuenta.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 5753 (class 0 OID 0)
-- Dependencies: 189
-- Name: COLUMN banco_tcuenta.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco_tcuenta.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 190 (class 1259 OID 5284007)
-- Name: banco_tmoneda; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.banco_tmoneda (
    cod smallint NOT NULL,
    nombre character varying(35) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.banco_tmoneda OWNER TO postgres;

--
-- TOC entry 5754 (class 0 OID 0)
-- Dependencies: 190
-- Name: TABLE banco_tmoneda; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.banco_tmoneda IS 'TIPOS DE MONEDA DE LA CUENTA';


--
-- TOC entry 5755 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN banco_tmoneda.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco_tmoneda.cod IS 'CODIGO';


--
-- TOC entry 5756 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN banco_tmoneda.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco_tmoneda.nombre IS 'NOMBRE';


--
-- TOC entry 5757 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN banco_tmoneda.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco_tmoneda.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 5758 (class 0 OID 0)
-- Dependencies: 190
-- Name: COLUMN banco_tmoneda.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.banco_tmoneda.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 191 (class 1259 OID 5284011)
-- Name: caja; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.caja (
    caja_id smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    usr_id smallint NOT NULL,
    teso_id smallint NOT NULL,
    sup1 smallint NOT NULL,
    sup2 smallint NOT NULL,
    sup3 smallint,
    sup4 smallint,
    tipo smallint NOT NULL,
    destino smallint NOT NULL,
    validar smallint NOT NULL,
    copia smallint NOT NULL,
    resumen smallint NOT NULL,
    editamonto smallint DEFAULT 0 NOT NULL,
    ext_num character varying(8) DEFAULT ''::character varying,
    ext_bco_ent smallint,
    ext_tori smallint,
    ext_host character varying(30),
    ext_usr character varying(30),
    ext_pwd character varying(30),
    ext_recurso character varying(30),
    ext_tdisenio smallint,
    ext_cod_ent character varying(15),
    est character varying(1) DEFAULT 'A'::character varying NOT NULL,
    calc_rec smallint DEFAULT 1,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint DEFAULT 0 NOT NULL
);


ALTER TABLE public.caja OWNER TO postgres;

--
-- TOC entry 5759 (class 0 OID 0)
-- Dependencies: 191
-- Name: TABLE caja; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.caja IS 'CONFIGURACION DE CAJAS';


--
-- TOC entry 5760 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN caja.caja_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja.caja_id IS 'CODIGO';


--
-- TOC entry 5761 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN caja.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja.nombre IS 'NOMBRE';


--
-- TOC entry 5762 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN caja.usr_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja.usr_id IS 'CODIGO DE USUARIO';


--
-- TOC entry 5763 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN caja.teso_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja.teso_id IS 'CODIGO DE TESORERIA';


--
-- TOC entry 5764 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN caja.sup1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja.sup1 IS 'CODIGO DE SUPERVISOR 1';


--
-- TOC entry 5765 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN caja.sup2; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja.sup2 IS 'CODIGO DE SUPERVISOR 2';


--
-- TOC entry 5766 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN caja.sup3; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja.sup3 IS 'CODIGO SUPERVISOR 3';


--
-- TOC entry 5767 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN caja.sup4; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja.sup4 IS 'CODIGO SUPERVISOR 4';


--
-- TOC entry 5768 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN caja.tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja.tipo IS 'CODIGO DE TIPO';


--
-- TOC entry 5769 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN caja.destino; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja.destino IS 'CODIGO DE DESTINO';


--
-- TOC entry 5770 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN caja.validar; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja.validar IS 'SI SE VALIDA LA IMPRESION';


--
-- TOC entry 5771 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN caja.copia; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja.copia IS 'SI SE HACE IMPRESION CON COPIA';


--
-- TOC entry 5772 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN caja.resumen; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja.resumen IS 'SE SE IMPRIME RESUMEN';


--
-- TOC entry 5773 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN caja.editamonto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja.editamonto IS 'SI SE PERMITE EDITAR MONTO';


--
-- TOC entry 5774 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN caja.ext_num; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja.ext_num IS 'CONTRIBUYENTE RESPONSABLE DE LA CAJA EXTERNA';


--
-- TOC entry 5775 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN caja.ext_bco_ent; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja.ext_bco_ent IS 'CODIGO DE ENTIDAD BANCARIA PARA CAJAS TIPO DEBITO';


--
-- TOC entry 5776 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN caja.ext_tori; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja.ext_tori IS 'TIPO DE ORIGEN';


--
-- TOC entry 5777 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN caja.ext_host; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja.ext_host IS 'HOST (PARA FTP ó WS)';


--
-- TOC entry 5778 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN caja.ext_usr; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja.ext_usr IS 'USUARIO (FTP Ó WS)';


--
-- TOC entry 5779 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN caja.ext_pwd; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja.ext_pwd IS 'CLAVE (FTP Ó WS)';


--
-- TOC entry 5780 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN caja.ext_recurso; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja.ext_recurso IS 'NOMBRE DEL ARCHIVO (INCLUYENDO PATH)';


--
-- TOC entry 5781 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN caja.ext_tdisenio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja.ext_tdisenio IS 'TIPO DE DISEÑO DE LOS ARCHIVOS DE RESUMEN';


--
-- TOC entry 5782 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN caja.ext_cod_ent; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja.ext_cod_ent IS 'CODIGO DE ENTIDAD PARA HOME-BANKING';


--
-- TOC entry 5783 (class 0 OID 0)
-- Dependencies: 191
-- Name: COLUMN caja.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja.est IS 'ESTADO';


--
-- TOC entry 192 (class 1259 OID 5284020)
-- Name: caja_anulado; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.caja_anulado (
    tipo character(1) NOT NULL,
    comprob integer NOT NULL,
    cajero smallint NOT NULL,
    fchpedido timestamp without time zone NOT NULL,
    sup smallint,
    fchaprob timestamp without time zone,
    motivo character varying(150) NOT NULL
);


ALTER TABLE public.caja_anulado OWNER TO postgres;

--
-- TOC entry 5784 (class 0 OID 0)
-- Dependencies: 192
-- Name: TABLE caja_anulado; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.caja_anulado IS 'TICKET ANULADOS';


--
-- TOC entry 5785 (class 0 OID 0)
-- Dependencies: 192
-- Name: COLUMN caja_anulado.tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_anulado.tipo IS 'CODIGO DE TIPO (TICKET-OPERACION)';


--
-- TOC entry 5786 (class 0 OID 0)
-- Dependencies: 192
-- Name: COLUMN caja_anulado.comprob; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_anulado.comprob IS 'NUMERO DE COMPROBANTE (ticket u Operación)';


--
-- TOC entry 5787 (class 0 OID 0)
-- Dependencies: 192
-- Name: COLUMN caja_anulado.cajero; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_anulado.cajero IS 'CODIGO DE CAJERO';


--
-- TOC entry 5788 (class 0 OID 0)
-- Dependencies: 192
-- Name: COLUMN caja_anulado.fchpedido; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_anulado.fchpedido IS 'FECHA DE PEDIDO';


--
-- TOC entry 5789 (class 0 OID 0)
-- Dependencies: 192
-- Name: COLUMN caja_anulado.sup; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_anulado.sup IS 'CODIGO DE SUPERVISOR';


--
-- TOC entry 5790 (class 0 OID 0)
-- Dependencies: 192
-- Name: COLUMN caja_anulado.fchaprob; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_anulado.fchaprob IS 'FECHA DE APROBACION';


--
-- TOC entry 5791 (class 0 OID 0)
-- Dependencies: 192
-- Name: COLUMN caja_anulado.motivo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_anulado.motivo IS 'MOTIVO DE LA ANULACION';


--
-- TOC entry 193 (class 1259 OID 5284023)
-- Name: caja_arqueo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.caja_arqueo (
    caja_id smallint NOT NULL,
    fecha date NOT NULL,
    cant1000_00 smallint NOT NULL,
    cant500_00 smallint NOT NULL,
    cant200_00 smallint NOT NULL,
    cant100_00 smallint NOT NULL,
    cant050_00 smallint NOT NULL,
    cant020_00 smallint NOT NULL,
    cant010_00 smallint NOT NULL,
    cant005_00 smallint NOT NULL,
    cant002_00 smallint NOT NULL,
    cant001_00 smallint NOT NULL,
    cant000_50 smallint NOT NULL,
    cant000_25 smallint NOT NULL,
    cant000_10 smallint NOT NULL,
    cant000_05 smallint NOT NULL,
    cant000_01 smallint NOT NULL,
    val_ef numeric(12,2),
    val_ch numeric(12,2),
    val_tc numeric(12,2),
    val_td numeric(12,2),
    val_de numeric(12,2),
    val_tr numeric(12,2),
    val_nc numeric(12,2),
    val_bo numeric(12,2),
    val_ha numeric(12,2),
    val_ot numeric(12,2),
    recuento numeric(12,2) NOT NULL,
    efectivo numeric(12,2) NOT NULL,
    otros numeric(12,2) NOT NULL,
    fondo numeric(12,2) NOT NULL,
    total numeric(12,2) NOT NULL,
    sobrante numeric(12,2) NOT NULL,
    cant_retiro numeric(12,2),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.caja_arqueo OWNER TO postgres;

--
-- TOC entry 5792 (class 0 OID 0)
-- Dependencies: 193
-- Name: TABLE caja_arqueo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.caja_arqueo IS 'ARQUEO CON RECUENTO POR CAJA Y FECHA';


--
-- TOC entry 5793 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.caja_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.caja_id IS 'CODIGO DE CAJA';


--
-- TOC entry 5794 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.fecha; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.fecha IS 'FECHA DEL ARQUEO';


--
-- TOC entry 5795 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.cant1000_00; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.cant1000_00 IS 'CANTIDAD DE 1000';


--
-- TOC entry 5796 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.cant500_00; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.cant500_00 IS 'CANTIDAD DE 500';


--
-- TOC entry 5797 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.cant200_00; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.cant200_00 IS 'CANTIDAD DE 200';


--
-- TOC entry 5798 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.cant100_00; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.cant100_00 IS 'CANTIDAD DE 100';


--
-- TOC entry 5799 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.cant050_00; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.cant050_00 IS 'CANTIDAD DE 50';


--
-- TOC entry 5800 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.cant020_00; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.cant020_00 IS 'CANTIDAD DE 20';


--
-- TOC entry 5801 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.cant010_00; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.cant010_00 IS 'CANTIDAD DE 10';


--
-- TOC entry 5802 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.cant005_00; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.cant005_00 IS 'CANTIDAD DE 5';


--
-- TOC entry 5803 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.cant002_00; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.cant002_00 IS 'CANTIDAD DE 2';


--
-- TOC entry 5804 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.cant001_00; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.cant001_00 IS 'CANTIDAD DE 1';


--
-- TOC entry 5805 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.cant000_50; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.cant000_50 IS 'CANTIDAD DE 0.50';


--
-- TOC entry 5806 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.cant000_25; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.cant000_25 IS 'CANTIDAD DE 0.25';


--
-- TOC entry 5807 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.cant000_10; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.cant000_10 IS 'CANTIDAD DE 0.10';


--
-- TOC entry 5808 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.cant000_05; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.cant000_05 IS 'CANTIDAD DE 0.05';


--
-- TOC entry 5809 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.cant000_01; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.cant000_01 IS 'CANTIDAD DE 0.01';


--
-- TOC entry 5810 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.val_ef; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.val_ef IS 'VALORES EN EFECTIVO';


--
-- TOC entry 5811 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.val_ch; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.val_ch IS 'VALORES EN CHEQUE';


--
-- TOC entry 5812 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.val_tc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.val_tc IS 'VALORES EN TARJETA DE CREDITO';


--
-- TOC entry 5813 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.val_td; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.val_td IS 'VALORES EN TARJETA DE DEBITO';


--
-- TOC entry 5814 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.val_de; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.val_de IS 'VALORES EN DEPOSITO';


--
-- TOC entry 5815 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.val_tr; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.val_tr IS 'VALORES EN TRANSFERENCIA';


--
-- TOC entry 5816 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.val_nc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.val_nc IS 'VALORES EN NOTA DE CREDITO';


--
-- TOC entry 5817 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.val_bo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.val_bo IS 'VALORES EN BONOS';


--
-- TOC entry 5818 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.val_ha; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.val_ha IS 'VALORES EN CESIÓN HABERES';


--
-- TOC entry 5819 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.val_ot; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.val_ot IS 'VALORES EN OTROS';


--
-- TOC entry 5820 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.recuento; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.recuento IS 'TOTAL GENERAL';


--
-- TOC entry 5821 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.efectivo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.efectivo IS 'SUMATORIA DE EFECTIVO';


--
-- TOC entry 5822 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.otros; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.otros IS 'VALORES EN EFECTIVO';


--
-- TOC entry 5823 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.fondo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.fondo IS 'MONTO DE FONDO';


--
-- TOC entry 5824 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.total; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.total IS 'TOTAL INGRESADO, MAS EL FONDO';


--
-- TOC entry 5825 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.sobrante; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.sobrante IS 'SOBRANTE O FALTANTE';


--
-- TOC entry 5826 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.cant_retiro; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.cant_retiro IS 'RETIROS DE EFECTIVOS';


--
-- TOC entry 5827 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 5828 (class 0 OID 0)
-- Dependencies: 193
-- Name: COLUMN caja_arqueo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_arqueo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 194 (class 1259 OID 5284027)
-- Name: caja_caja_mdp; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.caja_caja_mdp (
    caja_id smallint NOT NULL,
    mdp smallint NOT NULL
);


ALTER TABLE public.caja_caja_mdp OWNER TO postgres;

--
-- TOC entry 5829 (class 0 OID 0)
-- Dependencies: 194
-- Name: TABLE caja_caja_mdp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.caja_caja_mdp IS 'VINCULACION DE CAJAS CON MEDIOS DE PAGO';


--
-- TOC entry 5830 (class 0 OID 0)
-- Dependencies: 194
-- Name: COLUMN caja_caja_mdp.caja_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_caja_mdp.caja_id IS 'CODIGO DE CAJA';


--
-- TOC entry 5831 (class 0 OID 0)
-- Dependencies: 194
-- Name: COLUMN caja_caja_mdp.mdp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_caja_mdp.mdp IS 'CODIGO DE MEDIO DE PAGO';


--
-- TOC entry 195 (class 1259 OID 5284030)
-- Name: caja_cheque_cartera; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.caja_cheque_cartera (
    cart_id smallint NOT NULL,
    nrocheque character varying(15) NOT NULL,
    monto numeric(12,2) NOT NULL,
    bco_ent smallint,
    bco_suc smallint,
    bco_cta character varying(11),
    titular character varying(50) DEFAULT ''::character varying,
    plan_id integer,
    plan_id2 integer,
    est character varying(1),
    fchalta date NOT NULL,
    fchcobro date,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.caja_cheque_cartera OWNER TO postgres;

--
-- TOC entry 5832 (class 0 OID 0)
-- Dependencies: 195
-- Name: TABLE caja_cheque_cartera; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.caja_cheque_cartera IS 'CHEQUES EN CARTERA';


--
-- TOC entry 5833 (class 0 OID 0)
-- Dependencies: 195
-- Name: COLUMN caja_cheque_cartera.cart_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_cheque_cartera.cart_id IS 'CODIGO DE CARTERA';


--
-- TOC entry 5834 (class 0 OID 0)
-- Dependencies: 195
-- Name: COLUMN caja_cheque_cartera.nrocheque; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_cheque_cartera.nrocheque IS 'NUMERO DE CHEQUE';


--
-- TOC entry 5835 (class 0 OID 0)
-- Dependencies: 195
-- Name: COLUMN caja_cheque_cartera.monto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_cheque_cartera.monto IS 'MONTO DEL CHEQUE';


--
-- TOC entry 5836 (class 0 OID 0)
-- Dependencies: 195
-- Name: COLUMN caja_cheque_cartera.bco_ent; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_cheque_cartera.bco_ent IS 'ENTIDAD BANCARIA';


--
-- TOC entry 5837 (class 0 OID 0)
-- Dependencies: 195
-- Name: COLUMN caja_cheque_cartera.bco_suc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_cheque_cartera.bco_suc IS 'SUCURSAL BANCARIA';


--
-- TOC entry 5838 (class 0 OID 0)
-- Dependencies: 195
-- Name: COLUMN caja_cheque_cartera.bco_cta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_cheque_cartera.bco_cta IS 'NUMERO DE CUENTA';


--
-- TOC entry 5839 (class 0 OID 0)
-- Dependencies: 195
-- Name: COLUMN caja_cheque_cartera.titular; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_cheque_cartera.titular IS 'TITULAR DE LA CUENTA';


--
-- TOC entry 5840 (class 0 OID 0)
-- Dependencies: 195
-- Name: COLUMN caja_cheque_cartera.plan_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_cheque_cartera.plan_id IS 'CODIGO DEL PLAN';


--
-- TOC entry 5841 (class 0 OID 0)
-- Dependencies: 195
-- Name: COLUMN caja_cheque_cartera.plan_id2; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_cheque_cartera.plan_id2 IS 'CODIGO DE PLAN 2';


--
-- TOC entry 5842 (class 0 OID 0)
-- Dependencies: 195
-- Name: COLUMN caja_cheque_cartera.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_cheque_cartera.est IS 'ESTADO';


--
-- TOC entry 5843 (class 0 OID 0)
-- Dependencies: 195
-- Name: COLUMN caja_cheque_cartera.fchalta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_cheque_cartera.fchalta IS 'FECHA DE ALTA';


--
-- TOC entry 5844 (class 0 OID 0)
-- Dependencies: 195
-- Name: COLUMN caja_cheque_cartera.fchcobro; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_cheque_cartera.fchcobro IS 'FECHA DE COBRO DEL CHEQUE';


--
-- TOC entry 5845 (class 0 OID 0)
-- Dependencies: 195
-- Name: COLUMN caja_cheque_cartera.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_cheque_cartera.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 5846 (class 0 OID 0)
-- Dependencies: 195
-- Name: COLUMN caja_cheque_cartera.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_cheque_cartera.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 196 (class 1259 OID 5284035)
-- Name: caja_estado; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.caja_estado (
    caja_id smallint NOT NULL,
    fecha date NOT NULL,
    apesup smallint NOT NULL,
    fchapesup timestamp without time zone NOT NULL,
    apecaj smallint,
    fchapecaj timestamp without time zone,
    ciecaj smallint,
    fchciecaj timestamp without time zone,
    ciesup smallint,
    fchciesup timestamp without time zone,
    est smallint NOT NULL
);


ALTER TABLE public.caja_estado OWNER TO postgres;

--
-- TOC entry 5847 (class 0 OID 0)
-- Dependencies: 196
-- Name: TABLE caja_estado; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.caja_estado IS 'ESTADO DE LAS CAJAS POR FECHA';


--
-- TOC entry 5848 (class 0 OID 0)
-- Dependencies: 196
-- Name: COLUMN caja_estado.caja_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_estado.caja_id IS 'CODIGO DE CAJA';


--
-- TOC entry 5849 (class 0 OID 0)
-- Dependencies: 196
-- Name: COLUMN caja_estado.fecha; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_estado.fecha IS 'FECHA';


--
-- TOC entry 5850 (class 0 OID 0)
-- Dependencies: 196
-- Name: COLUMN caja_estado.apesup; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_estado.apesup IS 'CODIGO DE SUPERVISOR QUE ABRIO';


--
-- TOC entry 5851 (class 0 OID 0)
-- Dependencies: 196
-- Name: COLUMN caja_estado.fchapesup; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_estado.fchapesup IS 'FECHA DE APERTURA POR SUPERVISOR';


--
-- TOC entry 5852 (class 0 OID 0)
-- Dependencies: 196
-- Name: COLUMN caja_estado.apecaj; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_estado.apecaj IS 'CODIGO DE CAJERO QUE ABRIO';


--
-- TOC entry 5853 (class 0 OID 0)
-- Dependencies: 196
-- Name: COLUMN caja_estado.fchapecaj; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_estado.fchapecaj IS 'FECHA DE APERTURA POR CAJERO';


--
-- TOC entry 5854 (class 0 OID 0)
-- Dependencies: 196
-- Name: COLUMN caja_estado.ciecaj; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_estado.ciecaj IS 'CODIGO DE CAJERO QUE CERRO';


--
-- TOC entry 5855 (class 0 OID 0)
-- Dependencies: 196
-- Name: COLUMN caja_estado.fchciecaj; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_estado.fchciecaj IS 'FECHA DE CIERRE POR CAJERO';


--
-- TOC entry 5856 (class 0 OID 0)
-- Dependencies: 196
-- Name: COLUMN caja_estado.ciesup; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_estado.ciesup IS 'CODIGO DE SUPERVISOR QUE CERRO';


--
-- TOC entry 5857 (class 0 OID 0)
-- Dependencies: 196
-- Name: COLUMN caja_estado.fchciesup; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_estado.fchciesup IS 'FECHA DE CIERRE POR SUPERVISOR';


--
-- TOC entry 5858 (class 0 OID 0)
-- Dependencies: 196
-- Name: COLUMN caja_estado.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_estado.est IS 'ESTADO';


--
-- TOC entry 197 (class 1259 OID 5284038)
-- Name: caja_externa_anula; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.caja_externa_anula (
    codbarra character varying(42) NOT NULL,
    ctacte_id integer NOT NULL,
    caja_id smallint NOT NULL,
    fecha date NOT NULL,
    cta_id smallint NOT NULL,
    monto numeric(12,2),
    error character varying(250),
    fchmod timestamp without time zone NOT NULL,
    usrmod smallint
);


ALTER TABLE public.caja_externa_anula OWNER TO postgres;

--
-- TOC entry 5859 (class 0 OID 0)
-- Dependencies: 197
-- Name: TABLE caja_externa_anula; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.caja_externa_anula IS 'ANULACIONES EN CAJA EXTERNA';


--
-- TOC entry 5860 (class 0 OID 0)
-- Dependencies: 197
-- Name: COLUMN caja_externa_anula.codbarra; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_externa_anula.codbarra IS 'CODIGO DE BARRAS';


--
-- TOC entry 5861 (class 0 OID 0)
-- Dependencies: 197
-- Name: COLUMN caja_externa_anula.ctacte_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_externa_anula.ctacte_id IS 'IDENTIFICADOR DE LA CTACTE';


--
-- TOC entry 5862 (class 0 OID 0)
-- Dependencies: 197
-- Name: COLUMN caja_externa_anula.caja_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_externa_anula.caja_id IS 'CODIGO DE CAJA';


--
-- TOC entry 5863 (class 0 OID 0)
-- Dependencies: 197
-- Name: COLUMN caja_externa_anula.fecha; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_externa_anula.fecha IS 'FECHA DE PROCESAMIENTO';


--
-- TOC entry 5864 (class 0 OID 0)
-- Dependencies: 197
-- Name: COLUMN caja_externa_anula.cta_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_externa_anula.cta_id IS 'CODIGO DE CUENTA';


--
-- TOC entry 5865 (class 0 OID 0)
-- Dependencies: 197
-- Name: COLUMN caja_externa_anula.monto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_externa_anula.monto IS 'MONTO ANULADO';


--
-- TOC entry 5866 (class 0 OID 0)
-- Dependencies: 197
-- Name: COLUMN caja_externa_anula.error; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_externa_anula.error IS 'MENSAJE DE ERROR';


--
-- TOC entry 5867 (class 0 OID 0)
-- Dependencies: 197
-- Name: COLUMN caja_externa_anula.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_externa_anula.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 5868 (class 0 OID 0)
-- Dependencies: 197
-- Name: COLUMN caja_externa_anula.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_externa_anula.usrmod IS 'USUARIO QUE MODIFICA';


--
-- TOC entry 198 (class 1259 OID 5284041)
-- Name: caja_externa_err; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.caja_externa_err (
    codbarra character varying(42) NOT NULL,
    ctacte_id integer NOT NULL,
    caja_id smallint NOT NULL,
    fecha date NOT NULL,
    cobrado numeric(12,2),
    error character varying(250),
    fchmod timestamp without time zone NOT NULL,
    usrmod smallint
);


ALTER TABLE public.caja_externa_err OWNER TO postgres;

--
-- TOC entry 5869 (class 0 OID 0)
-- Dependencies: 198
-- Name: TABLE caja_externa_err; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.caja_externa_err IS 'ERRORES DETECTADOS EN EL PROCESAMIENTO DE CAJA EXTERNA';


--
-- TOC entry 5870 (class 0 OID 0)
-- Dependencies: 198
-- Name: COLUMN caja_externa_err.codbarra; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_externa_err.codbarra IS 'CODIGO DE BARRAS';


--
-- TOC entry 5871 (class 0 OID 0)
-- Dependencies: 198
-- Name: COLUMN caja_externa_err.ctacte_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_externa_err.ctacte_id IS 'IDENTIFICADOR DE LA CTACTE';


--
-- TOC entry 5872 (class 0 OID 0)
-- Dependencies: 198
-- Name: COLUMN caja_externa_err.caja_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_externa_err.caja_id IS 'CODIGO DE CAJA';


--
-- TOC entry 5873 (class 0 OID 0)
-- Dependencies: 198
-- Name: COLUMN caja_externa_err.fecha; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_externa_err.fecha IS 'FECHA DE PROCESAMIENTO';


--
-- TOC entry 5874 (class 0 OID 0)
-- Dependencies: 198
-- Name: COLUMN caja_externa_err.cobrado; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_externa_err.cobrado IS 'MONTO COBRADO';


--
-- TOC entry 5875 (class 0 OID 0)
-- Dependencies: 198
-- Name: COLUMN caja_externa_err.error; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_externa_err.error IS 'MENSAJE DE ERROR';


--
-- TOC entry 5876 (class 0 OID 0)
-- Dependencies: 198
-- Name: COLUMN caja_externa_err.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_externa_err.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 5877 (class 0 OID 0)
-- Dependencies: 198
-- Name: COLUMN caja_externa_err.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_externa_err.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 199 (class 1259 OID 5284044)
-- Name: caja_mdp; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.caja_mdp (
    mdp smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    tipo character varying(2),
    cotiza numeric(12,2) NOT NULL,
    simbolo character varying(3) NOT NULL,
    habilitado smallint NOT NULL,
    financia smallint DEFAULT 0
);


ALTER TABLE public.caja_mdp OWNER TO postgres;

--
-- TOC entry 5878 (class 0 OID 0)
-- Dependencies: 199
-- Name: TABLE caja_mdp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.caja_mdp IS 'DIFERENTES MEDIOS DE PAGO';


--
-- TOC entry 5879 (class 0 OID 0)
-- Dependencies: 199
-- Name: COLUMN caja_mdp.mdp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_mdp.mdp IS 'CODIGO DE MEDIO DE PAGO';


--
-- TOC entry 5880 (class 0 OID 0)
-- Dependencies: 199
-- Name: COLUMN caja_mdp.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_mdp.nombre IS 'NOMBRE';


--
-- TOC entry 5881 (class 0 OID 0)
-- Dependencies: 199
-- Name: COLUMN caja_mdp.tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_mdp.tipo IS 'TIPO DE MEDIO DE PAGO';


--
-- TOC entry 5882 (class 0 OID 0)
-- Dependencies: 199
-- Name: COLUMN caja_mdp.cotiza; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_mdp.cotiza IS 'MONTO DE COTIZACION';


--
-- TOC entry 5883 (class 0 OID 0)
-- Dependencies: 199
-- Name: COLUMN caja_mdp.simbolo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_mdp.simbolo IS 'SIMBOLO O BREVE DESCRIPCION';


--
-- TOC entry 5884 (class 0 OID 0)
-- Dependencies: 199
-- Name: COLUMN caja_mdp.habilitado; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_mdp.habilitado IS 'SI SE ENCUENTRA HABILITADO';


--
-- TOC entry 5885 (class 0 OID 0)
-- Dependencies: 199
-- Name: COLUMN caja_mdp.financia; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_mdp.financia IS 'INDICA SI SE PUEDE FINANCIAR EN CUOTAS. SOLO SE APLICA SI TMDP=TC.';


--
-- TOC entry 200 (class 1259 OID 5284048)
-- Name: caja_mdp_cuota; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.caja_mdp_cuota (
    mdp smallint NOT NULL,
    cuotas smallint NOT NULL,
    rec numeric(7,4) NOT NULL
);


ALTER TABLE public.caja_mdp_cuota OWNER TO postgres;

--
-- TOC entry 5886 (class 0 OID 0)
-- Dependencies: 200
-- Name: TABLE caja_mdp_cuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.caja_mdp_cuota IS 'CANTIDAD DE CUOTAS HABILITADA, CON SU RECARGO CORRESPONDIENTE.';


--
-- TOC entry 5887 (class 0 OID 0)
-- Dependencies: 200
-- Name: COLUMN caja_mdp_cuota.mdp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_mdp_cuota.mdp IS 'CODIGO DE MEDIO DE PAGO';


--
-- TOC entry 5888 (class 0 OID 0)
-- Dependencies: 200
-- Name: COLUMN caja_mdp_cuota.cuotas; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_mdp_cuota.cuotas IS 'CANTIDAD DE CUOTAS';


--
-- TOC entry 5889 (class 0 OID 0)
-- Dependencies: 200
-- Name: COLUMN caja_mdp_cuota.rec; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_mdp_cuota.rec IS 'TASA DE RECARGO SEGÚN LA CANTIDAD DE CUOTAS';


--
-- TOC entry 201 (class 1259 OID 5284051)
-- Name: caja_opera; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.caja_opera (
    opera integer NOT NULL,
    caja_id smallint NOT NULL,
    fecha date NOT NULL,
    lote character varying(10) DEFAULT ''::character varying NOT NULL,
    cant smallint NOT NULL,
    monto numeric(12,2) NOT NULL,
    cobrado numeric(12,2) DEFAULT 0,
    comision numeric(12,2) DEFAULT 0 NOT NULL,
    deposito numeric(12,2) DEFAULT 0 NOT NULL,
    fchrecep date,
    fchproc timestamp(0) without time zone,
    ctacte_id integer,
    est character varying(1) DEFAULT 'A'::character varying NOT NULL,
    fchmod timestamp without time zone NOT NULL,
    usrmod smallint NOT NULL,
    cant_lotes smallint DEFAULT 0 NOT NULL
);


ALTER TABLE public.caja_opera OWNER TO postgres;

--
-- TOC entry 5890 (class 0 OID 0)
-- Dependencies: 201
-- Name: TABLE caja_opera; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.caja_opera IS 'OPERACIONES REGISTRADAS EN LA CAJA. UNA OPERACIÓN AGRUPA UN CONJUNTO DE TICKETS';


--
-- TOC entry 5891 (class 0 OID 0)
-- Dependencies: 201
-- Name: COLUMN caja_opera.opera; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera.opera IS 'CODIGO DE OPERACION';


--
-- TOC entry 5892 (class 0 OID 0)
-- Dependencies: 201
-- Name: COLUMN caja_opera.caja_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera.caja_id IS 'CODIGO DE CAJA';


--
-- TOC entry 5893 (class 0 OID 0)
-- Dependencies: 201
-- Name: COLUMN caja_opera.fecha; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera.fecha IS 'FECHA DE LA CAJA';


--
-- TOC entry 5894 (class 0 OID 0)
-- Dependencies: 201
-- Name: COLUMN caja_opera.lote; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera.lote IS 'NÚMERO DE LOTE EXTERNO';


--
-- TOC entry 5895 (class 0 OID 0)
-- Dependencies: 201
-- Name: COLUMN caja_opera.cant; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera.cant IS 'CANTIDAD DE COMPROBANTES';


--
-- TOC entry 5896 (class 0 OID 0)
-- Dependencies: 201
-- Name: COLUMN caja_opera.monto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera.monto IS 'MONTO TOTAL DE LA OPERACION';


--
-- TOC entry 5897 (class 0 OID 0)
-- Dependencies: 201
-- Name: COLUMN caja_opera.cobrado; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera.cobrado IS 'MONTO INGRESADO (PARA CAJAS EXTERNAS)';


--
-- TOC entry 5898 (class 0 OID 0)
-- Dependencies: 201
-- Name: COLUMN caja_opera.comision; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera.comision IS 'COMISIÓN LIQUIDADA AL AGENTE EXTERNO';


--
-- TOC entry 5899 (class 0 OID 0)
-- Dependencies: 201
-- Name: COLUMN caja_opera.deposito; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera.deposito IS 'IMPORTE DEPOSITADO POR AGENTE, RESTANDO LAS COMISIONES';


--
-- TOC entry 5900 (class 0 OID 0)
-- Dependencies: 201
-- Name: COLUMN caja_opera.fchrecep; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera.fchrecep IS 'FECHA DE RECEPCIÓN DEL LOTE';


--
-- TOC entry 5901 (class 0 OID 0)
-- Dependencies: 201
-- Name: COLUMN caja_opera.fchproc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera.fchproc IS 'FECHA DE PROCESAMIENTO DE PAGOS';


--
-- TOC entry 5902 (class 0 OID 0)
-- Dependencies: 201
-- Name: COLUMN caja_opera.ctacte_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera.ctacte_id IS 'COMPROBANTE CAJA EXTERNA VINCULADO';


--
-- TOC entry 5903 (class 0 OID 0)
-- Dependencies: 201
-- Name: COLUMN caja_opera.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera.est IS 'ESTADO (A/B)';


--
-- TOC entry 5904 (class 0 OID 0)
-- Dependencies: 201
-- Name: COLUMN caja_opera.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 5905 (class 0 OID 0)
-- Dependencies: 201
-- Name: COLUMN caja_opera.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera.usrmod IS 'USUARIO DE MODIFICACION';


--
-- TOC entry 5906 (class 0 OID 0)
-- Dependencies: 201
-- Name: COLUMN caja_opera.cant_lotes; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera.cant_lotes IS 'CANTIDAD DE LOTES GENERADOS POR EL AGENTE EXTERNO';


--
-- TOC entry 202 (class 1259 OID 5284060)
-- Name: caja_opera_mdp; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.caja_opera_mdp (
    orden integer NOT NULL,
    opera integer NOT NULL,
    mdp smallint NOT NULL,
    cant numeric(12,2) NOT NULL,
    cotiza numeric(12,2) NOT NULL,
    monto numeric(12,2) NOT NULL,
    comprob character varying(15) DEFAULT ''::character varying,
    bco_ent smallint,
    bco_suc smallint,
    bco_cta character varying(11),
    titular character varying(50) DEFAULT ''::character varying,
    tcta smallint,
    fchcobro date,
    bcocta_id integer DEFAULT 0,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint DEFAULT 0 NOT NULL
);


ALTER TABLE public.caja_opera_mdp OWNER TO postgres;

--
-- TOC entry 5907 (class 0 OID 0)
-- Dependencies: 202
-- Name: TABLE caja_opera_mdp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.caja_opera_mdp IS 'MEDIOS DE PAGOS USADOS PARA CADA PAGO REGISTRADO';


--
-- TOC entry 5908 (class 0 OID 0)
-- Dependencies: 202
-- Name: COLUMN caja_opera_mdp.orden; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera_mdp.orden IS 'NUMERO DE ORDEN';


--
-- TOC entry 5909 (class 0 OID 0)
-- Dependencies: 202
-- Name: COLUMN caja_opera_mdp.opera; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera_mdp.opera IS 'CODIGO DE OPERACION';


--
-- TOC entry 5910 (class 0 OID 0)
-- Dependencies: 202
-- Name: COLUMN caja_opera_mdp.mdp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera_mdp.mdp IS 'CODIGO DE MEDIO DE PAGO';


--
-- TOC entry 5911 (class 0 OID 0)
-- Dependencies: 202
-- Name: COLUMN caja_opera_mdp.cant; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera_mdp.cant IS 'CANTIDAD';


--
-- TOC entry 5912 (class 0 OID 0)
-- Dependencies: 202
-- Name: COLUMN caja_opera_mdp.cotiza; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera_mdp.cotiza IS 'MONTO DE COTIZACION';


--
-- TOC entry 5913 (class 0 OID 0)
-- Dependencies: 202
-- Name: COLUMN caja_opera_mdp.monto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera_mdp.monto IS 'MONTO TOTAL COBRADO';


--
-- TOC entry 5914 (class 0 OID 0)
-- Dependencies: 202
-- Name: COLUMN caja_opera_mdp.comprob; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera_mdp.comprob IS 'COMPROBANTE';


--
-- TOC entry 5915 (class 0 OID 0)
-- Dependencies: 202
-- Name: COLUMN caja_opera_mdp.bco_ent; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera_mdp.bco_ent IS 'ENTIDAD BANCARIA';


--
-- TOC entry 5916 (class 0 OID 0)
-- Dependencies: 202
-- Name: COLUMN caja_opera_mdp.bco_suc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera_mdp.bco_suc IS 'SUCURSAL BANCARIA';


--
-- TOC entry 5917 (class 0 OID 0)
-- Dependencies: 202
-- Name: COLUMN caja_opera_mdp.bco_cta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera_mdp.bco_cta IS 'NUMERO DE CUENTA';


--
-- TOC entry 5918 (class 0 OID 0)
-- Dependencies: 202
-- Name: COLUMN caja_opera_mdp.titular; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera_mdp.titular IS 'TITULAR DE LA CUENTA';


--
-- TOC entry 5919 (class 0 OID 0)
-- Dependencies: 202
-- Name: COLUMN caja_opera_mdp.tcta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera_mdp.tcta IS 'TIPO DE CUENTA BANCARIA';


--
-- TOC entry 5920 (class 0 OID 0)
-- Dependencies: 202
-- Name: COLUMN caja_opera_mdp.fchcobro; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera_mdp.fchcobro IS 'FECHA DE COBRO DEL CHEQUE';


--
-- TOC entry 5921 (class 0 OID 0)
-- Dependencies: 202
-- Name: COLUMN caja_opera_mdp.bcocta_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera_mdp.bcocta_id IS 'ID DE LA CUENTA BANCARIA';


--
-- TOC entry 5922 (class 0 OID 0)
-- Dependencies: 202
-- Name: COLUMN caja_opera_mdp.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera_mdp.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 5923 (class 0 OID 0)
-- Dependencies: 202
-- Name: COLUMN caja_opera_mdp.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_opera_mdp.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 203 (class 1259 OID 5284066)
-- Name: caja_pagoold; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.caja_pagoold (
    pago_id integer NOT NULL,
    obj_id character varying(8) NOT NULL,
    trib_id integer NOT NULL,
    anio integer NOT NULL,
    cuota integer NOT NULL,
    fchpago date,
    comprob bigint,
    obs character varying(500),
    fchmod timestamp without time zone NOT NULL,
    usrmod smallint
);


ALTER TABLE public.caja_pagoold OWNER TO postgres;

--
-- TOC entry 5924 (class 0 OID 0)
-- Dependencies: 203
-- Name: TABLE caja_pagoold; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.caja_pagoold IS 'REGISTRO DE PAGOS ANTERIORES DE CAJA';


--
-- TOC entry 5925 (class 0 OID 0)
-- Dependencies: 203
-- Name: COLUMN caja_pagoold.pago_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_pagoold.pago_id IS 'CODIGO DE PAGO';


--
-- TOC entry 5926 (class 0 OID 0)
-- Dependencies: 203
-- Name: COLUMN caja_pagoold.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_pagoold.obj_id IS 'CODIGO DEL OBJETO';


--
-- TOC entry 5927 (class 0 OID 0)
-- Dependencies: 203
-- Name: COLUMN caja_pagoold.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_pagoold.trib_id IS 'CODIGO DEL TRIBUTO';


--
-- TOC entry 5928 (class 0 OID 0)
-- Dependencies: 203
-- Name: COLUMN caja_pagoold.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_pagoold.anio IS 'AÑO';


--
-- TOC entry 5929 (class 0 OID 0)
-- Dependencies: 203
-- Name: COLUMN caja_pagoold.cuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_pagoold.cuota IS 'NUMERO DE CUOTA';


--
-- TOC entry 5930 (class 0 OID 0)
-- Dependencies: 203
-- Name: COLUMN caja_pagoold.fchpago; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_pagoold.fchpago IS 'FECHA EN QUE SE EFECTUO EL PAGO';


--
-- TOC entry 5931 (class 0 OID 0)
-- Dependencies: 203
-- Name: COLUMN caja_pagoold.comprob; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_pagoold.comprob IS 'NUMERO DE COMPROBANTE';


--
-- TOC entry 5932 (class 0 OID 0)
-- Dependencies: 203
-- Name: COLUMN caja_pagoold.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_pagoold.obs IS 'OBSERVCACIONES';


--
-- TOC entry 5933 (class 0 OID 0)
-- Dependencies: 203
-- Name: COLUMN caja_pagoold.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_pagoold.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 5934 (class 0 OID 0)
-- Dependencies: 203
-- Name: COLUMN caja_pagoold.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_pagoold.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 204 (class 1259 OID 5284072)
-- Name: caja_tdestino; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.caja_tdestino (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.caja_tdestino OWNER TO postgres;

--
-- TOC entry 5935 (class 0 OID 0)
-- Dependencies: 204
-- Name: TABLE caja_tdestino; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.caja_tdestino IS 'DESTINO DEL TICKET';


--
-- TOC entry 5936 (class 0 OID 0)
-- Dependencies: 204
-- Name: COLUMN caja_tdestino.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tdestino.cod IS 'CODIGO ';


--
-- TOC entry 5937 (class 0 OID 0)
-- Dependencies: 204
-- Name: COLUMN caja_tdestino.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tdestino.nombre IS 'NOMBRE';


--
-- TOC entry 5938 (class 0 OID 0)
-- Dependencies: 204
-- Name: COLUMN caja_tdestino.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tdestino.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 5939 (class 0 OID 0)
-- Dependencies: 204
-- Name: COLUMN caja_tdestino.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tdestino.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 205 (class 1259 OID 5284076)
-- Name: caja_tdisenio; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.caja_tdisenio (
    cod character varying(2) NOT NULL,
    nombre character varying(15) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.caja_tdisenio OWNER TO postgres;

--
-- TOC entry 5940 (class 0 OID 0)
-- Dependencies: 205
-- Name: TABLE caja_tdisenio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.caja_tdisenio IS 'TIPOS DE DISEÑO DE INFORME DE PAGOS';


--
-- TOC entry 5941 (class 0 OID 0)
-- Dependencies: 205
-- Name: COLUMN caja_tdisenio.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tdisenio.cod IS 'CODIGO ';


--
-- TOC entry 5942 (class 0 OID 0)
-- Dependencies: 205
-- Name: COLUMN caja_tdisenio.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tdisenio.nombre IS 'NOMBRE';


--
-- TOC entry 5943 (class 0 OID 0)
-- Dependencies: 205
-- Name: COLUMN caja_tdisenio.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tdisenio.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 5944 (class 0 OID 0)
-- Dependencies: 205
-- Name: COLUMN caja_tdisenio.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tdisenio.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 206 (class 1259 OID 5284080)
-- Name: caja_tesoreria; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.caja_tesoreria (
    teso_id smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    est character(1) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.caja_tesoreria OWNER TO postgres;

--
-- TOC entry 5945 (class 0 OID 0)
-- Dependencies: 206
-- Name: TABLE caja_tesoreria; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.caja_tesoreria IS 'DIFERENTES TESORERÍAS';


--
-- TOC entry 5946 (class 0 OID 0)
-- Dependencies: 206
-- Name: COLUMN caja_tesoreria.teso_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tesoreria.teso_id IS 'CODIGO DE TESORERIA';


--
-- TOC entry 5947 (class 0 OID 0)
-- Dependencies: 206
-- Name: COLUMN caja_tesoreria.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tesoreria.nombre IS 'NOMBRE';


--
-- TOC entry 5948 (class 0 OID 0)
-- Dependencies: 206
-- Name: COLUMN caja_tesoreria.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tesoreria.est IS 'ESTADO';


--
-- TOC entry 5949 (class 0 OID 0)
-- Dependencies: 206
-- Name: COLUMN caja_tesoreria.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tesoreria.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 5950 (class 0 OID 0)
-- Dependencies: 206
-- Name: COLUMN caja_tesoreria.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tesoreria.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 207 (class 1259 OID 5284084)
-- Name: caja_test; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.caja_test (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.caja_test OWNER TO postgres;

--
-- TOC entry 5951 (class 0 OID 0)
-- Dependencies: 207
-- Name: TABLE caja_test; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.caja_test IS 'DISTINTOS ESTADOS DE CAJAS';


--
-- TOC entry 5952 (class 0 OID 0)
-- Dependencies: 207
-- Name: COLUMN caja_test.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_test.cod IS 'CODIGO ';


--
-- TOC entry 5953 (class 0 OID 0)
-- Dependencies: 207
-- Name: COLUMN caja_test.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_test.nombre IS 'NOMBRE';


--
-- TOC entry 5954 (class 0 OID 0)
-- Dependencies: 207
-- Name: COLUMN caja_test.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_test.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 5955 (class 0 OID 0)
-- Dependencies: 207
-- Name: COLUMN caja_test.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_test.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 179 (class 1259 OID 5283772)
-- Name: seq_caja_ticket; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_caja_ticket
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_caja_ticket OWNER TO postgres;

--
-- TOC entry 180 (class 1259 OID 5283774)
-- Name: caja_ticket; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.caja_ticket (
    ticket integer DEFAULT nextval('public.seq_caja_ticket'::regclass) NOT NULL,
    opera integer NOT NULL,
    caja_id smallint NOT NULL,
    fecha date NOT NULL,
    hora time without time zone,
    ctacte_id integer NOT NULL,
    trib_id smallint NOT NULL,
    obj_id character varying(8) NOT NULL,
    subcta smallint DEFAULT 0 NOT NULL,
    anio integer NOT NULL,
    cuota smallint NOT NULL,
    faci_id integer DEFAULT 0 NOT NULL,
    num character varying(8) DEFAULT ''::character varying NOT NULL,
    monto numeric(12,2) NOT NULL,
    monto_valida numeric(12,2) NOT NULL,
    est character(1) NOT NULL,
    obs character varying(100) DEFAULT ''::character varying NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.caja_ticket OWNER TO postgres;

--
-- TOC entry 5956 (class 0 OID 0)
-- Dependencies: 180
-- Name: TABLE caja_ticket; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.caja_ticket IS 'DATOS PRINCIPALES DE CADA TICKET COBRADO';


--
-- TOC entry 5957 (class 0 OID 0)
-- Dependencies: 180
-- Name: COLUMN caja_ticket.ticket; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket.ticket IS 'NUMERO DE TICKET';


--
-- TOC entry 5958 (class 0 OID 0)
-- Dependencies: 180
-- Name: COLUMN caja_ticket.opera; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket.opera IS 'CODIGO DE OPERACION';


--
-- TOC entry 5959 (class 0 OID 0)
-- Dependencies: 180
-- Name: COLUMN caja_ticket.caja_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket.caja_id IS 'CODIGO DE CAJA';


--
-- TOC entry 5960 (class 0 OID 0)
-- Dependencies: 180
-- Name: COLUMN caja_ticket.fecha; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket.fecha IS 'FECHA';


--
-- TOC entry 5961 (class 0 OID 0)
-- Dependencies: 180
-- Name: COLUMN caja_ticket.hora; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket.hora IS 'HORA';


--
-- TOC entry 5962 (class 0 OID 0)
-- Dependencies: 180
-- Name: COLUMN caja_ticket.ctacte_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket.ctacte_id IS 'IDENTIFICADOR DE CUENTA CORRIENTE';


--
-- TOC entry 5963 (class 0 OID 0)
-- Dependencies: 180
-- Name: COLUMN caja_ticket.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 5964 (class 0 OID 0)
-- Dependencies: 180
-- Name: COLUMN caja_ticket.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 5965 (class 0 OID 0)
-- Dependencies: 180
-- Name: COLUMN caja_ticket.subcta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket.subcta IS 'SUBCUENTA';


--
-- TOC entry 5966 (class 0 OID 0)
-- Dependencies: 180
-- Name: COLUMN caja_ticket.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket.anio IS 'AÑO';


--
-- TOC entry 5967 (class 0 OID 0)
-- Dependencies: 180
-- Name: COLUMN caja_ticket.cuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket.cuota IS 'CUOTA';


--
-- TOC entry 5968 (class 0 OID 0)
-- Dependencies: 180
-- Name: COLUMN caja_ticket.faci_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket.faci_id IS 'IDENTIFICADOR DE LA FACILIDAD';


--
-- TOC entry 5969 (class 0 OID 0)
-- Dependencies: 180
-- Name: COLUMN caja_ticket.num; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket.num IS 'CODIGO DE NUM RESPONSABLE';


--
-- TOC entry 5970 (class 0 OID 0)
-- Dependencies: 180
-- Name: COLUMN caja_ticket.monto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket.monto IS 'MONTO';


--
-- TOC entry 5971 (class 0 OID 0)
-- Dependencies: 180
-- Name: COLUMN caja_ticket.monto_valida; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket.monto_valida IS 'MONTO DE VALIDACION';


--
-- TOC entry 5972 (class 0 OID 0)
-- Dependencies: 180
-- Name: COLUMN caja_ticket.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket.est IS 'ESTADO';


--
-- TOC entry 5973 (class 0 OID 0)
-- Dependencies: 180
-- Name: COLUMN caja_ticket.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket.obs IS 'OBSERVACIONES';


--
-- TOC entry 5974 (class 0 OID 0)
-- Dependencies: 180
-- Name: COLUMN caja_ticket.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 5975 (class 0 OID 0)
-- Dependencies: 180
-- Name: COLUMN caja_ticket.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 181 (class 1259 OID 5283783)
-- Name: caja_ticket_det; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.caja_ticket_det (
    ticket integer NOT NULL,
    cta_id smallint NOT NULL,
    monto numeric(12,2)
);


ALTER TABLE public.caja_ticket_det OWNER TO postgres;

--
-- TOC entry 5976 (class 0 OID 0)
-- Dependencies: 181
-- Name: TABLE caja_ticket_det; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.caja_ticket_det IS 'DETALLE DE LO COBRADO POR CADA TICKET';


--
-- TOC entry 5977 (class 0 OID 0)
-- Dependencies: 181
-- Name: COLUMN caja_ticket_det.ticket; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket_det.ticket IS 'NUMERO DE TICKET';


--
-- TOC entry 5978 (class 0 OID 0)
-- Dependencies: 181
-- Name: COLUMN caja_ticket_det.cta_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket_det.cta_id IS 'CODIGO DE CUENTA';


--
-- TOC entry 5979 (class 0 OID 0)
-- Dependencies: 181
-- Name: COLUMN caja_ticket_det.monto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket_det.monto IS 'MONTO';


--
-- TOC entry 208 (class 1259 OID 5284088)
-- Name: caja_ticket_item; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.caja_ticket_item (
    ticket integer NOT NULL,
    item_id smallint NOT NULL,
    cant smallint NOT NULL,
    monto numeric(12,2)
);


ALTER TABLE public.caja_ticket_item OWNER TO postgres;

--
-- TOC entry 5980 (class 0 OID 0)
-- Dependencies: 208
-- Name: TABLE caja_ticket_item; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.caja_ticket_item IS 'ITEMS DE LO COBRADO POR CADA TICKET TIPO SELLADO O BOLETO';


--
-- TOC entry 5981 (class 0 OID 0)
-- Dependencies: 208
-- Name: COLUMN caja_ticket_item.ticket; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket_item.ticket IS 'NUMERO DE TICKET';


--
-- TOC entry 5982 (class 0 OID 0)
-- Dependencies: 208
-- Name: COLUMN caja_ticket_item.item_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket_item.item_id IS 'ITEM';


--
-- TOC entry 5983 (class 0 OID 0)
-- Dependencies: 208
-- Name: COLUMN caja_ticket_item.cant; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket_item.cant IS 'CANT';


--
-- TOC entry 5984 (class 0 OID 0)
-- Dependencies: 208
-- Name: COLUMN caja_ticket_item.monto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_ticket_item.monto IS 'MONTO';


--
-- TOC entry 209 (class 1259 OID 5284091)
-- Name: caja_tipo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.caja_tipo (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.caja_tipo OWNER TO postgres;

--
-- TOC entry 5985 (class 0 OID 0)
-- Dependencies: 209
-- Name: TABLE caja_tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.caja_tipo IS 'TIPOS DE CAJAS MUNICIPALES';


--
-- TOC entry 5986 (class 0 OID 0)
-- Dependencies: 209
-- Name: COLUMN caja_tipo.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tipo.cod IS 'CODIGO ';


--
-- TOC entry 5987 (class 0 OID 0)
-- Dependencies: 209
-- Name: COLUMN caja_tipo.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tipo.nombre IS 'NOMBRE';


--
-- TOC entry 5988 (class 0 OID 0)
-- Dependencies: 209
-- Name: COLUMN caja_tipo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tipo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 5989 (class 0 OID 0)
-- Dependencies: 209
-- Name: COLUMN caja_tipo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tipo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 210 (class 1259 OID 5284095)
-- Name: caja_tmdp; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.caja_tmdp (
    cod character varying(2) NOT NULL,
    nombre character varying(15) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.caja_tmdp OWNER TO postgres;

--
-- TOC entry 5990 (class 0 OID 0)
-- Dependencies: 210
-- Name: TABLE caja_tmdp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.caja_tmdp IS 'TIPOS DE MEDIOS DE PAGO';


--
-- TOC entry 5991 (class 0 OID 0)
-- Dependencies: 210
-- Name: COLUMN caja_tmdp.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tmdp.cod IS 'CODIGO ';


--
-- TOC entry 5992 (class 0 OID 0)
-- Dependencies: 210
-- Name: COLUMN caja_tmdp.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tmdp.nombre IS 'NOMBRE';


--
-- TOC entry 5993 (class 0 OID 0)
-- Dependencies: 210
-- Name: COLUMN caja_tmdp.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tmdp.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 5994 (class 0 OID 0)
-- Dependencies: 210
-- Name: COLUMN caja_tmdp.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tmdp.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 211 (class 1259 OID 5284099)
-- Name: caja_tori; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.caja_tori (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.caja_tori OWNER TO postgres;

--
-- TOC entry 5995 (class 0 OID 0)
-- Dependencies: 211
-- Name: TABLE caja_tori; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.caja_tori IS 'TIPOS DE ORIGEN DE ARCHIVOS EN CAJAS EXTERNAS';


--
-- TOC entry 5996 (class 0 OID 0)
-- Dependencies: 211
-- Name: COLUMN caja_tori.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tori.cod IS 'CODIGO ';


--
-- TOC entry 5997 (class 0 OID 0)
-- Dependencies: 211
-- Name: COLUMN caja_tori.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tori.nombre IS 'NOMBRE';


--
-- TOC entry 5998 (class 0 OID 0)
-- Dependencies: 211
-- Name: COLUMN caja_tori.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tori.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 5999 (class 0 OID 0)
-- Dependencies: 211
-- Name: COLUMN caja_tori.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.caja_tori.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 679 (class 1259 OID 5317063)
-- Name: calc_act; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.calc_act (
    fchdesde date NOT NULL,
    fchhasta date NOT NULL,
    indice numeric(5,3) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.calc_act OWNER TO postgres;

--
-- TOC entry 6000 (class 0 OID 0)
-- Dependencies: 679
-- Name: TABLE calc_act; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.calc_act IS 'íNDICE DE INTERÉS POR PERÍODOS';


--
-- TOC entry 6001 (class 0 OID 0)
-- Dependencies: 679
-- Name: COLUMN calc_act.fchdesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_act.fchdesde IS 'PERIODO DESDE';


--
-- TOC entry 6002 (class 0 OID 0)
-- Dependencies: 679
-- Name: COLUMN calc_act.fchhasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_act.fchhasta IS 'PERIODO HASTA';


--
-- TOC entry 6003 (class 0 OID 0)
-- Dependencies: 679
-- Name: COLUMN calc_act.indice; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_act.indice IS 'VALOR DE INDICE';


--
-- TOC entry 6004 (class 0 OID 0)
-- Dependencies: 679
-- Name: COLUMN calc_act.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_act.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6005 (class 0 OID 0)
-- Dependencies: 679
-- Name: COLUMN calc_act.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_act.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 212 (class 1259 OID 5284103)
-- Name: calc_desc; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.calc_desc (
    desc_id integer NOT NULL,
    trib_id smallint NOT NULL,
    item_id smallint DEFAULT 0,
    anual smallint NOT NULL,
    perdesde integer NOT NULL,
    perhasta integer NOT NULL,
    aplicavenc smallint NOT NULL,
    pagodesde date,
    pagohasta date,
    montodesde numeric(12,2) NOT NULL,
    montohasta numeric(12,2) NOT NULL,
    verificadeuda smallint NOT NULL,
    existedeuda smallint NOT NULL,
    verificadebito smallint DEFAULT 0,
    verificaexen smallint,
    desc1 numeric(5,2) NOT NULL,
    desc2 numeric(5,2) NOT NULL,
    cta_id smallint NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.calc_desc OWNER TO postgres;

--
-- TOC entry 6006 (class 0 OID 0)
-- Dependencies: 212
-- Name: TABLE calc_desc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.calc_desc IS 'DESCUENTOS POR TRIBUTO';


--
-- TOC entry 6007 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN calc_desc.desc_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_desc.desc_id IS 'CODIGO DE DESCUENTO';


--
-- TOC entry 6008 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN calc_desc.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_desc.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 6009 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN calc_desc.item_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_desc.item_id IS 'ITEM AL QUE SE LE DEBE APLICAR EL DESCUENTO';


--
-- TOC entry 6010 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN calc_desc.anual; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_desc.anual IS 'INDICADOR SI ES PARA PAGO ANUAL';


--
-- TOC entry 6011 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN calc_desc.perdesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_desc.perdesde IS 'PERIODO DESDE';


--
-- TOC entry 6012 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN calc_desc.perhasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_desc.perhasta IS 'PERIODO HASTA';


--
-- TOC entry 6013 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN calc_desc.aplicavenc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_desc.aplicavenc IS 'INDICADOR SI SE USAN LOS VENCIMIENTOS';


--
-- TOC entry 6014 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN calc_desc.pagodesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_desc.pagodesde IS 'PAGO DESDE (SI APLICAVENC=0)';


--
-- TOC entry 6015 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN calc_desc.pagohasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_desc.pagohasta IS 'PAGO HASTA (SI APLICAVENC=0)';


--
-- TOC entry 6016 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN calc_desc.montodesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_desc.montodesde IS 'MONTO DESDE';


--
-- TOC entry 6017 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN calc_desc.montohasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_desc.montohasta IS 'MONTO HASTA';


--
-- TOC entry 6018 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN calc_desc.verificadeuda; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_desc.verificadeuda IS 'SI VERIFICA DEUDA';


--
-- TOC entry 6019 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN calc_desc.existedeuda; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_desc.existedeuda IS 'CODIGO SI EXISTE DEUDA';


--
-- TOC entry 6020 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN calc_desc.verificadebito; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_desc.verificadebito IS 'VERIFICA SI SE APLICA EL DESCUENTO POR DEBITO';


--
-- TOC entry 6021 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN calc_desc.verificaexen; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_desc.verificaexen IS 'PARA VERIFICA_EXEN=1 INDICA QUE VERIFICA SI EXISTE EXIMISION, Y EN TAL CASO NO APLICA DEUDA';


--
-- TOC entry 6022 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN calc_desc.desc1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_desc.desc1 IS 'PORCENTAJE DE DESCUENTO 1';


--
-- TOC entry 6023 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN calc_desc.desc2; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_desc.desc2 IS 'PORCENTAJE DE DESCUENTO 2';


--
-- TOC entry 6024 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN calc_desc.cta_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_desc.cta_id IS 'CODIGO DE CUENTA';


--
-- TOC entry 6025 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN calc_desc.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_desc.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6026 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN calc_desc.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_desc.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 213 (class 1259 OID 5284109)
-- Name: calc_feriado; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.calc_feriado (
    fecha date NOT NULL,
    detalle character varying(50) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.calc_feriado OWNER TO postgres;

--
-- TOC entry 6027 (class 0 OID 0)
-- Dependencies: 213
-- Name: TABLE calc_feriado; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.calc_feriado IS 'DÍAS CONSIDERADOS FERIADOS';


--
-- TOC entry 6028 (class 0 OID 0)
-- Dependencies: 213
-- Name: COLUMN calc_feriado.fecha; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_feriado.fecha IS 'FECHA';


--
-- TOC entry 6029 (class 0 OID 0)
-- Dependencies: 213
-- Name: COLUMN calc_feriado.detalle; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_feriado.detalle IS 'DETALLE';


--
-- TOC entry 6030 (class 0 OID 0)
-- Dependencies: 213
-- Name: COLUMN calc_feriado.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_feriado.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6031 (class 0 OID 0)
-- Dependencies: 213
-- Name: COLUMN calc_feriado.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_feriado.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 214 (class 1259 OID 5284113)
-- Name: calc_interes; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.calc_interes (
    fchdesde date NOT NULL,
    fchhasta date NOT NULL,
    indice numeric(5,3) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.calc_interes OWNER TO postgres;

--
-- TOC entry 6032 (class 0 OID 0)
-- Dependencies: 214
-- Name: TABLE calc_interes; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.calc_interes IS 'íNDICE DE INTERÉS POR PERÍODOS';


--
-- TOC entry 6033 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN calc_interes.fchdesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_interes.fchdesde IS 'PERIODO DESDE';


--
-- TOC entry 6034 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN calc_interes.fchhasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_interes.fchhasta IS 'PERIODO HASTA';


--
-- TOC entry 6035 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN calc_interes.indice; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_interes.indice IS 'VALOR DE INDICE';


--
-- TOC entry 6036 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN calc_interes.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_interes.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6037 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN calc_interes.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_interes.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 215 (class 1259 OID 5284117)
-- Name: calc_mm; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.calc_mm (
    fchdesde date NOT NULL,
    fchhasta date NOT NULL,
    valor numeric(9,2) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.calc_mm OWNER TO postgres;

--
-- TOC entry 6038 (class 0 OID 0)
-- Dependencies: 215
-- Name: TABLE calc_mm; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.calc_mm IS 'VALOR DE MM (Módulo Municipal) ENTRE FECHAS';


--
-- TOC entry 6039 (class 0 OID 0)
-- Dependencies: 215
-- Name: COLUMN calc_mm.fchdesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_mm.fchdesde IS 'FECHA DESDE';


--
-- TOC entry 6040 (class 0 OID 0)
-- Dependencies: 215
-- Name: COLUMN calc_mm.fchhasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_mm.fchhasta IS 'FECHA HASTA';


--
-- TOC entry 6041 (class 0 OID 0)
-- Dependencies: 215
-- Name: COLUMN calc_mm.valor; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_mm.valor IS 'VALOR';


--
-- TOC entry 6042 (class 0 OID 0)
-- Dependencies: 215
-- Name: COLUMN calc_mm.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_mm.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6043 (class 0 OID 0)
-- Dependencies: 215
-- Name: COLUMN calc_mm.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_mm.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 216 (class 1259 OID 5284121)
-- Name: calc_multa; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.calc_multa (
    trib_id smallint NOT NULL,
    perdesde integer NOT NULL,
    perhasta integer NOT NULL,
    tipo smallint DEFAULT 0 NOT NULL,
    montodesde numeric(12,2) NOT NULL,
    montohasta numeric(12,2) NOT NULL,
    item_id smallint NOT NULL,
    tcalculo smallint NOT NULL,
    valor numeric(12,2) NOT NULL,
    alicuota numeric(9,4) NOT NULL,
    finmes smallint DEFAULT 0 NOT NULL,
    diasvenc smallint NOT NULL,
    quita numeric(12,2) NOT NULL,
    valormaximo numeric(12,2),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.calc_multa OWNER TO postgres;

--
-- TOC entry 6044 (class 0 OID 0)
-- Dependencies: 216
-- Name: TABLE calc_multa; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.calc_multa IS 'DATOS DE MULTA SEGÚN TRIBUTO Y PERÍODOS';


--
-- TOC entry 6045 (class 0 OID 0)
-- Dependencies: 216
-- Name: COLUMN calc_multa.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_multa.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 6046 (class 0 OID 0)
-- Dependencies: 216
-- Name: COLUMN calc_multa.perdesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_multa.perdesde IS 'PERIODO DESDE';


--
-- TOC entry 6047 (class 0 OID 0)
-- Dependencies: 216
-- Name: COLUMN calc_multa.perhasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_multa.perhasta IS 'PERIODO HASTA';


--
-- TOC entry 6048 (class 0 OID 0)
-- Dependencies: 216
-- Name: COLUMN calc_multa.tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_multa.tipo IS 'TIPO DE OBJETO';


--
-- TOC entry 6049 (class 0 OID 0)
-- Dependencies: 216
-- Name: COLUMN calc_multa.montodesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_multa.montodesde IS 'MONTO DESDE';


--
-- TOC entry 6050 (class 0 OID 0)
-- Dependencies: 216
-- Name: COLUMN calc_multa.montohasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_multa.montohasta IS 'MONTO HASTA';


--
-- TOC entry 6051 (class 0 OID 0)
-- Dependencies: 216
-- Name: COLUMN calc_multa.item_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_multa.item_id IS 'CODIGO DE ITEM';


--
-- TOC entry 6052 (class 0 OID 0)
-- Dependencies: 216
-- Name: COLUMN calc_multa.tcalculo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_multa.tcalculo IS 'CODIGO DE FORMULA DE CALCULO';


--
-- TOC entry 6053 (class 0 OID 0)
-- Dependencies: 216
-- Name: COLUMN calc_multa.valor; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_multa.valor IS 'VALOR';


--
-- TOC entry 6054 (class 0 OID 0)
-- Dependencies: 216
-- Name: COLUMN calc_multa.alicuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_multa.alicuota IS 'ALICUOTA';


--
-- TOC entry 6055 (class 0 OID 0)
-- Dependencies: 216
-- Name: COLUMN calc_multa.finmes; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_multa.finmes IS 'SE APLICA HASTA FIN DE MES';


--
-- TOC entry 6056 (class 0 OID 0)
-- Dependencies: 216
-- Name: COLUMN calc_multa.diasvenc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_multa.diasvenc IS 'CANTIDAD DE DIAS DE VENCIMIENTO';


--
-- TOC entry 6057 (class 0 OID 0)
-- Dependencies: 216
-- Name: COLUMN calc_multa.quita; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_multa.quita IS 'PORCENTAJE DE QUITA';


--
-- TOC entry 6058 (class 0 OID 0)
-- Dependencies: 216
-- Name: COLUMN calc_multa.valormaximo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_multa.valormaximo IS 'VALOR MAXIMO ';


--
-- TOC entry 6059 (class 0 OID 0)
-- Dependencies: 216
-- Name: COLUMN calc_multa.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_multa.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6060 (class 0 OID 0)
-- Dependencies: 216
-- Name: COLUMN calc_multa.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_multa.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 217 (class 1259 OID 5284127)
-- Name: calc_multa_tfcalculo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.calc_multa_tfcalculo (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    detalle character varying(40) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.calc_multa_tfcalculo OWNER TO postgres;

--
-- TOC entry 6061 (class 0 OID 0)
-- Dependencies: 217
-- Name: TABLE calc_multa_tfcalculo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.calc_multa_tfcalculo IS 'TIPOS DE FÓRMULA DE CÁLCULO DE LAS MULTAS';


--
-- TOC entry 6062 (class 0 OID 0)
-- Dependencies: 217
-- Name: COLUMN calc_multa_tfcalculo.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_multa_tfcalculo.cod IS 'CODIGO';


--
-- TOC entry 6063 (class 0 OID 0)
-- Dependencies: 217
-- Name: COLUMN calc_multa_tfcalculo.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_multa_tfcalculo.nombre IS 'NOMBRE';


--
-- TOC entry 6064 (class 0 OID 0)
-- Dependencies: 217
-- Name: COLUMN calc_multa_tfcalculo.detalle; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_multa_tfcalculo.detalle IS 'DETALLE';


--
-- TOC entry 6065 (class 0 OID 0)
-- Dependencies: 217
-- Name: COLUMN calc_multa_tfcalculo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_multa_tfcalculo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6066 (class 0 OID 0)
-- Dependencies: 217
-- Name: COLUMN calc_multa_tfcalculo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.calc_multa_tfcalculo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 218 (class 1259 OID 5284131)
-- Name: cem; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cem (
    obj_id character varying(8) NOT NULL,
    nc character varying(15) NOT NULL,
    cua_id character varying(3) NOT NULL,
    cue_id character varying(3) NOT NULL,
    tipo character varying(2) NOT NULL,
    piso smallint NOT NULL,
    fila smallint NOT NULL,
    nume smallint NOT NULL,
    bis character varying(1) NOT NULL,
    cat smallint NOT NULL,
    deleg smallint NOT NULL,
    sup smallint DEFAULT 0 NOT NULL,
    tomo character varying(5),
    folio character varying(5),
    fchcompra date,
    fchingreso date,
    fchvenc date,
    exenta smallint,
    edicto integer,
    cod_ant character varying(15)
);


ALTER TABLE public.cem OWNER TO postgres;

--
-- TOC entry 6067 (class 0 OID 0)
-- Dependencies: 218
-- Name: TABLE cem; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.cem IS 'DATOS PRINCIPALES DEL OBJETO CEMENTERIO';


--
-- TOC entry 6068 (class 0 OID 0)
-- Dependencies: 218
-- Name: COLUMN cem.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 6069 (class 0 OID 0)
-- Dependencies: 218
-- Name: COLUMN cem.nc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem.nc IS 'NOMENCLATURA';


--
-- TOC entry 6070 (class 0 OID 0)
-- Dependencies: 218
-- Name: COLUMN cem.cua_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem.cua_id IS 'CODIGO DE CUADRO';


--
-- TOC entry 6071 (class 0 OID 0)
-- Dependencies: 218
-- Name: COLUMN cem.cue_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem.cue_id IS 'CODIGO DE CUERPO';


--
-- TOC entry 6072 (class 0 OID 0)
-- Dependencies: 218
-- Name: COLUMN cem.tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem.tipo IS 'CODIGO DE TIPO';


--
-- TOC entry 6073 (class 0 OID 0)
-- Dependencies: 218
-- Name: COLUMN cem.piso; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem.piso IS 'NUMERO DE PISO';


--
-- TOC entry 6074 (class 0 OID 0)
-- Dependencies: 218
-- Name: COLUMN cem.fila; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem.fila IS 'NUMERO DE FILA';


--
-- TOC entry 6075 (class 0 OID 0)
-- Dependencies: 218
-- Name: COLUMN cem.nume; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem.nume IS 'NUMERO';


--
-- TOC entry 6076 (class 0 OID 0)
-- Dependencies: 218
-- Name: COLUMN cem.bis; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem.bis IS 'BIS';


--
-- TOC entry 6077 (class 0 OID 0)
-- Dependencies: 218
-- Name: COLUMN cem.cat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem.cat IS 'CATEGORIA';


--
-- TOC entry 6078 (class 0 OID 0)
-- Dependencies: 218
-- Name: COLUMN cem.deleg; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem.deleg IS 'CODIGO DE DELEGACION';


--
-- TOC entry 6079 (class 0 OID 0)
-- Dependencies: 218
-- Name: COLUMN cem.sup; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem.sup IS 'SUPERFICIE';


--
-- TOC entry 6080 (class 0 OID 0)
-- Dependencies: 218
-- Name: COLUMN cem.tomo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem.tomo IS 'TOMO';


--
-- TOC entry 6081 (class 0 OID 0)
-- Dependencies: 218
-- Name: COLUMN cem.folio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem.folio IS 'FOLIO';


--
-- TOC entry 6082 (class 0 OID 0)
-- Dependencies: 218
-- Name: COLUMN cem.fchcompra; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem.fchcompra IS 'FECHA DE COMPRA';


--
-- TOC entry 6083 (class 0 OID 0)
-- Dependencies: 218
-- Name: COLUMN cem.fchingreso; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem.fchingreso IS 'FECHA DE INGRESO';


--
-- TOC entry 6084 (class 0 OID 0)
-- Dependencies: 218
-- Name: COLUMN cem.fchvenc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem.fchvenc IS 'FECHA DE VENCIMIENTO';


--
-- TOC entry 6085 (class 0 OID 0)
-- Dependencies: 218
-- Name: COLUMN cem.exenta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem.exenta IS 'SI SE ENCUENTRA EXENTO';


--
-- TOC entry 6086 (class 0 OID 0)
-- Dependencies: 218
-- Name: COLUMN cem.edicto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem.edicto IS 'NUMERO DE EDICTO';


--
-- TOC entry 6087 (class 0 OID 0)
-- Dependencies: 218
-- Name: COLUMN cem.cod_ant; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem.cod_ant IS 'CODIGO ANTERIOR';


--
-- TOC entry 219 (class 1259 OID 5284135)
-- Name: cem_alquiler; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cem_alquiler (
    alq_id integer DEFAULT nextval(('public.seq_cem_alq_id'::text)::regclass) NOT NULL,
    obj_id character varying(8) NOT NULL,
    titulo character varying(10) NOT NULL,
    fchalq timestamp without time zone NOT NULL,
    fchini timestamp without time zone NOT NULL,
    fchfin timestamp without time zone NOT NULL,
    duracion smallint,
    resp character varying(8) NOT NULL,
    est character varying(1) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.cem_alquiler OWNER TO postgres;

--
-- TOC entry 6088 (class 0 OID 0)
-- Dependencies: 219
-- Name: TABLE cem_alquiler; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.cem_alquiler IS 'ALQUILERES POR CADA OBJETO DE CEMENTERIO';


--
-- TOC entry 6089 (class 0 OID 0)
-- Dependencies: 219
-- Name: COLUMN cem_alquiler.alq_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_alquiler.alq_id IS 'IDENTIFICADOR DE ALQUILER';


--
-- TOC entry 6090 (class 0 OID 0)
-- Dependencies: 219
-- Name: COLUMN cem_alquiler.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_alquiler.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 6091 (class 0 OID 0)
-- Dependencies: 219
-- Name: COLUMN cem_alquiler.titulo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_alquiler.titulo IS 'TITULO';


--
-- TOC entry 6092 (class 0 OID 0)
-- Dependencies: 219
-- Name: COLUMN cem_alquiler.fchalq; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_alquiler.fchalq IS 'FECHA DE ALQUILER';


--
-- TOC entry 6093 (class 0 OID 0)
-- Dependencies: 219
-- Name: COLUMN cem_alquiler.fchini; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_alquiler.fchini IS 'FECHA DE INICIO';


--
-- TOC entry 6094 (class 0 OID 0)
-- Dependencies: 219
-- Name: COLUMN cem_alquiler.fchfin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_alquiler.fchfin IS 'FECHA DE FINALIZACION';


--
-- TOC entry 6095 (class 0 OID 0)
-- Dependencies: 219
-- Name: COLUMN cem_alquiler.duracion; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_alquiler.duracion IS 'DURACION EN AÑOS';


--
-- TOC entry 6096 (class 0 OID 0)
-- Dependencies: 219
-- Name: COLUMN cem_alquiler.resp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_alquiler.resp IS 'CODIGO DE RESPONSABLE';


--
-- TOC entry 6097 (class 0 OID 0)
-- Dependencies: 219
-- Name: COLUMN cem_alquiler.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_alquiler.est IS 'ESTADO';


--
-- TOC entry 6098 (class 0 OID 0)
-- Dependencies: 219
-- Name: COLUMN cem_alquiler.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_alquiler.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6099 (class 0 OID 0)
-- Dependencies: 219
-- Name: COLUMN cem_alquiler.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_alquiler.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 220 (class 1259 OID 5284140)
-- Name: cem_cuadro; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cem_cuadro (
    cua_id character varying(3) NOT NULL,
    nombre character varying(20) NOT NULL,
    tipo character varying(2) NOT NULL,
    piso smallint DEFAULT 0 NOT NULL,
    fila smallint DEFAULT 0 NOT NULL,
    nume smallint DEFAULT 0 NOT NULL,
    bis smallint DEFAULT 0 NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.cem_cuadro OWNER TO postgres;

--
-- TOC entry 6100 (class 0 OID 0)
-- Dependencies: 220
-- Name: TABLE cem_cuadro; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.cem_cuadro IS 'CONFIGURACIÓN DE CUADROS EN EL CEMENTERIO';


--
-- TOC entry 6101 (class 0 OID 0)
-- Dependencies: 220
-- Name: COLUMN cem_cuadro.cua_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_cuadro.cua_id IS 'CODIGO DE CUADRO';


--
-- TOC entry 6102 (class 0 OID 0)
-- Dependencies: 220
-- Name: COLUMN cem_cuadro.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_cuadro.nombre IS 'NOMBRE';


--
-- TOC entry 6103 (class 0 OID 0)
-- Dependencies: 220
-- Name: COLUMN cem_cuadro.tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_cuadro.tipo IS 'CODIGO DE TIPO DE CUENTA';


--
-- TOC entry 6104 (class 0 OID 0)
-- Dependencies: 220
-- Name: COLUMN cem_cuadro.piso; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_cuadro.piso IS 'SI TIENE PISOS';


--
-- TOC entry 6105 (class 0 OID 0)
-- Dependencies: 220
-- Name: COLUMN cem_cuadro.fila; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_cuadro.fila IS 'SI TIENE FILA';


--
-- TOC entry 6106 (class 0 OID 0)
-- Dependencies: 220
-- Name: COLUMN cem_cuadro.nume; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_cuadro.nume IS 'SI TIENE NUMEROS';


--
-- TOC entry 6107 (class 0 OID 0)
-- Dependencies: 220
-- Name: COLUMN cem_cuadro.bis; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_cuadro.bis IS 'SI TIENE BIS';


--
-- TOC entry 6108 (class 0 OID 0)
-- Dependencies: 220
-- Name: COLUMN cem_cuadro.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_cuadro.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6109 (class 0 OID 0)
-- Dependencies: 220
-- Name: COLUMN cem_cuadro.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_cuadro.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 221 (class 1259 OID 5284148)
-- Name: cem_cuerpo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cem_cuerpo (
    cua_id character varying(3) NOT NULL,
    cue_id character varying(3) NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.cem_cuerpo OWNER TO postgres;

--
-- TOC entry 6110 (class 0 OID 0)
-- Dependencies: 221
-- Name: TABLE cem_cuerpo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.cem_cuerpo IS 'CONFIGURACIÓN DE CUERPOS EN EL CEMENTERIO';


--
-- TOC entry 6111 (class 0 OID 0)
-- Dependencies: 221
-- Name: COLUMN cem_cuerpo.cua_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_cuerpo.cua_id IS 'CODIGO DE CUADRO';


--
-- TOC entry 6112 (class 0 OID 0)
-- Dependencies: 221
-- Name: COLUMN cem_cuerpo.cue_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_cuerpo.cue_id IS 'CODIGO DE CUERPO';


--
-- TOC entry 6113 (class 0 OID 0)
-- Dependencies: 221
-- Name: COLUMN cem_cuerpo.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_cuerpo.nombre IS 'NOMBRE';


--
-- TOC entry 6114 (class 0 OID 0)
-- Dependencies: 221
-- Name: COLUMN cem_cuerpo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_cuerpo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6115 (class 0 OID 0)
-- Dependencies: 221
-- Name: COLUMN cem_cuerpo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_cuerpo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 222 (class 1259 OID 5284152)
-- Name: cem_fall; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cem_fall (
    fall_id integer DEFAULT nextval(('public.seq_cem_fall_id'::text)::regclass) NOT NULL,
    obj_id character varying(8) NOT NULL,
    est character varying(3) NOT NULL,
    tdoc smallint,
    ndoc integer,
    apenom character varying(50) NOT NULL,
    fchnac date,
    nacionalidad smallint NOT NULL,
    sexo character varying(1) NOT NULL,
    estcivil smallint NOT NULL,
    domi character varying(50) NOT NULL,
    actadef character varying(15),
    foliodef character varying(10),
    fchdef date,
    fchinh date,
    causamuerte smallint,
    procedencia smallint,
    med_nombre character varying(35),
    med_matricula character varying(10),
    emp_funebre smallint,
    resp character varying(8) NOT NULL,
    indigente smallint,
    obs character varying(500),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.cem_fall OWNER TO postgres;

--
-- TOC entry 6116 (class 0 OID 0)
-- Dependencies: 222
-- Name: TABLE cem_fall; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.cem_fall IS 'DATOS PRINCIPALES DE FALLECIDOS';


--
-- TOC entry 6117 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.fall_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.fall_id IS 'IDENTIFICADOR DE FALLECIDO';


--
-- TOC entry 6118 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 6119 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.est IS 'ESTADO';


--
-- TOC entry 6120 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.tdoc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.tdoc IS 'CODIGO DE TIPO DE DOCUMENTO';


--
-- TOC entry 6121 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.ndoc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.ndoc IS 'NUMERO DE DOCUMENTO';


--
-- TOC entry 6122 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.apenom; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.apenom IS 'APELLIDO Y NOMBRE';


--
-- TOC entry 6123 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.fchnac; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.fchnac IS 'FECHA DE NACIMIENTO';


--
-- TOC entry 6124 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.nacionalidad; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.nacionalidad IS 'CODIGO DE NACIONALIDAD';


--
-- TOC entry 6125 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.sexo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.sexo IS 'CODIGO DE SEXO';


--
-- TOC entry 6126 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.estcivil; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.estcivil IS 'CODIGO DE ESTADO CIVIL';


--
-- TOC entry 6127 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.domi; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.domi IS 'DOMICILIO DEL FALLECIDO';


--
-- TOC entry 6128 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.actadef; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.actadef IS 'ACTA DE DEFUNCION';


--
-- TOC entry 6129 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.foliodef; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.foliodef IS 'FOLIO DE DEFUNCION';


--
-- TOC entry 6130 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.fchdef; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.fchdef IS 'FECHA DE DEFUNCION';


--
-- TOC entry 6131 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.fchinh; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.fchinh IS 'FECHA DE INHUMACION';


--
-- TOC entry 6132 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.causamuerte; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.causamuerte IS 'CODIGO DE CAUSA DE MUERTE';


--
-- TOC entry 6133 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.procedencia; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.procedencia IS 'CODIGO DE LOCALIDAD DE PROCEDENCIA';


--
-- TOC entry 6134 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.med_nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.med_nombre IS 'NOMBRE DEL MEDICO';


--
-- TOC entry 6135 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.med_matricula; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.med_matricula IS 'MATRICULA DEL MEDICO';


--
-- TOC entry 6136 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.emp_funebre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.emp_funebre IS 'CODIGO DE EMPRESA FUNEBRE';


--
-- TOC entry 6137 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.resp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.resp IS 'CODIGO DEL RESPONSABLE';


--
-- TOC entry 6138 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.indigente; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.indigente IS 'SI ES INDIGENTE';


--
-- TOC entry 6139 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.obs IS 'OBSERVACIONES';


--
-- TOC entry 6140 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6141 (class 0 OID 0)
-- Dependencies: 222
-- Name: COLUMN cem_fall.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 223 (class 1259 OID 5284160)
-- Name: cem_fall_serv; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cem_fall_serv (
    fall_id integer NOT NULL,
    orden smallint NOT NULL,
    tserv character varying(3) NOT NULL,
    fecha timestamp without time zone NOT NULL,
    acta character varying(10),
    resp character varying(8),
    obj_id_ori character varying(8),
    obj_id_dest character varying(8),
    destino character varying(500),
    obs character varying(500),
    fchmod timestamp without time zone NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.cem_fall_serv OWNER TO postgres;

--
-- TOC entry 6142 (class 0 OID 0)
-- Dependencies: 223
-- Name: TABLE cem_fall_serv; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.cem_fall_serv IS 'DATOS PRINCIPALES DE REGISTRACION DE FALLECIDOS';


--
-- TOC entry 6143 (class 0 OID 0)
-- Dependencies: 223
-- Name: COLUMN cem_fall_serv.fall_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall_serv.fall_id IS 'IDENTIFICADOR DEL FALLECIDO';


--
-- TOC entry 6144 (class 0 OID 0)
-- Dependencies: 223
-- Name: COLUMN cem_fall_serv.orden; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall_serv.orden IS 'NUMERO DE ORDEN';


--
-- TOC entry 6145 (class 0 OID 0)
-- Dependencies: 223
-- Name: COLUMN cem_fall_serv.tserv; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall_serv.tserv IS 'TIPO DE SERVICIO';


--
-- TOC entry 6146 (class 0 OID 0)
-- Dependencies: 223
-- Name: COLUMN cem_fall_serv.fecha; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall_serv.fecha IS 'FECHA';


--
-- TOC entry 6147 (class 0 OID 0)
-- Dependencies: 223
-- Name: COLUMN cem_fall_serv.acta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall_serv.acta IS 'NUMERO DE ACTA';


--
-- TOC entry 6148 (class 0 OID 0)
-- Dependencies: 223
-- Name: COLUMN cem_fall_serv.resp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall_serv.resp IS 'CODIGO DEL RESPONSABLE';


--
-- TOC entry 6149 (class 0 OID 0)
-- Dependencies: 223
-- Name: COLUMN cem_fall_serv.obj_id_ori; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall_serv.obj_id_ori IS 'OBJETO ORIGEN';


--
-- TOC entry 6150 (class 0 OID 0)
-- Dependencies: 223
-- Name: COLUMN cem_fall_serv.obj_id_dest; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall_serv.obj_id_dest IS 'OBJETO DESTINO';


--
-- TOC entry 6151 (class 0 OID 0)
-- Dependencies: 223
-- Name: COLUMN cem_fall_serv.destino; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall_serv.destino IS 'DESTINO DE TRASLADO, CEMENTERIO O LOCALIDAD';


--
-- TOC entry 6152 (class 0 OID 0)
-- Dependencies: 223
-- Name: COLUMN cem_fall_serv.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall_serv.obs IS 'OBSERVACIONES';


--
-- TOC entry 6153 (class 0 OID 0)
-- Dependencies: 223
-- Name: COLUMN cem_fall_serv.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall_serv.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6154 (class 0 OID 0)
-- Dependencies: 223
-- Name: COLUMN cem_fall_serv.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall_serv.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 224 (class 1259 OID 5284166)
-- Name: cem_fall_test; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cem_fall_test (
    cod character varying(3) NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.cem_fall_test OWNER TO postgres;

--
-- TOC entry 6155 (class 0 OID 0)
-- Dependencies: 224
-- Name: TABLE cem_fall_test; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.cem_fall_test IS 'DIFERENTES ESTADOS PARA FALLECIDOS';


--
-- TOC entry 6156 (class 0 OID 0)
-- Dependencies: 224
-- Name: COLUMN cem_fall_test.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall_test.cod IS 'CODIGO ';


--
-- TOC entry 6157 (class 0 OID 0)
-- Dependencies: 224
-- Name: COLUMN cem_fall_test.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall_test.nombre IS 'NOMBRE';


--
-- TOC entry 6158 (class 0 OID 0)
-- Dependencies: 224
-- Name: COLUMN cem_fall_test.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall_test.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6159 (class 0 OID 0)
-- Dependencies: 224
-- Name: COLUMN cem_fall_test.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall_test.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 225 (class 1259 OID 5284170)
-- Name: cem_fall_tserv; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cem_fall_tserv (
    cod character varying(3) NOT NULL,
    nombre character varying(35) NOT NULL,
    est_fin character varying(3) DEFAULT ''::character varying NOT NULL,
    pedir_obj_dest smallint DEFAULT 0 NOT NULL,
    pedir_dest smallint DEFAULT 0 NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.cem_fall_tserv OWNER TO postgres;

--
-- TOC entry 6160 (class 0 OID 0)
-- Dependencies: 225
-- Name: TABLE cem_fall_tserv; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.cem_fall_tserv IS 'DISTINTOS TIPOS DE SERVICIOS PARA FALLECIDOS';


--
-- TOC entry 6161 (class 0 OID 0)
-- Dependencies: 225
-- Name: COLUMN cem_fall_tserv.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall_tserv.cod IS 'CODIGO';


--
-- TOC entry 6162 (class 0 OID 0)
-- Dependencies: 225
-- Name: COLUMN cem_fall_tserv.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall_tserv.nombre IS 'NOMBRE';


--
-- TOC entry 6163 (class 0 OID 0)
-- Dependencies: 225
-- Name: COLUMN cem_fall_tserv.est_fin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall_tserv.est_fin IS 'ESTADO FINAL';


--
-- TOC entry 6164 (class 0 OID 0)
-- Dependencies: 225
-- Name: COLUMN cem_fall_tserv.pedir_obj_dest; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall_tserv.pedir_obj_dest IS 'SI SE PIDE EL OBJETO DESTINO';


--
-- TOC entry 6165 (class 0 OID 0)
-- Dependencies: 225
-- Name: COLUMN cem_fall_tserv.pedir_dest; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall_tserv.pedir_dest IS 'SI SE PIDE LOCALIDAD/CEMENTERIO DESTINO';


--
-- TOC entry 6166 (class 0 OID 0)
-- Dependencies: 225
-- Name: COLUMN cem_fall_tserv.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall_tserv.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6167 (class 0 OID 0)
-- Dependencies: 225
-- Name: COLUMN cem_fall_tserv.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_fall_tserv.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 226 (class 1259 OID 5284177)
-- Name: cem_talq; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cem_talq (
    cod smallint NOT NULL,
    desde date NOT NULL,
    hasta date NOT NULL,
    tipo character varying(2) NOT NULL,
    cuadesde character varying(3),
    cuahasta character varying(3),
    cue_id character varying(3),
    fila character varying(3),
    cat smallint,
    supdesde smallint,
    suphasta smallint,
    duracion smallint NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.cem_talq OWNER TO postgres;

--
-- TOC entry 6168 (class 0 OID 0)
-- Dependencies: 226
-- Name: TABLE cem_talq; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.cem_talq IS 'VALORES DE ARRENDAMIENTOS DE CUENTAS DE CEMENTERIO';


--
-- TOC entry 6169 (class 0 OID 0)
-- Dependencies: 226
-- Name: COLUMN cem_talq.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_talq.cod IS 'CODIGO ';


--
-- TOC entry 6170 (class 0 OID 0)
-- Dependencies: 226
-- Name: COLUMN cem_talq.desde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_talq.desde IS 'FECHA DESDE';


--
-- TOC entry 6171 (class 0 OID 0)
-- Dependencies: 226
-- Name: COLUMN cem_talq.hasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_talq.hasta IS 'FECHA HASTA';


--
-- TOC entry 6172 (class 0 OID 0)
-- Dependencies: 226
-- Name: COLUMN cem_talq.tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_talq.tipo IS 'CODIGO DE TIPO DE CUENTA';


--
-- TOC entry 6173 (class 0 OID 0)
-- Dependencies: 226
-- Name: COLUMN cem_talq.cuadesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_talq.cuadesde IS 'CODIGO DE CUADRO DESDE';


--
-- TOC entry 6174 (class 0 OID 0)
-- Dependencies: 226
-- Name: COLUMN cem_talq.cuahasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_talq.cuahasta IS 'CODIGO DE CUADRO HASTA';


--
-- TOC entry 6175 (class 0 OID 0)
-- Dependencies: 226
-- Name: COLUMN cem_talq.cue_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_talq.cue_id IS 'CODIGO DE CUERPO';


--
-- TOC entry 6176 (class 0 OID 0)
-- Dependencies: 226
-- Name: COLUMN cem_talq.fila; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_talq.fila IS 'NUMERO DE FILA';


--
-- TOC entry 6177 (class 0 OID 0)
-- Dependencies: 226
-- Name: COLUMN cem_talq.cat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_talq.cat IS 'CATEGORIA';


--
-- TOC entry 6178 (class 0 OID 0)
-- Dependencies: 226
-- Name: COLUMN cem_talq.supdesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_talq.supdesde IS 'SUPERFICIE DESDE';


--
-- TOC entry 6179 (class 0 OID 0)
-- Dependencies: 226
-- Name: COLUMN cem_talq.suphasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_talq.suphasta IS 'SUPERFICIE HASTA';


--
-- TOC entry 6180 (class 0 OID 0)
-- Dependencies: 226
-- Name: COLUMN cem_talq.duracion; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_talq.duracion IS 'DURACION EN AÑOS';


--
-- TOC entry 6181 (class 0 OID 0)
-- Dependencies: 226
-- Name: COLUMN cem_talq.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_talq.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6182 (class 0 OID 0)
-- Dependencies: 226
-- Name: COLUMN cem_talq.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_talq.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 227 (class 1259 OID 5284181)
-- Name: cem_talq_est; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cem_talq_est (
    cod character varying(1) NOT NULL,
    nombre character varying(10) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.cem_talq_est OWNER TO postgres;

--
-- TOC entry 6183 (class 0 OID 0)
-- Dependencies: 227
-- Name: TABLE cem_talq_est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.cem_talq_est IS 'DISTINTOS ESTADOS DEL ALQUILER O ARRENDAMIENTO';


--
-- TOC entry 6184 (class 0 OID 0)
-- Dependencies: 227
-- Name: COLUMN cem_talq_est.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_talq_est.cod IS 'CODIGO ';


--
-- TOC entry 6185 (class 0 OID 0)
-- Dependencies: 227
-- Name: COLUMN cem_talq_est.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_talq_est.nombre IS 'NOMBRE';


--
-- TOC entry 6186 (class 0 OID 0)
-- Dependencies: 227
-- Name: COLUMN cem_talq_est.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_talq_est.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6187 (class 0 OID 0)
-- Dependencies: 227
-- Name: COLUMN cem_talq_est.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_talq_est.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 228 (class 1259 OID 5284185)
-- Name: cem_tcat; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cem_tcat (
    tipo character varying(2) NOT NULL,
    cat smallint NOT NULL,
    nombre character varying(15) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.cem_tcat OWNER TO postgres;

--
-- TOC entry 6188 (class 0 OID 0)
-- Dependencies: 228
-- Name: TABLE cem_tcat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.cem_tcat IS 'DISTINTAS CATEGORÍAS DE CUENTAS DE CEMENTERIO';


--
-- TOC entry 6189 (class 0 OID 0)
-- Dependencies: 228
-- Name: COLUMN cem_tcat.tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_tcat.tipo IS 'CODIGO DE TIPO DE CUENTA';


--
-- TOC entry 6190 (class 0 OID 0)
-- Dependencies: 228
-- Name: COLUMN cem_tcat.cat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_tcat.cat IS 'CATEGORIA';


--
-- TOC entry 6191 (class 0 OID 0)
-- Dependencies: 228
-- Name: COLUMN cem_tcat.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_tcat.nombre IS 'DESCRIPCION DE LA CATEGORIA';


--
-- TOC entry 6192 (class 0 OID 0)
-- Dependencies: 228
-- Name: COLUMN cem_tcat.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_tcat.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6193 (class 0 OID 0)
-- Dependencies: 228
-- Name: COLUMN cem_tcat.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_tcat.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 229 (class 1259 OID 5284189)
-- Name: cem_tcausa; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cem_tcausa (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.cem_tcausa OWNER TO postgres;

--
-- TOC entry 6194 (class 0 OID 0)
-- Dependencies: 229
-- Name: TABLE cem_tcausa; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.cem_tcausa IS 'DIFERENTES CAUSAS DE DECESO';


--
-- TOC entry 6195 (class 0 OID 0)
-- Dependencies: 229
-- Name: COLUMN cem_tcausa.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_tcausa.cod IS 'CODIGO ';


--
-- TOC entry 6196 (class 0 OID 0)
-- Dependencies: 229
-- Name: COLUMN cem_tcausa.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_tcausa.nombre IS 'NOMBRE';


--
-- TOC entry 6197 (class 0 OID 0)
-- Dependencies: 229
-- Name: COLUMN cem_tcausa.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_tcausa.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6198 (class 0 OID 0)
-- Dependencies: 229
-- Name: COLUMN cem_tcausa.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_tcausa.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 230 (class 1259 OID 5284193)
-- Name: cem_tdeleg; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cem_tdeleg (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.cem_tdeleg OWNER TO postgres;

--
-- TOC entry 6199 (class 0 OID 0)
-- Dependencies: 230
-- Name: TABLE cem_tdeleg; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.cem_tdeleg IS 'DIFERENTES DELEGACIONES DEL CEMENTERIO';


--
-- TOC entry 6200 (class 0 OID 0)
-- Dependencies: 230
-- Name: COLUMN cem_tdeleg.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_tdeleg.cod IS 'CODIGO ';


--
-- TOC entry 6201 (class 0 OID 0)
-- Dependencies: 230
-- Name: COLUMN cem_tdeleg.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_tdeleg.nombre IS 'NOMBRE';


--
-- TOC entry 6202 (class 0 OID 0)
-- Dependencies: 230
-- Name: COLUMN cem_tdeleg.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_tdeleg.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6203 (class 0 OID 0)
-- Dependencies: 230
-- Name: COLUMN cem_tdeleg.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_tdeleg.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 231 (class 1259 OID 5284197)
-- Name: cem_texenta; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cem_texenta (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.cem_texenta OWNER TO postgres;

--
-- TOC entry 6204 (class 0 OID 0)
-- Dependencies: 231
-- Name: TABLE cem_texenta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.cem_texenta IS 'MOTIVO DE EXENCIÓN EN CEMENTERIO';


--
-- TOC entry 6205 (class 0 OID 0)
-- Dependencies: 231
-- Name: COLUMN cem_texenta.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_texenta.cod IS 'CODIGO ';


--
-- TOC entry 6206 (class 0 OID 0)
-- Dependencies: 231
-- Name: COLUMN cem_texenta.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_texenta.nombre IS 'NOMBRE';


--
-- TOC entry 6207 (class 0 OID 0)
-- Dependencies: 231
-- Name: COLUMN cem_texenta.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_texenta.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6208 (class 0 OID 0)
-- Dependencies: 231
-- Name: COLUMN cem_texenta.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_texenta.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 232 (class 1259 OID 5284201)
-- Name: cem_tfunebre; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cem_tfunebre (
    cod smallint NOT NULL,
    nombre character varying(35) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.cem_tfunebre OWNER TO postgres;

--
-- TOC entry 6209 (class 0 OID 0)
-- Dependencies: 232
-- Name: TABLE cem_tfunebre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.cem_tfunebre IS 'EMPRESAS FUNEBRES';


--
-- TOC entry 6210 (class 0 OID 0)
-- Dependencies: 232
-- Name: COLUMN cem_tfunebre.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_tfunebre.cod IS 'CODIGO ';


--
-- TOC entry 6211 (class 0 OID 0)
-- Dependencies: 232
-- Name: COLUMN cem_tfunebre.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_tfunebre.nombre IS 'NOMBRE';


--
-- TOC entry 6212 (class 0 OID 0)
-- Dependencies: 232
-- Name: COLUMN cem_tfunebre.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_tfunebre.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6213 (class 0 OID 0)
-- Dependencies: 232
-- Name: COLUMN cem_tfunebre.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_tfunebre.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 233 (class 1259 OID 5284205)
-- Name: cem_tipo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cem_tipo (
    cod character varying(2) NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.cem_tipo OWNER TO postgres;

--
-- TOC entry 6214 (class 0 OID 0)
-- Dependencies: 233
-- Name: TABLE cem_tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.cem_tipo IS 'TIPOS DE CUENTAS CEMENTERIO';


--
-- TOC entry 6215 (class 0 OID 0)
-- Dependencies: 233
-- Name: COLUMN cem_tipo.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_tipo.cod IS 'CODIGO';


--
-- TOC entry 6216 (class 0 OID 0)
-- Dependencies: 233
-- Name: COLUMN cem_tipo.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_tipo.nombre IS 'NOMBRE';


--
-- TOC entry 6217 (class 0 OID 0)
-- Dependencies: 233
-- Name: COLUMN cem_tipo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_tipo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6218 (class 0 OID 0)
-- Dependencies: 233
-- Name: COLUMN cem_tipo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cem_tipo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 234 (class 1259 OID 5284209)
-- Name: comer; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comer (
    obj_id character varying(8) NOT NULL,
    legajo character varying(10) NOT NULL,
    thab character varying(1) NOT NULL,
    tipo smallint NOT NULL,
    fchhab date,
    fchvenchab date,
    pi smallint,
    cantemple smallint,
    supcub numeric(12,2),
    supsemi numeric(12,2),
    supdes numeric(12,2),
    alquila smallint,
    zona smallint DEFAULT 2 NOT NULL,
    inmueble character varying(8),
    rodados character varying(8),
    tel character varying(15),
    mail character varying(50)
);


ALTER TABLE public.comer OWNER TO postgres;

--
-- TOC entry 6219 (class 0 OID 0)
-- Dependencies: 234
-- Name: TABLE comer; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.comer IS 'DATOS PRINCIPALES DE COMERCIO Y HABILITACIONES';


--
-- TOC entry 6220 (class 0 OID 0)
-- Dependencies: 234
-- Name: COLUMN comer.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 6221 (class 0 OID 0)
-- Dependencies: 234
-- Name: COLUMN comer.legajo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer.legajo IS 'LEGAJO';


--
-- TOC entry 6222 (class 0 OID 0)
-- Dependencies: 234
-- Name: COLUMN comer.thab; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer.thab IS 'TIPO DE HABILITACION (COMERCIAL/ESCOLAR/TAXI/REMIS/URBANO)';


--
-- TOC entry 6223 (class 0 OID 0)
-- Dependencies: 234
-- Name: COLUMN comer.tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer.tipo IS 'TIPO DE COMERCIO';


--
-- TOC entry 6224 (class 0 OID 0)
-- Dependencies: 234
-- Name: COLUMN comer.fchhab; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer.fchhab IS 'FECHA DE HABILITACION';


--
-- TOC entry 6225 (class 0 OID 0)
-- Dependencies: 234
-- Name: COLUMN comer.fchvenchab; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer.fchvenchab IS 'FECHA DE VENCIMIENTO DE LA HABILITACION';


--
-- TOC entry 6226 (class 0 OID 0)
-- Dependencies: 234
-- Name: COLUMN comer.pi; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer.pi IS 'SI POSEE EXENCION POR PARQUE INDUSTRIAL';


--
-- TOC entry 6227 (class 0 OID 0)
-- Dependencies: 234
-- Name: COLUMN comer.cantemple; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer.cantemple IS 'CANTIDAD DE EMPLEADOS';


--
-- TOC entry 6228 (class 0 OID 0)
-- Dependencies: 234
-- Name: COLUMN comer.supcub; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer.supcub IS 'SUPERFICIE CUBIERTA DEL LOCAL';


--
-- TOC entry 6229 (class 0 OID 0)
-- Dependencies: 234
-- Name: COLUMN comer.supsemi; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer.supsemi IS 'SUPERFICIE SEMICUBIERTA DEL LOCAL';


--
-- TOC entry 6230 (class 0 OID 0)
-- Dependencies: 234
-- Name: COLUMN comer.supdes; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer.supdes IS 'SUPERFICIE DESCUBIERTA DEL LOCAL';


--
-- TOC entry 6231 (class 0 OID 0)
-- Dependencies: 234
-- Name: COLUMN comer.alquila; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer.alquila IS 'SI ALQUILA LOCAL';


--
-- TOC entry 6232 (class 0 OID 0)
-- Dependencies: 234
-- Name: COLUMN comer.zona; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer.zona IS 'ZONA A LA QUE PERTENECE';


--
-- TOC entry 6233 (class 0 OID 0)
-- Dependencies: 234
-- Name: COLUMN comer.inmueble; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer.inmueble IS 'CODIGO DEL INMUEBLE';


--
-- TOC entry 6234 (class 0 OID 0)
-- Dependencies: 234
-- Name: COLUMN comer.rodados; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer.rodados IS 'CODIGO DEL RODADO';


--
-- TOC entry 6235 (class 0 OID 0)
-- Dependencies: 234
-- Name: COLUMN comer.tel; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer.tel IS 'TELÉFONO DE LA HABILITACON';


--
-- TOC entry 6236 (class 0 OID 0)
-- Dependencies: 234
-- Name: COLUMN comer.mail; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer.mail IS 'MAIL DE LA HABILITACION';


--
-- TOC entry 235 (class 1259 OID 5284213)
-- Name: comer_ddjj_anual; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comer_ddjj_anual (
    obj_id character varying(8) NOT NULL,
    anio integer NOT NULL,
    fchpresenta timestamp without time zone NOT NULL,
    base numeric(12,2) NOT NULL,
    auto smallint DEFAULT 0 NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.comer_ddjj_anual OWNER TO postgres;

--
-- TOC entry 6238 (class 0 OID 0)
-- Dependencies: 235
-- Name: TABLE comer_ddjj_anual; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.comer_ddjj_anual IS 'DATOS DE DECLARACION JURADA ANUAL';


--
-- TOC entry 6239 (class 0 OID 0)
-- Dependencies: 235
-- Name: COLUMN comer_ddjj_anual.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_ddjj_anual.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 6240 (class 0 OID 0)
-- Dependencies: 235
-- Name: COLUMN comer_ddjj_anual.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_ddjj_anual.anio IS 'AÑO DE LA PRESENTACION';


--
-- TOC entry 6241 (class 0 OID 0)
-- Dependencies: 235
-- Name: COLUMN comer_ddjj_anual.fchpresenta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_ddjj_anual.fchpresenta IS 'FECHA DE PRESENTACION';


--
-- TOC entry 6242 (class 0 OID 0)
-- Dependencies: 235
-- Name: COLUMN comer_ddjj_anual.base; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_ddjj_anual.base IS 'MONTO DE BASE IMPONIBLE';


--
-- TOC entry 6243 (class 0 OID 0)
-- Dependencies: 235
-- Name: COLUMN comer_ddjj_anual.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_ddjj_anual.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6244 (class 0 OID 0)
-- Dependencies: 235
-- Name: COLUMN comer_ddjj_anual.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_ddjj_anual.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 236 (class 1259 OID 5284218)
-- Name: comer_infrac; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comer_infrac (
    obj_id character varying(8) NOT NULL,
    tinfrac smallint NOT NULL,
    detalle character varying(100) NOT NULL
);


ALTER TABLE public.comer_infrac OWNER TO postgres;

--
-- TOC entry 6245 (class 0 OID 0)
-- Dependencies: 236
-- Name: TABLE comer_infrac; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.comer_infrac IS 'INFRACCIONES EN COMERCIOS CENSADOS';


--
-- TOC entry 6246 (class 0 OID 0)
-- Dependencies: 236
-- Name: COLUMN comer_infrac.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_infrac.obj_id IS 'IDENTIFICACION DEL COMERCIO';


--
-- TOC entry 6247 (class 0 OID 0)
-- Dependencies: 236
-- Name: COLUMN comer_infrac.tinfrac; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_infrac.tinfrac IS 'CODIGO DE TIPO DE INFRACCION';


--
-- TOC entry 6248 (class 0 OID 0)
-- Dependencies: 236
-- Name: COLUMN comer_infrac.detalle; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_infrac.detalle IS 'DETALLE';


--
-- TOC entry 237 (class 1259 OID 5284221)
-- Name: comer_inm; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comer_inm (
    obj_id character varying(8) NOT NULL,
    inmueble character varying(8) NOT NULL,
    subcta smallint DEFAULT 0 NOT NULL,
    porc numeric(5,2) NOT NULL,
    est character(1) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.comer_inm OWNER TO postgres;

--
-- TOC entry 6249 (class 0 OID 0)
-- Dependencies: 237
-- Name: TABLE comer_inm; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.comer_inm IS 'INMUEBLE/S DONDE SE LOCALIZA UN COMERCIO';


--
-- TOC entry 6250 (class 0 OID 0)
-- Dependencies: 237
-- Name: COLUMN comer_inm.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_inm.obj_id IS 'CODIGO DE COMERCIO';


--
-- TOC entry 6251 (class 0 OID 0)
-- Dependencies: 237
-- Name: COLUMN comer_inm.inmueble; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_inm.inmueble IS 'CODIGO DE INMUEBLE';


--
-- TOC entry 6252 (class 0 OID 0)
-- Dependencies: 237
-- Name: COLUMN comer_inm.porc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_inm.porc IS 'PORCENTAJE DE OCUPACION';


--
-- TOC entry 6253 (class 0 OID 0)
-- Dependencies: 237
-- Name: COLUMN comer_inm.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_inm.est IS 'ESTADO';


--
-- TOC entry 6254 (class 0 OID 0)
-- Dependencies: 237
-- Name: COLUMN comer_inm.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_inm.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6255 (class 0 OID 0)
-- Dependencies: 237
-- Name: COLUMN comer_inm.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_inm.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 238 (class 1259 OID 5284226)
-- Name: comer_thab; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comer_thab (
    cod character varying(1) NOT NULL,
    nombre character varying(10) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.comer_thab OWNER TO postgres;

--
-- TOC entry 6256 (class 0 OID 0)
-- Dependencies: 238
-- Name: TABLE comer_thab; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.comer_thab IS 'TIPOS DE HABILITACIÓN';


--
-- TOC entry 6257 (class 0 OID 0)
-- Dependencies: 238
-- Name: COLUMN comer_thab.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_thab.cod IS 'CODIGO ';


--
-- TOC entry 6258 (class 0 OID 0)
-- Dependencies: 238
-- Name: COLUMN comer_thab.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_thab.nombre IS 'NOMBRE';


--
-- TOC entry 6259 (class 0 OID 0)
-- Dependencies: 238
-- Name: COLUMN comer_thab.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_thab.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6260 (class 0 OID 0)
-- Dependencies: 238
-- Name: COLUMN comer_thab.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_thab.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 239 (class 1259 OID 5284230)
-- Name: comer_tinfrac; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comer_tinfrac (
    cod smallint NOT NULL,
    nombre character varying(40) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.comer_tinfrac OWNER TO postgres;

--
-- TOC entry 6262 (class 0 OID 0)
-- Dependencies: 239
-- Name: TABLE comer_tinfrac; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.comer_tinfrac IS 'DIFERENTES INFRACCIONES DETECTADAS EN EL CENSO';


--
-- TOC entry 6263 (class 0 OID 0)
-- Dependencies: 239
-- Name: COLUMN comer_tinfrac.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_tinfrac.cod IS 'CODIGO ';


--
-- TOC entry 6264 (class 0 OID 0)
-- Dependencies: 239
-- Name: COLUMN comer_tinfrac.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_tinfrac.nombre IS 'NOMBRE';


--
-- TOC entry 6265 (class 0 OID 0)
-- Dependencies: 239
-- Name: COLUMN comer_tinfrac.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_tinfrac.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6266 (class 0 OID 0)
-- Dependencies: 239
-- Name: COLUMN comer_tinfrac.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_tinfrac.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 240 (class 1259 OID 5284234)
-- Name: comer_tipo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comer_tipo (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.comer_tipo OWNER TO postgres;

--
-- TOC entry 6267 (class 0 OID 0)
-- Dependencies: 240
-- Name: TABLE comer_tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.comer_tipo IS 'TIPOS DE COMERCIOS';


--
-- TOC entry 6268 (class 0 OID 0)
-- Dependencies: 240
-- Name: COLUMN comer_tipo.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_tipo.cod IS 'CODIGO ';


--
-- TOC entry 6269 (class 0 OID 0)
-- Dependencies: 240
-- Name: COLUMN comer_tipo.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_tipo.nombre IS 'NOMBRE';


--
-- TOC entry 6270 (class 0 OID 0)
-- Dependencies: 240
-- Name: COLUMN comer_tipo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_tipo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6271 (class 0 OID 0)
-- Dependencies: 240
-- Name: COLUMN comer_tipo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_tipo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 183 (class 1259 OID 5283826)
-- Name: comer_tiva; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comer_tiva (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    porc numeric(5,2),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.comer_tiva OWNER TO postgres;

--
-- TOC entry 6272 (class 0 OID 0)
-- Dependencies: 183
-- Name: TABLE comer_tiva; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.comer_tiva IS 'TIPOS DE SITUACIÓN ANTE EL IVA';


--
-- TOC entry 6273 (class 0 OID 0)
-- Dependencies: 183
-- Name: COLUMN comer_tiva.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_tiva.cod IS 'CODIGO ';


--
-- TOC entry 6274 (class 0 OID 0)
-- Dependencies: 183
-- Name: COLUMN comer_tiva.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_tiva.nombre IS 'NOMBRE';


--
-- TOC entry 6275 (class 0 OID 0)
-- Dependencies: 183
-- Name: COLUMN comer_tiva.porc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_tiva.porc IS 'PORCENTAJE QUE SE APLICA';


--
-- TOC entry 6276 (class 0 OID 0)
-- Dependencies: 183
-- Name: COLUMN comer_tiva.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_tiva.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6277 (class 0 OID 0)
-- Dependencies: 183
-- Name: COLUMN comer_tiva.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_tiva.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 241 (class 1259 OID 5284238)
-- Name: comer_tliq; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comer_tliq (
    cod character varying(2) NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.comer_tliq OWNER TO postgres;

--
-- TOC entry 6278 (class 0 OID 0)
-- Dependencies: 241
-- Name: TABLE comer_tliq; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.comer_tliq IS 'TIPOS DE LIQUIDACION DE INGRESOS BRUTOS';


--
-- TOC entry 6279 (class 0 OID 0)
-- Dependencies: 241
-- Name: COLUMN comer_tliq.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_tliq.cod IS 'CODIGO ';


--
-- TOC entry 6280 (class 0 OID 0)
-- Dependencies: 241
-- Name: COLUMN comer_tliq.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_tliq.nombre IS 'NOMBRE';


--
-- TOC entry 6281 (class 0 OID 0)
-- Dependencies: 241
-- Name: COLUMN comer_tliq.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_tliq.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6282 (class 0 OID 0)
-- Dependencies: 241
-- Name: COLUMN comer_tliq.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_tliq.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 242 (class 1259 OID 5284242)
-- Name: comer_torgjuri; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comer_torgjuri (
    cod smallint NOT NULL,
    nombre character varying(50) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.comer_torgjuri OWNER TO postgres;

--
-- TOC entry 6283 (class 0 OID 0)
-- Dependencies: 242
-- Name: TABLE comer_torgjuri; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.comer_torgjuri IS 'DIFERENTES ORGANIZACIONES JURÍDICAS';


--
-- TOC entry 6284 (class 0 OID 0)
-- Dependencies: 242
-- Name: COLUMN comer_torgjuri.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_torgjuri.cod IS 'CODIGO ';


--
-- TOC entry 6285 (class 0 OID 0)
-- Dependencies: 242
-- Name: COLUMN comer_torgjuri.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_torgjuri.nombre IS 'NOMBRE';


--
-- TOC entry 6286 (class 0 OID 0)
-- Dependencies: 242
-- Name: COLUMN comer_torgjuri.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_torgjuri.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6287 (class 0 OID 0)
-- Dependencies: 242
-- Name: COLUMN comer_torgjuri.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_torgjuri.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 243 (class 1259 OID 5284246)
-- Name: comer_tzona; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comer_tzona (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.comer_tzona OWNER TO postgres;

--
-- TOC entry 6288 (class 0 OID 0)
-- Dependencies: 243
-- Name: TABLE comer_tzona; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.comer_tzona IS 'ZONAS DE COMERCIOS';


--
-- TOC entry 6289 (class 0 OID 0)
-- Dependencies: 243
-- Name: COLUMN comer_tzona.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_tzona.cod IS 'CODIGO ';


--
-- TOC entry 6290 (class 0 OID 0)
-- Dependencies: 243
-- Name: COLUMN comer_tzona.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_tzona.nombre IS 'NOMBRE';


--
-- TOC entry 6291 (class 0 OID 0)
-- Dependencies: 243
-- Name: COLUMN comer_tzona.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_tzona.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6292 (class 0 OID 0)
-- Dependencies: 243
-- Name: COLUMN comer_tzona.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comer_tzona.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 244 (class 1259 OID 5284250)
-- Name: seq_comp_id; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_comp_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_comp_id OWNER TO postgres;

--
-- TOC entry 245 (class 1259 OID 5284252)
-- Name: comp; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comp (
    comp_id integer DEFAULT nextval('public.seq_comp_id'::regclass) NOT NULL,
    expe character varying(12),
    tipo smallint NOT NULL,
    aplic_num smallint NOT NULL,
    fchalta timestamp without time zone NOT NULL,
    fchaplic timestamp without time zone,
    fchconsolida timestamp(0) without time zone,
    fchbaja timestamp without time zone,
    trib_ori smallint,
    obj_ori character varying(8),
    trib_dest smallint,
    obj_dest character varying(8),
    monto numeric(12,2) NOT NULL,
    monto_aplic numeric(12,2) NOT NULL,
    est character varying(1) NOT NULL,
    obs character varying(200) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.comp OWNER TO postgres;

--
-- TOC entry 6293 (class 0 OID 0)
-- Dependencies: 245
-- Name: TABLE comp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.comp IS 'DATOS PRINCIPALES DE RETENCIONES O COMPENSACIONES';


--
-- TOC entry 6294 (class 0 OID 0)
-- Dependencies: 245
-- Name: COLUMN comp.comp_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp.comp_id IS 'IDENTIFICADOR DE RETENCION';


--
-- TOC entry 6295 (class 0 OID 0)
-- Dependencies: 245
-- Name: COLUMN comp.expe; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp.expe IS 'EXPEDIENTE';


--
-- TOC entry 6296 (class 0 OID 0)
-- Dependencies: 245
-- Name: COLUMN comp.tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp.tipo IS 'CODIGO DE TIPO DE RETENCION';


--
-- TOC entry 6297 (class 0 OID 0)
-- Dependencies: 245
-- Name: COLUMN comp.aplic_num; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp.aplic_num IS 'SI SE APLICA AL NUM - RESPONSABLE ';


--
-- TOC entry 6298 (class 0 OID 0)
-- Dependencies: 245
-- Name: COLUMN comp.fchalta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp.fchalta IS 'FECHA DE ALTA';


--
-- TOC entry 6299 (class 0 OID 0)
-- Dependencies: 245
-- Name: COLUMN comp.fchaplic; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp.fchaplic IS 'FECHA DE APLICACION';


--
-- TOC entry 6300 (class 0 OID 0)
-- Dependencies: 245
-- Name: COLUMN comp.fchconsolida; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp.fchconsolida IS 'FECHA DE CONSOLIDACION';


--
-- TOC entry 6301 (class 0 OID 0)
-- Dependencies: 245
-- Name: COLUMN comp.fchbaja; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp.fchbaja IS 'FECHA DE BAJA';


--
-- TOC entry 6302 (class 0 OID 0)
-- Dependencies: 245
-- Name: COLUMN comp.trib_ori; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp.trib_ori IS 'CODIGO DE TRIBUTO ORIGEN';


--
-- TOC entry 6303 (class 0 OID 0)
-- Dependencies: 245
-- Name: COLUMN comp.obj_ori; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp.obj_ori IS 'CODIGO DE OBJETO ORIGEN';


--
-- TOC entry 6304 (class 0 OID 0)
-- Dependencies: 245
-- Name: COLUMN comp.trib_dest; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp.trib_dest IS 'CODIGO DE TRIBUTO DESTINO';


--
-- TOC entry 6305 (class 0 OID 0)
-- Dependencies: 245
-- Name: COLUMN comp.obj_dest; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp.obj_dest IS 'CODIGO DE OBJETO DESTINO';


--
-- TOC entry 6306 (class 0 OID 0)
-- Dependencies: 245
-- Name: COLUMN comp.monto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp.monto IS 'MONTO';


--
-- TOC entry 6307 (class 0 OID 0)
-- Dependencies: 245
-- Name: COLUMN comp.monto_aplic; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp.monto_aplic IS 'MONTO APLICADO';


--
-- TOC entry 6308 (class 0 OID 0)
-- Dependencies: 245
-- Name: COLUMN comp.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp.est IS 'ESTADO';


--
-- TOC entry 6309 (class 0 OID 0)
-- Dependencies: 245
-- Name: COLUMN comp.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp.obs IS 'OBSERVACIONES';


--
-- TOC entry 6310 (class 0 OID 0)
-- Dependencies: 245
-- Name: COLUMN comp.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6311 (class 0 OID 0)
-- Dependencies: 245
-- Name: COLUMN comp.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 246 (class 1259 OID 5284257)
-- Name: comp_aplic; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comp_aplic (
    comp_id integer NOT NULL,
    fecha timestamp without time zone NOT NULL,
    ctacte_id integer NOT NULL,
    monto_aplic numeric(12,2)
);


ALTER TABLE public.comp_aplic OWNER TO postgres;

--
-- TOC entry 6312 (class 0 OID 0)
-- Dependencies: 246
-- Name: TABLE comp_aplic; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.comp_aplic IS 'MONTOS APLICADOS EN PERÍODOS DE CUENTA CORRIENTE';


--
-- TOC entry 6313 (class 0 OID 0)
-- Dependencies: 246
-- Name: COLUMN comp_aplic.comp_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp_aplic.comp_id IS 'IDENTIFICADOR DE RETENCION';


--
-- TOC entry 6314 (class 0 OID 0)
-- Dependencies: 246
-- Name: COLUMN comp_aplic.fecha; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp_aplic.fecha IS 'FECHA';


--
-- TOC entry 6315 (class 0 OID 0)
-- Dependencies: 246
-- Name: COLUMN comp_aplic.ctacte_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp_aplic.ctacte_id IS 'IDENTIFICADOR DE CUENTA CORRIENTE';


--
-- TOC entry 6316 (class 0 OID 0)
-- Dependencies: 246
-- Name: COLUMN comp_aplic.monto_aplic; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp_aplic.monto_aplic IS 'MONTO APLICADO';


--
-- TOC entry 247 (class 1259 OID 5284260)
-- Name: comp_saldo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comp_saldo (
    comp_id integer NOT NULL,
    ctacte_id integer NOT NULL,
    saldo numeric(12,2) NOT NULL,
    saldo_cub numeric(12,2) NOT NULL
);


ALTER TABLE public.comp_saldo OWNER TO postgres;

--
-- TOC entry 6317 (class 0 OID 0)
-- Dependencies: 247
-- Name: TABLE comp_saldo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.comp_saldo IS 'SALDOS DE CADA RETENCIÓN O COMPENSACIÓN';


--
-- TOC entry 6318 (class 0 OID 0)
-- Dependencies: 247
-- Name: COLUMN comp_saldo.comp_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp_saldo.comp_id IS 'IDENTIFICADOR DE RETENCION';


--
-- TOC entry 6319 (class 0 OID 0)
-- Dependencies: 247
-- Name: COLUMN comp_saldo.ctacte_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp_saldo.ctacte_id IS 'IDENTIFICADOR DE CUENTA CORRIENTE';


--
-- TOC entry 6320 (class 0 OID 0)
-- Dependencies: 247
-- Name: COLUMN comp_saldo.saldo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp_saldo.saldo IS 'SALDO';


--
-- TOC entry 6321 (class 0 OID 0)
-- Dependencies: 247
-- Name: COLUMN comp_saldo.saldo_cub; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp_saldo.saldo_cub IS 'SALDO CUBIERTO';


--
-- TOC entry 248 (class 1259 OID 5284263)
-- Name: comp_test; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comp_test (
    cod character varying(1) NOT NULL,
    nombre character varying(15) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.comp_test OWNER TO postgres;

--
-- TOC entry 6322 (class 0 OID 0)
-- Dependencies: 248
-- Name: TABLE comp_test; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.comp_test IS 'DISTINTOS ESTADOS DE RETENCIONES';


--
-- TOC entry 6323 (class 0 OID 0)
-- Dependencies: 248
-- Name: COLUMN comp_test.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp_test.cod IS 'CODIGO';


--
-- TOC entry 6324 (class 0 OID 0)
-- Dependencies: 248
-- Name: COLUMN comp_test.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp_test.nombre IS 'NOMBRE';


--
-- TOC entry 6325 (class 0 OID 0)
-- Dependencies: 248
-- Name: COLUMN comp_test.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp_test.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6326 (class 0 OID 0)
-- Dependencies: 248
-- Name: COLUMN comp_test.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp_test.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 249 (class 1259 OID 5284267)
-- Name: comp_tipo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comp_tipo (
    cod smallint NOT NULL,
    nombre character varying(15) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.comp_tipo OWNER TO postgres;

--
-- TOC entry 6327 (class 0 OID 0)
-- Dependencies: 249
-- Name: TABLE comp_tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.comp_tipo IS 'DIFERENTES TIPOS DE RETENCIONES';


--
-- TOC entry 6328 (class 0 OID 0)
-- Dependencies: 249
-- Name: COLUMN comp_tipo.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp_tipo.cod IS 'CODIGO';


--
-- TOC entry 6329 (class 0 OID 0)
-- Dependencies: 249
-- Name: COLUMN comp_tipo.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp_tipo.nombre IS 'NOMBRE';


--
-- TOC entry 6330 (class 0 OID 0)
-- Dependencies: 249
-- Name: COLUMN comp_tipo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp_tipo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6331 (class 0 OID 0)
-- Dependencies: 249
-- Name: COLUMN comp_tipo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.comp_tipo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 250 (class 1259 OID 5284271)
-- Name: ctacte; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ctacte (
    ctacte_id integer DEFAULT nextval(('public.seq_ctacte_id'::text)::regclass) NOT NULL,
    trib_id smallint NOT NULL,
    tobj smallint NOT NULL,
    obj_id character varying(8) NOT NULL,
    subcta smallint DEFAULT 0 NOT NULL,
    anio integer NOT NULL,
    cuota smallint NOT NULL,
    ucm numeric(12,2) DEFAULT 0,
    nominal numeric(12,2) NOT NULL,
    nominalcub numeric(12,2) NOT NULL,
    multa numeric(12,2) NOT NULL,
    est character(1) NOT NULL,
    fchemi date,
    fchvenc date NOT NULL,
    fchpago timestamp without time zone,
    caja_id smallint,
    montovenc1 numeric(12,2),
    montovenc2 numeric(12,2),
    montoanual numeric(12,2),
    texto_id smallint DEFAULT 0,
    expe character varying(15) DEFAULT ''::character varying,
    obs character varying(500) DEFAULT ''::character varying,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.ctacte OWNER TO postgres;

--
-- TOC entry 6332 (class 0 OID 0)
-- Dependencies: 250
-- Name: TABLE ctacte; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ctacte IS 'DATOS PRINCIPALES DE LA CUENTA CORRIENTE';


--
-- TOC entry 6333 (class 0 OID 0)
-- Dependencies: 250
-- Name: COLUMN ctacte.ctacte_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte.ctacte_id IS 'IDENTIFICADOR DE CUENTA CORRIENTE';


--
-- TOC entry 6334 (class 0 OID 0)
-- Dependencies: 250
-- Name: COLUMN ctacte.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 6335 (class 0 OID 0)
-- Dependencies: 250
-- Name: COLUMN ctacte.tobj; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte.tobj IS 'CODIGO DE TIPO DE OBJETO';


--
-- TOC entry 6336 (class 0 OID 0)
-- Dependencies: 250
-- Name: COLUMN ctacte.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 6337 (class 0 OID 0)
-- Dependencies: 250
-- Name: COLUMN ctacte.subcta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte.subcta IS 'NUMERO DE SUBCUENTA';


--
-- TOC entry 6338 (class 0 OID 0)
-- Dependencies: 250
-- Name: COLUMN ctacte.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte.anio IS 'AÑO';


--
-- TOC entry 6339 (class 0 OID 0)
-- Dependencies: 250
-- Name: COLUMN ctacte.cuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte.cuota IS 'CUOTA';


--
-- TOC entry 6340 (class 0 OID 0)
-- Dependencies: 250
-- Name: COLUMN ctacte.ucm; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte.ucm IS 'VALOR DE UCM';


--
-- TOC entry 6341 (class 0 OID 0)
-- Dependencies: 250
-- Name: COLUMN ctacte.nominal; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte.nominal IS 'MONTO NOMINAL';


--
-- TOC entry 6342 (class 0 OID 0)
-- Dependencies: 250
-- Name: COLUMN ctacte.nominalcub; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte.nominalcub IS 'MONTO NOMINAL CUBIERTO';


--
-- TOC entry 6343 (class 0 OID 0)
-- Dependencies: 250
-- Name: COLUMN ctacte.multa; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte.multa IS 'MONTO MULTA';


--
-- TOC entry 6344 (class 0 OID 0)
-- Dependencies: 250
-- Name: COLUMN ctacte.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte.est IS 'ESTADO';


--
-- TOC entry 6345 (class 0 OID 0)
-- Dependencies: 250
-- Name: COLUMN ctacte.fchemi; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte.fchemi IS 'FECHA DE EMISION';


--
-- TOC entry 6346 (class 0 OID 0)
-- Dependencies: 250
-- Name: COLUMN ctacte.fchvenc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte.fchvenc IS 'FECHA DE VENCIMIENTO';


--
-- TOC entry 6347 (class 0 OID 0)
-- Dependencies: 250
-- Name: COLUMN ctacte.fchpago; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte.fchpago IS 'FECHA DE PAGO';


--
-- TOC entry 6348 (class 0 OID 0)
-- Dependencies: 250
-- Name: COLUMN ctacte.caja_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte.caja_id IS 'CODIGO DE CAJA';


--
-- TOC entry 6349 (class 0 OID 0)
-- Dependencies: 250
-- Name: COLUMN ctacte.montovenc1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte.montovenc1 IS 'MONTO PARA VENCIMIENTO 1';


--
-- TOC entry 6350 (class 0 OID 0)
-- Dependencies: 250
-- Name: COLUMN ctacte.montovenc2; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte.montovenc2 IS 'MONTO PARA VENCIMIENTO 2';


--
-- TOC entry 6351 (class 0 OID 0)
-- Dependencies: 250
-- Name: COLUMN ctacte.montoanual; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte.montoanual IS 'MONTO ANUAL';


--
-- TOC entry 6352 (class 0 OID 0)
-- Dependencies: 250
-- Name: COLUMN ctacte.texto_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte.texto_id IS 'IDENTIFICADOR DE TEXTO';


--
-- TOC entry 6353 (class 0 OID 0)
-- Dependencies: 250
-- Name: COLUMN ctacte.expe; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte.expe IS 'EXPEDIENTE';


--
-- TOC entry 6354 (class 0 OID 0)
-- Dependencies: 250
-- Name: COLUMN ctacte.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte.obs IS 'OBSERVACIONES';


--
-- TOC entry 6355 (class 0 OID 0)
-- Dependencies: 250
-- Name: COLUMN ctacte.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6356 (class 0 OID 0)
-- Dependencies: 250
-- Name: COLUMN ctacte.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 251 (class 1259 OID 5284284)
-- Name: ctacte_ajuste; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ctacte_ajuste (
    aju_id integer DEFAULT nextval(('public.seq_ctacte_aju_id'::text)::regclass) NOT NULL,
    trib_id smallint NOT NULL,
    ctacte_id integer,
    expe character varying(12),
    obs character varying(100),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.ctacte_ajuste OWNER TO postgres;

--
-- TOC entry 6357 (class 0 OID 0)
-- Dependencies: 251
-- Name: TABLE ctacte_ajuste; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ctacte_ajuste IS 'AJUSTES REALIZADOS EN LA CUENTA CORRIENTE';


--
-- TOC entry 6358 (class 0 OID 0)
-- Dependencies: 251
-- Name: COLUMN ctacte_ajuste.aju_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_ajuste.aju_id IS 'CODIGO DE AJUSTE';


--
-- TOC entry 6359 (class 0 OID 0)
-- Dependencies: 251
-- Name: COLUMN ctacte_ajuste.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_ajuste.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 6360 (class 0 OID 0)
-- Dependencies: 251
-- Name: COLUMN ctacte_ajuste.ctacte_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_ajuste.ctacte_id IS 'IDENTIFICADOR DE CUENTA CORRIENTE';


--
-- TOC entry 6361 (class 0 OID 0)
-- Dependencies: 251
-- Name: COLUMN ctacte_ajuste.expe; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_ajuste.expe IS 'EXPEDIENTE';


--
-- TOC entry 6362 (class 0 OID 0)
-- Dependencies: 251
-- Name: COLUMN ctacte_ajuste.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_ajuste.obs IS 'OBSERVACIONES';


--
-- TOC entry 6363 (class 0 OID 0)
-- Dependencies: 251
-- Name: COLUMN ctacte_ajuste.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_ajuste.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6364 (class 0 OID 0)
-- Dependencies: 251
-- Name: COLUMN ctacte_ajuste.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_ajuste.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 252 (class 1259 OID 5284289)
-- Name: ctacte_baja; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ctacte_baja (
    ctacte_id integer NOT NULL,
    orden smallint NOT NULL,
    tipo character varying(1) NOT NULL,
    ucm numeric(12,2) DEFAULT 0,
    nominal numeric(12,2) NOT NULL,
    fchemi date,
    expe character varying(15) DEFAULT ''::character varying,
    obs character varying(500) DEFAULT ''::character varying,
    fchbaja timestamp without time zone DEFAULT now() NOT NULL,
    usrbaja smallint NOT NULL
);


ALTER TABLE public.ctacte_baja OWNER TO postgres;

--
-- TOC entry 6365 (class 0 OID 0)
-- Dependencies: 252
-- Name: TABLE ctacte_baja; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ctacte_baja IS 'BAJAS REALIZADAS EN LA CUENTA CORRIENTE';


--
-- TOC entry 6366 (class 0 OID 0)
-- Dependencies: 252
-- Name: COLUMN ctacte_baja.ctacte_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_baja.ctacte_id IS 'IDENTIFICADOR DE CUENTA CORRIENTE';


--
-- TOC entry 6367 (class 0 OID 0)
-- Dependencies: 252
-- Name: COLUMN ctacte_baja.orden; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_baja.orden IS 'NUMERO DE ORDEN';


--
-- TOC entry 6368 (class 0 OID 0)
-- Dependencies: 252
-- Name: COLUMN ctacte_baja.tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_baja.tipo IS 'CODIGO DE TIPO DE BAJA. "B" BAJA PROPIAMENTE DICHA / "R" RELIQUIDACION';


--
-- TOC entry 6369 (class 0 OID 0)
-- Dependencies: 252
-- Name: COLUMN ctacte_baja.ucm; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_baja.ucm IS 'VALOR DE UCM';


--
-- TOC entry 6370 (class 0 OID 0)
-- Dependencies: 252
-- Name: COLUMN ctacte_baja.nominal; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_baja.nominal IS 'MONTO DE NOMINAL';


--
-- TOC entry 6371 (class 0 OID 0)
-- Dependencies: 252
-- Name: COLUMN ctacte_baja.fchemi; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_baja.fchemi IS 'FECHA DE EMISION';


--
-- TOC entry 6372 (class 0 OID 0)
-- Dependencies: 252
-- Name: COLUMN ctacte_baja.expe; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_baja.expe IS 'EXPEDIENTE';


--
-- TOC entry 6373 (class 0 OID 0)
-- Dependencies: 252
-- Name: COLUMN ctacte_baja.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_baja.obs IS 'OBSERVACIONES';


--
-- TOC entry 6374 (class 0 OID 0)
-- Dependencies: 252
-- Name: COLUMN ctacte_baja.fchbaja; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_baja.fchbaja IS 'FECHA DE BAJA';


--
-- TOC entry 6375 (class 0 OID 0)
-- Dependencies: 252
-- Name: COLUMN ctacte_baja.usrbaja; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_baja.usrbaja IS 'USUARIO QUE DIO LA BAJA';


--
-- TOC entry 253 (class 1259 OID 5284299)
-- Name: ctacte_baja_liq; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ctacte_baja_liq (
    ctacte_id integer NOT NULL,
    orden smallint NOT NULL,
    orden_liq smallint NOT NULL,
    item_id smallint NOT NULL,
    param1 character varying(20),
    param2 character varying(20),
    param3 character varying(20),
    param4 character varying(20),
    monto numeric(12,2) NOT NULL
);


ALTER TABLE public.ctacte_baja_liq OWNER TO postgres;

--
-- TOC entry 6376 (class 0 OID 0)
-- Dependencies: 253
-- Name: TABLE ctacte_baja_liq; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ctacte_baja_liq IS 'ITEMS DE LIQUIDACIONES POR CADA CUENTA CORRIENTE DADAS DE BAJA';


--
-- TOC entry 6377 (class 0 OID 0)
-- Dependencies: 253
-- Name: COLUMN ctacte_baja_liq.ctacte_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_baja_liq.ctacte_id IS 'IDENTIFICADOR DE CUENTA CORRIENTE';


--
-- TOC entry 6378 (class 0 OID 0)
-- Dependencies: 253
-- Name: COLUMN ctacte_baja_liq.orden; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_baja_liq.orden IS 'ORDEN DE BAJA (ctacte_baja)';


--
-- TOC entry 6379 (class 0 OID 0)
-- Dependencies: 253
-- Name: COLUMN ctacte_baja_liq.orden_liq; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_baja_liq.orden_liq IS 'ORDEN';


--
-- TOC entry 6380 (class 0 OID 0)
-- Dependencies: 253
-- Name: COLUMN ctacte_baja_liq.item_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_baja_liq.item_id IS 'CODIGO DE ITEM';


--
-- TOC entry 6381 (class 0 OID 0)
-- Dependencies: 253
-- Name: COLUMN ctacte_baja_liq.param1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_baja_liq.param1 IS 'PARAMETRO 1';


--
-- TOC entry 6382 (class 0 OID 0)
-- Dependencies: 253
-- Name: COLUMN ctacte_baja_liq.param2; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_baja_liq.param2 IS 'PARAMETRO 2';


--
-- TOC entry 6383 (class 0 OID 0)
-- Dependencies: 253
-- Name: COLUMN ctacte_baja_liq.param3; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_baja_liq.param3 IS 'PARAMETRO 3';


--
-- TOC entry 6384 (class 0 OID 0)
-- Dependencies: 253
-- Name: COLUMN ctacte_baja_liq.param4; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_baja_liq.param4 IS 'PARAMETRO 4';


--
-- TOC entry 6385 (class 0 OID 0)
-- Dependencies: 253
-- Name: COLUMN ctacte_baja_liq.monto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_baja_liq.monto IS 'MONTO';


--
-- TOC entry 254 (class 1259 OID 5284302)
-- Name: ctacte_cambioest; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ctacte_cambioest (
    cambio_id integer NOT NULL,
    tipo smallint NOT NULL,
    trib_id smallint NOT NULL,
    obj_id character varying(8) NOT NULL,
    subcta smallint DEFAULT 0 NOT NULL,
    perdesde integer NOT NULL,
    perhasta integer NOT NULL,
    est_orig character varying(1),
    est_dest character varying(1),
    expe character varying(12) DEFAULT ''::character varying,
    obs character varying(500) DEFAULT ''::character varying,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.ctacte_cambioest OWNER TO postgres;

--
-- TOC entry 6386 (class 0 OID 0)
-- Dependencies: 254
-- Name: TABLE ctacte_cambioest; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ctacte_cambioest IS 'CAMBIOS DE ESTADOS EN LA CUENTA CORRIENTE';


--
-- TOC entry 6387 (class 0 OID 0)
-- Dependencies: 254
-- Name: COLUMN ctacte_cambioest.cambio_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_cambioest.cambio_id IS 'IDENTIFICADOR DE CAMBIO';


--
-- TOC entry 6388 (class 0 OID 0)
-- Dependencies: 254
-- Name: COLUMN ctacte_cambioest.tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_cambioest.tipo IS 'CODIGO DE TIPO DE CAMBIO';


--
-- TOC entry 6389 (class 0 OID 0)
-- Dependencies: 254
-- Name: COLUMN ctacte_cambioest.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_cambioest.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 6390 (class 0 OID 0)
-- Dependencies: 254
-- Name: COLUMN ctacte_cambioest.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_cambioest.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 6391 (class 0 OID 0)
-- Dependencies: 254
-- Name: COLUMN ctacte_cambioest.subcta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_cambioest.subcta IS 'NUMERO DE SUBCUENTA';


--
-- TOC entry 6392 (class 0 OID 0)
-- Dependencies: 254
-- Name: COLUMN ctacte_cambioest.perdesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_cambioest.perdesde IS 'PERIODO DESDE';


--
-- TOC entry 6393 (class 0 OID 0)
-- Dependencies: 254
-- Name: COLUMN ctacte_cambioest.perhasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_cambioest.perhasta IS 'PERIODO HASTA';


--
-- TOC entry 6394 (class 0 OID 0)
-- Dependencies: 254
-- Name: COLUMN ctacte_cambioest.est_orig; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_cambioest.est_orig IS 'ESTADO ORIGEN';


--
-- TOC entry 6395 (class 0 OID 0)
-- Dependencies: 254
-- Name: COLUMN ctacte_cambioest.est_dest; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_cambioest.est_dest IS 'ESTADO DESTINO';


--
-- TOC entry 6396 (class 0 OID 0)
-- Dependencies: 254
-- Name: COLUMN ctacte_cambioest.expe; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_cambioest.expe IS 'EXPEDIENTE';


--
-- TOC entry 6397 (class 0 OID 0)
-- Dependencies: 254
-- Name: COLUMN ctacte_cambioest.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_cambioest.obs IS 'OBSERVACIONES';


--
-- TOC entry 6398 (class 0 OID 0)
-- Dependencies: 254
-- Name: COLUMN ctacte_cambioest.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_cambioest.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6399 (class 0 OID 0)
-- Dependencies: 254
-- Name: COLUMN ctacte_cambioest.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_cambioest.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 255 (class 1259 OID 5284312)
-- Name: ctacte_cambioest_tipo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ctacte_cambioest_tipo (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.ctacte_cambioest_tipo OWNER TO postgres;

--
-- TOC entry 6400 (class 0 OID 0)
-- Dependencies: 255
-- Name: TABLE ctacte_cambioest_tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ctacte_cambioest_tipo IS 'DIFERENTES CAMBIOS DE ESTADO EN CUENTA CORRIENTE';


--
-- TOC entry 6401 (class 0 OID 0)
-- Dependencies: 255
-- Name: COLUMN ctacte_cambioest_tipo.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_cambioest_tipo.cod IS 'CODIGO ';


--
-- TOC entry 6402 (class 0 OID 0)
-- Dependencies: 255
-- Name: COLUMN ctacte_cambioest_tipo.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_cambioest_tipo.nombre IS 'NOMBRE';


--
-- TOC entry 6403 (class 0 OID 0)
-- Dependencies: 255
-- Name: COLUMN ctacte_cambioest_tipo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_cambioest_tipo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6404 (class 0 OID 0)
-- Dependencies: 255
-- Name: COLUMN ctacte_cambioest_tipo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_cambioest_tipo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 256 (class 1259 OID 5284316)
-- Name: ctacte_det; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ctacte_det (
    ctacte_id integer NOT NULL,
    topera smallint NOT NULL,
    comprob bigint NOT NULL,
    cta_id smallint NOT NULL,
    debe numeric(12,2) NOT NULL,
    haber numeric(12,2),
    fecha date NOT NULL,
    est character(1) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.ctacte_det OWNER TO postgres;

--
-- TOC entry 6405 (class 0 OID 0)
-- Dependencies: 256
-- Name: TABLE ctacte_det; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ctacte_det IS 'DETALLES DE OPERACIONES DE CADA CUENTA CORRIENTE';


--
-- TOC entry 6406 (class 0 OID 0)
-- Dependencies: 256
-- Name: COLUMN ctacte_det.ctacte_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_det.ctacte_id IS 'IDENTIFICADOR DE CUENTA CORRIENTE';


--
-- TOC entry 6407 (class 0 OID 0)
-- Dependencies: 256
-- Name: COLUMN ctacte_det.topera; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_det.topera IS 'CODIGO DE TIPO DE OPERACION';


--
-- TOC entry 6408 (class 0 OID 0)
-- Dependencies: 256
-- Name: COLUMN ctacte_det.comprob; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_det.comprob IS 'NUMERO DE COMPROBANTE';


--
-- TOC entry 6409 (class 0 OID 0)
-- Dependencies: 256
-- Name: COLUMN ctacte_det.cta_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_det.cta_id IS 'CODIGO DE CUENTA';


--
-- TOC entry 6410 (class 0 OID 0)
-- Dependencies: 256
-- Name: COLUMN ctacte_det.debe; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_det.debe IS 'MONTO EN EL DEBE';


--
-- TOC entry 6411 (class 0 OID 0)
-- Dependencies: 256
-- Name: COLUMN ctacte_det.haber; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_det.haber IS 'MONTO EN EL HABER';


--
-- TOC entry 6412 (class 0 OID 0)
-- Dependencies: 256
-- Name: COLUMN ctacte_det.fecha; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_det.fecha IS 'FECHA';


--
-- TOC entry 6413 (class 0 OID 0)
-- Dependencies: 256
-- Name: COLUMN ctacte_det.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_det.est IS 'ESTADO';


--
-- TOC entry 6414 (class 0 OID 0)
-- Dependencies: 256
-- Name: COLUMN ctacte_det.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_det.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6415 (class 0 OID 0)
-- Dependencies: 256
-- Name: COLUMN ctacte_det.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_det.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 257 (class 1259 OID 5284320)
-- Name: ctacte_excep; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ctacte_excep (
    excep_id integer NOT NULL,
    ctacte_id integer NOT NULL,
    trib_id smallint NOT NULL,
    obj_id character varying(8) NOT NULL,
    subcta smallint DEFAULT 0 NOT NULL,
    anio integer NOT NULL,
    cuota smallint NOT NULL,
    tipo smallint NOT NULL,
    fchusar date,
    fchlimite date NOT NULL,
    expe character varying(12),
    obs character varying(250),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.ctacte_excep OWNER TO postgres;

--
-- TOC entry 6416 (class 0 OID 0)
-- Dependencies: 257
-- Name: TABLE ctacte_excep; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ctacte_excep IS 'EXCEPCIONES DE RECARGO EN LA CUENTA CORRIENTE';


--
-- TOC entry 6417 (class 0 OID 0)
-- Dependencies: 257
-- Name: COLUMN ctacte_excep.excep_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_excep.excep_id IS 'ID DE EXCEPCION';


--
-- TOC entry 6418 (class 0 OID 0)
-- Dependencies: 257
-- Name: COLUMN ctacte_excep.ctacte_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_excep.ctacte_id IS 'IDENTIFICADOR DE CUENTA CORRIENTE';


--
-- TOC entry 6419 (class 0 OID 0)
-- Dependencies: 257
-- Name: COLUMN ctacte_excep.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_excep.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 6420 (class 0 OID 0)
-- Dependencies: 257
-- Name: COLUMN ctacte_excep.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_excep.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 6421 (class 0 OID 0)
-- Dependencies: 257
-- Name: COLUMN ctacte_excep.subcta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_excep.subcta IS 'NUMERO DE SUBCUENTA';


--
-- TOC entry 6422 (class 0 OID 0)
-- Dependencies: 257
-- Name: COLUMN ctacte_excep.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_excep.anio IS 'AÑO';


--
-- TOC entry 6423 (class 0 OID 0)
-- Dependencies: 257
-- Name: COLUMN ctacte_excep.cuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_excep.cuota IS 'CUOTA';


--
-- TOC entry 6424 (class 0 OID 0)
-- Dependencies: 257
-- Name: COLUMN ctacte_excep.tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_excep.tipo IS 'CODIGO DE TIPO DE EXCEPCION';


--
-- TOC entry 6425 (class 0 OID 0)
-- Dependencies: 257
-- Name: COLUMN ctacte_excep.fchusar; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_excep.fchusar IS 'FECHA A USAR';


--
-- TOC entry 6426 (class 0 OID 0)
-- Dependencies: 257
-- Name: COLUMN ctacte_excep.fchlimite; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_excep.fchlimite IS 'FECHA LIMITE';


--
-- TOC entry 6427 (class 0 OID 0)
-- Dependencies: 257
-- Name: COLUMN ctacte_excep.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_excep.obs IS 'OBSERVACIONES';


--
-- TOC entry 6428 (class 0 OID 0)
-- Dependencies: 257
-- Name: COLUMN ctacte_excep.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_excep.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6429 (class 0 OID 0)
-- Dependencies: 257
-- Name: COLUMN ctacte_excep.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_excep.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 258 (class 1259 OID 5284325)
-- Name: ctacte_libredeuda; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ctacte_libredeuda (
    ldeuda_id integer DEFAULT nextval(('public.seq_ctacte_libredeuda'::text)::regclass) NOT NULL,
    obj_id character varying(8) NOT NULL,
    fchemi date NOT NULL,
    escribano character varying(40) NOT NULL,
    texto_id smallint,
    obs character varying(500) NOT NULL,
    est character(1),
    fchbaja timestamp without time zone,
    usrbaja smallint,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.ctacte_libredeuda OWNER TO postgres;

--
-- TOC entry 6430 (class 0 OID 0)
-- Dependencies: 258
-- Name: TABLE ctacte_libredeuda; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ctacte_libredeuda IS 'DATOS PRINCIPALES DE LOS LIBRE DEUDAS EMITIDOS';


--
-- TOC entry 6431 (class 0 OID 0)
-- Dependencies: 258
-- Name: COLUMN ctacte_libredeuda.ldeuda_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_libredeuda.ldeuda_id IS 'IDENTIFICADOR DE LIBRE DEUDA';


--
-- TOC entry 6432 (class 0 OID 0)
-- Dependencies: 258
-- Name: COLUMN ctacte_libredeuda.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_libredeuda.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 6433 (class 0 OID 0)
-- Dependencies: 258
-- Name: COLUMN ctacte_libredeuda.fchemi; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_libredeuda.fchemi IS 'FECHA DE EMISION';


--
-- TOC entry 6434 (class 0 OID 0)
-- Dependencies: 258
-- Name: COLUMN ctacte_libredeuda.escribano; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_libredeuda.escribano IS 'NOMBRE DEL ESCRIBANO';


--
-- TOC entry 6435 (class 0 OID 0)
-- Dependencies: 258
-- Name: COLUMN ctacte_libredeuda.texto_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_libredeuda.texto_id IS 'IDENTIFICADOR DEL TEXTO';


--
-- TOC entry 6436 (class 0 OID 0)
-- Dependencies: 258
-- Name: COLUMN ctacte_libredeuda.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_libredeuda.obs IS 'OBSERVACIONES';


--
-- TOC entry 6437 (class 0 OID 0)
-- Dependencies: 258
-- Name: COLUMN ctacte_libredeuda.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_libredeuda.est IS 'ESTADO';


--
-- TOC entry 6438 (class 0 OID 0)
-- Dependencies: 258
-- Name: COLUMN ctacte_libredeuda.fchbaja; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_libredeuda.fchbaja IS 'FECHA DE BAJA';


--
-- TOC entry 6439 (class 0 OID 0)
-- Dependencies: 258
-- Name: COLUMN ctacte_libredeuda.usrbaja; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_libredeuda.usrbaja IS 'USUARIO QUE DIO DE BAJA';


--
-- TOC entry 6440 (class 0 OID 0)
-- Dependencies: 258
-- Name: COLUMN ctacte_libredeuda.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_libredeuda.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6441 (class 0 OID 0)
-- Dependencies: 258
-- Name: COLUMN ctacte_libredeuda.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_libredeuda.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 259 (class 1259 OID 5284333)
-- Name: ctacte_libredeuda_bloq; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ctacte_libredeuda_bloq (
    obj_id character varying(8) NOT NULL,
    est character varying(1),
    obs character varying(250) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod integer NOT NULL
);


ALTER TABLE public.ctacte_libredeuda_bloq OWNER TO postgres;

--
-- TOC entry 6442 (class 0 OID 0)
-- Dependencies: 259
-- Name: TABLE ctacte_libredeuda_bloq; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ctacte_libredeuda_bloq IS 'OBJETOS BLOQUEADOS PARA EMISION DE LIBRE DEUDA';


--
-- TOC entry 6443 (class 0 OID 0)
-- Dependencies: 259
-- Name: COLUMN ctacte_libredeuda_bloq.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_libredeuda_bloq.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 6444 (class 0 OID 0)
-- Dependencies: 259
-- Name: COLUMN ctacte_libredeuda_bloq.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_libredeuda_bloq.est IS 'ESTADO (A/B)';


--
-- TOC entry 6445 (class 0 OID 0)
-- Dependencies: 259
-- Name: COLUMN ctacte_libredeuda_bloq.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_libredeuda_bloq.obs IS 'OBSERVACION';


--
-- TOC entry 6446 (class 0 OID 0)
-- Dependencies: 259
-- Name: COLUMN ctacte_libredeuda_bloq.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_libredeuda_bloq.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6447 (class 0 OID 0)
-- Dependencies: 259
-- Name: COLUMN ctacte_libredeuda_bloq.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_libredeuda_bloq.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 260 (class 1259 OID 5284337)
-- Name: ctacte_libredeuda_desc; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ctacte_libredeuda_desc (
    obj_id character varying(8) NOT NULL,
    est character varying(1),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod integer NOT NULL
);


ALTER TABLE public.ctacte_libredeuda_desc OWNER TO postgres;

--
-- TOC entry 6448 (class 0 OID 0)
-- Dependencies: 260
-- Name: TABLE ctacte_libredeuda_desc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ctacte_libredeuda_desc IS 'PERMITE IDENTIFICAR OBJETOS QUE AUNQUE TENGAN DEUDAS SE APLICAN DESCUENTOS, POR EJEMPLO DESCUENTO POR FLOTA EN RODADOS PARA EL OBJETO PERSONA';


--
-- TOC entry 6449 (class 0 OID 0)
-- Dependencies: 260
-- Name: COLUMN ctacte_libredeuda_desc.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_libredeuda_desc.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 6450 (class 0 OID 0)
-- Dependencies: 260
-- Name: COLUMN ctacte_libredeuda_desc.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_libredeuda_desc.est IS 'ESTADO (A/B)';


--
-- TOC entry 6451 (class 0 OID 0)
-- Dependencies: 260
-- Name: COLUMN ctacte_libredeuda_desc.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_libredeuda_desc.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6452 (class 0 OID 0)
-- Dependencies: 260
-- Name: COLUMN ctacte_libredeuda_desc.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_libredeuda_desc.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 261 (class 1259 OID 5284341)
-- Name: ctacte_liq; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ctacte_liq (
    ctacte_id integer NOT NULL,
    orden smallint NOT NULL,
    item_id smallint NOT NULL,
    param1 character varying(20),
    param2 character varying(20),
    param3 character varying(20),
    param4 character varying(20),
    monto numeric(12,2) NOT NULL
);


ALTER TABLE public.ctacte_liq OWNER TO postgres;

--
-- TOC entry 6453 (class 0 OID 0)
-- Dependencies: 261
-- Name: TABLE ctacte_liq; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ctacte_liq IS 'ITEMS DE LIQUIDACIONES POR CADA CUENTA CORRIENTE';


--
-- TOC entry 6454 (class 0 OID 0)
-- Dependencies: 261
-- Name: COLUMN ctacte_liq.ctacte_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_liq.ctacte_id IS 'IDENTIFICADOR DE CUENTA CORRIENTE';


--
-- TOC entry 6455 (class 0 OID 0)
-- Dependencies: 261
-- Name: COLUMN ctacte_liq.orden; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_liq.orden IS 'ORDEN';


--
-- TOC entry 6456 (class 0 OID 0)
-- Dependencies: 261
-- Name: COLUMN ctacte_liq.item_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_liq.item_id IS 'CODIGO DE ITEM';


--
-- TOC entry 6457 (class 0 OID 0)
-- Dependencies: 261
-- Name: COLUMN ctacte_liq.param1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_liq.param1 IS 'PARAMETRO 1';


--
-- TOC entry 6458 (class 0 OID 0)
-- Dependencies: 261
-- Name: COLUMN ctacte_liq.param2; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_liq.param2 IS 'PARAMETRO 2';


--
-- TOC entry 6459 (class 0 OID 0)
-- Dependencies: 261
-- Name: COLUMN ctacte_liq.param3; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_liq.param3 IS 'PARAMETRO 3';


--
-- TOC entry 6460 (class 0 OID 0)
-- Dependencies: 261
-- Name: COLUMN ctacte_liq.param4; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_liq.param4 IS 'PARAMETRO 4';


--
-- TOC entry 6461 (class 0 OID 0)
-- Dependencies: 261
-- Name: COLUMN ctacte_liq.monto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_liq.monto IS 'MONTO';


--
-- TOC entry 262 (class 1259 OID 5284344)
-- Name: ctacte_pagocta; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ctacte_pagocta (
    pago_id integer DEFAULT nextval(('public.seq_ctacte_pagocta'::text)::regclass) NOT NULL,
    trib_id smallint NOT NULL,
    obj_id character varying(8) NOT NULL,
    subcta smallint NOT NULL,
    anio integer NOT NULL,
    cuota smallint NOT NULL,
    monto numeric(12,2) NOT NULL,
    est character(1) NOT NULL,
    obs character varying(250) NOT NULL,
    fchlimite date NOT NULL,
    fchpago timestamp without time zone,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.ctacte_pagocta OWNER TO postgres;

--
-- TOC entry 6462 (class 0 OID 0)
-- Dependencies: 262
-- Name: TABLE ctacte_pagocta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ctacte_pagocta IS 'PAGOS A CUENTAS GENERADOS';


--
-- TOC entry 6463 (class 0 OID 0)
-- Dependencies: 262
-- Name: COLUMN ctacte_pagocta.pago_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_pagocta.pago_id IS 'CODIGO DE PAGO';


--
-- TOC entry 6464 (class 0 OID 0)
-- Dependencies: 262
-- Name: COLUMN ctacte_pagocta.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_pagocta.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 6465 (class 0 OID 0)
-- Dependencies: 262
-- Name: COLUMN ctacte_pagocta.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_pagocta.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 6466 (class 0 OID 0)
-- Dependencies: 262
-- Name: COLUMN ctacte_pagocta.subcta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_pagocta.subcta IS 'CODIGO DE SUBCUENTA';


--
-- TOC entry 6467 (class 0 OID 0)
-- Dependencies: 262
-- Name: COLUMN ctacte_pagocta.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_pagocta.anio IS 'AÑO';


--
-- TOC entry 6468 (class 0 OID 0)
-- Dependencies: 262
-- Name: COLUMN ctacte_pagocta.cuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_pagocta.cuota IS 'CUOTA';


--
-- TOC entry 6469 (class 0 OID 0)
-- Dependencies: 262
-- Name: COLUMN ctacte_pagocta.monto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_pagocta.monto IS 'MONTO';


--
-- TOC entry 6470 (class 0 OID 0)
-- Dependencies: 262
-- Name: COLUMN ctacte_pagocta.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_pagocta.est IS 'ESTADO';


--
-- TOC entry 6471 (class 0 OID 0)
-- Dependencies: 262
-- Name: COLUMN ctacte_pagocta.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_pagocta.obs IS 'OBSERVACION';


--
-- TOC entry 6472 (class 0 OID 0)
-- Dependencies: 262
-- Name: COLUMN ctacte_pagocta.fchlimite; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_pagocta.fchlimite IS 'FECHA LIMITE';


--
-- TOC entry 6473 (class 0 OID 0)
-- Dependencies: 262
-- Name: COLUMN ctacte_pagocta.fchpago; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_pagocta.fchpago IS 'FECHA DE PAGO';


--
-- TOC entry 6474 (class 0 OID 0)
-- Dependencies: 262
-- Name: COLUMN ctacte_pagocta.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_pagocta.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6475 (class 0 OID 0)
-- Dependencies: 262
-- Name: COLUMN ctacte_pagocta.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_pagocta.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 263 (class 1259 OID 5284349)
-- Name: ctacte_pagocta_det; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ctacte_pagocta_det (
    pago_id integer NOT NULL,
    cta_id smallint NOT NULL,
    monto numeric(12,2) NOT NULL
);


ALTER TABLE public.ctacte_pagocta_det OWNER TO postgres;

--
-- TOC entry 6476 (class 0 OID 0)
-- Dependencies: 263
-- Name: TABLE ctacte_pagocta_det; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ctacte_pagocta_det IS 'DETALLE DE IMPUTACIÓN DEL PAGO A CUENTA';


--
-- TOC entry 6477 (class 0 OID 0)
-- Dependencies: 263
-- Name: COLUMN ctacte_pagocta_det.pago_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_pagocta_det.pago_id IS 'CODIGO DE PAGO';


--
-- TOC entry 6478 (class 0 OID 0)
-- Dependencies: 263
-- Name: COLUMN ctacte_pagocta_det.cta_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_pagocta_det.cta_id IS 'CODIGO DE CUENTA';


--
-- TOC entry 6479 (class 0 OID 0)
-- Dependencies: 263
-- Name: COLUMN ctacte_pagocta_det.monto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_pagocta_det.monto IS 'MONTO';


--
-- TOC entry 264 (class 1259 OID 5284352)
-- Name: ctacte_planvenc; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ctacte_planvenc (
    corr_id integer DEFAULT nextval(('public.seq_ctacte_planvenc_corr_id'::text)::regclass) NOT NULL,
    plan_id integer NOT NULL,
    cuota_desde smallint,
    vencdesde_nuevo date,
    vencdesde_ant date,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.ctacte_planvenc OWNER TO postgres;

--
-- TOC entry 6480 (class 0 OID 0)
-- Dependencies: 264
-- Name: TABLE ctacte_planvenc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ctacte_planvenc IS 'CORREMIENTO DE VENCIMIENTO DE CUOTAS DE PLANES DE PAGO';


--
-- TOC entry 6481 (class 0 OID 0)
-- Dependencies: 264
-- Name: COLUMN ctacte_planvenc.corr_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_planvenc.corr_id IS 'CODIGO DE CORRIMIENTO';


--
-- TOC entry 6482 (class 0 OID 0)
-- Dependencies: 264
-- Name: COLUMN ctacte_planvenc.plan_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_planvenc.plan_id IS 'CODIGO DE CONVENIO';


--
-- TOC entry 6483 (class 0 OID 0)
-- Dependencies: 264
-- Name: COLUMN ctacte_planvenc.cuota_desde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_planvenc.cuota_desde IS 'CUOTA DESDE LA CUAL SE EFECTUA EL CORRIMIENTO';


--
-- TOC entry 6484 (class 0 OID 0)
-- Dependencies: 264
-- Name: COLUMN ctacte_planvenc.vencdesde_nuevo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_planvenc.vencdesde_nuevo IS 'NUEVO VENCIMIENTO PARA LA CUOTA DESDE';


--
-- TOC entry 6485 (class 0 OID 0)
-- Dependencies: 264
-- Name: COLUMN ctacte_planvenc.vencdesde_ant; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_planvenc.vencdesde_ant IS 'VENCIMIENTO ANTERIOR DE LA CUOTA DESDE';


--
-- TOC entry 6486 (class 0 OID 0)
-- Dependencies: 264
-- Name: COLUMN ctacte_planvenc.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_planvenc.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6487 (class 0 OID 0)
-- Dependencies: 264
-- Name: COLUMN ctacte_planvenc.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_planvenc.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 265 (class 1259 OID 5284357)
-- Name: ctacte_rec; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ctacte_rec (
    ctacte_id integer NOT NULL,
    recibo integer NOT NULL,
    fecha date,
    acta character varying(10),
    item_id smallint,
    area smallint,
    monto numeric(12,2)
);


ALTER TABLE public.ctacte_rec OWNER TO postgres;

--
-- TOC entry 6488 (class 0 OID 0)
-- Dependencies: 265
-- Name: TABLE ctacte_rec; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ctacte_rec IS 'RECIBOS';


--
-- TOC entry 6489 (class 0 OID 0)
-- Dependencies: 265
-- Name: COLUMN ctacte_rec.ctacte_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_rec.ctacte_id IS 'IDENTIFICADOR DE CUENTA CORRIENTE';


--
-- TOC entry 6490 (class 0 OID 0)
-- Dependencies: 265
-- Name: COLUMN ctacte_rec.recibo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_rec.recibo IS 'NUMERO DE RECIBO';


--
-- TOC entry 6491 (class 0 OID 0)
-- Dependencies: 265
-- Name: COLUMN ctacte_rec.fecha; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_rec.fecha IS 'FECHA DE RECIBO';


--
-- TOC entry 6492 (class 0 OID 0)
-- Dependencies: 265
-- Name: COLUMN ctacte_rec.acta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_rec.acta IS 'NUMERO DE ACTA';


--
-- TOC entry 6493 (class 0 OID 0)
-- Dependencies: 265
-- Name: COLUMN ctacte_rec.item_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_rec.item_id IS 'CODIGO DE ITEM';


--
-- TOC entry 6494 (class 0 OID 0)
-- Dependencies: 265
-- Name: COLUMN ctacte_rec.area; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_rec.area IS 'CODIGO DE AREA';


--
-- TOC entry 6495 (class 0 OID 0)
-- Dependencies: 265
-- Name: COLUMN ctacte_rec.monto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_rec.monto IS 'MONTO';


--
-- TOC entry 266 (class 1259 OID 5284360)
-- Name: ctacte_sem; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ctacte_sem (
    ctacte_id integer NOT NULL,
    cuota smallint NOT NULL,
    descsem numeric(12,2),
    montosem numeric(12,2),
    fchvenc date NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.ctacte_sem OWNER TO postgres;

--
-- TOC entry 6496 (class 0 OID 0)
-- Dependencies: 266
-- Name: TABLE ctacte_sem; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ctacte_sem IS 'LIQUIDACION SEMESTRAL';


--
-- TOC entry 6497 (class 0 OID 0)
-- Dependencies: 266
-- Name: COLUMN ctacte_sem.ctacte_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_sem.ctacte_id IS 'IDENTIFICADOR DE CUENTA CORRIENTE';


--
-- TOC entry 6498 (class 0 OID 0)
-- Dependencies: 266
-- Name: COLUMN ctacte_sem.cuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_sem.cuota IS 'CUOTA';


--
-- TOC entry 6499 (class 0 OID 0)
-- Dependencies: 266
-- Name: COLUMN ctacte_sem.descsem; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_sem.descsem IS 'DESCUENTO';


--
-- TOC entry 6500 (class 0 OID 0)
-- Dependencies: 266
-- Name: COLUMN ctacte_sem.montosem; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_sem.montosem IS 'MONTO';


--
-- TOC entry 6501 (class 0 OID 0)
-- Dependencies: 266
-- Name: COLUMN ctacte_sem.fchvenc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_sem.fchvenc IS 'FECHA DE VENCIMIENTO';


--
-- TOC entry 6502 (class 0 OID 0)
-- Dependencies: 266
-- Name: COLUMN ctacte_sem.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_sem.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6503 (class 0 OID 0)
-- Dependencies: 266
-- Name: COLUMN ctacte_sem.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_sem.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 267 (class 1259 OID 5284364)
-- Name: ctacte_tcta; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ctacte_tcta (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.ctacte_tcta OWNER TO postgres;

--
-- TOC entry 6504 (class 0 OID 0)
-- Dependencies: 267
-- Name: TABLE ctacte_tcta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ctacte_tcta IS 'TIPOS DE CUENTA PARA CUENTA CORRIENTE';


--
-- TOC entry 6505 (class 0 OID 0)
-- Dependencies: 267
-- Name: COLUMN ctacte_tcta.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_tcta.cod IS 'CODIGO ';


--
-- TOC entry 6506 (class 0 OID 0)
-- Dependencies: 267
-- Name: COLUMN ctacte_tcta.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_tcta.nombre IS 'NOMBRE';


--
-- TOC entry 6507 (class 0 OID 0)
-- Dependencies: 267
-- Name: COLUMN ctacte_tcta.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_tcta.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6508 (class 0 OID 0)
-- Dependencies: 267
-- Name: COLUMN ctacte_tcta.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_tcta.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 268 (class 1259 OID 5284368)
-- Name: ctacte_test; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ctacte_test (
    cod character(1) NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.ctacte_test OWNER TO postgres;

--
-- TOC entry 6509 (class 0 OID 0)
-- Dependencies: 268
-- Name: TABLE ctacte_test; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ctacte_test IS 'DIFERENTES ESTADOS DE CUENTA CORRIENTE';


--
-- TOC entry 6510 (class 0 OID 0)
-- Dependencies: 268
-- Name: COLUMN ctacte_test.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_test.cod IS 'CODIGO ';


--
-- TOC entry 6511 (class 0 OID 0)
-- Dependencies: 268
-- Name: COLUMN ctacte_test.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_test.nombre IS 'NOMBRE';


--
-- TOC entry 6512 (class 0 OID 0)
-- Dependencies: 268
-- Name: COLUMN ctacte_test.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_test.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6513 (class 0 OID 0)
-- Dependencies: 268
-- Name: COLUMN ctacte_test.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_test.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 269 (class 1259 OID 5284372)
-- Name: ctacte_topera; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ctacte_topera (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.ctacte_topera OWNER TO postgres;

--
-- TOC entry 6514 (class 0 OID 0)
-- Dependencies: 269
-- Name: TABLE ctacte_topera; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ctacte_topera IS 'DIFERENTES OPERACIONES EN CUENTA CORRIENTE';


--
-- TOC entry 6515 (class 0 OID 0)
-- Dependencies: 269
-- Name: COLUMN ctacte_topera.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_topera.cod IS 'CODIGO ';


--
-- TOC entry 6516 (class 0 OID 0)
-- Dependencies: 269
-- Name: COLUMN ctacte_topera.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_topera.nombre IS 'NOMBRE';


--
-- TOC entry 6517 (class 0 OID 0)
-- Dependencies: 269
-- Name: COLUMN ctacte_topera.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_topera.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6518 (class 0 OID 0)
-- Dependencies: 269
-- Name: COLUMN ctacte_topera.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ctacte_topera.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 182 (class 1259 OID 5283786)
-- Name: cuenta; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cuenta (
    cta_id smallint DEFAULT nextval(('public.seq_cuenta'::text)::regclass) NOT NULL,
    nombre character varying(40) NOT NULL,
    nombre_redu character varying(25) NOT NULL,
    tcta smallint NOT NULL,
    part_id integer NOT NULL,
    cta_id_atras smallint,
    est character(1) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.cuenta OWNER TO postgres;

--
-- TOC entry 6519 (class 0 OID 0)
-- Dependencies: 182
-- Name: TABLE cuenta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.cuenta IS 'CUENTAS DE INGRESO';


--
-- TOC entry 6520 (class 0 OID 0)
-- Dependencies: 182
-- Name: COLUMN cuenta.cta_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cuenta.cta_id IS 'CODIGO DE CUENTA';


--
-- TOC entry 6521 (class 0 OID 0)
-- Dependencies: 182
-- Name: COLUMN cuenta.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cuenta.nombre IS 'NOMBRE';


--
-- TOC entry 6522 (class 0 OID 0)
-- Dependencies: 182
-- Name: COLUMN cuenta.nombre_redu; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cuenta.nombre_redu IS 'NOMBRE REDUCIDO';


--
-- TOC entry 6523 (class 0 OID 0)
-- Dependencies: 182
-- Name: COLUMN cuenta.tcta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cuenta.tcta IS 'CODIGO DE TIPO DE CUENTA';


--
-- TOC entry 6524 (class 0 OID 0)
-- Dependencies: 182
-- Name: COLUMN cuenta.part_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cuenta.part_id IS 'IDENTIFICADOR DE PARTIDA PRESUPUESTARIA';


--
-- TOC entry 6525 (class 0 OID 0)
-- Dependencies: 182
-- Name: COLUMN cuenta.cta_id_atras; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cuenta.cta_id_atras IS 'CODIGO DE CUENTA ATRASADA';


--
-- TOC entry 6526 (class 0 OID 0)
-- Dependencies: 182
-- Name: COLUMN cuenta.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cuenta.est IS 'ESTADO';


--
-- TOC entry 6527 (class 0 OID 0)
-- Dependencies: 182
-- Name: COLUMN cuenta.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cuenta.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6528 (class 0 OID 0)
-- Dependencies: 182
-- Name: COLUMN cuenta.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cuenta.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 270 (class 1259 OID 5284376)
-- Name: seq_dj_id; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_dj_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_dj_id OWNER TO postgres;

--
-- TOC entry 271 (class 1259 OID 5284378)
-- Name: ddjj; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ddjj (
    dj_id integer DEFAULT nextval('public.seq_dj_id'::regclass) NOT NULL,
    dj_id_web integer DEFAULT 0 NOT NULL,
    ctacte_id integer NOT NULL,
    trib_id smallint NOT NULL,
    obj_id character varying(8) NOT NULL,
    subcta smallint DEFAULT 0 NOT NULL,
    fiscaliza smallint DEFAULT 0 NOT NULL,
    anio smallint NOT NULL,
    cuota smallint NOT NULL,
    orden smallint NOT NULL,
    tipo smallint NOT NULL,
    base numeric(12,2) DEFAULT 0,
    anual numeric(12,2) NOT NULL,
    anticipos numeric(12,2) NOT NULL,
    monto numeric(12,2) NOT NULL,
    multa numeric(12,2) NOT NULL,
    fchpresenta timestamp without time zone NOT NULL,
    est character(1) NOT NULL,
    error_act character varying(20),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.ddjj OWNER TO postgres;

--
-- TOC entry 6529 (class 0 OID 0)
-- Dependencies: 271
-- Name: TABLE ddjj; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ddjj IS 'DATOS PRINCIPALES DE DECLARACIONES JURADAS';


--
-- TOC entry 6530 (class 0 OID 0)
-- Dependencies: 271
-- Name: COLUMN ddjj.dj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj.dj_id IS 'IDENTIFICADOR DE DECLARACION JURADA';


--
-- TOC entry 6531 (class 0 OID 0)
-- Dependencies: 271
-- Name: COLUMN ddjj.dj_id_web; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj.dj_id_web IS 'IDENTIFICADOR DE DJ DE WEB';


--
-- TOC entry 6532 (class 0 OID 0)
-- Dependencies: 271
-- Name: COLUMN ddjj.ctacte_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj.ctacte_id IS 'IDENTIFICADOR DE CUENTA CORRIENTE';


--
-- TOC entry 6533 (class 0 OID 0)
-- Dependencies: 271
-- Name: COLUMN ddjj.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 6534 (class 0 OID 0)
-- Dependencies: 271
-- Name: COLUMN ddjj.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 6535 (class 0 OID 0)
-- Dependencies: 271
-- Name: COLUMN ddjj.fiscaliza; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj.fiscaliza IS 'SI ES DE FISCALIZACION';


--
-- TOC entry 6536 (class 0 OID 0)
-- Dependencies: 271
-- Name: COLUMN ddjj.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj.anio IS 'AÑO';


--
-- TOC entry 6537 (class 0 OID 0)
-- Dependencies: 271
-- Name: COLUMN ddjj.cuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj.cuota IS 'CUOTA';


--
-- TOC entry 6538 (class 0 OID 0)
-- Dependencies: 271
-- Name: COLUMN ddjj.orden; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj.orden IS 'NUMERO DE ORDEN';


--
-- TOC entry 6539 (class 0 OID 0)
-- Dependencies: 271
-- Name: COLUMN ddjj.tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj.tipo IS 'CODIGO DE TIPO DE DJ';


--
-- TOC entry 6540 (class 0 OID 0)
-- Dependencies: 271
-- Name: COLUMN ddjj.base; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj.base IS 'MONTO DE BASE IMPONIBLE';


--
-- TOC entry 6541 (class 0 OID 0)
-- Dependencies: 271
-- Name: COLUMN ddjj.anual; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj.anual IS 'MONTO ANUAL';


--
-- TOC entry 6542 (class 0 OID 0)
-- Dependencies: 271
-- Name: COLUMN ddjj.anticipos; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj.anticipos IS 'MONTO DE ANTICIPOS';


--
-- TOC entry 6543 (class 0 OID 0)
-- Dependencies: 271
-- Name: COLUMN ddjj.monto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj.monto IS 'MONTO';


--
-- TOC entry 6544 (class 0 OID 0)
-- Dependencies: 271
-- Name: COLUMN ddjj.multa; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj.multa IS 'MONTO DE MULTA';


--
-- TOC entry 6545 (class 0 OID 0)
-- Dependencies: 271
-- Name: COLUMN ddjj.fchpresenta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj.fchpresenta IS 'FECHA DE PRESENTACION';


--
-- TOC entry 6546 (class 0 OID 0)
-- Dependencies: 271
-- Name: COLUMN ddjj.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj.est IS 'ESTADO';


--
-- TOC entry 6547 (class 0 OID 0)
-- Dependencies: 271
-- Name: COLUMN ddjj.error_act; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj.error_act IS 'ERROR DE ACTUALIZACION';


--
-- TOC entry 6548 (class 0 OID 0)
-- Dependencies: 271
-- Name: COLUMN ddjj.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6549 (class 0 OID 0)
-- Dependencies: 271
-- Name: COLUMN ddjj.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 272 (class 1259 OID 5284387)
-- Name: ddjj_anual; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ddjj_anual (
    dj_id integer NOT NULL,
    cuota smallint NOT NULL,
    base numeric(12,2) NOT NULL,
    monto numeric(12,2) NOT NULL
);


ALTER TABLE public.ddjj_anual OWNER TO postgres;

--
-- TOC entry 6550 (class 0 OID 0)
-- Dependencies: 272
-- Name: TABLE ddjj_anual; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ddjj_anual IS 'DATOS DE DECLARACIÓN JURADA ANUAL';


--
-- TOC entry 6551 (class 0 OID 0)
-- Dependencies: 272
-- Name: COLUMN ddjj_anual.dj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_anual.dj_id IS 'IDENTIFICADOR DE DECLARACION JURADA';


--
-- TOC entry 6552 (class 0 OID 0)
-- Dependencies: 272
-- Name: COLUMN ddjj_anual.cuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_anual.cuota IS 'CUOTA';


--
-- TOC entry 6553 (class 0 OID 0)
-- Dependencies: 272
-- Name: COLUMN ddjj_anual.base; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_anual.base IS 'MONTO DE BASE IMPONIBLE';


--
-- TOC entry 6554 (class 0 OID 0)
-- Dependencies: 272
-- Name: COLUMN ddjj_anual.monto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_anual.monto IS 'MONTO';


--
-- TOC entry 273 (class 1259 OID 5284390)
-- Name: ddjj_liq; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ddjj_liq (
    dj_id integer NOT NULL,
    item_id smallint NOT NULL,
    monto numeric(12,2) NOT NULL
);


ALTER TABLE public.ddjj_liq OWNER TO postgres;

--
-- TOC entry 6555 (class 0 OID 0)
-- Dependencies: 273
-- Name: TABLE ddjj_liq; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ddjj_liq IS 'íTEMS DE LIQUIDACIONES POR CADA DECLARACIÓN JURADA';


--
-- TOC entry 6556 (class 0 OID 0)
-- Dependencies: 273
-- Name: COLUMN ddjj_liq.dj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_liq.dj_id IS 'IDENTIFICADOR DE DECLARACION JURADA';


--
-- TOC entry 6557 (class 0 OID 0)
-- Dependencies: 273
-- Name: COLUMN ddjj_liq.item_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_liq.item_id IS 'CODIGO DE ITEM';


--
-- TOC entry 6558 (class 0 OID 0)
-- Dependencies: 273
-- Name: COLUMN ddjj_liq.monto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_liq.monto IS 'MONTO';


--
-- TOC entry 274 (class 1259 OID 5284393)
-- Name: ddjj_recep; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ddjj_recep (
    recep_id integer NOT NULL,
    contador smallint NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint
);


ALTER TABLE public.ddjj_recep OWNER TO postgres;

--
-- TOC entry 6559 (class 0 OID 0)
-- Dependencies: 274
-- Name: TABLE ddjj_recep; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ddjj_recep IS 'CABECERAS DE DJ EXTERNAS RECIBIDAS POR CONTADOR';


--
-- TOC entry 6560 (class 0 OID 0)
-- Dependencies: 274
-- Name: COLUMN ddjj_recep.recep_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_recep.recep_id IS 'IDENTIFICADOR DE RECEPCION';


--
-- TOC entry 6561 (class 0 OID 0)
-- Dependencies: 274
-- Name: COLUMN ddjj_recep.contador; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_recep.contador IS 'CODIGO DE CONTADOR';


--
-- TOC entry 6562 (class 0 OID 0)
-- Dependencies: 274
-- Name: COLUMN ddjj_recep.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_recep.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6563 (class 0 OID 0)
-- Dependencies: 274
-- Name: COLUMN ddjj_recep.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_recep.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 275 (class 1259 OID 5284397)
-- Name: ddjj_recep_det; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ddjj_recep_det (
    recep_id integer NOT NULL,
    obj_id character varying(8) NOT NULL,
    anio smallint NOT NULL,
    cuota smallint NOT NULL,
    base numeric(12,2) DEFAULT 0 NOT NULL,
    total numeric(12,2) NOT NULL,
    est character varying(1) NOT NULL,
    obs character varying(500),
    dj_id integer
);


ALTER TABLE public.ddjj_recep_det OWNER TO postgres;

--
-- TOC entry 6564 (class 0 OID 0)
-- Dependencies: 275
-- Name: TABLE ddjj_recep_det; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ddjj_recep_det IS 'DETALLES DE DJ EXTERNAS RECIBIDAS POR CONTADOR';


--
-- TOC entry 6565 (class 0 OID 0)
-- Dependencies: 275
-- Name: COLUMN ddjj_recep_det.recep_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_recep_det.recep_id IS 'IDENTIFICADOR DE RECEPCION';


--
-- TOC entry 6566 (class 0 OID 0)
-- Dependencies: 275
-- Name: COLUMN ddjj_recep_det.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_recep_det.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 6567 (class 0 OID 0)
-- Dependencies: 275
-- Name: COLUMN ddjj_recep_det.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_recep_det.anio IS 'AÑO';


--
-- TOC entry 6568 (class 0 OID 0)
-- Dependencies: 275
-- Name: COLUMN ddjj_recep_det.cuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_recep_det.cuota IS 'CUOTA';


--
-- TOC entry 6569 (class 0 OID 0)
-- Dependencies: 275
-- Name: COLUMN ddjj_recep_det.base; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_recep_det.base IS 'MONTO DE BASE IMPONIBLE';


--
-- TOC entry 6570 (class 0 OID 0)
-- Dependencies: 275
-- Name: COLUMN ddjj_recep_det.total; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_recep_det.total IS 'TOTAL';


--
-- TOC entry 6571 (class 0 OID 0)
-- Dependencies: 275
-- Name: COLUMN ddjj_recep_det.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_recep_det.est IS 'ESTADO';


--
-- TOC entry 6572 (class 0 OID 0)
-- Dependencies: 275
-- Name: COLUMN ddjj_recep_det.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_recep_det.obs IS 'OBSERVACIONES';


--
-- TOC entry 6573 (class 0 OID 0)
-- Dependencies: 275
-- Name: COLUMN ddjj_recep_det.dj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_recep_det.dj_id IS 'ID DE LA DDJJ';


--
-- TOC entry 276 (class 1259 OID 5284404)
-- Name: ddjj_ret; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ddjj_ret (
    dj_id integer NOT NULL,
    ret_id integer NOT NULL
);


ALTER TABLE public.ddjj_ret OWNER TO postgres;

--
-- TOC entry 277 (class 1259 OID 5284407)
-- Name: ddjj_rubros; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ddjj_rubros (
    dj_id integer NOT NULL,
    rubro_id character varying(8) NOT NULL,
    base numeric(12,2) NOT NULL,
    cant numeric(12,2),
    minimo numeric(12,2) NOT NULL,
    alicuota numeric(12,2) NOT NULL,
    monto numeric(12,2) NOT NULL
);


ALTER TABLE public.ddjj_rubros OWNER TO postgres;

--
-- TOC entry 6574 (class 0 OID 0)
-- Dependencies: 277
-- Name: TABLE ddjj_rubros; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ddjj_rubros IS 'RUBROS POR CADA DECLARACIÓN JURADA';


--
-- TOC entry 6575 (class 0 OID 0)
-- Dependencies: 277
-- Name: COLUMN ddjj_rubros.dj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_rubros.dj_id IS 'IDENTIFICADOR DE DECLARACION JURADA';


--
-- TOC entry 6576 (class 0 OID 0)
-- Dependencies: 277
-- Name: COLUMN ddjj_rubros.rubro_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_rubros.rubro_id IS 'CODIGO DE RUBRO';


--
-- TOC entry 6577 (class 0 OID 0)
-- Dependencies: 277
-- Name: COLUMN ddjj_rubros.base; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_rubros.base IS 'MONTO DE BASE IMPONIBLE';


--
-- TOC entry 6578 (class 0 OID 0)
-- Dependencies: 277
-- Name: COLUMN ddjj_rubros.cant; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_rubros.cant IS 'CANTIDAD';


--
-- TOC entry 6579 (class 0 OID 0)
-- Dependencies: 277
-- Name: COLUMN ddjj_rubros.minimo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_rubros.minimo IS 'MONTO MINIMO';


--
-- TOC entry 6580 (class 0 OID 0)
-- Dependencies: 277
-- Name: COLUMN ddjj_rubros.alicuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_rubros.alicuota IS 'ALICUOTA';


--
-- TOC entry 6581 (class 0 OID 0)
-- Dependencies: 277
-- Name: COLUMN ddjj_rubros.monto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_rubros.monto IS 'MONTO';


--
-- TOC entry 278 (class 1259 OID 5284410)
-- Name: ddjj_test; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ddjj_test (
    cod character varying(1) NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint
);


ALTER TABLE public.ddjj_test OWNER TO postgres;

--
-- TOC entry 6582 (class 0 OID 0)
-- Dependencies: 278
-- Name: TABLE ddjj_test; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ddjj_test IS 'ESTADO DE DECLARACIÓN JURADA';


--
-- TOC entry 6583 (class 0 OID 0)
-- Dependencies: 278
-- Name: COLUMN ddjj_test.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_test.cod IS 'CODIGO ';


--
-- TOC entry 6584 (class 0 OID 0)
-- Dependencies: 278
-- Name: COLUMN ddjj_test.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_test.nombre IS 'NOMBRE';


--
-- TOC entry 6585 (class 0 OID 0)
-- Dependencies: 278
-- Name: COLUMN ddjj_test.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_test.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6586 (class 0 OID 0)
-- Dependencies: 278
-- Name: COLUMN ddjj_test.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_test.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 279 (class 1259 OID 5284414)
-- Name: ddjj_tipo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ddjj_tipo (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint
);


ALTER TABLE public.ddjj_tipo OWNER TO postgres;

--
-- TOC entry 6587 (class 0 OID 0)
-- Dependencies: 279
-- Name: TABLE ddjj_tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ddjj_tipo IS 'TIPOS DE DECLARACIÓN JURADA';


--
-- TOC entry 6588 (class 0 OID 0)
-- Dependencies: 279
-- Name: COLUMN ddjj_tipo.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_tipo.cod IS 'CODIGO ';


--
-- TOC entry 6589 (class 0 OID 0)
-- Dependencies: 279
-- Name: COLUMN ddjj_tipo.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_tipo.nombre IS 'NOMBRE';


--
-- TOC entry 6590 (class 0 OID 0)
-- Dependencies: 279
-- Name: COLUMN ddjj_tipo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_tipo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6591 (class 0 OID 0)
-- Dependencies: 279
-- Name: COLUMN ddjj_tipo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ddjj_tipo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 280 (class 1259 OID 5284418)
-- Name: debito_adhe; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.debito_adhe (
    adh_id integer NOT NULL,
    trib_id smallint NOT NULL,
    obj_id character varying(8) NOT NULL,
    subcta smallint DEFAULT 0 NOT NULL,
    resp character varying(50) NOT NULL,
    resptdoc smallint,
    respndoc bigint,
    respsexo character varying(1),
    caja_id smallint NOT NULL,
    temple smallint DEFAULT 0,
    temple_area character varying(20) DEFAULT ''::character varying,
    bco_suc smallint DEFAULT 0,
    bco_tcta smallint DEFAULT 0,
    tpago_nro character varying(20) DEFAULT 0,
    cbu character varying(22),
    fchalta timestamp without time zone NOT NULL,
    fchbaja timestamp without time zone,
    est character varying(1) DEFAULT 'A'::bpchar NOT NULL,
    perdesde integer,
    perhasta integer,
    obs character varying(500),
    texto_id smallint,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.debito_adhe OWNER TO postgres;

--
-- TOC entry 6592 (class 0 OID 0)
-- Dependencies: 280
-- Name: TABLE debito_adhe; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.debito_adhe IS 'ADHESIONES AL DEBITO AUTOMATICO POR OBJETO Y TRIBUTO';


--
-- TOC entry 6593 (class 0 OID 0)
-- Dependencies: 280
-- Name: COLUMN debito_adhe.adh_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_adhe.adh_id IS 'IDENTIFICADOR DE ADHESIONES';


--
-- TOC entry 6594 (class 0 OID 0)
-- Dependencies: 280
-- Name: COLUMN debito_adhe.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_adhe.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 6595 (class 0 OID 0)
-- Dependencies: 280
-- Name: COLUMN debito_adhe.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_adhe.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 6596 (class 0 OID 0)
-- Dependencies: 280
-- Name: COLUMN debito_adhe.subcta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_adhe.subcta IS 'NUMERO DE SUBCUENTA';


--
-- TOC entry 6597 (class 0 OID 0)
-- Dependencies: 280
-- Name: COLUMN debito_adhe.resp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_adhe.resp IS 'NOMBRE DEL RESPONSABLE';


--
-- TOC entry 6598 (class 0 OID 0)
-- Dependencies: 280
-- Name: COLUMN debito_adhe.resptdoc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_adhe.resptdoc IS 'CODIGO DE TIPO DE DOCUMENTO DEL RESPONSABLE';


--
-- TOC entry 6599 (class 0 OID 0)
-- Dependencies: 280
-- Name: COLUMN debito_adhe.respndoc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_adhe.respndoc IS 'NUMERO DE DOCUMENTO DEL RESPONSABLE';


--
-- TOC entry 6600 (class 0 OID 0)
-- Dependencies: 280
-- Name: COLUMN debito_adhe.respsexo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_adhe.respsexo IS 'SEXO DEL RESPONSABLE';


--
-- TOC entry 6601 (class 0 OID 0)
-- Dependencies: 280
-- Name: COLUMN debito_adhe.caja_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_adhe.caja_id IS 'CODIGO DE CAJA VINCULADA';


--
-- TOC entry 6602 (class 0 OID 0)
-- Dependencies: 280
-- Name: COLUMN debito_adhe.temple; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_adhe.temple IS 'TIPO DE EMPLEADO';


--
-- TOC entry 6603 (class 0 OID 0)
-- Dependencies: 280
-- Name: COLUMN debito_adhe.temple_area; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_adhe.temple_area IS 'AREA DE TRABAJO';


--
-- TOC entry 6604 (class 0 OID 0)
-- Dependencies: 280
-- Name: COLUMN debito_adhe.bco_suc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_adhe.bco_suc IS 'SUCURSAL BANCARIA';


--
-- TOC entry 6605 (class 0 OID 0)
-- Dependencies: 280
-- Name: COLUMN debito_adhe.bco_tcta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_adhe.bco_tcta IS 'TIPO DE CUENTA';


--
-- TOC entry 6606 (class 0 OID 0)
-- Dependencies: 280
-- Name: COLUMN debito_adhe.tpago_nro; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_adhe.tpago_nro IS 'NUMERO IDENTIFICADOR';


--
-- TOC entry 6607 (class 0 OID 0)
-- Dependencies: 280
-- Name: COLUMN debito_adhe.cbu; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_adhe.cbu IS 'CBU';


--
-- TOC entry 6608 (class 0 OID 0)
-- Dependencies: 280
-- Name: COLUMN debito_adhe.fchalta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_adhe.fchalta IS 'FECHA DE ALTA';


--
-- TOC entry 6609 (class 0 OID 0)
-- Dependencies: 280
-- Name: COLUMN debito_adhe.fchbaja; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_adhe.fchbaja IS 'FECHA DE BAJA';


--
-- TOC entry 6610 (class 0 OID 0)
-- Dependencies: 280
-- Name: COLUMN debito_adhe.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_adhe.est IS 'ESTADO';


--
-- TOC entry 6611 (class 0 OID 0)
-- Dependencies: 280
-- Name: COLUMN debito_adhe.perdesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_adhe.perdesde IS 'PERIODO DESDE';


--
-- TOC entry 6612 (class 0 OID 0)
-- Dependencies: 280
-- Name: COLUMN debito_adhe.perhasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_adhe.perhasta IS 'PERIODO HASTA';


--
-- TOC entry 6613 (class 0 OID 0)
-- Dependencies: 280
-- Name: COLUMN debito_adhe.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_adhe.obs IS 'OBSERVACIONES';


--
-- TOC entry 6614 (class 0 OID 0)
-- Dependencies: 280
-- Name: COLUMN debito_adhe.texto_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_adhe.texto_id IS 'IDENTIFICADOR DEL TEXTO DE LA ADHESION';


--
-- TOC entry 6615 (class 0 OID 0)
-- Dependencies: 280
-- Name: COLUMN debito_adhe.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_adhe.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6616 (class 0 OID 0)
-- Dependencies: 280
-- Name: COLUMN debito_adhe.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_adhe.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 281 (class 1259 OID 5284432)
-- Name: debito_entidad; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.debito_entidad (
    caja_id smallint NOT NULL,
    trib_id smallint NOT NULL,
    anio smallint NOT NULL,
    mes smallint NOT NULL,
    cantdebito integer NOT NULL,
    montodebito numeric(12,2) NOT NULL,
    fchgenerado timestamp without time zone NOT NULL,
    fchenvio timestamp without time zone,
    fchrecep timestamp without time zone,
    fchimputa timestamp without time zone,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.debito_entidad OWNER TO postgres;

--
-- TOC entry 6618 (class 0 OID 0)
-- Dependencies: 281
-- Name: TABLE debito_entidad; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.debito_entidad IS 'RESUMEN DE DEBITOS ENVIADOS Y RECIBIDOS POR ENTIDAD Y POR PERIODO';


--
-- TOC entry 6619 (class 0 OID 0)
-- Dependencies: 281
-- Name: COLUMN debito_entidad.caja_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_entidad.caja_id IS 'CODIGO DE CAJA VINCULADA';


--
-- TOC entry 6620 (class 0 OID 0)
-- Dependencies: 281
-- Name: COLUMN debito_entidad.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_entidad.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 6621 (class 0 OID 0)
-- Dependencies: 281
-- Name: COLUMN debito_entidad.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_entidad.anio IS 'AÑO';


--
-- TOC entry 6622 (class 0 OID 0)
-- Dependencies: 281
-- Name: COLUMN debito_entidad.mes; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_entidad.mes IS 'MES';


--
-- TOC entry 6623 (class 0 OID 0)
-- Dependencies: 281
-- Name: COLUMN debito_entidad.cantdebito; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_entidad.cantdebito IS 'CANTIDAD DE LIQUIDACIONES PARA DEBITAR EN EL TRIBUTO Y PERÍODO';


--
-- TOC entry 6624 (class 0 OID 0)
-- Dependencies: 281
-- Name: COLUMN debito_entidad.montodebito; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_entidad.montodebito IS 'MONTO TOTAL DE DEBITO DEL TRIBUTO Y PERIODO ';


--
-- TOC entry 6625 (class 0 OID 0)
-- Dependencies: 281
-- Name: COLUMN debito_entidad.fchgenerado; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_entidad.fchgenerado IS 'FECHA DE GENERACION';


--
-- TOC entry 6626 (class 0 OID 0)
-- Dependencies: 281
-- Name: COLUMN debito_entidad.fchenvio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_entidad.fchenvio IS 'FECHA DE ENVIO A LA ENTIDAD';


--
-- TOC entry 6627 (class 0 OID 0)
-- Dependencies: 281
-- Name: COLUMN debito_entidad.fchrecep; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_entidad.fchrecep IS 'FECHA DE RECEPCION';


--
-- TOC entry 6628 (class 0 OID 0)
-- Dependencies: 281
-- Name: COLUMN debito_entidad.fchimputa; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_entidad.fchimputa IS 'FECHA DE IMPUTACION';


--
-- TOC entry 6629 (class 0 OID 0)
-- Dependencies: 281
-- Name: COLUMN debito_entidad.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_entidad.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6630 (class 0 OID 0)
-- Dependencies: 281
-- Name: COLUMN debito_entidad.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_entidad.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 282 (class 1259 OID 5284436)
-- Name: seq_debito_periodo; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_debito_periodo
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_debito_periodo OWNER TO postgres;

--
-- TOC entry 283 (class 1259 OID 5284438)
-- Name: debito_periodo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.debito_periodo (
    deb_id integer DEFAULT nextval('public.seq_debito_periodo'::regclass) NOT NULL,
    ctacte_id integer NOT NULL,
    adh_id integer NOT NULL,
    plan_id integer NOT NULL,
    caja_id smallint,
    anio smallint,
    mes smallint,
    monto numeric(12,2),
    montodebito numeric(12,2) NOT NULL,
    fchdebito timestamp without time zone DEFAULT now(),
    obs character varying(100),
    est smallint,
    trechazo character varying(3),
    rechazo character varying(70),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.debito_periodo OWNER TO postgres;

--
-- TOC entry 6631 (class 0 OID 0)
-- Dependencies: 283
-- Name: TABLE debito_periodo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.debito_periodo IS 'DETALLE DE PERIODOS CON DEBITO AUTOMATICO';


--
-- TOC entry 6632 (class 0 OID 0)
-- Dependencies: 283
-- Name: COLUMN debito_periodo.deb_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_periodo.deb_id IS 'IDENTIFICADOR DE DEBITO';


--
-- TOC entry 6633 (class 0 OID 0)
-- Dependencies: 283
-- Name: COLUMN debito_periodo.ctacte_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_periodo.ctacte_id IS 'IDENTIFICADOR DE CUENTA CORRIENTE';


--
-- TOC entry 6634 (class 0 OID 0)
-- Dependencies: 283
-- Name: COLUMN debito_periodo.adh_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_periodo.adh_id IS 'IDENTIFICADOR DE LA ADHESION SI EXISTE';


--
-- TOC entry 6635 (class 0 OID 0)
-- Dependencies: 283
-- Name: COLUMN debito_periodo.plan_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_periodo.plan_id IS 'NUMERO DE CONVENIO RELACIONADO SI EXISTE';


--
-- TOC entry 6636 (class 0 OID 0)
-- Dependencies: 283
-- Name: COLUMN debito_periodo.caja_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_periodo.caja_id IS 'CODIGO DE CAJA VINCULADA';


--
-- TOC entry 6637 (class 0 OID 0)
-- Dependencies: 283
-- Name: COLUMN debito_periodo.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_periodo.anio IS 'AÑO LIQUIDADO';


--
-- TOC entry 6638 (class 0 OID 0)
-- Dependencies: 283
-- Name: COLUMN debito_periodo.mes; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_periodo.mes IS 'MES LIQUIDADO';


--
-- TOC entry 6639 (class 0 OID 0)
-- Dependencies: 283
-- Name: COLUMN debito_periodo.monto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_periodo.monto IS 'MONTO A DEBITAR';


--
-- TOC entry 6640 (class 0 OID 0)
-- Dependencies: 283
-- Name: COLUMN debito_periodo.montodebito; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_periodo.montodebito IS 'MONTO DEBITADO';


--
-- TOC entry 6641 (class 0 OID 0)
-- Dependencies: 283
-- Name: COLUMN debito_periodo.fchdebito; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_periodo.fchdebito IS 'FECHA DE DEBITO';


--
-- TOC entry 6642 (class 0 OID 0)
-- Dependencies: 283
-- Name: COLUMN debito_periodo.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_periodo.obs IS 'OBSERVACIONES';


--
-- TOC entry 6643 (class 0 OID 0)
-- Dependencies: 283
-- Name: COLUMN debito_periodo.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_periodo.est IS 'ESTADO';


--
-- TOC entry 6644 (class 0 OID 0)
-- Dependencies: 283
-- Name: COLUMN debito_periodo.trechazo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_periodo.trechazo IS 'CODIGO DE RECHAZO';


--
-- TOC entry 6645 (class 0 OID 0)
-- Dependencies: 283
-- Name: COLUMN debito_periodo.rechazo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_periodo.rechazo IS 'MOTIVO DE RECHAZO';


--
-- TOC entry 6646 (class 0 OID 0)
-- Dependencies: 283
-- Name: COLUMN debito_periodo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_periodo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6647 (class 0 OID 0)
-- Dependencies: 283
-- Name: COLUMN debito_periodo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_periodo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 284 (class 1259 OID 5284444)
-- Name: debito_rechazo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.debito_rechazo (
    codbarra character varying(42) NOT NULL,
    caja_id smallint NOT NULL,
    fecha date NOT NULL,
    rechazo character varying(70),
    fchmod timestamp without time zone NOT NULL,
    usrmod smallint
);


ALTER TABLE public.debito_rechazo OWNER TO postgres;

--
-- TOC entry 6648 (class 0 OID 0)
-- Dependencies: 284
-- Name: TABLE debito_rechazo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.debito_rechazo IS 'RECHAZOS DE LA ENTIDAD DETECTADOS EN EL PROCESAMIENTO DE CAJA EXTERNA';


--
-- TOC entry 6649 (class 0 OID 0)
-- Dependencies: 284
-- Name: COLUMN debito_rechazo.codbarra; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_rechazo.codbarra IS 'CODIGO DE BARRAS';


--
-- TOC entry 6650 (class 0 OID 0)
-- Dependencies: 284
-- Name: COLUMN debito_rechazo.caja_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_rechazo.caja_id IS 'CODIGO DE CAJA';


--
-- TOC entry 6651 (class 0 OID 0)
-- Dependencies: 284
-- Name: COLUMN debito_rechazo.fecha; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_rechazo.fecha IS 'FECHA DE PROCESAMIENTO';


--
-- TOC entry 6652 (class 0 OID 0)
-- Dependencies: 284
-- Name: COLUMN debito_rechazo.rechazo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_rechazo.rechazo IS 'MENSAJE DE ERROR';


--
-- TOC entry 6653 (class 0 OID 0)
-- Dependencies: 284
-- Name: COLUMN debito_rechazo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_rechazo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6654 (class 0 OID 0)
-- Dependencies: 284
-- Name: COLUMN debito_rechazo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_rechazo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 285 (class 1259 OID 5284447)
-- Name: debito_test; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.debito_test (
    cod smallint NOT NULL,
    nombre character varying(15) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint
);


ALTER TABLE public.debito_test OWNER TO postgres;

--
-- TOC entry 6655 (class 0 OID 0)
-- Dependencies: 285
-- Name: TABLE debito_test; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.debito_test IS 'TIPOS DE ESTADOS DE DÉBITO AUTOMÁTICO';


--
-- TOC entry 6656 (class 0 OID 0)
-- Dependencies: 285
-- Name: COLUMN debito_test.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_test.cod IS 'CODIGO ';


--
-- TOC entry 6657 (class 0 OID 0)
-- Dependencies: 285
-- Name: COLUMN debito_test.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_test.nombre IS 'NOMBRE';


--
-- TOC entry 6658 (class 0 OID 0)
-- Dependencies: 285
-- Name: COLUMN debito_test.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_test.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6659 (class 0 OID 0)
-- Dependencies: 285
-- Name: COLUMN debito_test.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_test.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 286 (class 1259 OID 5284451)
-- Name: debito_trechazo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.debito_trechazo (
    cod character varying(3) NOT NULL,
    nombre character varying(70) NOT NULL,
    caja_id smallint NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint
);


ALTER TABLE public.debito_trechazo OWNER TO postgres;

--
-- TOC entry 6660 (class 0 OID 0)
-- Dependencies: 286
-- Name: TABLE debito_trechazo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.debito_trechazo IS 'TIPOS DE RECHAZOS AL DEBITO AUTOMÁTICO';


--
-- TOC entry 6661 (class 0 OID 0)
-- Dependencies: 286
-- Name: COLUMN debito_trechazo.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_trechazo.cod IS 'CODIGO';


--
-- TOC entry 6662 (class 0 OID 0)
-- Dependencies: 286
-- Name: COLUMN debito_trechazo.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_trechazo.nombre IS 'NOMBRE';


--
-- TOC entry 6663 (class 0 OID 0)
-- Dependencies: 286
-- Name: COLUMN debito_trechazo.caja_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_trechazo.caja_id IS 'CODIGO DE CAJA';


--
-- TOC entry 6664 (class 0 OID 0)
-- Dependencies: 286
-- Name: COLUMN debito_trechazo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_trechazo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6665 (class 0 OID 0)
-- Dependencies: 286
-- Name: COLUMN debito_trechazo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.debito_trechazo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 287 (class 1259 OID 5284455)
-- Name: domi; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.domi (
    torigen character varying(3) NOT NULL,
    obj_id character varying(8) NOT NULL,
    id integer NOT NULL,
    loc_id smallint NOT NULL,
    cp character varying(8) NOT NULL,
    barr_id smallint,
    calle_id smallint NOT NULL,
    nomcalle character varying(40),
    puerta smallint,
    det character varying(50),
    piso character varying(5),
    dpto character varying(5),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.domi OWNER TO postgres;

--
-- TOC entry 6666 (class 0 OID 0)
-- Dependencies: 287
-- Name: TABLE domi; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.domi IS 'DATOS PRINCIPALES DE DOMICILIOS';


--
-- TOC entry 6667 (class 0 OID 0)
-- Dependencies: 287
-- Name: COLUMN domi.torigen; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi.torigen IS 'TIPO DE ORIGEN';


--
-- TOC entry 6668 (class 0 OID 0)
-- Dependencies: 287
-- Name: COLUMN domi.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi.obj_id IS 'ORIGEN DEL DOMICILIO PARA OBJETOS';


--
-- TOC entry 6669 (class 0 OID 0)
-- Dependencies: 287
-- Name: COLUMN domi.id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi.id IS 'CODIGO DEL ORIGEN PARA PLANES,JUDICIALES Y DEMAS';


--
-- TOC entry 6670 (class 0 OID 0)
-- Dependencies: 287
-- Name: COLUMN domi.loc_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi.loc_id IS 'CODIGO DE LA LOCALIDAD';


--
-- TOC entry 6671 (class 0 OID 0)
-- Dependencies: 287
-- Name: COLUMN domi.cp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi.cp IS 'CODIGO POSTAL';


--
-- TOC entry 6672 (class 0 OID 0)
-- Dependencies: 287
-- Name: COLUMN domi.barr_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi.barr_id IS 'CODIGO DE BARRIO';


--
-- TOC entry 6673 (class 0 OID 0)
-- Dependencies: 287
-- Name: COLUMN domi.calle_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi.calle_id IS 'CODIGO DE CALLE';


--
-- TOC entry 6674 (class 0 OID 0)
-- Dependencies: 287
-- Name: COLUMN domi.nomcalle; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi.nomcalle IS 'NOMBRE DE LA CALLE';


--
-- TOC entry 6675 (class 0 OID 0)
-- Dependencies: 287
-- Name: COLUMN domi.puerta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi.puerta IS 'NUMERO DE PUERTA';


--
-- TOC entry 6676 (class 0 OID 0)
-- Dependencies: 287
-- Name: COLUMN domi.det; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi.det IS 'DETALLE';


--
-- TOC entry 6677 (class 0 OID 0)
-- Dependencies: 287
-- Name: COLUMN domi.piso; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi.piso IS 'NUMERO DE PISO';


--
-- TOC entry 6678 (class 0 OID 0)
-- Dependencies: 287
-- Name: COLUMN domi.dpto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi.dpto IS 'NUMERO DE DEPARTAMENTO';


--
-- TOC entry 6679 (class 0 OID 0)
-- Dependencies: 287
-- Name: COLUMN domi.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6680 (class 0 OID 0)
-- Dependencies: 287
-- Name: COLUMN domi.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 288 (class 1259 OID 5284459)
-- Name: domi_barrio; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.domi_barrio (
    barr_id smallint DEFAULT nextval(('public.seq_domi_barr_id'::text)::regclass) NOT NULL,
    nombre character varying(30) NOT NULL,
    cat smallint DEFAULT 2,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.domi_barrio OWNER TO postgres;

--
-- TOC entry 6681 (class 0 OID 0)
-- Dependencies: 288
-- Name: TABLE domi_barrio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.domi_barrio IS 'BARRIOS';


--
-- TOC entry 6682 (class 0 OID 0)
-- Dependencies: 288
-- Name: COLUMN domi_barrio.barr_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_barrio.barr_id IS 'CODIGO DE BARRIO';


--
-- TOC entry 6683 (class 0 OID 0)
-- Dependencies: 288
-- Name: COLUMN domi_barrio.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_barrio.nombre IS 'NOMBRE';


--
-- TOC entry 6684 (class 0 OID 0)
-- Dependencies: 288
-- Name: COLUMN domi_barrio.cat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_barrio.cat IS 'CATEGORIA';


--
-- TOC entry 6685 (class 0 OID 0)
-- Dependencies: 288
-- Name: COLUMN domi_barrio.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_barrio.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6686 (class 0 OID 0)
-- Dependencies: 288
-- Name: COLUMN domi_barrio.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_barrio.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 289 (class 1259 OID 5284465)
-- Name: domi_calle; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.domi_calle (
    calle_id smallint NOT NULL,
    nombre character varying(40) NOT NULL,
    tcalle smallint NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.domi_calle OWNER TO postgres;

--
-- TOC entry 6687 (class 0 OID 0)
-- Dependencies: 289
-- Name: TABLE domi_calle; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.domi_calle IS 'DATOS PRINCIPALES DE CALLES';


--
-- TOC entry 6688 (class 0 OID 0)
-- Dependencies: 289
-- Name: COLUMN domi_calle.calle_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_calle.calle_id IS 'CODIGO DE CALLE';


--
-- TOC entry 6689 (class 0 OID 0)
-- Dependencies: 289
-- Name: COLUMN domi_calle.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_calle.nombre IS 'NOMBRE';


--
-- TOC entry 6690 (class 0 OID 0)
-- Dependencies: 289
-- Name: COLUMN domi_calle.tcalle; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_calle.tcalle IS 'CODIGO DE TIPO DE CALLE';


--
-- TOC entry 6691 (class 0 OID 0)
-- Dependencies: 289
-- Name: COLUMN domi_calle.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_calle.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6692 (class 0 OID 0)
-- Dependencies: 289
-- Name: COLUMN domi_calle.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_calle.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 290 (class 1259 OID 5284469)
-- Name: domi_localidad; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.domi_localidad (
    loc_id smallint NOT NULL,
    nombre character varying(40) NOT NULL,
    prov_id smallint NOT NULL,
    cp smallint,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.domi_localidad OWNER TO postgres;

--
-- TOC entry 6693 (class 0 OID 0)
-- Dependencies: 290
-- Name: TABLE domi_localidad; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.domi_localidad IS 'LOCALIDADES POR PROVINCIAS';


--
-- TOC entry 6694 (class 0 OID 0)
-- Dependencies: 290
-- Name: COLUMN domi_localidad.loc_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_localidad.loc_id IS 'CODIGO';


--
-- TOC entry 6695 (class 0 OID 0)
-- Dependencies: 290
-- Name: COLUMN domi_localidad.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_localidad.nombre IS 'NOMBRE';


--
-- TOC entry 6696 (class 0 OID 0)
-- Dependencies: 290
-- Name: COLUMN domi_localidad.prov_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_localidad.prov_id IS 'CODIGO DE PROVINCIA';


--
-- TOC entry 6697 (class 0 OID 0)
-- Dependencies: 290
-- Name: COLUMN domi_localidad.cp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_localidad.cp IS 'CODIGO POSTAL';


--
-- TOC entry 6698 (class 0 OID 0)
-- Dependencies: 290
-- Name: COLUMN domi_localidad.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_localidad.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6699 (class 0 OID 0)
-- Dependencies: 290
-- Name: COLUMN domi_localidad.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_localidad.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 291 (class 1259 OID 5284473)
-- Name: domi_pais; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.domi_pais (
    pais_id smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.domi_pais OWNER TO postgres;

--
-- TOC entry 6700 (class 0 OID 0)
-- Dependencies: 291
-- Name: TABLE domi_pais; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.domi_pais IS 'REGISTROS DE PAÍSES';


--
-- TOC entry 6701 (class 0 OID 0)
-- Dependencies: 291
-- Name: COLUMN domi_pais.pais_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_pais.pais_id IS 'CODIGO DE PAIS';


--
-- TOC entry 6702 (class 0 OID 0)
-- Dependencies: 291
-- Name: COLUMN domi_pais.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_pais.nombre IS 'NOMBRE';


--
-- TOC entry 6703 (class 0 OID 0)
-- Dependencies: 291
-- Name: COLUMN domi_pais.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_pais.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6704 (class 0 OID 0)
-- Dependencies: 291
-- Name: COLUMN domi_pais.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_pais.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 292 (class 1259 OID 5284477)
-- Name: domi_provincia; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.domi_provincia (
    prov_id smallint NOT NULL,
    nombre character varying(30) NOT NULL,
    pais_id smallint NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.domi_provincia OWNER TO postgres;

--
-- TOC entry 6705 (class 0 OID 0)
-- Dependencies: 292
-- Name: TABLE domi_provincia; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.domi_provincia IS 'REGISTROS DE PROVINCIAS';


--
-- TOC entry 6706 (class 0 OID 0)
-- Dependencies: 292
-- Name: COLUMN domi_provincia.prov_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_provincia.prov_id IS 'CODIGO DE PROVINCIA';


--
-- TOC entry 6707 (class 0 OID 0)
-- Dependencies: 292
-- Name: COLUMN domi_provincia.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_provincia.nombre IS 'NOMBRE';


--
-- TOC entry 6708 (class 0 OID 0)
-- Dependencies: 292
-- Name: COLUMN domi_provincia.pais_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_provincia.pais_id IS 'CODIGO DE PAIS';


--
-- TOC entry 6709 (class 0 OID 0)
-- Dependencies: 292
-- Name: COLUMN domi_provincia.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_provincia.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6710 (class 0 OID 0)
-- Dependencies: 292
-- Name: COLUMN domi_provincia.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_provincia.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 293 (class 1259 OID 5284481)
-- Name: domi_tcalle; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.domi_tcalle (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.domi_tcalle OWNER TO postgres;

--
-- TOC entry 6711 (class 0 OID 0)
-- Dependencies: 293
-- Name: TABLE domi_tcalle; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.domi_tcalle IS 'TIPOS DE CALLE';


--
-- TOC entry 6712 (class 0 OID 0)
-- Dependencies: 293
-- Name: COLUMN domi_tcalle.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_tcalle.cod IS 'CODIGO ';


--
-- TOC entry 6713 (class 0 OID 0)
-- Dependencies: 293
-- Name: COLUMN domi_tcalle.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_tcalle.nombre IS 'NOMBRE';


--
-- TOC entry 6714 (class 0 OID 0)
-- Dependencies: 293
-- Name: COLUMN domi_tcalle.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_tcalle.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6715 (class 0 OID 0)
-- Dependencies: 293
-- Name: COLUMN domi_tcalle.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_tcalle.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 294 (class 1259 OID 5284485)
-- Name: domi_torigen; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.domi_torigen (
    cod character varying(3) NOT NULL,
    nombre character varying(20) NOT NULL,
    origen character varying(3),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.domi_torigen OWNER TO postgres;

--
-- TOC entry 6716 (class 0 OID 0)
-- Dependencies: 294
-- Name: TABLE domi_torigen; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.domi_torigen IS 'TIPOS DE ORIGEN DEL DOMICILIO (POSTAL, PARCELARIO, ETC.)';


--
-- TOC entry 6717 (class 0 OID 0)
-- Dependencies: 294
-- Name: COLUMN domi_torigen.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_torigen.cod IS 'CODIGO';


--
-- TOC entry 6718 (class 0 OID 0)
-- Dependencies: 294
-- Name: COLUMN domi_torigen.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_torigen.nombre IS 'NOMBRE';


--
-- TOC entry 6719 (class 0 OID 0)
-- Dependencies: 294
-- Name: COLUMN domi_torigen.origen; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_torigen.origen IS 'ORIGEN DEL CAMPO (OBJ/ID)';


--
-- TOC entry 6720 (class 0 OID 0)
-- Dependencies: 294
-- Name: COLUMN domi_torigen.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_torigen.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6721 (class 0 OID 0)
-- Dependencies: 294
-- Name: COLUMN domi_torigen.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_torigen.usrmod IS 'CODIGO DE URUARIO QUE MODIFICO';


--
-- TOC entry 295 (class 1259 OID 5284489)
-- Name: domi_tpav; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.domi_tpav (
    cod smallint NOT NULL,
    nombre character varying(15) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.domi_tpav OWNER TO postgres;

--
-- TOC entry 6722 (class 0 OID 0)
-- Dependencies: 295
-- Name: TABLE domi_tpav; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.domi_tpav IS 'TIPOS DE PAVIMENTO DE CALLE ';


--
-- TOC entry 6723 (class 0 OID 0)
-- Dependencies: 295
-- Name: COLUMN domi_tpav.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_tpav.cod IS 'CODIGO ';


--
-- TOC entry 6724 (class 0 OID 0)
-- Dependencies: 295
-- Name: COLUMN domi_tpav.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_tpav.nombre IS 'NOMBRE';


--
-- TOC entry 6725 (class 0 OID 0)
-- Dependencies: 295
-- Name: COLUMN domi_tpav.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_tpav.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6726 (class 0 OID 0)
-- Dependencies: 295
-- Name: COLUMN domi_tpav.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.domi_tpav.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 296 (class 1259 OID 5284493)
-- Name: emision_err; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.emision_err (
    trib_id smallint NOT NULL,
    obj_id character varying(8) NOT NULL,
    subcta smallint DEFAULT 0 NOT NULL,
    anio smallint NOT NULL,
    cuota smallint NOT NULL,
    err smallint NOT NULL
);


ALTER TABLE public.emision_err OWNER TO postgres;

--
-- TOC entry 6727 (class 0 OID 0)
-- Dependencies: 296
-- Name: TABLE emision_err; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.emision_err IS 'DETALLE DE ERRORES EN LA EMISIÓN ';


--
-- TOC entry 6728 (class 0 OID 0)
-- Dependencies: 296
-- Name: COLUMN emision_err.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_err.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 6729 (class 0 OID 0)
-- Dependencies: 296
-- Name: COLUMN emision_err.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_err.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 6730 (class 0 OID 0)
-- Dependencies: 296
-- Name: COLUMN emision_err.subcta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_err.subcta IS 'NUMERO DE SUBCUENTA';


--
-- TOC entry 6731 (class 0 OID 0)
-- Dependencies: 296
-- Name: COLUMN emision_err.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_err.anio IS 'AÑO';


--
-- TOC entry 6732 (class 0 OID 0)
-- Dependencies: 296
-- Name: COLUMN emision_err.cuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_err.cuota IS 'CUOTA';


--
-- TOC entry 6733 (class 0 OID 0)
-- Dependencies: 296
-- Name: COLUMN emision_err.err; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_err.err IS 'CODIGO DE ERROR';


--
-- TOC entry 297 (class 1259 OID 5284497)
-- Name: emision_esta; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.emision_esta (
    trib_id smallint NOT NULL,
    anio smallint NOT NULL,
    cuota smallint NOT NULL,
    cant integer NOT NULL,
    monto numeric(12,2) NOT NULL,
    cant_err smallint NOT NULL,
    fchemi date NOT NULL,
    usremi smallint NOT NULL,
    fchaprob date,
    usraprob smallint
);


ALTER TABLE public.emision_esta OWNER TO postgres;

--
-- TOC entry 6734 (class 0 OID 0)
-- Dependencies: 297
-- Name: TABLE emision_esta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.emision_esta IS 'ESTADÍSTICA GENERAL DE EMISIÓN POR TRIBUTO Y PERÍODO';


--
-- TOC entry 6735 (class 0 OID 0)
-- Dependencies: 297
-- Name: COLUMN emision_esta.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_esta.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 6736 (class 0 OID 0)
-- Dependencies: 297
-- Name: COLUMN emision_esta.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_esta.anio IS 'AÑO';


--
-- TOC entry 6737 (class 0 OID 0)
-- Dependencies: 297
-- Name: COLUMN emision_esta.cuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_esta.cuota IS 'CUOTA';


--
-- TOC entry 6738 (class 0 OID 0)
-- Dependencies: 297
-- Name: COLUMN emision_esta.cant; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_esta.cant IS 'CANTIDAD';


--
-- TOC entry 6739 (class 0 OID 0)
-- Dependencies: 297
-- Name: COLUMN emision_esta.monto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_esta.monto IS 'MONTO TOTAL';


--
-- TOC entry 6740 (class 0 OID 0)
-- Dependencies: 297
-- Name: COLUMN emision_esta.cant_err; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_esta.cant_err IS 'CANTIDAD DE ERRORES';


--
-- TOC entry 6741 (class 0 OID 0)
-- Dependencies: 297
-- Name: COLUMN emision_esta.fchemi; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_esta.fchemi IS 'FECHA DE EMISION';


--
-- TOC entry 6742 (class 0 OID 0)
-- Dependencies: 297
-- Name: COLUMN emision_esta.usremi; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_esta.usremi IS 'USUARIO QUE EMITIO';


--
-- TOC entry 6743 (class 0 OID 0)
-- Dependencies: 297
-- Name: COLUMN emision_esta.fchaprob; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_esta.fchaprob IS 'FECHA DE APROBACION';


--
-- TOC entry 6744 (class 0 OID 0)
-- Dependencies: 297
-- Name: COLUMN emision_esta.usraprob; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_esta.usraprob IS 'USUARIO QUE APROBO';


--
-- TOC entry 298 (class 1259 OID 5284500)
-- Name: emision_mail; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.emision_mail (
    trib_id smallint NOT NULL,
    obj_id character varying(8) NOT NULL,
    subcta smallint DEFAULT 0 NOT NULL,
    anio smallint NOT NULL,
    cuota smallint NOT NULL,
    fecha date NOT NULL,
    mail character varying(100) NOT NULL
);


ALTER TABLE public.emision_mail OWNER TO postgres;

--
-- TOC entry 6745 (class 0 OID 0)
-- Dependencies: 298
-- Name: TABLE emision_mail; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.emision_mail IS 'DETALLE DE BOLETAS ENVIADAS POR MAIL';


--
-- TOC entry 6746 (class 0 OID 0)
-- Dependencies: 298
-- Name: COLUMN emision_mail.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_mail.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 6747 (class 0 OID 0)
-- Dependencies: 298
-- Name: COLUMN emision_mail.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_mail.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 6748 (class 0 OID 0)
-- Dependencies: 298
-- Name: COLUMN emision_mail.subcta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_mail.subcta IS 'NUMERO DE SUBCUENTA';


--
-- TOC entry 6749 (class 0 OID 0)
-- Dependencies: 298
-- Name: COLUMN emision_mail.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_mail.anio IS 'AÑO';


--
-- TOC entry 6750 (class 0 OID 0)
-- Dependencies: 298
-- Name: COLUMN emision_mail.cuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_mail.cuota IS 'CUOTA';


--
-- TOC entry 6751 (class 0 OID 0)
-- Dependencies: 298
-- Name: COLUMN emision_mail.fecha; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_mail.fecha IS 'FECHA DE ENVIO';


--
-- TOC entry 6752 (class 0 OID 0)
-- Dependencies: 298
-- Name: COLUMN emision_mail.mail; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_mail.mail IS 'MAIL AL QUE FUE ENVIADO';


--
-- TOC entry 299 (class 1259 OID 5284504)
-- Name: emision_margen; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.emision_margen (
    cod integer DEFAULT nextval(('public.seq_emision_margen_cod'::text)::regclass) NOT NULL,
    nombre character varying(20) NOT NULL,
    sup numeric(12,2),
    izq numeric(12,2),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint DEFAULT 100 NOT NULL
);


ALTER TABLE public.emision_margen OWNER TO postgres;

--
-- TOC entry 6753 (class 0 OID 0)
-- Dependencies: 299
-- Name: TABLE emision_margen; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.emision_margen IS 'MÁRGENES SUPERIOR E IZQUIERDO USADOS EN LAS BOLETAS';


--
-- TOC entry 6754 (class 0 OID 0)
-- Dependencies: 299
-- Name: COLUMN emision_margen.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_margen.cod IS 'CODIGO';


--
-- TOC entry 6755 (class 0 OID 0)
-- Dependencies: 299
-- Name: COLUMN emision_margen.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_margen.nombre IS 'NOMBRE';


--
-- TOC entry 6756 (class 0 OID 0)
-- Dependencies: 299
-- Name: COLUMN emision_margen.sup; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_margen.sup IS 'VALOR MARGEN SUPERIOR';


--
-- TOC entry 6757 (class 0 OID 0)
-- Dependencies: 299
-- Name: COLUMN emision_margen.izq; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_margen.izq IS 'VALOR MARGEN IZQUIERDO';


--
-- TOC entry 6758 (class 0 OID 0)
-- Dependencies: 299
-- Name: COLUMN emision_margen.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_margen.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6759 (class 0 OID 0)
-- Dependencies: 299
-- Name: COLUMN emision_margen.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_margen.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 300 (class 1259 OID 5284510)
-- Name: emision_mensaje; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.emision_mensaje (
    ctacte_id integer NOT NULL,
    detalle character varying(4000) NOT NULL
);


ALTER TABLE public.emision_mensaje OWNER TO postgres;

--
-- TOC entry 6760 (class 0 OID 0)
-- Dependencies: 300
-- Name: TABLE emision_mensaje; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.emision_mensaje IS 'DIFERENTES MENSAJES USADOS EN LAS BOLETAS EMITIDAS';


--
-- TOC entry 6761 (class 0 OID 0)
-- Dependencies: 300
-- Name: COLUMN emision_mensaje.ctacte_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_mensaje.ctacte_id IS 'IDENTIFICADOR DE CUENTA CORRIENTE';


--
-- TOC entry 6762 (class 0 OID 0)
-- Dependencies: 300
-- Name: COLUMN emision_mensaje.detalle; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_mensaje.detalle IS 'DETALLE';


--
-- TOC entry 301 (class 1259 OID 5284516)
-- Name: emision_terr; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.emision_terr (
    cod smallint NOT NULL,
    nombre character varying(50) NOT NULL,
    trib_id smallint NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint DEFAULT 100 NOT NULL
);


ALTER TABLE public.emision_terr OWNER TO postgres;

--
-- TOC entry 6763 (class 0 OID 0)
-- Dependencies: 301
-- Name: TABLE emision_terr; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.emision_terr IS 'DIFERENTES TIPOS DE ERRORES EN EMISIÓN';


--
-- TOC entry 6764 (class 0 OID 0)
-- Dependencies: 301
-- Name: COLUMN emision_terr.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_terr.cod IS 'CODIGO ';


--
-- TOC entry 6765 (class 0 OID 0)
-- Dependencies: 301
-- Name: COLUMN emision_terr.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_terr.nombre IS 'NOMBRE';


--
-- TOC entry 6766 (class 0 OID 0)
-- Dependencies: 301
-- Name: COLUMN emision_terr.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_terr.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 6767 (class 0 OID 0)
-- Dependencies: 301
-- Name: COLUMN emision_terr.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_terr.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6768 (class 0 OID 0)
-- Dependencies: 301
-- Name: COLUMN emision_terr.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.emision_terr.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 312 (class 1259 OID 5284560)
-- Name: facilida; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.facilida (
    faci_id integer NOT NULL,
    trib_id smallint NOT NULL,
    obj_id character varying(8) NOT NULL,
    nominal numeric(12,2) NOT NULL,
    accesor numeric(12,2) NOT NULL,
    multa numeric(12,2) NOT NULL,
    quita numeric(12,2),
    monto numeric(12,2) DEFAULT 0 NOT NULL,
    est smallint NOT NULL,
    fchalta timestamp without time zone NOT NULL,
    fchvenc date NOT NULL,
    fchconsolida date,
    fchimputa timestamp without time zone,
    fchbaja timestamp without time zone,
    usrbaja smallint,
    baja_auto smallint DEFAULT 1,
    obs character varying(250) DEFAULT 0 NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.facilida OWNER TO postgres;

--
-- TOC entry 6856 (class 0 OID 0)
-- Dependencies: 312
-- Name: TABLE facilida; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.facilida IS 'DATOS PRINCIPALES DE FACILIDADES DE PAGO';


--
-- TOC entry 6857 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN facilida.faci_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.facilida.faci_id IS 'IDENTIFICADOR DE FACILIDAD';


--
-- TOC entry 6858 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN facilida.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.facilida.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 6859 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN facilida.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.facilida.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 6860 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN facilida.nominal; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.facilida.nominal IS 'MONTO NOMINAL';


--
-- TOC entry 6861 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN facilida.accesor; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.facilida.accesor IS 'MONTO ACCESORIO';


--
-- TOC entry 6862 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN facilida.multa; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.facilida.multa IS 'MONTO MULTA';


--
-- TOC entry 6863 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN facilida.quita; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.facilida.quita IS 'QUITA DE ACCESORIOS';


--
-- TOC entry 6864 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN facilida.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.facilida.est IS 'ESTADO';


--
-- TOC entry 6865 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN facilida.fchalta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.facilida.fchalta IS 'FECHA DE ALTA';


--
-- TOC entry 6866 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN facilida.fchvenc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.facilida.fchvenc IS 'FECHA DE VENCIMIENTO';


--
-- TOC entry 6867 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN facilida.fchconsolida; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.facilida.fchconsolida IS 'FECHA DE CONSOLIDACION';


--
-- TOC entry 6868 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN facilida.fchimputa; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.facilida.fchimputa IS 'FECHA DE IMPUTACION';


--
-- TOC entry 6869 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN facilida.fchbaja; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.facilida.fchbaja IS 'FECHA DE BAJA';


--
-- TOC entry 6870 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN facilida.usrbaja; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.facilida.usrbaja IS 'USUARIO QUE DA DE BAJA';


--
-- TOC entry 6871 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN facilida.baja_auto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.facilida.baja_auto IS 'SI SE DA DE BAJA AUTOMATICAMENTE';


--
-- TOC entry 6872 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN facilida.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.facilida.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6873 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN facilida.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.facilida.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 313 (class 1259 OID 5284567)
-- Name: facilida_periodo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.facilida_periodo (
    faci_id integer NOT NULL,
    ctacte_id integer NOT NULL,
    nominal numeric(12,2) NOT NULL,
    accesor numeric(12,2) NOT NULL,
    multa numeric(12,2) NOT NULL,
    quita numeric(12,2)
);


ALTER TABLE public.facilida_periodo OWNER TO postgres;

--
-- TOC entry 6874 (class 0 OID 0)
-- Dependencies: 313
-- Name: TABLE facilida_periodo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.facilida_periodo IS 'DETALLE DE PERIODOS INCLUIDOS EN CADA FACILIDAD';


--
-- TOC entry 6875 (class 0 OID 0)
-- Dependencies: 313
-- Name: COLUMN facilida_periodo.faci_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.facilida_periodo.faci_id IS 'IDENTIFICADOR DE FACILIDAD';


--
-- TOC entry 6876 (class 0 OID 0)
-- Dependencies: 313
-- Name: COLUMN facilida_periodo.ctacte_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.facilida_periodo.ctacte_id IS 'IDENTIFICADOR DE CUENTA CORRIENTE';


--
-- TOC entry 6877 (class 0 OID 0)
-- Dependencies: 313
-- Name: COLUMN facilida_periodo.nominal; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.facilida_periodo.nominal IS 'MONTO NOMINAL';


--
-- TOC entry 6878 (class 0 OID 0)
-- Dependencies: 313
-- Name: COLUMN facilida_periodo.accesor; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.facilida_periodo.accesor IS 'MONTO ACCESORIO';


--
-- TOC entry 6879 (class 0 OID 0)
-- Dependencies: 313
-- Name: COLUMN facilida_periodo.multa; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.facilida_periodo.multa IS 'MONTO MULTA';


--
-- TOC entry 6880 (class 0 OID 0)
-- Dependencies: 313
-- Name: COLUMN facilida_periodo.quita; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.facilida_periodo.quita IS 'MONTO DE QUITA DE ACCESORIOS';


--
-- TOC entry 314 (class 1259 OID 5284570)
-- Name: fiscaliza; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.fiscaliza (
    fisca_id integer NOT NULL,
    obj_id character varying(8) NOT NULL,
    expe character varying(12),
    inspector smallint,
    fchalta date NOT NULL,
    fchbaja date,
    est smallint NOT NULL,
    obs character varying(250) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.fiscaliza OWNER TO postgres;

--
-- TOC entry 6881 (class 0 OID 0)
-- Dependencies: 314
-- Name: TABLE fiscaliza; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.fiscaliza IS 'DATOS PRINCIPALES DE FISCALIZACIÓN DE COMERCIOS';


--
-- TOC entry 6882 (class 0 OID 0)
-- Dependencies: 314
-- Name: COLUMN fiscaliza.fisca_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.fiscaliza.fisca_id IS 'IDENTIFICADOR DE FISCALIZACION';


--
-- TOC entry 6883 (class 0 OID 0)
-- Dependencies: 314
-- Name: COLUMN fiscaliza.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.fiscaliza.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 6884 (class 0 OID 0)
-- Dependencies: 314
-- Name: COLUMN fiscaliza.expe; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.fiscaliza.expe IS 'EXPEDIENTE';


--
-- TOC entry 6885 (class 0 OID 0)
-- Dependencies: 314
-- Name: COLUMN fiscaliza.inspector; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.fiscaliza.inspector IS 'CODIGO DE INSPECTOR';


--
-- TOC entry 6886 (class 0 OID 0)
-- Dependencies: 314
-- Name: COLUMN fiscaliza.fchalta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.fiscaliza.fchalta IS 'FECHA DE ALTA';


--
-- TOC entry 6887 (class 0 OID 0)
-- Dependencies: 314
-- Name: COLUMN fiscaliza.fchbaja; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.fiscaliza.fchbaja IS 'FECHA DE BAJA';


--
-- TOC entry 6888 (class 0 OID 0)
-- Dependencies: 314
-- Name: COLUMN fiscaliza.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.fiscaliza.est IS 'ESTADO';


--
-- TOC entry 6889 (class 0 OID 0)
-- Dependencies: 314
-- Name: COLUMN fiscaliza.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.fiscaliza.obs IS 'OBSERVACIONES';


--
-- TOC entry 6890 (class 0 OID 0)
-- Dependencies: 314
-- Name: COLUMN fiscaliza.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.fiscaliza.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6891 (class 0 OID 0)
-- Dependencies: 314
-- Name: COLUMN fiscaliza.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.fiscaliza.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 315 (class 1259 OID 5284574)
-- Name: fiscaliza_test; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.fiscaliza_test (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.fiscaliza_test OWNER TO postgres;

--
-- TOC entry 6892 (class 0 OID 0)
-- Dependencies: 315
-- Name: TABLE fiscaliza_test; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.fiscaliza_test IS 'DIFERENTES ESTADOS DE FISCALIZACIÓN';


--
-- TOC entry 6893 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN fiscaliza_test.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.fiscaliza_test.cod IS 'CODIGO ';


--
-- TOC entry 6894 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN fiscaliza_test.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.fiscaliza_test.nombre IS 'NOMBRE';


--
-- TOC entry 6895 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN fiscaliza_test.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.fiscaliza_test.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6896 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN fiscaliza_test.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.fiscaliza_test.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 316 (class 1259 OID 5284578)
-- Name: his_cem; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.his_cem (
    his_id integer NOT NULL,
    obj_id character varying(8) NOT NULL,
    nc character varying(15) NOT NULL,
    cua_id character varying(3) NOT NULL,
    cue_id character varying(3) NOT NULL,
    tipo character varying(2) NOT NULL,
    piso smallint NOT NULL,
    fila smallint NOT NULL,
    nume smallint NOT NULL,
    bis character varying(1) NOT NULL,
    cat smallint NOT NULL,
    deleg smallint NOT NULL,
    sup smallint DEFAULT 0 NOT NULL,
    tomo character varying(10),
    folio character varying(10),
    fchcompra date,
    fchingreso date,
    fchvenc date,
    exenta smallint,
    edicto integer,
    cod_ant character varying(15),
    operacion character varying(1),
    fch_bd timestamp without time zone,
    usr_bd character varying(20)
);


ALTER TABLE public.his_cem OWNER TO postgres;

--
-- TOC entry 6897 (class 0 OID 0)
-- Dependencies: 316
-- Name: TABLE his_cem; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.his_cem IS 'AUDITORÍA DE CEMENTERIO';


--
-- TOC entry 6898 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN his_cem.his_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_cem.his_id IS 'IDENTIFICADOR DE OLD_CEMENTERIO';


--
-- TOC entry 6899 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN his_cem.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_cem.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 6900 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN his_cem.nc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_cem.nc IS 'NOMENCLATURA';


--
-- TOC entry 6901 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN his_cem.cua_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_cem.cua_id IS 'CODIGO DE CUADRO';


--
-- TOC entry 6902 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN his_cem.cue_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_cem.cue_id IS 'CODIGO DE CUERPO';


--
-- TOC entry 6903 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN his_cem.tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_cem.tipo IS 'CODIGO DE TIPO';


--
-- TOC entry 6904 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN his_cem.piso; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_cem.piso IS 'NUMERO DE PISO';


--
-- TOC entry 6905 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN his_cem.fila; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_cem.fila IS 'NUMERO DE FILA';


--
-- TOC entry 6906 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN his_cem.nume; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_cem.nume IS 'NUMERO';


--
-- TOC entry 6907 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN his_cem.bis; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_cem.bis IS 'BIS';


--
-- TOC entry 6908 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN his_cem.cat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_cem.cat IS 'CATEGORIA';


--
-- TOC entry 6909 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN his_cem.deleg; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_cem.deleg IS 'CODIGO DE DELEGACION';


--
-- TOC entry 6910 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN his_cem.sup; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_cem.sup IS 'SUPERFICIE';


--
-- TOC entry 6911 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN his_cem.fchingreso; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_cem.fchingreso IS 'FECHA DE INGRESO';


--
-- TOC entry 6912 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN his_cem.fchvenc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_cem.fchvenc IS 'FECHA DE VENCIMIENTO';


--
-- TOC entry 6913 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN his_cem.exenta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_cem.exenta IS 'SI SE ENCUENTRA EXENTO';


--
-- TOC entry 6914 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN his_cem.edicto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_cem.edicto IS 'NUMERO DE EDICTO';


--
-- TOC entry 6915 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN his_cem.cod_ant; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_cem.cod_ant IS 'CODIGO ANTERIOR';


--
-- TOC entry 6916 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN his_cem.operacion; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_cem.operacion IS 'TIPO DE OPERACION - I:INSERT, U:UPDATE, D:DELETE';


--
-- TOC entry 6917 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN his_cem.fch_bd; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_cem.fch_bd IS 'FECHA DEL CAMBIO SEGUN BD';


--
-- TOC entry 6918 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN his_cem.usr_bd; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_cem.usr_bd IS 'USUARIO BD';


--
-- TOC entry 317 (class 1259 OID 5284582)
-- Name: his_comer; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.his_comer (
    his_id integer NOT NULL,
    obj_id character varying(8) NOT NULL,
    legajo character varying(10) NOT NULL,
    thab character varying(1) NOT NULL,
    tipo smallint NOT NULL,
    fchhab date,
    fchvenchab date,
    pi smallint,
    cantemple smallint,
    supcub numeric(12,2),
    supsemi numeric(12,2),
    supdes numeric(12,2),
    alquila smallint,
    zona smallint DEFAULT 2 NOT NULL,
    inmueble character varying(8),
    rodados character varying(8),
    tel character varying(15),
    mail character varying(50),
    operacion character varying(1),
    fch_bd timestamp without time zone,
    usr_bd character varying(20)
);


ALTER TABLE public.his_comer OWNER TO postgres;

--
-- TOC entry 6919 (class 0 OID 0)
-- Dependencies: 317
-- Name: TABLE his_comer; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.his_comer IS 'AUDITORÍA DE COMERCIOS';


--
-- TOC entry 318 (class 1259 OID 5284586)
-- Name: seq_his_ctacte_ajuste; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_his_ctacte_ajuste
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.seq_his_ctacte_ajuste OWNER TO postgres;

--
-- TOC entry 319 (class 1259 OID 5284588)
-- Name: his_ctacte_ajuste; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.his_ctacte_ajuste (
    his_id integer DEFAULT nextval('public.seq_his_ctacte_ajuste'::regclass) NOT NULL,
    aju_id integer NOT NULL,
    trib_id smallint NOT NULL,
    ctacte_id integer,
    expe character varying(12),
    obs character varying(100),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL,
    operacion character varying(1),
    fch_bd timestamp(0) without time zone,
    usr_bd character varying(20)
);


ALTER TABLE public.his_ctacte_ajuste OWNER TO postgres;

--
-- TOC entry 6921 (class 0 OID 0)
-- Dependencies: 319
-- Name: TABLE his_ctacte_ajuste; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.his_ctacte_ajuste IS 'AJUSTES REALIZADOS EN LA CUENTA CORRIENTE';


--
-- TOC entry 6922 (class 0 OID 0)
-- Dependencies: 319
-- Name: COLUMN his_ctacte_ajuste.his_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_ctacte_ajuste.his_id IS 'IDENTIFICADOR DE OLD_INMUEBLES';


--
-- TOC entry 6923 (class 0 OID 0)
-- Dependencies: 319
-- Name: COLUMN his_ctacte_ajuste.aju_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_ctacte_ajuste.aju_id IS 'CODIGO DE AJUSTE';


--
-- TOC entry 6924 (class 0 OID 0)
-- Dependencies: 319
-- Name: COLUMN his_ctacte_ajuste.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_ctacte_ajuste.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 6925 (class 0 OID 0)
-- Dependencies: 319
-- Name: COLUMN his_ctacte_ajuste.ctacte_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_ctacte_ajuste.ctacte_id IS 'IDENTIFICADOR DE CUENTA CORRIENTE';


--
-- TOC entry 6926 (class 0 OID 0)
-- Dependencies: 319
-- Name: COLUMN his_ctacte_ajuste.expe; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_ctacte_ajuste.expe IS 'EXPEDIENTE';


--
-- TOC entry 6927 (class 0 OID 0)
-- Dependencies: 319
-- Name: COLUMN his_ctacte_ajuste.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_ctacte_ajuste.obs IS 'OBSERVACIONES';


--
-- TOC entry 6928 (class 0 OID 0)
-- Dependencies: 319
-- Name: COLUMN his_ctacte_ajuste.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_ctacte_ajuste.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 6929 (class 0 OID 0)
-- Dependencies: 319
-- Name: COLUMN his_ctacte_ajuste.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_ctacte_ajuste.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 6930 (class 0 OID 0)
-- Dependencies: 319
-- Name: COLUMN his_ctacte_ajuste.operacion; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_ctacte_ajuste.operacion IS 'TIPO DE OPERACION - I:INSERT, U:UPDATE, D:DELETE';


--
-- TOC entry 6931 (class 0 OID 0)
-- Dependencies: 319
-- Name: COLUMN his_ctacte_ajuste.fch_bd; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_ctacte_ajuste.fch_bd IS 'FECHA DEL CAMBIO SEGUN BD';


--
-- TOC entry 6932 (class 0 OID 0)
-- Dependencies: 319
-- Name: COLUMN his_ctacte_ajuste.usr_bd; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_ctacte_ajuste.usr_bd IS 'USUARIO BD';


--
-- TOC entry 320 (class 1259 OID 5284593)
-- Name: seq_his_domi; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_his_domi
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.seq_his_domi OWNER TO postgres;

--
-- TOC entry 321 (class 1259 OID 5284595)
-- Name: his_domi; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.his_domi (
    his_id integer DEFAULT nextval('public.seq_his_domi'::regclass) NOT NULL,
    torigen character varying(3) NOT NULL,
    obj_id character varying(8) NOT NULL,
    id integer NOT NULL,
    loc_id smallint NOT NULL,
    cp character varying(8) NOT NULL,
    barr_id smallint,
    calle_id smallint NOT NULL,
    nomcalle character varying(40),
    puerta smallint,
    det character varying(50),
    piso character varying(5),
    dpto character varying(5),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL,
    operacion character varying(1),
    fch_bd timestamp(0) without time zone,
    usr_bd character varying(20)
);


ALTER TABLE public.his_domi OWNER TO postgres;

--
-- TOC entry 6933 (class 0 OID 0)
-- Dependencies: 321
-- Name: TABLE his_domi; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.his_domi IS 'DATOS PRINCIPALES DE DOMICILIOS';


--
-- TOC entry 6934 (class 0 OID 0)
-- Dependencies: 321
-- Name: COLUMN his_domi.his_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_domi.his_id IS 'IDENTIFICADOR DE OLD_INMUEBLES';


--
-- TOC entry 6935 (class 0 OID 0)
-- Dependencies: 321
-- Name: COLUMN his_domi.torigen; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_domi.torigen IS 'TIPO DE ORIGEN';


--
-- TOC entry 6936 (class 0 OID 0)
-- Dependencies: 321
-- Name: COLUMN his_domi.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_domi.obj_id IS 'ORIGEN DEL DOMICILIO (EJM CODIGO DE OBJETO)';


--
-- TOC entry 6937 (class 0 OID 0)
-- Dependencies: 321
-- Name: COLUMN his_domi.loc_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_domi.loc_id IS 'CODIGO DE LA LOCALIDAD';


--
-- TOC entry 6938 (class 0 OID 0)
-- Dependencies: 321
-- Name: COLUMN his_domi.cp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_domi.cp IS 'CODIGO POSTAL';


--
-- TOC entry 6939 (class 0 OID 0)
-- Dependencies: 321
-- Name: COLUMN his_domi.barr_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_domi.barr_id IS 'CODIGO DEL BARRIO';


--
-- TOC entry 6940 (class 0 OID 0)
-- Dependencies: 321
-- Name: COLUMN his_domi.calle_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_domi.calle_id IS 'CODIGO DE CALLE';


--
-- TOC entry 6941 (class 0 OID 0)
-- Dependencies: 321
-- Name: COLUMN his_domi.puerta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_domi.puerta IS 'NUMERO DE PUERTA';


--
-- TOC entry 6942 (class 0 OID 0)
-- Dependencies: 321
-- Name: COLUMN his_domi.det; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_domi.det IS 'NUMERO DE BLOQUE';


--
-- TOC entry 6943 (class 0 OID 0)
-- Dependencies: 321
-- Name: COLUMN his_domi.piso; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_domi.piso IS 'NUMERO DE PISO';


--
-- TOC entry 6944 (class 0 OID 0)
-- Dependencies: 321
-- Name: COLUMN his_domi.dpto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_domi.dpto IS 'NUMERO DE DEPARTAMENTO';


--
-- TOC entry 6945 (class 0 OID 0)
-- Dependencies: 321
-- Name: COLUMN his_domi.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_domi.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 6946 (class 0 OID 0)
-- Dependencies: 321
-- Name: COLUMN his_domi.operacion; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_domi.operacion IS 'TIPO DE OPERACION - I:INSERT, U:UPDATE, D:DELETE';


--
-- TOC entry 6947 (class 0 OID 0)
-- Dependencies: 321
-- Name: COLUMN his_domi.fch_bd; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_domi.fch_bd IS 'FECHA DEL CAMBIO SEGUN BD';


--
-- TOC entry 6948 (class 0 OID 0)
-- Dependencies: 321
-- Name: COLUMN his_domi.usr_bd; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_domi.usr_bd IS 'USUARIO BD';


--
-- TOC entry 322 (class 1259 OID 5284600)
-- Name: his_inm; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.his_inm (
    his_id integer NOT NULL,
    obj_id character varying(8) NOT NULL,
    nc character varying(26) NOT NULL,
    s1 character varying(3) DEFAULT ''::character varying,
    s2 character varying(3) DEFAULT ''::character varying,
    s3 character varying(3) DEFAULT ''::character varying,
    manz character varying(6) NOT NULL,
    parc character varying(5) NOT NULL,
    uf character varying(5) NOT NULL,
    porcuf numeric(9,4),
    nc_ant character varying(26) NOT NULL,
    parp integer NOT NULL,
    parporigen integer,
    plano integer NOT NULL,
    anio_mensura smallint,
    expe character varying(12),
    urbsub character varying(2) NOT NULL,
    regimen smallint NOT NULL,
    tinm character varying(1),
    titularidad character varying(2) NOT NULL,
    uso smallint,
    tmatric character varying(1),
    matric character varying(15),
    fchmatric date,
    anio smallint,
    comprador character varying(50),
    supt numeric(12,4),
    supt_pasillo numeric(9,2),
    supm numeric(12,2),
    avalt numeric(12,2),
    avalm numeric(12,2),
    frente numeric(12,2),
    fondo numeric(12,2),
    es_esquina smallint,
    es_calleppal smallint,
    zonat character varying(2),
    zonav smallint,
    zonaop smallint,
    agua smallint,
    cloaca smallint,
    gas smallint,
    alum smallint,
    pav smallint,
    valbas numeric(12,2),
    coef numeric(5,2),
    barr_id smallint,
    patrimonio smallint,
    objeto_superp character varying(8) NOT NULL,
    archivo character varying(20),
    unihab smallint DEFAULT 0 NOT NULL,
    operacion character varying(1),
    fch_bd timestamp without time zone,
    usr_bd character varying(20)
);


ALTER TABLE public.his_inm OWNER TO postgres;

--
-- TOC entry 6949 (class 0 OID 0)
-- Dependencies: 322
-- Name: TABLE his_inm; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.his_inm IS 'AUDITORIA DE CAMBIOS EN INMUEBLES';


--
-- TOC entry 6950 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.his_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.his_id IS 'IDENTIFICADOR DE OLD_INMUEBLES';


--
-- TOC entry 6951 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 6952 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.nc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.nc IS 'NOMENCLATURA';


--
-- TOC entry 6953 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.s1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.s1 IS 'SECTOR';


--
-- TOC entry 6954 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.s2; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.s2 IS 'GRUPO';


--
-- TOC entry 6955 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.s3; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.s3 IS 'GRUPO 2';


--
-- TOC entry 6956 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.manz; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.manz IS 'NUMERO DE MANZANA';


--
-- TOC entry 6957 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.parc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.parc IS 'NUMERO DE PARCELA';


--
-- TOC entry 6958 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.uf; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.uf IS 'SI ES UNIDAD FUNCIONAL';


--
-- TOC entry 6959 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.porcuf; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.porcuf IS 'PORCENTAJE DE UNIDAD FUNCIONAL';


--
-- TOC entry 6960 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.nc_ant; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.nc_ant IS 'NOMENCLATURA ANTERIOR';


--
-- TOC entry 6961 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.parp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.parp IS 'PARTIDA PROVINCIAL';


--
-- TOC entry 6962 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.parporigen; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.parporigen IS 'PARTIDA PROVINCIAL ORIGEN';


--
-- TOC entry 6963 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.plano; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.plano IS 'PLANO';


--
-- TOC entry 6964 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.anio_mensura; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.anio_mensura IS 'AÑO DE LA MENSURA';


--
-- TOC entry 6965 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.expe; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.expe IS 'IDENTIFICACION DEL EXPEDIENTE';


--
-- TOC entry 6966 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.urbsub; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.urbsub IS 'CODIGO DE URBSUB';


--
-- TOC entry 6967 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.regimen; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.regimen IS 'CODIGO DE REGIMEN';


--
-- TOC entry 6968 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.tinm; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.tinm IS 'CODIGO DE TIPO DE INMUEBLE';


--
-- TOC entry 6969 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.titularidad; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.titularidad IS 'CODIGO DE TITULARIDAD';


--
-- TOC entry 6970 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.uso; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.uso IS 'CODIGO DE TIPO DE USO';


--
-- TOC entry 6971 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.tmatric; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.tmatric IS 'TIPO DE MATRICULA';


--
-- TOC entry 6972 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.matric; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.matric IS 'NUMERO DE MATRICULA';


--
-- TOC entry 6973 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.fchmatric; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.fchmatric IS 'FECHA DE LA MATRICULA';


--
-- TOC entry 6974 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.anio IS 'A?O DE MATRICULA';


--
-- TOC entry 6975 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.comprador; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.comprador IS 'NOMBRE DEL COMPRADOR';


--
-- TOC entry 6976 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.supt; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.supt IS 'SUPERFICIE DEL TERRENO';


--
-- TOC entry 6977 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.supt_pasillo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.supt_pasillo IS 'SUPERFICIE DE PASILLO';


--
-- TOC entry 6978 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.supm; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.supm IS 'SUPERFICIE DE MEJORAS';


--
-- TOC entry 6979 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.avalt; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.avalt IS 'AVALUO DEL TERRENO';


--
-- TOC entry 6980 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.avalm; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.avalm IS 'AVALUO DE LAS MEJORAS';


--
-- TOC entry 6981 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.frente; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.frente IS 'METROS DE FRENTE';


--
-- TOC entry 6982 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.fondo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.fondo IS 'METROS DE FONDO';


--
-- TOC entry 6983 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.es_esquina; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.es_esquina IS 'DETERMINACION DE ESQUINA';


--
-- TOC entry 6984 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.es_calleppal; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.es_calleppal IS 'INDICA SI ES CALLE PRINCIPAL';


--
-- TOC entry 6985 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.zonat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.zonat IS 'CODIGO DE ZONA TRIBUTARIA';


--
-- TOC entry 6986 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.zonav; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.zonav IS 'CODIGO DE ZONA VALUATORIA';


--
-- TOC entry 6987 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.zonaop; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.zonaop IS 'CODIGO DE ZONA OBRAS PRIVADAS';


--
-- TOC entry 6988 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.agua; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.agua IS 'INDICA SI DISPONE DEL SERVICIO DE AGUA';


--
-- TOC entry 6989 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.cloaca; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.cloaca IS 'INDICA SI DISPONE DEL SERVICIO DE CLOACA';


--
-- TOC entry 6990 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.gas; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.gas IS 'INDICA SI DISPONE DEL SERVICIO DE GAS';


--
-- TOC entry 6991 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.alum; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.alum IS 'CODIGO DE ALUMBRADO';


--
-- TOC entry 6992 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.pav; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.pav IS 'CODIGO DE PAVIMENTO';


--
-- TOC entry 6993 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.valbas; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.valbas IS 'VALOR BASICO';


--
-- TOC entry 6994 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.coef; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.coef IS 'COEFICIENTE DE AJUSTE';


--
-- TOC entry 6995 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.barr_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.barr_id IS 'CODIGO DE BARRIO';


--
-- TOC entry 6996 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.patrimonio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.patrimonio IS 'SI EL INMUEBLE REPRESENTA PATRIMONIO CULTURAL';


--
-- TOC entry 6997 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.objeto_superp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.objeto_superp IS 'CODIGO DE OBJETO EN SUPERPOSICION';


--
-- TOC entry 6998 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.archivo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.archivo IS 'ARCHIVO';


--
-- TOC entry 6999 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.unihab; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.unihab IS 'NUMERO DE UNIDADES HABITACIONALES';


--
-- TOC entry 7000 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.operacion; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.operacion IS 'TIPO DE OPERACION - I:INSERT, U:UPDATE, D:DELETE';


--
-- TOC entry 7001 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.fch_bd; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.fch_bd IS 'FECHA DEL CAMBIO SEGUN BD';


--
-- TOC entry 7002 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN his_inm.usr_bd; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm.usr_bd IS 'USUARIO BD';


--
-- TOC entry 323 (class 1259 OID 5284607)
-- Name: his_inm_cambio; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.his_inm_cambio (
    cbio_id integer DEFAULT nextval(('public.seq_inmueble_his_cbio_id'::text)::regclass) NOT NULL,
    obj_id character varying(8) NOT NULL,
    tipo character varying(1) NOT NULL,
    cbio_nomencla smallint DEFAULT 0 NOT NULL,
    cbio_identif smallint DEFAULT 0 NOT NULL,
    cbio_carac smallint DEFAULT 0 NOT NULL,
    cbio_titular smallint DEFAULT 0 NOT NULL,
    cbio_dominio smallint DEFAULT 0 NOT NULL,
    cbio_dompos smallint DEFAULT 0 NOT NULL,
    cbio_dompar smallint DEFAULT 0 NOT NULL,
    cbio_avalt smallint DEFAULT 0 NOT NULL,
    cbio_avalm smallint DEFAULT 0 NOT NULL,
    cbio_zonaserv smallint DEFAULT 0 NOT NULL,
    supt_old numeric(12,4) DEFAULT 0 NOT NULL,
    supt_new numeric(12,4) DEFAULT 0 NOT NULL,
    supm_old numeric(12,2) DEFAULT 0 NOT NULL,
    supm_new numeric(12,2) DEFAULT 0 NOT NULL,
    avalt_old numeric(12,2) DEFAULT 0 NOT NULL,
    avalt_new numeric(12,2) DEFAULT 0 NOT NULL,
    avalm_old numeric(12,2) DEFAULT 0 NOT NULL,
    avalm_new numeric(12,2) DEFAULT 0 NOT NULL,
    zonat_old character varying(2) DEFAULT 0 NOT NULL,
    zonat_new character varying(2) DEFAULT 0 NOT NULL,
    serv_old smallint DEFAULT 0 NOT NULL,
    serv_new smallint DEFAULT 0 NOT NULL,
    fchmod timestamp without time zone NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.his_inm_cambio OWNER TO postgres;

--
-- TOC entry 7004 (class 0 OID 0)
-- Dependencies: 323
-- Name: TABLE his_inm_cambio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.his_inm_cambio IS 'REGISTRO DE CAMBIOS REALIZADOS EN INMUEBLES';


--
-- TOC entry 7005 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.cbio_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.cbio_id IS 'IDENTIFICADOR DE CAMBIO';


--
-- TOC entry 7006 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 7007 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.tipo IS 'CODIGO DE TIPO DE CAMBIO';


--
-- TOC entry 7008 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.cbio_nomencla; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.cbio_nomencla IS 'SI HUBO CAMBIO EN LA NOMENCLATURA';


--
-- TOC entry 7009 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.cbio_identif; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.cbio_identif IS 'SI HUBO CAMBIO EN LA IDENTIFICACION';


--
-- TOC entry 7010 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.cbio_carac; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.cbio_carac IS 'SI HUBO CAMBIO EN CARACTERISTICAS';


--
-- TOC entry 7011 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.cbio_titular; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.cbio_titular IS 'SI HUBO CAMBIO DE TITULAR';


--
-- TOC entry 7012 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.cbio_dominio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.cbio_dominio IS 'SI HUBO CAMBIO DE DOMINIO';


--
-- TOC entry 7013 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.cbio_dompos; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.cbio_dompos IS 'SI HUBO CAMBIO DE DOMICILIO POSTAL';


--
-- TOC entry 7014 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.cbio_dompar; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.cbio_dompar IS 'SI HUBO CAMBIO DE DOMICILIO PARCELARIO';


--
-- TOC entry 7015 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.cbio_avalt; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.cbio_avalt IS 'SI HUBO CAMBIO DE AVALUO DE TERRENO';


--
-- TOC entry 7016 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.cbio_avalm; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.cbio_avalm IS 'SI HUBO CAMBIO DE AVALUO DE MEJORAS';


--
-- TOC entry 7017 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.cbio_zonaserv; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.cbio_zonaserv IS 'SI HUBO CAMBIO EN ZONA O SERVICIO';


--
-- TOC entry 7018 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.supt_old; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.supt_old IS 'SUPERFICIE DE TERRENO ANTERIOR';


--
-- TOC entry 7019 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.supt_new; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.supt_new IS 'SUPERFICIE DE TERRENO ACTUAL';


--
-- TOC entry 7020 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.supm_old; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.supm_old IS 'SUPERFICIE DE MEJORAS ANTERIOR';


--
-- TOC entry 7021 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.supm_new; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.supm_new IS 'SUPERFICIE DE MEJORAS ACTUAL';


--
-- TOC entry 7022 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.avalt_old; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.avalt_old IS 'AVALUO DE TERRENO ANTERIOR';


--
-- TOC entry 7023 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.avalt_new; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.avalt_new IS 'AVALUO DE TERRENO ACTUAL';


--
-- TOC entry 7024 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.avalm_old; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.avalm_old IS 'AVALUO DE MEJORAS ANTERIOR';


--
-- TOC entry 7025 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.avalm_new; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.avalm_new IS 'AVALUO DE MEJORAS ACTUAL';


--
-- TOC entry 7026 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.zonat_old; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.zonat_old IS 'ZONA TRIBUTARIA ANTERIOR';


--
-- TOC entry 7027 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.zonat_new; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.zonat_new IS 'ZONA TRIBUTARIA ACTUAL';


--
-- TOC entry 7028 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.serv_old; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.serv_old IS 'SERVICIO ANTERIOR';


--
-- TOC entry 7029 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.serv_new; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.serv_new IS 'SERVICIO ACTUAL';


--
-- TOC entry 7030 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7031 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN his_inm_cambio.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_cambio.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 324 (class 1259 OID 5284633)
-- Name: seq_his_inm_mej; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_his_inm_mej
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_his_inm_mej OWNER TO postgres;

--
-- TOC entry 325 (class 1259 OID 5284635)
-- Name: his_inm_mej; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.his_inm_mej (
    his_id integer DEFAULT nextval('public.seq_his_inm_mej'::regclass) NOT NULL,
    obj_id character varying(8) NOT NULL,
    pol smallint NOT NULL,
    perdesde integer NOT NULL,
    perhasta integer NOT NULL,
    tori character varying(1) NOT NULL,
    tform character varying(2),
    nivel numeric(5,2) NOT NULL,
    tdest smallint NOT NULL,
    tobra smallint NOT NULL,
    anio smallint NOT NULL,
    est smallint NOT NULL,
    supcub numeric(9,2) NOT NULL,
    supsemi numeric(9,2) NOT NULL,
    plantas smallint DEFAULT 1 NOT NULL,
    cat character varying(2) NOT NULL,
    item01 smallint,
    item02 smallint,
    item03 smallint,
    item04 smallint,
    item05 smallint,
    item06 smallint,
    item07 smallint,
    item08 smallint,
    item09 smallint,
    item10 smallint,
    item11 smallint,
    item12 smallint,
    item13 smallint,
    item14 smallint,
    item15 smallint,
    estado character varying(1),
    fchmod timestamp without time zone NOT NULL,
    usrmod smallint NOT NULL,
    operacion character varying(1),
    fch_bd timestamp without time zone,
    usr_bd character varying(20)
);


ALTER TABLE public.his_inm_mej OWNER TO postgres;

--
-- TOC entry 7032 (class 0 OID 0)
-- Dependencies: 325
-- Name: TABLE his_inm_mej; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.his_inm_mej IS 'AUDITORIA DE MEJORAS EN INMUEBLES';


--
-- TOC entry 7033 (class 0 OID 0)
-- Dependencies: 325
-- Name: COLUMN his_inm_mej.his_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_mej.his_id IS 'IDENTIFICADOR DE OLD_INMUEBLES_MEJORAS';


--
-- TOC entry 7034 (class 0 OID 0)
-- Dependencies: 325
-- Name: COLUMN his_inm_mej.operacion; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_mej.operacion IS 'TIPO DE OPERACION - I:INSERT, U:UPDATE, D:DELETE';


--
-- TOC entry 7035 (class 0 OID 0)
-- Dependencies: 325
-- Name: COLUMN his_inm_mej.fch_bd; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_mej.fch_bd IS 'FECHA DEL CAMBIO SEGUN BD';


--
-- TOC entry 7036 (class 0 OID 0)
-- Dependencies: 325
-- Name: COLUMN his_inm_mej.usr_bd; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_inm_mej.usr_bd IS 'USUARIO BD';


--
-- TOC entry 326 (class 1259 OID 5284640)
-- Name: his_objeto; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.his_objeto (
    his_id integer NOT NULL,
    obj_id character varying(8) NOT NULL,
    tobj smallint NOT NULL,
    num character varying(8) NOT NULL,
    nombre character varying(50) DEFAULT ''::character varying NOT NULL,
    obj_dato character varying(25) DEFAULT ''::character varying,
    est character(1),
    distrib smallint,
    tdistrib smallint,
    obs character varying(1000),
    objunifica character varying(8),
    vigencia smallint DEFAULT 0,
    claveweb character varying(10),
    fchalta timestamp without time zone,
    usralta smallint,
    fchbaja timestamp without time zone,
    usrbaja smallint,
    tbaja smallint,
    fchmod timestamp without time zone,
    usrmod smallint,
    operacion character varying(1),
    fch_bd timestamp(0) without time zone,
    usr_bd character varying(20)
);


ALTER TABLE public.his_objeto OWNER TO postgres;

--
-- TOC entry 7037 (class 0 OID 0)
-- Dependencies: 326
-- Name: TABLE his_objeto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.his_objeto IS 'AUDITORÍA DE OBJETOS';


--
-- TOC entry 7038 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN his_objeto.his_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto.his_id IS 'IDENTIFICADOR DE OLD_OBJETOS';


--
-- TOC entry 7039 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN his_objeto.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 7040 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN his_objeto.tobj; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto.tobj IS 'CODIGO DE TIPO DE OBJETO';


--
-- TOC entry 7041 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN his_objeto.num; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto.num IS 'CODIGO DE NUM - RESPONSABLE';


--
-- TOC entry 7042 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN his_objeto.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto.nombre IS 'NOMBRE';


--
-- TOC entry 7043 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN his_objeto.obj_dato; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto.obj_dato IS 'DATOS ALTERNATIVOS DEL OBJETO';


--
-- TOC entry 7044 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN his_objeto.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto.est IS 'ESTADO';


--
-- TOC entry 7045 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN his_objeto.distrib; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto.distrib IS 'CODIGO DE DISTRIBUIDOR';


--
-- TOC entry 7046 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN his_objeto.tdistrib; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto.tdistrib IS 'TIPO DE DISTRIBUCION';


--
-- TOC entry 7047 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN his_objeto.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto.obs IS 'OBSERVACIONES';


--
-- TOC entry 7048 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN his_objeto.objunifica; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto.objunifica IS 'CODIGO DE OBJETO CON EL QUE ESTA UNIFICADO';


--
-- TOC entry 7049 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN his_objeto.vigencia; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto.vigencia IS 'A?O DE VIGENCIA';


--
-- TOC entry 7050 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN his_objeto.claveweb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto.claveweb IS 'CALVE USADA PARA WEB';


--
-- TOC entry 7051 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN his_objeto.fchalta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto.fchalta IS 'FECHA DE ALTA';


--
-- TOC entry 7052 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN his_objeto.usralta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto.usralta IS 'USUARIO QUE DIO EL ALTA';


--
-- TOC entry 7053 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN his_objeto.fchbaja; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto.fchbaja IS 'FECHA DE BAJA';


--
-- TOC entry 7054 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN his_objeto.usrbaja; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto.usrbaja IS 'USUARIO QUE DIO LA BAJA';


--
-- TOC entry 7055 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN his_objeto.tbaja; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto.tbaja IS 'CODIGO DE MOTIVO DE BAJA';


--
-- TOC entry 7056 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN his_objeto.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7057 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN his_objeto.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 7058 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN his_objeto.operacion; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto.operacion IS 'TIPO DE OPERACION - I:INSERT, U:UPDATE, D:DELETE';


--
-- TOC entry 7059 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN his_objeto.fch_bd; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto.fch_bd IS 'FECHA DEL CAMBIO SEGUN BD';


--
-- TOC entry 7060 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN his_objeto.usr_bd; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto.usr_bd IS 'USUARIO BD';


--
-- TOC entry 327 (class 1259 OID 5284649)
-- Name: his_objeto_item; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.his_objeto_item (
    his_id integer DEFAULT nextval(('public.seq_his_objeto_item'::text)::regclass) NOT NULL,
    obj_id character varying(8) NOT NULL,
    subcta smallint DEFAULT 0 NOT NULL,
    orden smallint DEFAULT 0 NOT NULL,
    trib_id smallint NOT NULL,
    item_id smallint NOT NULL,
    perdesde integer NOT NULL,
    perhasta integer,
    param1 numeric(12,2) DEFAULT 0 NOT NULL,
    param2 numeric(12,2),
    expe character varying(12),
    obs character varying(250) NOT NULL,
    exen_id integer,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL,
    operacion character varying(1),
    fch_bd timestamp(0) without time zone,
    usr_bd character varying(20)
);


ALTER TABLE public.his_objeto_item OWNER TO postgres;

--
-- TOC entry 7061 (class 0 OID 0)
-- Dependencies: 327
-- Name: TABLE his_objeto_item; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.his_objeto_item IS 'HISTORICOS DE ITEMS ASIGNADOS A OBJETOS';


--
-- TOC entry 7062 (class 0 OID 0)
-- Dependencies: 327
-- Name: COLUMN his_objeto_item.his_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto_item.his_id IS 'IDENTIFICADOR DE HIS_OBJETO_ITEM';


--
-- TOC entry 7063 (class 0 OID 0)
-- Dependencies: 327
-- Name: COLUMN his_objeto_item.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto_item.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 7064 (class 0 OID 0)
-- Dependencies: 327
-- Name: COLUMN his_objeto_item.subcta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto_item.subcta IS 'NUMERO DE SUBCUENTA';


--
-- TOC entry 7065 (class 0 OID 0)
-- Dependencies: 327
-- Name: COLUMN his_objeto_item.orden; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto_item.orden IS 'NUMERO DE ORDEN';


--
-- TOC entry 7066 (class 0 OID 0)
-- Dependencies: 327
-- Name: COLUMN his_objeto_item.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto_item.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 7067 (class 0 OID 0)
-- Dependencies: 327
-- Name: COLUMN his_objeto_item.item_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto_item.item_id IS 'CODIGO DEL ITEM';


--
-- TOC entry 7068 (class 0 OID 0)
-- Dependencies: 327
-- Name: COLUMN his_objeto_item.perdesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto_item.perdesde IS 'PERIODO DESDE';


--
-- TOC entry 7069 (class 0 OID 0)
-- Dependencies: 327
-- Name: COLUMN his_objeto_item.perhasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto_item.perhasta IS 'PERIODO HASTA';


--
-- TOC entry 7070 (class 0 OID 0)
-- Dependencies: 327
-- Name: COLUMN his_objeto_item.param1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto_item.param1 IS 'PARAMETRO 1';


--
-- TOC entry 7071 (class 0 OID 0)
-- Dependencies: 327
-- Name: COLUMN his_objeto_item.param2; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto_item.param2 IS 'PARAMETRO 2';


--
-- TOC entry 7072 (class 0 OID 0)
-- Dependencies: 327
-- Name: COLUMN his_objeto_item.expe; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto_item.expe IS 'EXPEDIENTE';


--
-- TOC entry 7073 (class 0 OID 0)
-- Dependencies: 327
-- Name: COLUMN his_objeto_item.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto_item.obs IS 'OBSERVACIONES';


--
-- TOC entry 7074 (class 0 OID 0)
-- Dependencies: 327
-- Name: COLUMN his_objeto_item.exen_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto_item.exen_id IS 'CODIGO DE EXIMISION';


--
-- TOC entry 7075 (class 0 OID 0)
-- Dependencies: 327
-- Name: COLUMN his_objeto_item.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto_item.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7076 (class 0 OID 0)
-- Dependencies: 327
-- Name: COLUMN his_objeto_item.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto_item.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 7077 (class 0 OID 0)
-- Dependencies: 327
-- Name: COLUMN his_objeto_item.operacion; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto_item.operacion IS 'TIPO DE OPERACION - I:INSERT, U:UPDATE, D:DELETE';


--
-- TOC entry 7078 (class 0 OID 0)
-- Dependencies: 327
-- Name: COLUMN his_objeto_item.fch_bd; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto_item.fch_bd IS 'FECHA DEL CAMBIO SEGUN BD';


--
-- TOC entry 7079 (class 0 OID 0)
-- Dependencies: 327
-- Name: COLUMN his_objeto_item.usr_bd; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto_item.usr_bd IS 'USUARIO BD';


--
-- TOC entry 328 (class 1259 OID 5284657)
-- Name: his_objeto_reemplaza; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.his_objeto_reemplaza (
    oldobj character varying(8) NOT NULL,
    newobj character varying(8) NOT NULL,
    fchmod timestamp without time zone,
    usrmod smallint
);


ALTER TABLE public.his_objeto_reemplaza OWNER TO postgres;

--
-- TOC entry 7080 (class 0 OID 0)
-- Dependencies: 328
-- Name: TABLE his_objeto_reemplaza; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.his_objeto_reemplaza IS 'REGISTRO DE UNIFICACIONES O REEMPLAZO DE PERSONAS';


--
-- TOC entry 7081 (class 0 OID 0)
-- Dependencies: 328
-- Name: COLUMN his_objeto_reemplaza.oldobj; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto_reemplaza.oldobj IS 'CODIGO DE OBJETO A REMPLAZAR';


--
-- TOC entry 7082 (class 0 OID 0)
-- Dependencies: 328
-- Name: COLUMN his_objeto_reemplaza.newobj; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto_reemplaza.newobj IS 'CODIGO DE OBJETO DESTINO';


--
-- TOC entry 7083 (class 0 OID 0)
-- Dependencies: 328
-- Name: COLUMN his_objeto_reemplaza.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto_reemplaza.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7084 (class 0 OID 0)
-- Dependencies: 328
-- Name: COLUMN his_objeto_reemplaza.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_objeto_reemplaza.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 329 (class 1259 OID 5284660)
-- Name: his_persona; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.his_persona (
    his_id integer,
    obj_id character varying(8),
    inscrip integer,
    tipo smallint,
    tdoc smallint,
    ndoc bigint,
    fchnac date,
    sexo character(1),
    nacionalidad smallint,
    estcivil smallint,
    clasif smallint,
    iva smallint,
    cuit character varying(11),
    ag_rete character varying(7),
    ag_rete_manual smallint,
    tel character varying(15),
    cel character varying(15),
    mail character varying(40),
    exis_doc smallint,
    exis_insc smallint,
    exis_foto smallint,
    est_ib character varying(1),
    ib character varying(11),
    orgjuri smallint,
    tipoliq character varying(2),
    contador smallint,
    contador_verdeuda smallint,
    fchalta_ib date,
    fchbaja_ib date,
    nombre_fantasia character varying(50),
    tbaja_ib character varying(2),
    operacion character varying(1),
    fch_bd timestamp without time zone,
    usr_bd character varying(20)
);


ALTER TABLE public.his_persona OWNER TO postgres;

--
-- TOC entry 330 (class 1259 OID 5284663)
-- Name: his_persona_reemplaza; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.his_persona_reemplaza (
    oldnum character varying(8) NOT NULL,
    oldnombre character varying(50),
    oldtdoc smallint,
    oldndoc bigint,
    oldcuit character varying(11),
    newnum character varying(8),
    newnombre character varying(50),
    newtdoc smallint,
    newndoc bigint,
    newcuit character varying(11),
    est character(1),
    fchmod timestamp without time zone,
    usrmod smallint
);


ALTER TABLE public.his_persona_reemplaza OWNER TO postgres;

--
-- TOC entry 7086 (class 0 OID 0)
-- Dependencies: 330
-- Name: TABLE his_persona_reemplaza; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.his_persona_reemplaza IS 'REGISTRO DE UNIFICACIONES O REEMPLAZO DE PERSONAS';


--
-- TOC entry 7087 (class 0 OID 0)
-- Dependencies: 330
-- Name: COLUMN his_persona_reemplaza.oldnum; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_persona_reemplaza.oldnum IS 'CODIGO DE OBJETO A REMPLAZAR';


--
-- TOC entry 7088 (class 0 OID 0)
-- Dependencies: 330
-- Name: COLUMN his_persona_reemplaza.oldnombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_persona_reemplaza.oldnombre IS 'NOMBRE DEL OBJETO A REMPLAZAR';


--
-- TOC entry 7089 (class 0 OID 0)
-- Dependencies: 330
-- Name: COLUMN his_persona_reemplaza.oldtdoc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_persona_reemplaza.oldtdoc IS 'CODIGO DE TIPO DE DOCUMENTO A REMPLAZAR';


--
-- TOC entry 7090 (class 0 OID 0)
-- Dependencies: 330
-- Name: COLUMN his_persona_reemplaza.oldndoc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_persona_reemplaza.oldndoc IS 'NUMERO DE DOCUMENTO A REMPLAZAR';


--
-- TOC entry 7091 (class 0 OID 0)
-- Dependencies: 330
-- Name: COLUMN his_persona_reemplaza.oldcuit; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_persona_reemplaza.oldcuit IS 'CUIT ANTERIOR';


--
-- TOC entry 7092 (class 0 OID 0)
-- Dependencies: 330
-- Name: COLUMN his_persona_reemplaza.newnum; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_persona_reemplaza.newnum IS 'CODIGO DE OBJETO DESTINO';


--
-- TOC entry 7093 (class 0 OID 0)
-- Dependencies: 330
-- Name: COLUMN his_persona_reemplaza.newnombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_persona_reemplaza.newnombre IS 'NOMBRE DEL OBJETO DESTINO';


--
-- TOC entry 7094 (class 0 OID 0)
-- Dependencies: 330
-- Name: COLUMN his_persona_reemplaza.newtdoc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_persona_reemplaza.newtdoc IS 'CODIGO DE TIPO DE DOCUMENTO A REMPLZAR';


--
-- TOC entry 7095 (class 0 OID 0)
-- Dependencies: 330
-- Name: COLUMN his_persona_reemplaza.newndoc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_persona_reemplaza.newndoc IS 'NUMERO DE DOCUMENTO A REMPLAZAR';


--
-- TOC entry 7096 (class 0 OID 0)
-- Dependencies: 330
-- Name: COLUMN his_persona_reemplaza.newcuit; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_persona_reemplaza.newcuit IS 'CUIT A REEMPLAZAR';


--
-- TOC entry 7097 (class 0 OID 0)
-- Dependencies: 330
-- Name: COLUMN his_persona_reemplaza.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_persona_reemplaza.est IS 'ESTADO (A/B)';


--
-- TOC entry 7098 (class 0 OID 0)
-- Dependencies: 330
-- Name: COLUMN his_persona_reemplaza.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_persona_reemplaza.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7099 (class 0 OID 0)
-- Dependencies: 330
-- Name: COLUMN his_persona_reemplaza.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_persona_reemplaza.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 331 (class 1259 OID 5284666)
-- Name: his_persona_reemplaza_ctacte; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.his_persona_reemplaza_ctacte (
    oldnum character varying(8) NOT NULL,
    ctacte_id integer NOT NULL
);


ALTER TABLE public.his_persona_reemplaza_ctacte OWNER TO postgres;

--
-- TOC entry 7100 (class 0 OID 0)
-- Dependencies: 331
-- Name: TABLE his_persona_reemplaza_ctacte; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.his_persona_reemplaza_ctacte IS 'AUDITORÍA DE REEMPLAZO DE PERSONAS EN CTACTE';


--
-- TOC entry 332 (class 1259 OID 5284669)
-- Name: his_persona_reemplaza_objeto; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.his_persona_reemplaza_objeto (
    oldnum character varying(8) NOT NULL,
    obj_id character varying(8) NOT NULL
);


ALTER TABLE public.his_persona_reemplaza_objeto OWNER TO postgres;

--
-- TOC entry 7101 (class 0 OID 0)
-- Dependencies: 332
-- Name: TABLE his_persona_reemplaza_objeto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.his_persona_reemplaza_objeto IS 'AUDITORÍA DE REEMPLAZO DE PERSONAS EN OBJETOS';


--
-- TOC entry 333 (class 1259 OID 5284672)
-- Name: his_persona_reemplaza_plan; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.his_persona_reemplaza_plan (
    oldnum character varying(8) NOT NULL,
    plan_id integer NOT NULL
);


ALTER TABLE public.his_persona_reemplaza_plan OWNER TO postgres;

--
-- TOC entry 7102 (class 0 OID 0)
-- Dependencies: 333
-- Name: TABLE his_persona_reemplaza_plan; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.his_persona_reemplaza_plan IS 'AUDITORÍA DE REEMPLAZO DE PERSONAS EN PLANES';


--
-- TOC entry 334 (class 1259 OID 5284675)
-- Name: his_plan; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.his_plan (
    his_id integer NOT NULL,
    plan_id integer NOT NULL,
    tplan smallint NOT NULL,
    obj_id character varying(8) NOT NULL,
    num character varying(8) NOT NULL,
    resp character varying(50) NOT NULL,
    resptdoc smallint,
    respndoc bigint,
    resptel character varying(15),
    nominal numeric(12,2) NOT NULL,
    accesor numeric(12,2) NOT NULL,
    multa numeric(9,2) NOT NULL,
    financia numeric(12,2) NOT NULL,
    sellado numeric(12,2) NOT NULL,
    anticipo numeric(12,2) NOT NULL,
    origen smallint NOT NULL,
    tpago smallint NOT NULL,
    caja_id smallint,
    temple smallint DEFAULT 0,
    temple_area character varying(20) DEFAULT ''::character varying,
    bco_suc smallint DEFAULT 0,
    bco_tcta smallint DEFAULT 0,
    tpago_nro character varying(22) DEFAULT 0,
    cuotas smallint NOT NULL,
    montocuo numeric(12,2) NOT NULL,
    descnominal numeric(12,2) DEFAULT 0,
    descinteres numeric(12,2) DEFAULT 0,
    descmulta numeric(12,2) DEFAULT 0,
    interes numeric(12,2) DEFAULT 0,
    obs character varying(250) DEFAULT ''::character varying,
    est smallint NOT NULL,
    fchalta timestamp without time zone NOT NULL,
    usralta smallint,
    fchbaja timestamp without time zone,
    fchimputa timestamp without time zone,
    fchdecae timestamp without time zone,
    fchconsolida timestamp without time zone NOT NULL,
    planant character varying(15),
    distrib smallint NOT NULL,
    tdistrib smallint DEFAULT 0 NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint DEFAULT 0 NOT NULL,
    operacion character varying(1),
    fch_bd timestamp without time zone,
    usr_bd character varying(20)
);


ALTER TABLE public.his_plan OWNER TO postgres;

--
-- TOC entry 7103 (class 0 OID 0)
-- Dependencies: 334
-- Name: TABLE his_plan; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.his_plan IS 'AUDITORIA DE PLANES';


--
-- TOC entry 7104 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.his_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.his_id IS 'IDENTIFICADOR DE HISTORICO DE PLANES';


--
-- TOC entry 7105 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.plan_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.plan_id IS 'IDENTIFICADOR DEL PLAN';


--
-- TOC entry 7106 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.tplan; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.tplan IS 'CODIGO DE TIPO DE PLAN';


--
-- TOC entry 7107 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 7108 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.num; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.num IS 'CODIGO DE NUM - RESPONSABLE';


--
-- TOC entry 7109 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.resp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.resp IS 'NOMBRE DEL RESPONSABLE';


--
-- TOC entry 7110 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.resptdoc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.resptdoc IS 'CODIGO DE TIPO DE DOCUMENTO DEL RESPONSABLE';


--
-- TOC entry 7111 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.respndoc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.respndoc IS 'NUMERO DE DOCUMENTO DEL RESPONSABLE';


--
-- TOC entry 7112 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.resptel; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.resptel IS 'TELEFONO DEL RESPONSABLE';


--
-- TOC entry 7113 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.nominal; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.nominal IS 'MONTO NOMINAL';


--
-- TOC entry 7114 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.accesor; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.accesor IS 'MONTO ACCESORIOS';


--
-- TOC entry 7115 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.multa; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.multa IS 'MONTO MULTA';


--
-- TOC entry 7116 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.financia; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.financia IS 'MONTO FINANCIACION';


--
-- TOC entry 7117 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.sellado; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.sellado IS 'MONTO SELLADO';


--
-- TOC entry 7118 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.anticipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.anticipo IS 'MONTO ANTICIPO';


--
-- TOC entry 7119 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.origen; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.origen IS 'CODIGO DE ORIGEN';


--
-- TOC entry 7120 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.tpago; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.tpago IS 'CODIGO DE CAJA VINCULADA';


--
-- TOC entry 7121 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.caja_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.caja_id IS 'CODIGO DE CAJA VINCULADA';


--
-- TOC entry 7122 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.temple; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.temple IS 'TIPO DE EMPLEADO';


--
-- TOC entry 7123 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.temple_area; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.temple_area IS 'AREA DE TRABAJO';


--
-- TOC entry 7124 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.bco_suc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.bco_suc IS 'SUCURSAL BANCARIA';


--
-- TOC entry 7125 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.bco_tcta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.bco_tcta IS 'TIPO DE CUENTA';


--
-- TOC entry 7126 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.tpago_nro; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.tpago_nro IS 'NUMERO IDENTIFICADOR';


--
-- TOC entry 7127 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.cuotas; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.cuotas IS 'CANTIDAD DE CUOTAS';


--
-- TOC entry 7128 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.montocuo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.montocuo IS 'MONTO DE CADA CUOTA';


--
-- TOC entry 7129 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.descnominal; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.descnominal IS 'DESCUENTO DE NOMINAL';


--
-- TOC entry 7130 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.descinteres; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.descinteres IS 'DESCUENTO DE INTERES';


--
-- TOC entry 7131 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.descmulta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.descmulta IS 'DESCUENTO DE MULTA';


--
-- TOC entry 7132 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.interes; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.interes IS 'DESCUENTO DE INTERES';


--
-- TOC entry 7133 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.obs IS 'OBSERVACIONES';


--
-- TOC entry 7134 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.est IS 'ESTADO ';


--
-- TOC entry 7135 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.fchalta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.fchalta IS 'FECHA DE ALTA';


--
-- TOC entry 7136 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.usralta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.usralta IS 'CODIGO DE USUARIO QUE DIO DE ALTA';


--
-- TOC entry 7137 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.fchbaja; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.fchbaja IS 'FECHA DE BAJA';


--
-- TOC entry 7138 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.fchimputa; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.fchimputa IS 'FECHA DE IMPUTACION';


--
-- TOC entry 7139 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.fchdecae; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.fchdecae IS 'FECHA DE DECAIMIENTO';


--
-- TOC entry 7140 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.planant; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.planant IS 'CODIGO DE PLAN ANTERIOR';


--
-- TOC entry 7141 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.tdistrib; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.tdistrib IS 'TIPO DE DISTRIBUCIÓN';


--
-- TOC entry 7142 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.operacion; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.operacion IS 'TIPO DE OPERACION - I:INSERT, U:UPDATE, D:DELETE';


--
-- TOC entry 7143 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.fch_bd; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.fch_bd IS 'FECHA DEL CAMBIO SEGUN BD';


--
-- TOC entry 7144 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN his_plan.usr_bd; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.his_plan.usr_bd IS 'USUARIO BD';


--
-- TOC entry 335 (class 1259 OID 5284691)
-- Name: his_plan_his_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.his_plan_his_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.his_plan_his_id_seq OWNER TO postgres;

--
-- TOC entry 7146 (class 0 OID 0)
-- Dependencies: 335
-- Name: his_plan_his_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.his_plan_his_id_seq OWNED BY public.his_plan.his_id;


--
-- TOC entry 336 (class 1259 OID 5284693)
-- Name: his_rodado; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.his_rodado (
    his_id integer,
    obj_id character varying(8),
    talta smallint,
    perini integer,
    tliq smallint,
    aforo_id character varying(8),
    cat smallint,
    marca smallint,
    modelo smallint,
    modelo_nom character varying(50),
    anio smallint,
    dominio character varying(9),
    dominioant character varying(9),
    marcamotor smallint,
    nromotor character varying(30),
    marcachasis smallint,
    nrochasis character varying(30),
    peso numeric,
    cilindrada smallint,
    deleg integer,
    color character varying(15),
    combustible smallint,
    uso smallint,
    conductor character varying(8),
    fchcompra date,
    tform character varying(1),
    remito character varying(10),
    remito_anio smallint,
    operacion character varying(1),
    fch_bd timestamp without time zone,
    usr_bd character varying(20)
);


ALTER TABLE public.his_rodado OWNER TO postgres;

--
-- TOC entry 337 (class 1259 OID 5284703)
-- Name: inm; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm (
    obj_id character varying(8) NOT NULL,
    nc character varying(26) NOT NULL,
    s1 character varying(3) DEFAULT ''::character varying,
    s2 character varying(3) DEFAULT ''::character varying,
    s3 character varying(3) DEFAULT ''::character varying,
    manz character varying(6) NOT NULL,
    parc character varying(5) NOT NULL,
    uf character varying(5) NOT NULL,
    porcuf numeric(9,4),
    nc_ant character varying(26) NOT NULL,
    parp integer NOT NULL,
    parporigen integer,
    plano integer NOT NULL,
    anio_mensura smallint,
    expe character varying(12),
    urbsub character varying(2) NOT NULL,
    regimen smallint NOT NULL,
    tinm character varying(1),
    titularidad character varying(2) NOT NULL,
    uso smallint,
    tmatric character varying(1),
    matric character varying(15),
    fchmatric date,
    anio smallint,
    comprador character varying(50),
    supt numeric(12,4),
    supt_pasillo numeric(9,2),
    supm numeric(12,2),
    avalt numeric(12,2),
    avalm numeric(12,2),
    frente numeric(12,2),
    fondo numeric(12,2),
    es_esquina smallint,
    es_calleppal smallint,
    zonat character varying(2),
    zonav smallint,
    zonaop smallint,
    agua smallint,
    cloaca smallint,
    gas smallint,
    alum smallint,
    pav smallint,
    valbas numeric(12,2),
    coef numeric(5,2),
    barr_id smallint,
    patrimonio smallint,
    objeto_superp character varying(8) NOT NULL,
    archivo character varying(20),
    unihab smallint DEFAULT 0 NOT NULL
);


ALTER TABLE public.inm OWNER TO postgres;

--
-- TOC entry 7148 (class 0 OID 0)
-- Dependencies: 337
-- Name: TABLE inm; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm IS 'DATOS PRINCIPALES DEL OBJETO INMUEBLE';


--
-- TOC entry 7149 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 7150 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.nc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.nc IS 'NOMENCLATURA';


--
-- TOC entry 7151 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.s1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.s1 IS 'SECTOR';


--
-- TOC entry 7152 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.s2; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.s2 IS 'GRUPO';


--
-- TOC entry 7153 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.s3; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.s3 IS 'GRUPO 2';


--
-- TOC entry 7154 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.manz; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.manz IS 'NUMERO DE MANZANA';


--
-- TOC entry 7155 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.parc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.parc IS 'NUMERO DE PARCELA';


--
-- TOC entry 7156 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.uf; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.uf IS 'SI ES UNIDAD FUNCIONAL';


--
-- TOC entry 7157 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.porcuf; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.porcuf IS 'PORCENTAJE DE UNIDAD FUNCIONAL';


--
-- TOC entry 7158 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.nc_ant; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.nc_ant IS 'NOMENCLATURA ANTERIOR';


--
-- TOC entry 7159 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.parp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.parp IS 'PARTIDA PROVINCIAL';


--
-- TOC entry 7160 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.parporigen; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.parporigen IS 'PARTIDA PROVINCIAL ORIGEN';


--
-- TOC entry 7161 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.plano; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.plano IS 'PLANO';


--
-- TOC entry 7162 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.anio_mensura; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.anio_mensura IS 'AÑO DE LA MENSURA';


--
-- TOC entry 7163 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.expe; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.expe IS 'IDENTIFICACION DEL EXPEDIENTE';


--
-- TOC entry 7164 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.urbsub; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.urbsub IS 'CODIGO DE URBSUB';


--
-- TOC entry 7165 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.regimen; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.regimen IS 'CODIGO DE REGIMEN';


--
-- TOC entry 7166 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.tinm; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.tinm IS 'CODIGO DE TIPO DE INMUEBLE';


--
-- TOC entry 7167 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.titularidad; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.titularidad IS 'CODIGO DE TITULARIDAD';


--
-- TOC entry 7168 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.uso; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.uso IS 'CODIGO DE TIPO DE USO';


--
-- TOC entry 7169 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.tmatric; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.tmatric IS 'TIPO DE MATRICULA';


--
-- TOC entry 7170 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.matric; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.matric IS 'NUMERO DE MATRICULA';


--
-- TOC entry 7171 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.fchmatric; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.fchmatric IS 'FECHA DE LA MATRICULA';


--
-- TOC entry 7172 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.anio IS 'A?O DE MATRICULA';


--
-- TOC entry 7173 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.comprador; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.comprador IS 'NOMBRE DEL COMPRADOR';


--
-- TOC entry 7174 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.supt; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.supt IS 'SUPERFICIE DEL TERRENO';


--
-- TOC entry 7175 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.supt_pasillo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.supt_pasillo IS 'SUPERFICIE DE PASILLO';


--
-- TOC entry 7176 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.supm; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.supm IS 'SUPERFICIE DE MEJORAS';


--
-- TOC entry 7177 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.avalt; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.avalt IS 'AVALUO DEL TERRENO';


--
-- TOC entry 7178 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.avalm; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.avalm IS 'AVALUO DE LAS MEJORAS';


--
-- TOC entry 7179 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.frente; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.frente IS 'METROS DE FRENTE';


--
-- TOC entry 7180 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.fondo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.fondo IS 'METROS DE FONDO';


--
-- TOC entry 7181 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.es_esquina; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.es_esquina IS 'DETERMINACION DE ESQUINA';


--
-- TOC entry 7182 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.es_calleppal; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.es_calleppal IS 'INDICA SI ES CALLE PRINCIPAL';


--
-- TOC entry 7183 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.zonat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.zonat IS 'CODIGO DE ZONA TRIBUTARIA';


--
-- TOC entry 7184 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.zonav; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.zonav IS 'CODIGO DE ZONA VALUATORIA';


--
-- TOC entry 7185 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.zonaop; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.zonaop IS 'CODIGO DE ZONA OBRAS PRIVADAS';


--
-- TOC entry 7186 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.agua; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.agua IS 'INDICA SI DISPONE DEL SERVICIO DE AGUA';


--
-- TOC entry 7187 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.cloaca; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.cloaca IS 'INDICA SI DISPONE DEL SERVICIO DE CLOACA';


--
-- TOC entry 7188 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.gas; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.gas IS 'INDICA SI DISPONE DEL SERVICIO DE GAS';


--
-- TOC entry 7189 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.alum; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.alum IS 'CODIGO DE ALUMBRADO';


--
-- TOC entry 7190 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.pav; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.pav IS 'CODIGO DE PAVIMENTO';


--
-- TOC entry 7191 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.valbas; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.valbas IS 'VALOR BASICO';


--
-- TOC entry 7192 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.coef; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.coef IS 'COEFICIENTE DE AJUSTE';


--
-- TOC entry 7193 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.barr_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.barr_id IS 'CODIGO DE BARRIO';


--
-- TOC entry 7194 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.patrimonio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.patrimonio IS 'SI EL INMUEBLE REPRESENTA PATRIMONIO CULTURAL';


--
-- TOC entry 7195 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.objeto_superp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.objeto_superp IS 'CODIGO DE OBJETO EN SUPERPOSICION';


--
-- TOC entry 7196 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN inm.archivo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm.archivo IS 'ARCHIVO';


--
-- TOC entry 338 (class 1259 OID 5284710)
-- Name: inm_avaluo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_avaluo (
    obj_id character varying(8) NOT NULL,
    perdesde integer NOT NULL,
    perhasta integer,
    supt numeric(12,4) NOT NULL,
    supm numeric(12,2) NOT NULL,
    avalt numeric(12,2) NOT NULL,
    avalm numeric(12,2) NOT NULL,
    frente numeric(12,2) NOT NULL,
    regimen smallint NOT NULL,
    es_esquina smallint NOT NULL,
    es_calleppal smallint NOT NULL,
    zonat character varying(2) NOT NULL,
    zonav smallint,
    zonaop smallint NOT NULL,
    agua smallint NOT NULL,
    cloaca smallint NOT NULL,
    gas smallint NOT NULL,
    alum smallint NOT NULL,
    pav smallint NOT NULL,
    fchmod timestamp without time zone DEFAULT now(),
    usrmod smallint DEFAULT 0
);


ALTER TABLE public.inm_avaluo OWNER TO postgres;

--
-- TOC entry 7198 (class 0 OID 0)
-- Dependencies: 338
-- Name: TABLE inm_avaluo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_avaluo IS 'DATOS DE AVALUOS POR PER?ODOS PARA CADA INMUEBLE';


--
-- TOC entry 7199 (class 0 OID 0)
-- Dependencies: 338
-- Name: COLUMN inm_avaluo.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_avaluo.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 7200 (class 0 OID 0)
-- Dependencies: 338
-- Name: COLUMN inm_avaluo.perdesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_avaluo.perdesde IS 'PERIODO DESDE';


--
-- TOC entry 7201 (class 0 OID 0)
-- Dependencies: 338
-- Name: COLUMN inm_avaluo.perhasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_avaluo.perhasta IS 'PERIODO HASTA';


--
-- TOC entry 7202 (class 0 OID 0)
-- Dependencies: 338
-- Name: COLUMN inm_avaluo.supt; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_avaluo.supt IS 'SUPERFICIE DE TERRENO';


--
-- TOC entry 7203 (class 0 OID 0)
-- Dependencies: 338
-- Name: COLUMN inm_avaluo.supm; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_avaluo.supm IS 'SUPERFICIE DE MEJORAS';


--
-- TOC entry 7204 (class 0 OID 0)
-- Dependencies: 338
-- Name: COLUMN inm_avaluo.avalt; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_avaluo.avalt IS 'AVALUO DE TERRENO';


--
-- TOC entry 7205 (class 0 OID 0)
-- Dependencies: 338
-- Name: COLUMN inm_avaluo.avalm; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_avaluo.avalm IS 'AVALUO DE LAS MEJORAS';


--
-- TOC entry 7206 (class 0 OID 0)
-- Dependencies: 338
-- Name: COLUMN inm_avaluo.frente; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_avaluo.frente IS 'METROS DE FRENTE';


--
-- TOC entry 7207 (class 0 OID 0)
-- Dependencies: 338
-- Name: COLUMN inm_avaluo.regimen; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_avaluo.regimen IS 'CODIGO DE REGIMEN';


--
-- TOC entry 7208 (class 0 OID 0)
-- Dependencies: 338
-- Name: COLUMN inm_avaluo.es_esquina; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_avaluo.es_esquina IS 'DETERMINACION DE ESQUINA';


--
-- TOC entry 7209 (class 0 OID 0)
-- Dependencies: 338
-- Name: COLUMN inm_avaluo.es_calleppal; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_avaluo.es_calleppal IS 'INDICA SI ES CALLE PRINCIPAL';


--
-- TOC entry 7210 (class 0 OID 0)
-- Dependencies: 338
-- Name: COLUMN inm_avaluo.zonat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_avaluo.zonat IS 'CODIGO DE ZONA TRIBUTARIA';


--
-- TOC entry 7211 (class 0 OID 0)
-- Dependencies: 338
-- Name: COLUMN inm_avaluo.zonav; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_avaluo.zonav IS 'ZONA VALUATORIA';


--
-- TOC entry 7212 (class 0 OID 0)
-- Dependencies: 338
-- Name: COLUMN inm_avaluo.zonaop; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_avaluo.zonaop IS 'CODIGO DE ZONA OBRAS PRIVADAS';


--
-- TOC entry 7213 (class 0 OID 0)
-- Dependencies: 338
-- Name: COLUMN inm_avaluo.agua; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_avaluo.agua IS 'INDICA SI DISPONE DEL SERVICIO DE AGUA';


--
-- TOC entry 7214 (class 0 OID 0)
-- Dependencies: 338
-- Name: COLUMN inm_avaluo.cloaca; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_avaluo.cloaca IS 'INDICA SI DISPONE DEL SERVICIO DE CLOACA';


--
-- TOC entry 7215 (class 0 OID 0)
-- Dependencies: 338
-- Name: COLUMN inm_avaluo.gas; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_avaluo.gas IS 'INDICA SI DISPONE DEL SERVICIO DE GAS';


--
-- TOC entry 7216 (class 0 OID 0)
-- Dependencies: 338
-- Name: COLUMN inm_avaluo.alum; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_avaluo.alum IS 'CODIGO DE ALUMBRADO';


--
-- TOC entry 7217 (class 0 OID 0)
-- Dependencies: 338
-- Name: COLUMN inm_avaluo.pav; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_avaluo.pav IS 'CODIGO DE PAVIMENTO';


--
-- TOC entry 7218 (class 0 OID 0)
-- Dependencies: 338
-- Name: COLUMN inm_avaluo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_avaluo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7219 (class 0 OID 0)
-- Dependencies: 338
-- Name: COLUMN inm_avaluo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_avaluo.usrmod IS 'CODIGO DE USUARIO DE MODIFICACION';


--
-- TOC entry 339 (class 1259 OID 5284715)
-- Name: inm_frente; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_frente (
    obj_id character varying(8) NOT NULL,
    calle_id smallint NOT NULL,
    medida numeric(12,2) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.inm_frente OWNER TO postgres;

--
-- TOC entry 7220 (class 0 OID 0)
-- Dependencies: 339
-- Name: TABLE inm_frente; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_frente IS 'METROS DE FRENTE POR CALLE DE CADA INMUEBLE';


--
-- TOC entry 7221 (class 0 OID 0)
-- Dependencies: 339
-- Name: COLUMN inm_frente.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_frente.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 7222 (class 0 OID 0)
-- Dependencies: 339
-- Name: COLUMN inm_frente.calle_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_frente.calle_id IS 'CODIGO DE CALLE';


--
-- TOC entry 7223 (class 0 OID 0)
-- Dependencies: 339
-- Name: COLUMN inm_frente.medida; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_frente.medida IS 'METROS DE FRENTE';


--
-- TOC entry 7224 (class 0 OID 0)
-- Dependencies: 339
-- Name: COLUMN inm_frente.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_frente.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7225 (class 0 OID 0)
-- Dependencies: 339
-- Name: COLUMN inm_frente.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_frente.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 340 (class 1259 OID 5284719)
-- Name: inm_manz; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_manz (
    ncm character varying(12) NOT NULL,
    zonat smallint DEFAULT 0 NOT NULL,
    zonav smallint DEFAULT 0 NOT NULL,
    zonaop smallint DEFAULT 0 NOT NULL,
    barrio smallint
);


ALTER TABLE public.inm_manz OWNER TO postgres;

--
-- TOC entry 7226 (class 0 OID 0)
-- Dependencies: 340
-- Name: TABLE inm_manz; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_manz IS 'ZONAS SEGÚN LA NOMENCLATURA DE MANZANA';


--
-- TOC entry 7227 (class 0 OID 0)
-- Dependencies: 340
-- Name: COLUMN inm_manz.ncm; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_manz.ncm IS 'NOMENCLATURA';


--
-- TOC entry 7228 (class 0 OID 0)
-- Dependencies: 340
-- Name: COLUMN inm_manz.zonat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_manz.zonat IS 'CODIGO DE ZONA TRIBUTARIA';


--
-- TOC entry 7229 (class 0 OID 0)
-- Dependencies: 340
-- Name: COLUMN inm_manz.zonav; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_manz.zonav IS 'CODIGO DE ZONA VALUATORIA';


--
-- TOC entry 7230 (class 0 OID 0)
-- Dependencies: 340
-- Name: COLUMN inm_manz.zonaop; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_manz.zonaop IS 'CODIGO DE ZONA OBRAS PRIVADAS';


--
-- TOC entry 7231 (class 0 OID 0)
-- Dependencies: 340
-- Name: COLUMN inm_manz.barrio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_manz.barrio IS 'CODIGO DE BARRIO';


--
-- TOC entry 341 (class 1259 OID 5284725)
-- Name: inm_mej; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_mej (
    obj_id character varying(8) NOT NULL,
    pol smallint NOT NULL,
    perdesde integer NOT NULL,
    perhasta integer NOT NULL,
    tori character varying(1) NOT NULL,
    tform character varying(2),
    nivel numeric(5,2) NOT NULL,
    tdest smallint NOT NULL,
    tobra smallint NOT NULL,
    anio smallint NOT NULL,
    est smallint NOT NULL,
    supcub numeric(9,2) NOT NULL,
    supsemi numeric(9,2) NOT NULL,
    plantas smallint DEFAULT 1 NOT NULL,
    cat character varying(2) NOT NULL,
    item01 smallint,
    item02 smallint,
    item03 smallint,
    item04 smallint,
    item05 smallint,
    item06 smallint,
    item07 smallint,
    item08 smallint,
    item09 smallint,
    item10 smallint,
    item11 smallint,
    item12 smallint,
    item13 smallint,
    item14 smallint,
    item15 smallint,
    estado character varying(1),
    fchmod timestamp without time zone NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.inm_mej OWNER TO postgres;

--
-- TOC entry 7232 (class 0 OID 0)
-- Dependencies: 341
-- Name: TABLE inm_mej; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_mej IS 'DATOS DE LAS MEJORAS DE INMUEBLES';


--
-- TOC entry 7233 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 7234 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.pol; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.pol IS 'NUMERO DE POLIGONO';


--
-- TOC entry 7235 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.perdesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.perdesde IS 'PERIODO DESDE';


--
-- TOC entry 7236 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.perhasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.perhasta IS 'PERIODO HASTA';


--
-- TOC entry 7237 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.tori; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.tori IS 'CODIGO DE ORIGEN';


--
-- TOC entry 7238 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.tform; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.tform IS 'FORMULARIO PARA CATEGORIZACION DE MEJORAS';


--
-- TOC entry 7239 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.nivel; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.nivel IS 'NIVEL';


--
-- TOC entry 7240 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.tdest; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.tdest IS 'CODIGO DE DESTINO';


--
-- TOC entry 7241 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.tobra; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.tobra IS 'CODIGO DE OBRA';


--
-- TOC entry 7242 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.anio IS 'AÑO';


--
-- TOC entry 7243 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.est IS 'CODIGO DE ESTADO ';


--
-- TOC entry 7244 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.supcub; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.supcub IS 'SUPERFICIE CUBIERTA';


--
-- TOC entry 7245 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.supsemi; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.supsemi IS 'SUPERFICIE SEMICUBIERTA';


--
-- TOC entry 7246 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.plantas; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.plantas IS 'NUMERO DE PLANTAS';


--
-- TOC entry 7247 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.cat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.cat IS 'CATEGORIA';


--
-- TOC entry 7248 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.item01; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.item01 IS 'ITEM 1';


--
-- TOC entry 7249 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.item02; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.item02 IS 'ITEM 2';


--
-- TOC entry 7250 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.item03; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.item03 IS 'ITEM 3';


--
-- TOC entry 7251 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.item04; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.item04 IS 'ITEM 4';


--
-- TOC entry 7252 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.item05; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.item05 IS 'ITEM 5';


--
-- TOC entry 7253 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.item06; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.item06 IS 'ITEM 6';


--
-- TOC entry 7254 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.item07; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.item07 IS 'ITEM 7';


--
-- TOC entry 7255 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.item08; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.item08 IS 'ITEM 8';


--
-- TOC entry 7256 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.item09; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.item09 IS 'ITEM 9';


--
-- TOC entry 7257 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.item10; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.item10 IS 'ITEM 10';


--
-- TOC entry 7258 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.item11; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.item11 IS 'ITEM 11';


--
-- TOC entry 7259 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.item12; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.item12 IS 'ITEM 12';


--
-- TOC entry 7260 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.item13; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.item13 IS 'ITEM 13';


--
-- TOC entry 7261 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.item14; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.item14 IS 'ITEM 14';


--
-- TOC entry 7262 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.item15; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.item15 IS 'ITEM 15';


--
-- TOC entry 7263 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.estado; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.estado IS 'ESTADO';


--
-- TOC entry 7264 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7265 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN inm_mej.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 342 (class 1259 OID 5284729)
-- Name: inm_mej_tcat; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_mej_tcat (
    cod character varying(2) NOT NULL,
    nombre character varying(30) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.inm_mej_tcat OWNER TO postgres;

--
-- TOC entry 7266 (class 0 OID 0)
-- Dependencies: 342
-- Name: TABLE inm_mej_tcat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_mej_tcat IS 'DISTINTOS CATEGORIAS DE MEJORAS';


--
-- TOC entry 7267 (class 0 OID 0)
-- Dependencies: 342
-- Name: COLUMN inm_mej_tcat.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_tcat.cod IS 'CODIGO ';


--
-- TOC entry 7268 (class 0 OID 0)
-- Dependencies: 342
-- Name: COLUMN inm_mej_tcat.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_tcat.nombre IS 'NOMBRE';


--
-- TOC entry 7269 (class 0 OID 0)
-- Dependencies: 342
-- Name: COLUMN inm_mej_tcat.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_tcat.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7270 (class 0 OID 0)
-- Dependencies: 342
-- Name: COLUMN inm_mej_tcat.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_tcat.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 343 (class 1259 OID 5284733)
-- Name: inm_mej_tdest; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_mej_tdest (
    cod smallint NOT NULL,
    nombre character varying(30) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint DEFAULT 100 NOT NULL
);


ALTER TABLE public.inm_mej_tdest OWNER TO postgres;

--
-- TOC entry 7272 (class 0 OID 0)
-- Dependencies: 343
-- Name: TABLE inm_mej_tdest; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_mej_tdest IS 'DISTINTOS DESTINOS DE MEJORAS';


--
-- TOC entry 7273 (class 0 OID 0)
-- Dependencies: 343
-- Name: COLUMN inm_mej_tdest.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_tdest.cod IS 'CODIGO ';


--
-- TOC entry 7274 (class 0 OID 0)
-- Dependencies: 343
-- Name: COLUMN inm_mej_tdest.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_tdest.nombre IS 'NOMBRE';


--
-- TOC entry 7275 (class 0 OID 0)
-- Dependencies: 343
-- Name: COLUMN inm_mej_tdest.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_tdest.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7276 (class 0 OID 0)
-- Dependencies: 343
-- Name: COLUMN inm_mej_tdest.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_tdest.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 344 (class 1259 OID 5284738)
-- Name: inm_mej_test; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_mej_test (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.inm_mej_test OWNER TO postgres;

--
-- TOC entry 7277 (class 0 OID 0)
-- Dependencies: 344
-- Name: TABLE inm_mej_test; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_mej_test IS 'DISTINTOS ESTADOS EN MEJORAS';


--
-- TOC entry 7278 (class 0 OID 0)
-- Dependencies: 344
-- Name: COLUMN inm_mej_test.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_test.cod IS 'CODIGO ';


--
-- TOC entry 7279 (class 0 OID 0)
-- Dependencies: 344
-- Name: COLUMN inm_mej_test.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_test.nombre IS 'NOMBRE';


--
-- TOC entry 7280 (class 0 OID 0)
-- Dependencies: 344
-- Name: COLUMN inm_mej_test.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_test.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7281 (class 0 OID 0)
-- Dependencies: 344
-- Name: COLUMN inm_mej_test.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_test.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 345 (class 1259 OID 5284742)
-- Name: inm_mej_tform; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_mej_tform (
    cod character varying(2) NOT NULL,
    nombre character varying(60) NOT NULL,
    nombre_redu character varying(20),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint DEFAULT 100 NOT NULL
);


ALTER TABLE public.inm_mej_tform OWNER TO postgres;

--
-- TOC entry 7282 (class 0 OID 0)
-- Dependencies: 345
-- Name: TABLE inm_mej_tform; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_mej_tform IS 'TIPO DE FORMULARIO';


--
-- TOC entry 7283 (class 0 OID 0)
-- Dependencies: 345
-- Name: COLUMN inm_mej_tform.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_tform.cod IS 'CODIGO ';


--
-- TOC entry 7284 (class 0 OID 0)
-- Dependencies: 345
-- Name: COLUMN inm_mej_tform.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_tform.nombre IS 'NOMBRE';


--
-- TOC entry 7285 (class 0 OID 0)
-- Dependencies: 345
-- Name: COLUMN inm_mej_tform.nombre_redu; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_tform.nombre_redu IS 'NOMBRE REDUCIDO';


--
-- TOC entry 7286 (class 0 OID 0)
-- Dependencies: 345
-- Name: COLUMN inm_mej_tform.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_tform.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7287 (class 0 OID 0)
-- Dependencies: 345
-- Name: COLUMN inm_mej_tform.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_tform.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 346 (class 1259 OID 5284747)
-- Name: inm_mej_tobra; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_mej_tobra (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    nombre_redu character varying(2) DEFAULT ''::character varying NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint DEFAULT 100 NOT NULL
);


ALTER TABLE public.inm_mej_tobra OWNER TO postgres;

--
-- TOC entry 7288 (class 0 OID 0)
-- Dependencies: 346
-- Name: TABLE inm_mej_tobra; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_mej_tobra IS 'TIPOS DE OBRAS EN MEJORAS';


--
-- TOC entry 7289 (class 0 OID 0)
-- Dependencies: 346
-- Name: COLUMN inm_mej_tobra.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_tobra.cod IS 'CODIGO ';


--
-- TOC entry 7290 (class 0 OID 0)
-- Dependencies: 346
-- Name: COLUMN inm_mej_tobra.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_tobra.nombre IS 'NOMBRE';


--
-- TOC entry 7291 (class 0 OID 0)
-- Dependencies: 346
-- Name: COLUMN inm_mej_tobra.nombre_redu; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_tobra.nombre_redu IS 'NOMBRE REDUCIDO';


--
-- TOC entry 7292 (class 0 OID 0)
-- Dependencies: 346
-- Name: COLUMN inm_mej_tobra.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_tobra.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7293 (class 0 OID 0)
-- Dependencies: 346
-- Name: COLUMN inm_mej_tobra.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_tobra.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 347 (class 1259 OID 5284753)
-- Name: inm_mej_tori; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_mej_tori (
    cod character varying(2) NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.inm_mej_tori OWNER TO postgres;

--
-- TOC entry 7294 (class 0 OID 0)
-- Dependencies: 347
-- Name: TABLE inm_mej_tori; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_mej_tori IS 'TIPOS DE ORIGEN o FORMULARIO';


--
-- TOC entry 7295 (class 0 OID 0)
-- Dependencies: 347
-- Name: COLUMN inm_mej_tori.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_tori.cod IS 'CODIGO';


--
-- TOC entry 7296 (class 0 OID 0)
-- Dependencies: 347
-- Name: COLUMN inm_mej_tori.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_tori.nombre IS 'NOMBRE';


--
-- TOC entry 7297 (class 0 OID 0)
-- Dependencies: 347
-- Name: COLUMN inm_mej_tori.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_tori.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7298 (class 0 OID 0)
-- Dependencies: 347
-- Name: COLUMN inm_mej_tori.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_mej_tori.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 348 (class 1259 OID 5284757)
-- Name: inm_restric; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_restric (
    obj_id character varying(8) NOT NULL,
    orden smallint NOT NULL,
    trestric smallint NOT NULL,
    sup numeric(12,4) NOT NULL,
    inscrip character varying(10) NOT NULL,
    obs character varying(250) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.inm_restric OWNER TO postgres;

--
-- TOC entry 7299 (class 0 OID 0)
-- Dependencies: 348
-- Name: TABLE inm_restric; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_restric IS 'SERVIDUMBRES DEL INMUEBLE';


--
-- TOC entry 7300 (class 0 OID 0)
-- Dependencies: 348
-- Name: COLUMN inm_restric.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_restric.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 7301 (class 0 OID 0)
-- Dependencies: 348
-- Name: COLUMN inm_restric.orden; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_restric.orden IS 'CODIGO DE ORDEN';


--
-- TOC entry 7302 (class 0 OID 0)
-- Dependencies: 348
-- Name: COLUMN inm_restric.trestric; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_restric.trestric IS 'TIPO DE RESTRICCION';


--
-- TOC entry 7303 (class 0 OID 0)
-- Dependencies: 348
-- Name: COLUMN inm_restric.sup; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_restric.sup IS 'SUPERFICIE DE LA RESTRICCION';


--
-- TOC entry 7304 (class 0 OID 0)
-- Dependencies: 348
-- Name: COLUMN inm_restric.inscrip; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_restric.inscrip IS 'NUMERO DE INSCRIPCION';


--
-- TOC entry 7305 (class 0 OID 0)
-- Dependencies: 348
-- Name: COLUMN inm_restric.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_restric.obs IS 'OBSERVACIONES';


--
-- TOC entry 7306 (class 0 OID 0)
-- Dependencies: 348
-- Name: COLUMN inm_restric.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_restric.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7307 (class 0 OID 0)
-- Dependencies: 348
-- Name: COLUMN inm_restric.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_restric.usrmod IS 'CODIGO DE USUARIO DE MODIFICACION';


--
-- TOC entry 349 (class 1259 OID 5284761)
-- Name: inm_s1; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_s1 (
    s1 character varying(3) NOT NULL,
    fchmod timestamp without time zone,
    usrmod smallint NOT NULL
);


ALTER TABLE public.inm_s1 OWNER TO postgres;

--
-- TOC entry 7308 (class 0 OID 0)
-- Dependencies: 349
-- Name: TABLE inm_s1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_s1 IS 'SECCIONES O CIRCUNCRIPCIONES CATASTRALES';


--
-- TOC entry 7309 (class 0 OID 0)
-- Dependencies: 349
-- Name: COLUMN inm_s1.s1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_s1.s1 IS 'CODIGO S1';


--
-- TOC entry 7310 (class 0 OID 0)
-- Dependencies: 349
-- Name: COLUMN inm_s1.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_s1.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7311 (class 0 OID 0)
-- Dependencies: 349
-- Name: COLUMN inm_s1.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_s1.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 350 (class 1259 OID 5284764)
-- Name: inm_s2; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_s2 (
    s1 character varying(3) NOT NULL,
    s2 character varying(3) NOT NULL,
    fchmod timestamp without time zone,
    usrmod smallint NOT NULL
);


ALTER TABLE public.inm_s2 OWNER TO postgres;

--
-- TOC entry 7312 (class 0 OID 0)
-- Dependencies: 350
-- Name: TABLE inm_s2; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_s2 IS 'GRUPOS O QUINTAS';


--
-- TOC entry 7313 (class 0 OID 0)
-- Dependencies: 350
-- Name: COLUMN inm_s2.s1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_s2.s1 IS 'CODIGO S2';


--
-- TOC entry 7314 (class 0 OID 0)
-- Dependencies: 350
-- Name: COLUMN inm_s2.s2; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_s2.s2 IS 'CODIGO S2';


--
-- TOC entry 7315 (class 0 OID 0)
-- Dependencies: 350
-- Name: COLUMN inm_s2.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_s2.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7316 (class 0 OID 0)
-- Dependencies: 350
-- Name: COLUMN inm_s2.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_s2.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 351 (class 1259 OID 5284767)
-- Name: inm_s3; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_s3 (
    s1 character varying(3) NOT NULL,
    s2 character varying(3) NOT NULL,
    s3 character varying(3) NOT NULL,
    fchmod timestamp without time zone,
    usrmod smallint NOT NULL
);


ALTER TABLE public.inm_s3 OWNER TO postgres;

--
-- TOC entry 7317 (class 0 OID 0)
-- Dependencies: 351
-- Name: TABLE inm_s3; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_s3 IS 'SUBGRUPOS O CHACRAS';


--
-- TOC entry 7318 (class 0 OID 0)
-- Dependencies: 351
-- Name: COLUMN inm_s3.s1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_s3.s1 IS 'CODIGO S1';


--
-- TOC entry 7319 (class 0 OID 0)
-- Dependencies: 351
-- Name: COLUMN inm_s3.s2; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_s3.s2 IS 'CODIGO S2';


--
-- TOC entry 7320 (class 0 OID 0)
-- Dependencies: 351
-- Name: COLUMN inm_s3.s3; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_s3.s3 IS 'CODIGO S3';


--
-- TOC entry 7321 (class 0 OID 0)
-- Dependencies: 351
-- Name: COLUMN inm_s3.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_s3.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7322 (class 0 OID 0)
-- Dependencies: 351
-- Name: COLUMN inm_s3.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_s3.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 352 (class 1259 OID 5284770)
-- Name: inm_talum; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_talum (
    cod smallint NOT NULL,
    nombre character varying(15) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.inm_talum OWNER TO postgres;

--
-- TOC entry 7323 (class 0 OID 0)
-- Dependencies: 352
-- Name: TABLE inm_talum; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_talum IS 'TIPOS DE SERVICIOS EN INMUEBLES';


--
-- TOC entry 7324 (class 0 OID 0)
-- Dependencies: 352
-- Name: COLUMN inm_talum.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_talum.cod IS 'CODIGO ';


--
-- TOC entry 7325 (class 0 OID 0)
-- Dependencies: 352
-- Name: COLUMN inm_talum.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_talum.nombre IS 'NOMBRE';


--
-- TOC entry 7326 (class 0 OID 0)
-- Dependencies: 352
-- Name: COLUMN inm_talum.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_talum.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7327 (class 0 OID 0)
-- Dependencies: 352
-- Name: COLUMN inm_talum.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_talum.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 353 (class 1259 OID 5284774)
-- Name: inm_tipo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_tipo (
    cod character varying(1) NOT NULL,
    nombre character varying(30) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.inm_tipo OWNER TO postgres;

--
-- TOC entry 7328 (class 0 OID 0)
-- Dependencies: 353
-- Name: TABLE inm_tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_tipo IS 'TIPOS DE INMUEBLES';


--
-- TOC entry 7329 (class 0 OID 0)
-- Dependencies: 353
-- Name: COLUMN inm_tipo.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tipo.cod IS 'CODIGO';


--
-- TOC entry 7330 (class 0 OID 0)
-- Dependencies: 353
-- Name: COLUMN inm_tipo.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tipo.nombre IS 'NOMBRE';


--
-- TOC entry 7331 (class 0 OID 0)
-- Dependencies: 353
-- Name: COLUMN inm_tipo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tipo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7332 (class 0 OID 0)
-- Dependencies: 353
-- Name: COLUMN inm_tipo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tipo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 354 (class 1259 OID 5284778)
-- Name: inm_tmatric; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_tmatric (
    cod character varying(1) NOT NULL,
    nombre character varying(15) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.inm_tmatric OWNER TO postgres;

--
-- TOC entry 7333 (class 0 OID 0)
-- Dependencies: 354
-- Name: TABLE inm_tmatric; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_tmatric IS 'TIPOS DE MATRICULA DE INMUEBLES';


--
-- TOC entry 7334 (class 0 OID 0)
-- Dependencies: 354
-- Name: COLUMN inm_tmatric.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tmatric.cod IS 'CODIGO';


--
-- TOC entry 7335 (class 0 OID 0)
-- Dependencies: 354
-- Name: COLUMN inm_tmatric.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tmatric.nombre IS 'NOMBRE';


--
-- TOC entry 7336 (class 0 OID 0)
-- Dependencies: 354
-- Name: COLUMN inm_tmatric.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tmatric.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7337 (class 0 OID 0)
-- Dependencies: 354
-- Name: COLUMN inm_tmatric.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tmatric.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 355 (class 1259 OID 5284782)
-- Name: inm_tpatrimonio; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_tpatrimonio (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.inm_tpatrimonio OWNER TO postgres;

--
-- TOC entry 7338 (class 0 OID 0)
-- Dependencies: 355
-- Name: TABLE inm_tpatrimonio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_tpatrimonio IS 'TIPOS DE PATRIMONIO CULTURAL';


--
-- TOC entry 7339 (class 0 OID 0)
-- Dependencies: 355
-- Name: COLUMN inm_tpatrimonio.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tpatrimonio.cod IS 'CODIGO ';


--
-- TOC entry 7340 (class 0 OID 0)
-- Dependencies: 355
-- Name: COLUMN inm_tpatrimonio.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tpatrimonio.nombre IS 'NOMBRE';


--
-- TOC entry 7341 (class 0 OID 0)
-- Dependencies: 355
-- Name: COLUMN inm_tpatrimonio.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tpatrimonio.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7342 (class 0 OID 0)
-- Dependencies: 355
-- Name: COLUMN inm_tpatrimonio.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tpatrimonio.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 356 (class 1259 OID 5284786)
-- Name: inm_tregimen; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_tregimen (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.inm_tregimen OWNER TO postgres;

--
-- TOC entry 7343 (class 0 OID 0)
-- Dependencies: 356
-- Name: TABLE inm_tregimen; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_tregimen IS 'TIPOS DE REGIMEN DE INMUEBLES';


--
-- TOC entry 7344 (class 0 OID 0)
-- Dependencies: 356
-- Name: COLUMN inm_tregimen.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tregimen.cod IS 'CODIGO ';


--
-- TOC entry 7345 (class 0 OID 0)
-- Dependencies: 356
-- Name: COLUMN inm_tregimen.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tregimen.nombre IS 'NOMBRE';


--
-- TOC entry 7346 (class 0 OID 0)
-- Dependencies: 356
-- Name: COLUMN inm_tregimen.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tregimen.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7347 (class 0 OID 0)
-- Dependencies: 356
-- Name: COLUMN inm_tregimen.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tregimen.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 357 (class 1259 OID 5284790)
-- Name: inm_trestric; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_trestric (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.inm_trestric OWNER TO postgres;

--
-- TOC entry 7348 (class 0 OID 0)
-- Dependencies: 357
-- Name: TABLE inm_trestric; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_trestric IS 'TIPOS DE RESTRICCIONES';


--
-- TOC entry 7349 (class 0 OID 0)
-- Dependencies: 357
-- Name: COLUMN inm_trestric.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_trestric.cod IS 'CODIGO ';


--
-- TOC entry 7350 (class 0 OID 0)
-- Dependencies: 357
-- Name: COLUMN inm_trestric.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_trestric.nombre IS 'NOMBRE';


--
-- TOC entry 7351 (class 0 OID 0)
-- Dependencies: 357
-- Name: COLUMN inm_trestric.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_trestric.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7352 (class 0 OID 0)
-- Dependencies: 357
-- Name: COLUMN inm_trestric.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_trestric.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 358 (class 1259 OID 5284794)
-- Name: inm_tserv; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_tserv (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.inm_tserv OWNER TO postgres;

--
-- TOC entry 7353 (class 0 OID 0)
-- Dependencies: 358
-- Name: TABLE inm_tserv; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_tserv IS 'TIPOS DE SERVICIO DE AGUA, CLOACA y GAS';


--
-- TOC entry 7354 (class 0 OID 0)
-- Dependencies: 358
-- Name: COLUMN inm_tserv.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tserv.cod IS 'CODIGO';


--
-- TOC entry 7355 (class 0 OID 0)
-- Dependencies: 358
-- Name: COLUMN inm_tserv.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tserv.nombre IS 'NOMBRE';


--
-- TOC entry 7356 (class 0 OID 0)
-- Dependencies: 358
-- Name: COLUMN inm_tserv.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tserv.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7357 (class 0 OID 0)
-- Dependencies: 358
-- Name: COLUMN inm_tserv.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tserv.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 359 (class 1259 OID 5284798)
-- Name: inm_ttitularidad; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_ttitularidad (
    cod character varying(2) NOT NULL,
    nombre character varying(25) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.inm_ttitularidad OWNER TO postgres;

--
-- TOC entry 7359 (class 0 OID 0)
-- Dependencies: 359
-- Name: TABLE inm_ttitularidad; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_ttitularidad IS 'TIPOS DE TITULARIDAD DE INMUEBLES';


--
-- TOC entry 7360 (class 0 OID 0)
-- Dependencies: 359
-- Name: COLUMN inm_ttitularidad.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_ttitularidad.cod IS 'CODIGO';


--
-- TOC entry 7361 (class 0 OID 0)
-- Dependencies: 359
-- Name: COLUMN inm_ttitularidad.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_ttitularidad.nombre IS 'NOMBRE';


--
-- TOC entry 7362 (class 0 OID 0)
-- Dependencies: 359
-- Name: COLUMN inm_ttitularidad.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_ttitularidad.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7363 (class 0 OID 0)
-- Dependencies: 359
-- Name: COLUMN inm_ttitularidad.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_ttitularidad.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 360 (class 1259 OID 5284802)
-- Name: inm_turbsub; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_turbsub (
    cod character varying(2) NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.inm_turbsub OWNER TO postgres;

--
-- TOC entry 7364 (class 0 OID 0)
-- Dependencies: 360
-- Name: TABLE inm_turbsub; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_turbsub IS 'TIPOS DE UBICACIONES URBANA/SUBRURAL';


--
-- TOC entry 7365 (class 0 OID 0)
-- Dependencies: 360
-- Name: COLUMN inm_turbsub.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_turbsub.cod IS 'CODIGO ';


--
-- TOC entry 7366 (class 0 OID 0)
-- Dependencies: 360
-- Name: COLUMN inm_turbsub.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_turbsub.nombre IS 'NOMBRE';


--
-- TOC entry 7367 (class 0 OID 0)
-- Dependencies: 360
-- Name: COLUMN inm_turbsub.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_turbsub.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7368 (class 0 OID 0)
-- Dependencies: 360
-- Name: COLUMN inm_turbsub.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_turbsub.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 361 (class 1259 OID 5284806)
-- Name: inm_tuso; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_tuso (
    cod smallint NOT NULL,
    nombre character varying(30) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.inm_tuso OWNER TO postgres;

--
-- TOC entry 7369 (class 0 OID 0)
-- Dependencies: 361
-- Name: TABLE inm_tuso; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_tuso IS 'TIPOS DE USOS DE INMUEBLES';


--
-- TOC entry 7370 (class 0 OID 0)
-- Dependencies: 361
-- Name: COLUMN inm_tuso.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tuso.cod IS 'CODIGO ';


--
-- TOC entry 7371 (class 0 OID 0)
-- Dependencies: 361
-- Name: COLUMN inm_tuso.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tuso.nombre IS 'NOMBRE';


--
-- TOC entry 7372 (class 0 OID 0)
-- Dependencies: 361
-- Name: COLUMN inm_tuso.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tuso.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7373 (class 0 OID 0)
-- Dependencies: 361
-- Name: COLUMN inm_tuso.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tuso.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 362 (class 1259 OID 5284810)
-- Name: inm_tvtaest; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_tvtaest (
    cod character varying(1) NOT NULL,
    nombre character varying(50) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.inm_tvtaest OWNER TO postgres;

--
-- TOC entry 7374 (class 0 OID 0)
-- Dependencies: 362
-- Name: TABLE inm_tvtaest; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_tvtaest IS 'ESTADOS DE VENTA';


--
-- TOC entry 7375 (class 0 OID 0)
-- Dependencies: 362
-- Name: COLUMN inm_tvtaest.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tvtaest.cod IS 'CODIGO ';


--
-- TOC entry 7376 (class 0 OID 0)
-- Dependencies: 362
-- Name: COLUMN inm_tvtaest.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tvtaest.nombre IS 'NOMBRE';


--
-- TOC entry 7377 (class 0 OID 0)
-- Dependencies: 362
-- Name: COLUMN inm_tvtaest.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tvtaest.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7378 (class 0 OID 0)
-- Dependencies: 362
-- Name: COLUMN inm_tvtaest.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tvtaest.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 363 (class 1259 OID 5284814)
-- Name: inm_tzonaop; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_tzonaop (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fos numeric(6,4),
    fot numeric(6,4),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.inm_tzonaop OWNER TO postgres;

--
-- TOC entry 7379 (class 0 OID 0)
-- Dependencies: 363
-- Name: TABLE inm_tzonaop; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_tzonaop IS 'TIPOS DE ZONA PARA OBRAS SANITARIAS';


--
-- TOC entry 7380 (class 0 OID 0)
-- Dependencies: 363
-- Name: COLUMN inm_tzonaop.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tzonaop.cod IS 'CODIGO ';


--
-- TOC entry 7381 (class 0 OID 0)
-- Dependencies: 363
-- Name: COLUMN inm_tzonaop.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tzonaop.nombre IS 'NOMBRE';


--
-- TOC entry 7382 (class 0 OID 0)
-- Dependencies: 363
-- Name: COLUMN inm_tzonaop.fos; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tzonaop.fos IS 'FACTOR DE OCUPACION DEL SUELO';


--
-- TOC entry 7383 (class 0 OID 0)
-- Dependencies: 363
-- Name: COLUMN inm_tzonaop.fot; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tzonaop.fot IS 'FACTOR DE OCUPACION TOTAL';


--
-- TOC entry 7384 (class 0 OID 0)
-- Dependencies: 363
-- Name: COLUMN inm_tzonaop.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tzonaop.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7385 (class 0 OID 0)
-- Dependencies: 363
-- Name: COLUMN inm_tzonaop.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tzonaop.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 364 (class 1259 OID 5284818)
-- Name: inm_tzonat; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_tzonat (
    cod character varying(2) NOT NULL,
    nombre character varying(25) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.inm_tzonat OWNER TO postgres;

--
-- TOC entry 7386 (class 0 OID 0)
-- Dependencies: 364
-- Name: TABLE inm_tzonat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_tzonat IS 'TIPOS DE ZONAS TRIBUTARIAS';


--
-- TOC entry 7387 (class 0 OID 0)
-- Dependencies: 364
-- Name: COLUMN inm_tzonat.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tzonat.cod IS 'CODIGO ';


--
-- TOC entry 7388 (class 0 OID 0)
-- Dependencies: 364
-- Name: COLUMN inm_tzonat.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tzonat.nombre IS 'NOMBRE';


--
-- TOC entry 7389 (class 0 OID 0)
-- Dependencies: 364
-- Name: COLUMN inm_tzonat.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tzonat.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7390 (class 0 OID 0)
-- Dependencies: 364
-- Name: COLUMN inm_tzonat.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tzonat.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 365 (class 1259 OID 5284822)
-- Name: inm_tzonav; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_tzonav (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    valor numeric(12,4),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.inm_tzonav OWNER TO postgres;

--
-- TOC entry 7391 (class 0 OID 0)
-- Dependencies: 365
-- Name: TABLE inm_tzonav; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_tzonav IS 'TIPOS DE ZONAS VALUATORIAS';


--
-- TOC entry 7392 (class 0 OID 0)
-- Dependencies: 365
-- Name: COLUMN inm_tzonav.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tzonav.cod IS 'CODIGO';


--
-- TOC entry 7393 (class 0 OID 0)
-- Dependencies: 365
-- Name: COLUMN inm_tzonav.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tzonav.nombre IS 'NOMBRE';


--
-- TOC entry 7394 (class 0 OID 0)
-- Dependencies: 365
-- Name: COLUMN inm_tzonav.valor; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tzonav.valor IS 'VALOR';


--
-- TOC entry 7395 (class 0 OID 0)
-- Dependencies: 365
-- Name: COLUMN inm_tzonav.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tzonav.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7396 (class 0 OID 0)
-- Dependencies: 365
-- Name: COLUMN inm_tzonav.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_tzonav.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 366 (class 1259 OID 5284826)
-- Name: inm_vta; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_vta (
    vta_id integer DEFAULT nextval(('public.seq_inm_vta'::text)::regclass) NOT NULL,
    obj_id character varying(8),
    escribano integer,
    fecha date,
    est character varying(1),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.inm_vta OWNER TO postgres;

--
-- TOC entry 7397 (class 0 OID 0)
-- Dependencies: 366
-- Name: TABLE inm_vta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_vta IS 'DETALLE DE VENTA DE INMUEBLE';


--
-- TOC entry 7398 (class 0 OID 0)
-- Dependencies: 366
-- Name: COLUMN inm_vta.vta_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_vta.vta_id IS 'IDENTIFICADOR DE VENTA';


--
-- TOC entry 7399 (class 0 OID 0)
-- Dependencies: 366
-- Name: COLUMN inm_vta.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_vta.obj_id IS 'IDENTIFICADOR DE OBJETO';


--
-- TOC entry 7400 (class 0 OID 0)
-- Dependencies: 366
-- Name: COLUMN inm_vta.escribano; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_vta.escribano IS 'ESCRIBANO';


--
-- TOC entry 7401 (class 0 OID 0)
-- Dependencies: 366
-- Name: COLUMN inm_vta.fecha; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_vta.fecha IS 'FECHA';


--
-- TOC entry 7402 (class 0 OID 0)
-- Dependencies: 366
-- Name: COLUMN inm_vta.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_vta.est IS 'ESTADO';


--
-- TOC entry 7403 (class 0 OID 0)
-- Dependencies: 366
-- Name: COLUMN inm_vta.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_vta.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7404 (class 0 OID 0)
-- Dependencies: 366
-- Name: COLUMN inm_vta.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_vta.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 367 (class 1259 OID 5284831)
-- Name: inm_vta_comp; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_vta_comp (
    vta_id integer NOT NULL,
    cuit character varying(11) NOT NULL,
    nombre character varying(250),
    tnac smallint,
    porc numeric(5,2),
    dompo character varying(250)
);


ALTER TABLE public.inm_vta_comp OWNER TO postgres;

--
-- TOC entry 7405 (class 0 OID 0)
-- Dependencies: 367
-- Name: TABLE inm_vta_comp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_vta_comp IS 'DETALLE DE COMPRADOR';


--
-- TOC entry 7406 (class 0 OID 0)
-- Dependencies: 367
-- Name: COLUMN inm_vta_comp.vta_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_vta_comp.vta_id IS 'IDENTIFICADOR DE VENTA';


--
-- TOC entry 7407 (class 0 OID 0)
-- Dependencies: 367
-- Name: COLUMN inm_vta_comp.cuit; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_vta_comp.cuit IS 'CUIT';


--
-- TOC entry 7408 (class 0 OID 0)
-- Dependencies: 367
-- Name: COLUMN inm_vta_comp.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_vta_comp.nombre IS 'NOMBRE';


--
-- TOC entry 7409 (class 0 OID 0)
-- Dependencies: 367
-- Name: COLUMN inm_vta_comp.tnac; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_vta_comp.tnac IS 'NACIONALIDAD';


--
-- TOC entry 7410 (class 0 OID 0)
-- Dependencies: 367
-- Name: COLUMN inm_vta_comp.porc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_vta_comp.porc IS 'PORCENTAJE';


--
-- TOC entry 7411 (class 0 OID 0)
-- Dependencies: 367
-- Name: COLUMN inm_vta_comp.dompo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_vta_comp.dompo IS 'DOMICILIO';


--
-- TOC entry 368 (class 1259 OID 5284837)
-- Name: inm_vta_vend; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inm_vta_vend (
    vta_id integer NOT NULL,
    cuit character varying(11) NOT NULL,
    nombre character varying(250),
    tnac smallint,
    porc numeric(5,2),
    dompo character varying(250)
);


ALTER TABLE public.inm_vta_vend OWNER TO postgres;

--
-- TOC entry 7412 (class 0 OID 0)
-- Dependencies: 368
-- Name: TABLE inm_vta_vend; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.inm_vta_vend IS 'DETALLE DE VENDEDOR';


--
-- TOC entry 7413 (class 0 OID 0)
-- Dependencies: 368
-- Name: COLUMN inm_vta_vend.vta_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_vta_vend.vta_id IS 'IDENTIFICADOR DE VENTA';


--
-- TOC entry 7414 (class 0 OID 0)
-- Dependencies: 368
-- Name: COLUMN inm_vta_vend.cuit; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_vta_vend.cuit IS 'CUIT';


--
-- TOC entry 7415 (class 0 OID 0)
-- Dependencies: 368
-- Name: COLUMN inm_vta_vend.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_vta_vend.nombre IS 'NOMBRE';


--
-- TOC entry 7416 (class 0 OID 0)
-- Dependencies: 368
-- Name: COLUMN inm_vta_vend.tnac; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_vta_vend.tnac IS 'NACIONALIDAD';


--
-- TOC entry 7417 (class 0 OID 0)
-- Dependencies: 368
-- Name: COLUMN inm_vta_vend.porc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_vta_vend.porc IS 'PORCENTAJE';


--
-- TOC entry 7418 (class 0 OID 0)
-- Dependencies: 368
-- Name: COLUMN inm_vta_vend.dompo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.inm_vta_vend.dompo IS 'DOMICILIO';



--
-- TOC entry 370 (class 1259 OID 5284910)
-- Name: item; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.item (
    item_id integer DEFAULT nextval(('public.seq_item'::text)::regclass) NOT NULL,
    nombre character varying(40) NOT NULL,
    trib_id smallint NOT NULL,
    tipo smallint NOT NULL,
    cta_id smallint NOT NULL,
    obs character varying(500) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.item OWNER TO postgres;

--
-- TOC entry 7424 (class 0 OID 0)
-- Dependencies: 370
-- Name: TABLE item; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.item IS 'DATOS PRINCIPALES DE ÍTEMS';


--
-- TOC entry 7425 (class 0 OID 0)
-- Dependencies: 370
-- Name: COLUMN item.item_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item.item_id IS 'CODIGO DEL ITEM';


--
-- TOC entry 7426 (class 0 OID 0)
-- Dependencies: 370
-- Name: COLUMN item.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item.nombre IS 'NOMBRE';


--
-- TOC entry 7427 (class 0 OID 0)
-- Dependencies: 370
-- Name: COLUMN item.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 7428 (class 0 OID 0)
-- Dependencies: 370
-- Name: COLUMN item.tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item.tipo IS 'CODIGO DE TIPO DE ITEM';


--
-- TOC entry 7429 (class 0 OID 0)
-- Dependencies: 370
-- Name: COLUMN item.cta_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item.cta_id IS 'CODIGO DE CUENTA';


--
-- TOC entry 7430 (class 0 OID 0)
-- Dependencies: 370
-- Name: COLUMN item.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item.obs IS 'OBSERVACIONES';


--
-- TOC entry 7431 (class 0 OID 0)
-- Dependencies: 370
-- Name: COLUMN item.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7432 (class 0 OID 0)
-- Dependencies: 370
-- Name: COLUMN item.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 371 (class 1259 OID 5284918)
-- Name: item_asoc; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.item_asoc (
    item_id smallint NOT NULL,
    perdesde integer NOT NULL,
    perhasta integer NOT NULL,
    param1 numeric(9,2) NOT NULL,
    param2 numeric(9,2) NOT NULL,
    param3 numeric(9,2) NOT NULL,
    param4 numeric(9,2) NOT NULL,
    monto numeric(9,2),
    fchmod timestamp(0) without time zone,
    usrmod smallint
);


ALTER TABLE public.item_asoc OWNER TO postgres;

--
-- TOC entry 7433 (class 0 OID 0)
-- Dependencies: 371
-- Name: TABLE item_asoc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.item_asoc IS 'VALORES DE ITEM ASOCIADOS SEGÚN VIGENCIAS';


--
-- TOC entry 7434 (class 0 OID 0)
-- Dependencies: 371
-- Name: COLUMN item_asoc.item_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_asoc.item_id IS 'CODIGO DEL ITEM';


--
-- TOC entry 7435 (class 0 OID 0)
-- Dependencies: 371
-- Name: COLUMN item_asoc.perdesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_asoc.perdesde IS 'PERIODO DESDE';


--
-- TOC entry 7436 (class 0 OID 0)
-- Dependencies: 371
-- Name: COLUMN item_asoc.perhasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_asoc.perhasta IS 'PERIODO HASTA';


--
-- TOC entry 7437 (class 0 OID 0)
-- Dependencies: 371
-- Name: COLUMN item_asoc.param1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_asoc.param1 IS 'PARAMETRO 1';


--
-- TOC entry 7438 (class 0 OID 0)
-- Dependencies: 371
-- Name: COLUMN item_asoc.param2; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_asoc.param2 IS 'PARAMETRO 2';


--
-- TOC entry 7439 (class 0 OID 0)
-- Dependencies: 371
-- Name: COLUMN item_asoc.param3; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_asoc.param3 IS 'PARAMETRO 3';


--
-- TOC entry 7440 (class 0 OID 0)
-- Dependencies: 371
-- Name: COLUMN item_asoc.param4; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_asoc.param4 IS 'PARAMETRO 4';


--
-- TOC entry 7441 (class 0 OID 0)
-- Dependencies: 371
-- Name: COLUMN item_asoc.monto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_asoc.monto IS 'MONTO';


--
-- TOC entry 7442 (class 0 OID 0)
-- Dependencies: 371
-- Name: COLUMN item_asoc.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_asoc.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7443 (class 0 OID 0)
-- Dependencies: 371
-- Name: COLUMN item_asoc.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_asoc.usrmod IS 'CODIGO QUE USUARIO QUE MODIFICO';


--
-- TOC entry 372 (class 1259 OID 5284921)
-- Name: item_tfcalculo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.item_tfcalculo (
    cod smallint NOT NULL,
    nombre character varying(35) NOT NULL,
    detalle character varying(100),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.item_tfcalculo OWNER TO postgres;

--
-- TOC entry 7444 (class 0 OID 0)
-- Dependencies: 372
-- Name: TABLE item_tfcalculo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.item_tfcalculo IS 'FORMULAS DE CÁLCULO POR ÍTEMS';


--
-- TOC entry 7445 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN item_tfcalculo.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_tfcalculo.cod IS 'CODIGO';


--
-- TOC entry 7446 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN item_tfcalculo.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_tfcalculo.nombre IS 'NOMBRE';


--
-- TOC entry 7447 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN item_tfcalculo.detalle; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_tfcalculo.detalle IS 'DETALLE';


--
-- TOC entry 7448 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN item_tfcalculo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_tfcalculo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7449 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN item_tfcalculo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_tfcalculo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 373 (class 1259 OID 5284925)
-- Name: item_tipo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.item_tipo (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.item_tipo OWNER TO postgres;

--
-- TOC entry 7450 (class 0 OID 0)
-- Dependencies: 373
-- Name: TABLE item_tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.item_tipo IS 'DIFERENTES TIPOS DE ÍTEMS';


--
-- TOC entry 7451 (class 0 OID 0)
-- Dependencies: 373
-- Name: COLUMN item_tipo.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_tipo.cod IS 'CODIGO';


--
-- TOC entry 7452 (class 0 OID 0)
-- Dependencies: 373
-- Name: COLUMN item_tipo.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_tipo.nombre IS 'NOMBRE';


--
-- TOC entry 7453 (class 0 OID 0)
-- Dependencies: 373
-- Name: COLUMN item_tipo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_tipo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7454 (class 0 OID 0)
-- Dependencies: 373
-- Name: COLUMN item_tipo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_tipo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 374 (class 1259 OID 5284929)
-- Name: item_vigencia; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.item_vigencia (
    item_id smallint NOT NULL,
    perdesde integer NOT NULL,
    perhasta integer NOT NULL,
    tcalculo smallint NOT NULL,
    monto numeric(12,3) NOT NULL,
    porc numeric(9,3) NOT NULL,
    minimo numeric(12,2) NOT NULL,
    paramnombre1 character varying(15),
    paramnombre2 character varying(15),
    paramnombre3 character varying(15),
    paramnombre4 character varying(15),
    paramcomp1 character varying(2),
    paramcomp2 character varying(2),
    paramcomp3 character varying(2),
    paramcomp4 character varying(2),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.item_vigencia OWNER TO postgres;

--
-- TOC entry 7455 (class 0 OID 0)
-- Dependencies: 374
-- Name: TABLE item_vigencia; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.item_vigencia IS 'RANGO DE VIGENCIA CON SUS VALORES RESPECTIVOS POR ÍTEM';


--
-- TOC entry 7456 (class 0 OID 0)
-- Dependencies: 374
-- Name: COLUMN item_vigencia.item_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_vigencia.item_id IS 'CODIGO DEL ITEM';


--
-- TOC entry 7457 (class 0 OID 0)
-- Dependencies: 374
-- Name: COLUMN item_vigencia.perdesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_vigencia.perdesde IS 'PERIODO DESDE';


--
-- TOC entry 7458 (class 0 OID 0)
-- Dependencies: 374
-- Name: COLUMN item_vigencia.perhasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_vigencia.perhasta IS 'PERIODO HASTA';


--
-- TOC entry 7459 (class 0 OID 0)
-- Dependencies: 374
-- Name: COLUMN item_vigencia.tcalculo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_vigencia.tcalculo IS 'CODIGO DE TIPO DE FORMULA DE CALCULO';


--
-- TOC entry 7460 (class 0 OID 0)
-- Dependencies: 374
-- Name: COLUMN item_vigencia.monto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_vigencia.monto IS 'MONTO';


--
-- TOC entry 7461 (class 0 OID 0)
-- Dependencies: 374
-- Name: COLUMN item_vigencia.porc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_vigencia.porc IS 'PORCENTAJE ';


--
-- TOC entry 7462 (class 0 OID 0)
-- Dependencies: 374
-- Name: COLUMN item_vigencia.minimo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_vigencia.minimo IS 'VALOR DE MINIMO';


--
-- TOC entry 7463 (class 0 OID 0)
-- Dependencies: 374
-- Name: COLUMN item_vigencia.paramnombre1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_vigencia.paramnombre1 IS 'NOMBRE PARAMETRO 1';


--
-- TOC entry 7464 (class 0 OID 0)
-- Dependencies: 374
-- Name: COLUMN item_vigencia.paramnombre2; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_vigencia.paramnombre2 IS 'NOMBRE PARAMETRO 2';


--
-- TOC entry 7465 (class 0 OID 0)
-- Dependencies: 374
-- Name: COLUMN item_vigencia.paramnombre3; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_vigencia.paramnombre3 IS 'NOMBRE PARAMETRO 3';


--
-- TOC entry 7466 (class 0 OID 0)
-- Dependencies: 374
-- Name: COLUMN item_vigencia.paramnombre4; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_vigencia.paramnombre4 IS 'NOMBRE PARAMETRO 4';


--
-- TOC entry 7467 (class 0 OID 0)
-- Dependencies: 374
-- Name: COLUMN item_vigencia.paramcomp1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_vigencia.paramcomp1 IS 'COMPARACION PARAMETRO 1';


--
-- TOC entry 7468 (class 0 OID 0)
-- Dependencies: 374
-- Name: COLUMN item_vigencia.paramcomp2; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_vigencia.paramcomp2 IS 'COMPARACION PARAMETRO 2';


--
-- TOC entry 7469 (class 0 OID 0)
-- Dependencies: 374
-- Name: COLUMN item_vigencia.paramcomp3; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_vigencia.paramcomp3 IS 'COMPARACION PARAMETRO 3';


--
-- TOC entry 7470 (class 0 OID 0)
-- Dependencies: 374
-- Name: COLUMN item_vigencia.paramcomp4; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_vigencia.paramcomp4 IS 'COMPARACION PARAMETRO 4';


--
-- TOC entry 7471 (class 0 OID 0)
-- Dependencies: 374
-- Name: COLUMN item_vigencia.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_vigencia.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7472 (class 0 OID 0)
-- Dependencies: 374
-- Name: COLUMN item_vigencia.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.item_vigencia.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 375 (class 1259 OID 5284933)
-- Name: seq_judi; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_judi
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_judi OWNER TO postgres;

--
-- TOC entry 376 (class 1259 OID 5284935)
-- Name: judi; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.judi (
    judi_id integer DEFAULT nextval('public.seq_judi'::regclass) NOT NULL,
    obj_id character varying(8) NOT NULL,
    rep character varying(3) NOT NULL,
    nro character varying(10) NOT NULL,
    anio smallint NOT NULL,
    expe character varying(30),
    caratula character varying(50),
    perdesde integer NOT NULL,
    perhasta integer NOT NULL,
    nominal numeric(12,2) NOT NULL,
    accesor numeric(12,2) NOT NULL,
    multa numeric(12,2) NOT NULL,
    multa_omi numeric(12,2) NOT NULL,
    hono_jud numeric(12,2) DEFAULT 0 NOT NULL,
    gasto_jud numeric(12,2) DEFAULT 0,
    procurador smallint,
    juzgado smallint,
    fchalta date NOT NULL,
    fchbaja date,
    fchapremio date,
    fchprocurador date,
    fchjuicio date,
    fchdev date,
    motivo_dev smallint,
    plan_id integer,
    est character varying(1) NOT NULL,
    obs character varying(250),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.judi OWNER TO postgres;

--
-- TOC entry 7473 (class 0 OID 0)
-- Dependencies: 376
-- Name: TABLE judi; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.judi IS 'DATOS PRINCIPALES DE PLANILLAS JUDICIALES ';


--
-- TOC entry 7474 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.judi_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.judi_id IS 'IDENTIFICADOR DE PLANILLA JUDICIAL';


--
-- TOC entry 7475 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 7476 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.rep; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.rep IS 'REPARTICION ORIGEN DE LA DEUDA';


--
-- TOC entry 7477 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.nro; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.nro IS 'NUMERO DE EXPEDIENTE';


--
-- TOC entry 7478 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.anio IS 'AÑO DEL EXPEDIENTE';


--
-- TOC entry 7479 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.expe; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.expe IS 'EXPEDIENTE';


--
-- TOC entry 7480 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.caratula; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.caratula IS 'CARATULA DEL EXPEDIENTE';


--
-- TOC entry 7481 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.perdesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.perdesde IS 'PERIODO INICIO DE LA DEUDA';


--
-- TOC entry 7482 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.perhasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.perhasta IS 'PERIODO FINAL DE LA DEUDA';


--
-- TOC entry 7483 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.nominal; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.nominal IS 'MONTO NOMINAL';


--
-- TOC entry 7484 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.accesor; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.accesor IS 'MONTO ACCESORIOS';


--
-- TOC entry 7485 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.multa; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.multa IS 'MONTO MULTA';


--
-- TOC entry 7486 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.multa_omi; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.multa_omi IS 'MONTO MULTA POR OMISION';


--
-- TOC entry 7487 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.hono_jud; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.hono_jud IS 'HONORARIOS JUDICIALES';


--
-- TOC entry 7488 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.gasto_jud; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.gasto_jud IS 'GASTOS JUDICIALES';


--
-- TOC entry 7489 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.procurador; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.procurador IS 'CODIGO DE ABOGADO';


--
-- TOC entry 7490 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.juzgado; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.juzgado IS 'CODIGO DE JUZGADO';


--
-- TOC entry 7491 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.fchalta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.fchalta IS 'FECHA DE ALTA';


--
-- TOC entry 7492 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.fchbaja; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.fchbaja IS 'FECHA DE BAJA';


--
-- TOC entry 7493 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.fchapremio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.fchapremio IS 'FECHA DE APREMIO';


--
-- TOC entry 7494 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.fchprocurador; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.fchprocurador IS 'FECHA DE ABOGADO';


--
-- TOC entry 7495 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.fchjuicio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.fchjuicio IS 'FECHA DE JUICIO';


--
-- TOC entry 7496 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.fchdev; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.fchdev IS 'FECHA DE DEVOLUCION';


--
-- TOC entry 7497 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.motivo_dev; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.motivo_dev IS 'CODIGO DE MOTIVO DE DEVOLUCION';


--
-- TOC entry 7498 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.plan_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.plan_id IS 'IDENTIFICADOR DE PLAN';


--
-- TOC entry 7499 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.est IS 'ESTADO';


--
-- TOC entry 7500 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.obs IS 'OBSERVACIONES';


--
-- TOC entry 7501 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7502 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN judi.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 377 (class 1259 OID 5284942)
-- Name: judi_etapa; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.judi_etapa (
    judi_id integer NOT NULL,
    orden smallint NOT NULL,
    fecha timestamp without time zone NOT NULL,
    etapa smallint NOT NULL,
    detalle character varying(100) NOT NULL,
    hono_jud numeric(12,2),
    gasto_jud numeric(12,2),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.judi_etapa OWNER TO postgres;

--
-- TOC entry 7503 (class 0 OID 0)
-- Dependencies: 377
-- Name: TABLE judi_etapa; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.judi_etapa IS 'ETAPAS DE PLANILLAS JUDICIALES';


--
-- TOC entry 7504 (class 0 OID 0)
-- Dependencies: 377
-- Name: COLUMN judi_etapa.judi_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_etapa.judi_id IS 'IDENTIFICADOR DE PLANILLA JUDICIAL';


--
-- TOC entry 7505 (class 0 OID 0)
-- Dependencies: 377
-- Name: COLUMN judi_etapa.orden; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_etapa.orden IS 'NUMERO DE ORDEN';


--
-- TOC entry 7506 (class 0 OID 0)
-- Dependencies: 377
-- Name: COLUMN judi_etapa.fecha; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_etapa.fecha IS 'FECHA';


--
-- TOC entry 7507 (class 0 OID 0)
-- Dependencies: 377
-- Name: COLUMN judi_etapa.etapa; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_etapa.etapa IS 'CODIGO DE LA ETAPA';


--
-- TOC entry 7508 (class 0 OID 0)
-- Dependencies: 377
-- Name: COLUMN judi_etapa.detalle; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_etapa.detalle IS 'DETALLE';


--
-- TOC entry 7509 (class 0 OID 0)
-- Dependencies: 377
-- Name: COLUMN judi_etapa.hono_jud; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_etapa.hono_jud IS 'HONORARIOS JUDICIALES';


--
-- TOC entry 7510 (class 0 OID 0)
-- Dependencies: 377
-- Name: COLUMN judi_etapa.gasto_jud; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_etapa.gasto_jud IS 'GASTOS JUDICIALES';


--
-- TOC entry 7511 (class 0 OID 0)
-- Dependencies: 377
-- Name: COLUMN judi_etapa.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_etapa.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7512 (class 0 OID 0)
-- Dependencies: 377
-- Name: COLUMN judi_etapa.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_etapa.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 378 (class 1259 OID 5284946)
-- Name: judi_hono; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.judi_hono (
    est character(1) NOT NULL,
    supuesto smallint NOT NULL,
    deuda_desde numeric(12,2) DEFAULT 0 NOT NULL,
    deuda_hasta numeric(12,2) DEFAULT 0 NOT NULL,
    hono_min numeric(12,2) DEFAULT 0 NOT NULL,
    hono_porc numeric(12,2) DEFAULT 0 NOT NULL,
    gastos numeric(12,2) DEFAULT 0 NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.judi_hono OWNER TO postgres;

--
-- TOC entry 7513 (class 0 OID 0)
-- Dependencies: 378
-- Name: TABLE judi_hono; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.judi_hono IS 'DEFINICIÓN DE GASTOS Y HONORARIOS JUDICIALES';


--
-- TOC entry 7514 (class 0 OID 0)
-- Dependencies: 378
-- Name: COLUMN judi_hono.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_hono.est IS 'INSTANCIA';


--
-- TOC entry 7515 (class 0 OID 0)
-- Dependencies: 378
-- Name: COLUMN judi_hono.supuesto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_hono.supuesto IS 'SUPUESTO';


--
-- TOC entry 7516 (class 0 OID 0)
-- Dependencies: 378
-- Name: COLUMN judi_hono.deuda_desde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_hono.deuda_desde IS 'MONTO DE DEUDA DESDE';


--
-- TOC entry 7517 (class 0 OID 0)
-- Dependencies: 378
-- Name: COLUMN judi_hono.deuda_hasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_hono.deuda_hasta IS 'MONTO DE DEUDA HASTA';


--
-- TOC entry 7518 (class 0 OID 0)
-- Dependencies: 378
-- Name: COLUMN judi_hono.hono_min; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_hono.hono_min IS 'MÍNIMO DE HONORARIO';


--
-- TOC entry 7519 (class 0 OID 0)
-- Dependencies: 378
-- Name: COLUMN judi_hono.hono_porc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_hono.hono_porc IS 'PORCENTAJE PARA CALCULAR HONORARIOS';


--
-- TOC entry 7520 (class 0 OID 0)
-- Dependencies: 378
-- Name: COLUMN judi_hono.gastos; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_hono.gastos IS 'MONTO DE GASTOS JUDICIALES';


--
-- TOC entry 7521 (class 0 OID 0)
-- Dependencies: 378
-- Name: COLUMN judi_hono.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_hono.fchmod IS 'FECHA DE MODIFICACIÓN';


--
-- TOC entry 7522 (class 0 OID 0)
-- Dependencies: 378
-- Name: COLUMN judi_hono.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_hono.usrmod IS 'CODIGO DE USUARIO DE MODIFICACION';


--
-- TOC entry 379 (class 1259 OID 5284955)
-- Name: judi_juzgado; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.judi_juzgado (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.judi_juzgado OWNER TO postgres;

--
-- TOC entry 7523 (class 0 OID 0)
-- Dependencies: 379
-- Name: TABLE judi_juzgado; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.judi_juzgado IS 'DIFERENTES JUZGADOS';


--
-- TOC entry 7524 (class 0 OID 0)
-- Dependencies: 379
-- Name: COLUMN judi_juzgado.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_juzgado.cod IS 'CODIGO ';


--
-- TOC entry 7525 (class 0 OID 0)
-- Dependencies: 379
-- Name: COLUMN judi_juzgado.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_juzgado.nombre IS 'NOMBRE';


--
-- TOC entry 7526 (class 0 OID 0)
-- Dependencies: 379
-- Name: COLUMN judi_juzgado.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_juzgado.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7527 (class 0 OID 0)
-- Dependencies: 379
-- Name: COLUMN judi_juzgado.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_juzgado.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 380 (class 1259 OID 5284959)
-- Name: judi_periodo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.judi_periodo (
    judi_id integer NOT NULL,
    ctacte_id integer NOT NULL,
    nominal numeric(12,2) NOT NULL,
    accesor numeric(12,2) NOT NULL,
    multa numeric(12,2) NOT NULL,
    est character(1) NOT NULL
);


ALTER TABLE public.judi_periodo OWNER TO postgres;

--
-- TOC entry 7528 (class 0 OID 0)
-- Dependencies: 380
-- Name: TABLE judi_periodo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.judi_periodo IS 'PERÍODOS INCLUIDOS EN UNA PLANILLA JUDICIAL';


--
-- TOC entry 7529 (class 0 OID 0)
-- Dependencies: 380
-- Name: COLUMN judi_periodo.judi_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_periodo.judi_id IS 'IDENTIFICADOR DE PLANILLA JUDICIAL';


--
-- TOC entry 7530 (class 0 OID 0)
-- Dependencies: 380
-- Name: COLUMN judi_periodo.ctacte_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_periodo.ctacte_id IS 'IDENTIFICADOR DE CUENTA CORRIENTE';


--
-- TOC entry 7531 (class 0 OID 0)
-- Dependencies: 380
-- Name: COLUMN judi_periodo.nominal; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_periodo.nominal IS 'MONTO NOMINAL';


--
-- TOC entry 7532 (class 0 OID 0)
-- Dependencies: 380
-- Name: COLUMN judi_periodo.accesor; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_periodo.accesor IS 'MONTO ACCESORIOS';


--
-- TOC entry 7533 (class 0 OID 0)
-- Dependencies: 380
-- Name: COLUMN judi_periodo.multa; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_periodo.multa IS 'MONTO MULTA';


--
-- TOC entry 7534 (class 0 OID 0)
-- Dependencies: 380
-- Name: COLUMN judi_periodo.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_periodo.est IS 'ESTADO';


--
-- TOC entry 381 (class 1259 OID 5284962)
-- Name: judi_tdev; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.judi_tdev (
    cod smallint NOT NULL,
    nombre character varying(30) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.judi_tdev OWNER TO postgres;

--
-- TOC entry 7535 (class 0 OID 0)
-- Dependencies: 381
-- Name: TABLE judi_tdev; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.judi_tdev IS 'DIFERENTES MOTIVOS DE DEVOLUCIONES DE PLANILLAS JUDICIALES';


--
-- TOC entry 7536 (class 0 OID 0)
-- Dependencies: 381
-- Name: COLUMN judi_tdev.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_tdev.cod IS 'CODIGO ';


--
-- TOC entry 7537 (class 0 OID 0)
-- Dependencies: 381
-- Name: COLUMN judi_tdev.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_tdev.nombre IS 'NOMBRE';


--
-- TOC entry 7538 (class 0 OID 0)
-- Dependencies: 381
-- Name: COLUMN judi_tdev.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_tdev.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7539 (class 0 OID 0)
-- Dependencies: 381
-- Name: COLUMN judi_tdev.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_tdev.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 382 (class 1259 OID 5284966)
-- Name: judi_test; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.judi_test (
    cod character varying(1) NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.judi_test OWNER TO postgres;

--
-- TOC entry 7540 (class 0 OID 0)
-- Dependencies: 382
-- Name: TABLE judi_test; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.judi_test IS 'DIFERENTES ESTADOS DE LAS PLANILLAS JUDICIALES';


--
-- TOC entry 7541 (class 0 OID 0)
-- Dependencies: 382
-- Name: COLUMN judi_test.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_test.cod IS 'CODIGO';


--
-- TOC entry 7542 (class 0 OID 0)
-- Dependencies: 382
-- Name: COLUMN judi_test.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_test.nombre IS 'NOMBRE';


--
-- TOC entry 7543 (class 0 OID 0)
-- Dependencies: 382
-- Name: COLUMN judi_test.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_test.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7544 (class 0 OID 0)
-- Dependencies: 382
-- Name: COLUMN judi_test.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_test.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 383 (class 1259 OID 5284970)
-- Name: judi_tetapa; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.judi_tetapa (
    cod smallint NOT NULL,
    nombre character varying(35) NOT NULL,
    est character varying(1),
    supuesto smallint NOT NULL,
    est_ini character varying(5),
    pedir_proc boolean,
    pedir_dev boolean,
    pedir_hono boolean,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.judi_tetapa OWNER TO postgres;

--
-- TOC entry 7545 (class 0 OID 0)
-- Dependencies: 383
-- Name: TABLE judi_tetapa; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.judi_tetapa IS 'PLANILLA PARA LIQUIDAR HONORARIOS Y GASTOS JUDICIALES';


--
-- TOC entry 7546 (class 0 OID 0)
-- Dependencies: 383
-- Name: COLUMN judi_tetapa.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_tetapa.nombre IS 'NOMBRE';


--
-- TOC entry 7547 (class 0 OID 0)
-- Dependencies: 383
-- Name: COLUMN judi_tetapa.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_tetapa.est IS 'ESTADO';


--
-- TOC entry 7548 (class 0 OID 0)
-- Dependencies: 383
-- Name: COLUMN judi_tetapa.supuesto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_tetapa.supuesto IS 'SUPUESTO A UTILIZAR PARA LIQUIDAR HONORARIOS';


--
-- TOC entry 7549 (class 0 OID 0)
-- Dependencies: 383
-- Name: COLUMN judi_tetapa.est_ini; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_tetapa.est_ini IS 'ESTADO PREVIO DE LA ETAPA';


--
-- TOC entry 7550 (class 0 OID 0)
-- Dependencies: 383
-- Name: COLUMN judi_tetapa.pedir_proc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_tetapa.pedir_proc IS 'INDICA SI SE PIDE JUZGADO Y PROCURADOR';


--
-- TOC entry 7551 (class 0 OID 0)
-- Dependencies: 383
-- Name: COLUMN judi_tetapa.pedir_dev; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_tetapa.pedir_dev IS 'INDICA SI SE PIDE MOTIVO DE DEVOLUCIÓN';


--
-- TOC entry 7552 (class 0 OID 0)
-- Dependencies: 383
-- Name: COLUMN judi_tetapa.pedir_hono; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_tetapa.pedir_hono IS 'INDICA SI SE PIDEN GASTOS Y HONORARIOS JUDICIALES (SEGÚN PLANILLA O JUZGADO)';


--
-- TOC entry 7553 (class 0 OID 0)
-- Dependencies: 383
-- Name: COLUMN judi_tetapa.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_tetapa.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7554 (class 0 OID 0)
-- Dependencies: 383
-- Name: COLUMN judi_tetapa.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_tetapa.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 384 (class 1259 OID 5284974)
-- Name: judi_trep; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.judi_trep (
    cod character varying(3) NOT NULL,
    nombre character varying(26) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.judi_trep OWNER TO postgres;

--
-- TOC entry 7555 (class 0 OID 0)
-- Dependencies: 384
-- Name: TABLE judi_trep; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.judi_trep IS 'REPARTICIÓN ORIGEN DE LA DEUDA';


--
-- TOC entry 7556 (class 0 OID 0)
-- Dependencies: 384
-- Name: COLUMN judi_trep.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_trep.cod IS 'CODIGO ';


--
-- TOC entry 7557 (class 0 OID 0)
-- Dependencies: 384
-- Name: COLUMN judi_trep.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_trep.nombre IS 'NOMBRE';


--
-- TOC entry 7558 (class 0 OID 0)
-- Dependencies: 384
-- Name: COLUMN judi_trep.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_trep.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7559 (class 0 OID 0)
-- Dependencies: 384
-- Name: COLUMN judi_trep.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_trep.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 385 (class 1259 OID 5284978)
-- Name: judi_tsupuesto; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.judi_tsupuesto (
    cod smallint NOT NULL,
    nombre character varying(25) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.judi_tsupuesto OWNER TO postgres;

--
-- TOC entry 7560 (class 0 OID 0)
-- Dependencies: 385
-- Name: TABLE judi_tsupuesto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.judi_tsupuesto IS 'SUPUESTO DENTRO DE LA ETAPA JUDICIAL';


--
-- TOC entry 7561 (class 0 OID 0)
-- Dependencies: 385
-- Name: COLUMN judi_tsupuesto.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_tsupuesto.cod IS 'CODIGO ';


--
-- TOC entry 7562 (class 0 OID 0)
-- Dependencies: 385
-- Name: COLUMN judi_tsupuesto.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_tsupuesto.nombre IS 'NOMBRE';


--
-- TOC entry 7563 (class 0 OID 0)
-- Dependencies: 385
-- Name: COLUMN judi_tsupuesto.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_tsupuesto.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7564 (class 0 OID 0)
-- Dependencies: 385
-- Name: COLUMN judi_tsupuesto.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.judi_tsupuesto.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 178 (class 1259 OID 5283732)
-- Name: objeto; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.objeto (
    obj_id character varying(8) NOT NULL,
    tobj smallint NOT NULL,
    num character varying(8) NOT NULL,
    nombre character varying(50) DEFAULT ''::character varying NOT NULL,
    obj_dato character varying(25) DEFAULT ''::character varying,
    est character(1),
    distrib smallint,
    tdistrib smallint DEFAULT 0,
    obs character varying(1000),
    objunifica character varying(8),
    vigencia smallint DEFAULT 0,
    claveweb character varying(10),
    fchalta timestamp without time zone,
    usralta smallint,
    fchbaja timestamp without time zone,
    usrbaja smallint,
    tbaja smallint,
    fchmod timestamp without time zone,
    usrmod smallint
);


ALTER TABLE public.objeto OWNER TO postgres;

--
-- TOC entry 7565 (class 0 OID 0)
-- Dependencies: 178
-- Name: TABLE objeto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.objeto IS 'DATOS PRINCIPALES DE LOS OBJETOS IMPONIBLES';


--
-- TOC entry 7566 (class 0 OID 0)
-- Dependencies: 178
-- Name: COLUMN objeto.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 7567 (class 0 OID 0)
-- Dependencies: 178
-- Name: COLUMN objeto.tobj; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto.tobj IS 'CODIGO DE TIPO DE OBJETO';


--
-- TOC entry 7568 (class 0 OID 0)
-- Dependencies: 178
-- Name: COLUMN objeto.num; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto.num IS 'CODIGO DE NUM - RESPONSABLE';


--
-- TOC entry 7569 (class 0 OID 0)
-- Dependencies: 178
-- Name: COLUMN objeto.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto.nombre IS 'NOMBRE ';


--
-- TOC entry 7570 (class 0 OID 0)
-- Dependencies: 178
-- Name: COLUMN objeto.obj_dato; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto.obj_dato IS 'DATOS ALTERNATIVOS DEL OBJETO';


--
-- TOC entry 7571 (class 0 OID 0)
-- Dependencies: 178
-- Name: COLUMN objeto.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto.est IS 'ESTADO';


--
-- TOC entry 7572 (class 0 OID 0)
-- Dependencies: 178
-- Name: COLUMN objeto.distrib; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto.distrib IS 'CODIGO DE DISTRIBUIDOR';


--
-- TOC entry 7573 (class 0 OID 0)
-- Dependencies: 178
-- Name: COLUMN objeto.tdistrib; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto.tdistrib IS 'TIPO DE DISTRIBUCIÓN';


--
-- TOC entry 7574 (class 0 OID 0)
-- Dependencies: 178
-- Name: COLUMN objeto.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto.obs IS 'OBSERVACIONES';


--
-- TOC entry 7575 (class 0 OID 0)
-- Dependencies: 178
-- Name: COLUMN objeto.objunifica; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto.objunifica IS 'CODIGO DE OBJETO CON EL QUE ESTA UNIFICADO';


--
-- TOC entry 7576 (class 0 OID 0)
-- Dependencies: 178
-- Name: COLUMN objeto.vigencia; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto.vigencia IS 'AÑO DE VIGENCIA';


--
-- TOC entry 7577 (class 0 OID 0)
-- Dependencies: 178
-- Name: COLUMN objeto.claveweb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto.claveweb IS 'CLAVE USADA PARA WEB';


--
-- TOC entry 7578 (class 0 OID 0)
-- Dependencies: 178
-- Name: COLUMN objeto.fchalta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto.fchalta IS 'FECHA DE ALTA';


--
-- TOC entry 7579 (class 0 OID 0)
-- Dependencies: 178
-- Name: COLUMN objeto.usralta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto.usralta IS 'USUARIO QUE DIO EL ALTA';


--
-- TOC entry 7580 (class 0 OID 0)
-- Dependencies: 178
-- Name: COLUMN objeto.fchbaja; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto.fchbaja IS 'FECHA DE BAJA';


--
-- TOC entry 7581 (class 0 OID 0)
-- Dependencies: 178
-- Name: COLUMN objeto.usrbaja; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto.usrbaja IS 'USUARIO QUE DIO LA BAJA';


--
-- TOC entry 7582 (class 0 OID 0)
-- Dependencies: 178
-- Name: COLUMN objeto.tbaja; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto.tbaja IS 'CODIGO DE MOTIVO DE BAJA';


--
-- TOC entry 7583 (class 0 OID 0)
-- Dependencies: 178
-- Name: COLUMN objeto.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7584 (class 0 OID 0)
-- Dependencies: 178
-- Name: COLUMN objeto.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 386 (class 1259 OID 5285072)
-- Name: objeto_accion; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.objeto_accion (
    obj_id character varying(8) NOT NULL,
    orden smallint NOT NULL,
    taccion smallint NOT NULL,
    fecha timestamp without time zone NOT NULL,
    fchdesde date,
    fchhasta date,
    expe character varying(20),
    dato_ant character varying(250),
    dato_ins character varying(50),
    obs character varying(500) NOT NULL,
    est character varying(1),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.objeto_accion OWNER TO postgres;

--
-- TOC entry 7585 (class 0 OID 0)
-- Dependencies: 386
-- Name: TABLE objeto_accion; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.objeto_accion IS 'EXPEDIENTES O RESOLUCIONES DE LOS OBJETOS';


--
-- TOC entry 7586 (class 0 OID 0)
-- Dependencies: 386
-- Name: COLUMN objeto_accion.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_accion.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 7587 (class 0 OID 0)
-- Dependencies: 386
-- Name: COLUMN objeto_accion.orden; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_accion.orden IS 'NUMERO DE ORDEN';


--
-- TOC entry 7588 (class 0 OID 0)
-- Dependencies: 386
-- Name: COLUMN objeto_accion.taccion; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_accion.taccion IS 'CODIGO DE TIPO DE HISTORICO';


--
-- TOC entry 7589 (class 0 OID 0)
-- Dependencies: 386
-- Name: COLUMN objeto_accion.fecha; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_accion.fecha IS 'FECHA';


--
-- TOC entry 7590 (class 0 OID 0)
-- Dependencies: 386
-- Name: COLUMN objeto_accion.fchdesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_accion.fchdesde IS 'FECHA DESDE';


--
-- TOC entry 7591 (class 0 OID 0)
-- Dependencies: 386
-- Name: COLUMN objeto_accion.fchhasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_accion.fchhasta IS 'FECHA HASTA';


--
-- TOC entry 7592 (class 0 OID 0)
-- Dependencies: 386
-- Name: COLUMN objeto_accion.expe; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_accion.expe IS 'EXPEDIENTE';


--
-- TOC entry 7593 (class 0 OID 0)
-- Dependencies: 386
-- Name: COLUMN objeto_accion.dato_ant; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_accion.dato_ant IS 'DATOS ANTERIORES';


--
-- TOC entry 7594 (class 0 OID 0)
-- Dependencies: 386
-- Name: COLUMN objeto_accion.dato_ins; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_accion.dato_ins IS 'DATOS DE INSCRIPCION';


--
-- TOC entry 7595 (class 0 OID 0)
-- Dependencies: 386
-- Name: COLUMN objeto_accion.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_accion.obs IS 'OBSERVACIONES';


--
-- TOC entry 7596 (class 0 OID 0)
-- Dependencies: 386
-- Name: COLUMN objeto_accion.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_accion.est IS 'ESTADO DE LA ACCION';


--
-- TOC entry 7597 (class 0 OID 0)
-- Dependencies: 386
-- Name: COLUMN objeto_accion.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_accion.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7598 (class 0 OID 0)
-- Dependencies: 386
-- Name: COLUMN objeto_accion.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_accion.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 387 (class 1259 OID 5285079)
-- Name: objeto_computa; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.objeto_computa (
    computa_id smallint NOT NULL,
    tobj smallint NOT NULL,
    funcion character varying(30),
    formula character varying(4000),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.objeto_computa OWNER TO postgres;

--
-- TOC entry 7599 (class 0 OID 0)
-- Dependencies: 387
-- Name: TABLE objeto_computa; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.objeto_computa IS 'FORMULAS PARA VARIABLES COMPUTADAS AUTOMÁTICAMENTE';


--
-- TOC entry 7600 (class 0 OID 0)
-- Dependencies: 387
-- Name: COLUMN objeto_computa.computa_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_computa.computa_id IS 'IDENTIFICADOR DE COMPUTA';


--
-- TOC entry 7601 (class 0 OID 0)
-- Dependencies: 387
-- Name: COLUMN objeto_computa.tobj; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_computa.tobj IS 'CODIGO DE TIPO DE OBJETO';


--
-- TOC entry 7602 (class 0 OID 0)
-- Dependencies: 387
-- Name: COLUMN objeto_computa.funcion; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_computa.funcion IS 'NOMBRE LA FUNCION';


--
-- TOC entry 7603 (class 0 OID 0)
-- Dependencies: 387
-- Name: COLUMN objeto_computa.formula; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_computa.formula IS 'FORMULA USADA EN LA FUNCION';


--
-- TOC entry 7604 (class 0 OID 0)
-- Dependencies: 387
-- Name: COLUMN objeto_computa.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_computa.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7605 (class 0 OID 0)
-- Dependencies: 387
-- Name: COLUMN objeto_computa.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_computa.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 388 (class 1259 OID 5285086)
-- Name: objeto_computa_campo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.objeto_computa_campo (
    computa_id smallint NOT NULL,
    campo character varying(20) NOT NULL
);


ALTER TABLE public.objeto_computa_campo OWNER TO postgres;

--
-- TOC entry 7606 (class 0 OID 0)
-- Dependencies: 388
-- Name: TABLE objeto_computa_campo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.objeto_computa_campo IS 'CAMPOS PARA VARIABLES COMPUTADAS ';


--
-- TOC entry 7607 (class 0 OID 0)
-- Dependencies: 388
-- Name: COLUMN objeto_computa_campo.computa_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_computa_campo.computa_id IS 'IDENTIFICADOR DE COMPUTA';


--
-- TOC entry 7608 (class 0 OID 0)
-- Dependencies: 388
-- Name: COLUMN objeto_computa_campo.campo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_computa_campo.campo IS 'NOMBRE DEL CAMPO';


--
-- TOC entry 389 (class 1259 OID 5285089)
-- Name: objeto_item; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.objeto_item (
    obj_id character varying(8) NOT NULL,
    subcta smallint DEFAULT 0 NOT NULL,
    orden smallint DEFAULT 0 NOT NULL,
    trib_id smallint NOT NULL,
    item_id smallint NOT NULL,
    perdesde integer NOT NULL,
    perhasta integer,
    param1 numeric(12,2) DEFAULT 0 NOT NULL,
    param2 numeric(12,2),
    expe character varying(12),
    obs character varying(250) NOT NULL,
    exen_id integer DEFAULT 0,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.objeto_item OWNER TO postgres;

--
-- TOC entry 7609 (class 0 OID 0)
-- Dependencies: 389
-- Name: TABLE objeto_item; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.objeto_item IS 'ÍTEMS ASIGNADOS A OBJETOS';


--
-- TOC entry 7610 (class 0 OID 0)
-- Dependencies: 389
-- Name: COLUMN objeto_item.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_item.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 7611 (class 0 OID 0)
-- Dependencies: 389
-- Name: COLUMN objeto_item.subcta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_item.subcta IS 'NUMERO DE SUBCUENTA';


--
-- TOC entry 7612 (class 0 OID 0)
-- Dependencies: 389
-- Name: COLUMN objeto_item.orden; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_item.orden IS 'NUMERO DE ORDEN';


--
-- TOC entry 7613 (class 0 OID 0)
-- Dependencies: 389
-- Name: COLUMN objeto_item.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_item.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 7614 (class 0 OID 0)
-- Dependencies: 389
-- Name: COLUMN objeto_item.item_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_item.item_id IS 'CODIGO DEL ITEM';


--
-- TOC entry 7615 (class 0 OID 0)
-- Dependencies: 389
-- Name: COLUMN objeto_item.perdesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_item.perdesde IS 'PERIODO DESDE';


--
-- TOC entry 7616 (class 0 OID 0)
-- Dependencies: 389
-- Name: COLUMN objeto_item.perhasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_item.perhasta IS 'PERIODO HASTA';


--
-- TOC entry 7617 (class 0 OID 0)
-- Dependencies: 389
-- Name: COLUMN objeto_item.param1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_item.param1 IS 'PARAMETRO 1';


--
-- TOC entry 7618 (class 0 OID 0)
-- Dependencies: 389
-- Name: COLUMN objeto_item.param2; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_item.param2 IS 'PARAMETRO 2';


--
-- TOC entry 7619 (class 0 OID 0)
-- Dependencies: 389
-- Name: COLUMN objeto_item.expe; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_item.expe IS 'EXPEDIENTE';


--
-- TOC entry 7620 (class 0 OID 0)
-- Dependencies: 389
-- Name: COLUMN objeto_item.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_item.obs IS 'OBSERVACIONES';


--
-- TOC entry 7621 (class 0 OID 0)
-- Dependencies: 389
-- Name: COLUMN objeto_item.exen_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_item.exen_id IS 'CODIGO DE EXIMISION';


--
-- TOC entry 7622 (class 0 OID 0)
-- Dependencies: 389
-- Name: COLUMN objeto_item.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_item.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7623 (class 0 OID 0)
-- Dependencies: 389
-- Name: COLUMN objeto_item.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_item.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 390 (class 1259 OID 5285097)
-- Name: objeto_misc; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.objeto_misc (
    obj_id character varying(8) NOT NULL,
    orden smallint NOT NULL,
    fecha timestamp without time zone NOT NULL,
    titulo character varying(40) NOT NULL,
    detalle character varying(500) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.objeto_misc OWNER TO postgres;

--
-- TOC entry 7624 (class 0 OID 0)
-- Dependencies: 390
-- Name: TABLE objeto_misc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.objeto_misc IS 'MISCELÁNEAS RELACIONADAS A LOS OBJETOS';


--
-- TOC entry 7625 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN objeto_misc.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_misc.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 7626 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN objeto_misc.orden; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_misc.orden IS 'NUMERO DE ORDEN';


--
-- TOC entry 7627 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN objeto_misc.fecha; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_misc.fecha IS 'FECHA';


--
-- TOC entry 7628 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN objeto_misc.titulo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_misc.titulo IS 'TITULO';


--
-- TOC entry 7629 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN objeto_misc.detalle; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_misc.detalle IS 'DETALLE';


--
-- TOC entry 7630 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN objeto_misc.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_misc.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7631 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN objeto_misc.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_misc.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 391 (class 1259 OID 5285104)
-- Name: objeto_persona; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.objeto_persona (
    obj_id character varying(8) NOT NULL,
    num character varying(8) NOT NULL,
    tobj smallint NOT NULL,
    tvinc smallint,
    porc numeric(5,2),
    est character(1) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.objeto_persona OWNER TO postgres;

--
-- TOC entry 7632 (class 0 OID 0)
-- Dependencies: 391
-- Name: TABLE objeto_persona; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.objeto_persona IS 'VÍNCULOS ENTRE OBJETOS';


--
-- TOC entry 7633 (class 0 OID 0)
-- Dependencies: 391
-- Name: COLUMN objeto_persona.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_persona.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 7634 (class 0 OID 0)
-- Dependencies: 391
-- Name: COLUMN objeto_persona.num; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_persona.num IS 'CODIGO DE NUM - RESPONSABLE';


--
-- TOC entry 7635 (class 0 OID 0)
-- Dependencies: 391
-- Name: COLUMN objeto_persona.tobj; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_persona.tobj IS 'CODIGO DE TIPO DE OBJETO';


--
-- TOC entry 7636 (class 0 OID 0)
-- Dependencies: 391
-- Name: COLUMN objeto_persona.tvinc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_persona.tvinc IS 'CODIGO DE TIPO DE VINCULO';


--
-- TOC entry 7637 (class 0 OID 0)
-- Dependencies: 391
-- Name: COLUMN objeto_persona.porc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_persona.porc IS 'PORCENTAJE';


--
-- TOC entry 7638 (class 0 OID 0)
-- Dependencies: 391
-- Name: COLUMN objeto_persona.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_persona.est IS 'ESTADO';


--
-- TOC entry 7639 (class 0 OID 0)
-- Dependencies: 391
-- Name: COLUMN objeto_persona.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_persona.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7640 (class 0 OID 0)
-- Dependencies: 391
-- Name: COLUMN objeto_persona.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_persona.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 392 (class 1259 OID 5285108)
-- Name: objeto_rubro; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.objeto_rubro (
    obj_id character varying(8) NOT NULL,
    rubro_id character varying(8) NOT NULL,
    perdesde integer NOT NULL,
    perhasta integer DEFAULT 999999 NOT NULL,
    fiscaliza smallint NOT NULL,
    subcta smallint DEFAULT 0 NOT NULL,
    cant integer DEFAULT 0 NOT NULL,
    tipo smallint NOT NULL,
    est character varying(1) NOT NULL,
    expe character varying(12),
    obs character varying(100),
    porc numeric(5,2) DEFAULT 100 NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.objeto_rubro OWNER TO postgres;

--
-- TOC entry 7641 (class 0 OID 0)
-- Dependencies: 392
-- Name: TABLE objeto_rubro; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.objeto_rubro IS 'RUBROS O ACTIVIDADES POR CADA COMERCIO';


--
-- TOC entry 7642 (class 0 OID 0)
-- Dependencies: 392
-- Name: COLUMN objeto_rubro.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_rubro.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 7643 (class 0 OID 0)
-- Dependencies: 392
-- Name: COLUMN objeto_rubro.rubro_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_rubro.rubro_id IS 'CODIGO DE RUBRO';


--
-- TOC entry 7644 (class 0 OID 0)
-- Dependencies: 392
-- Name: COLUMN objeto_rubro.perdesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_rubro.perdesde IS 'PERIODO DESDE';


--
-- TOC entry 7645 (class 0 OID 0)
-- Dependencies: 392
-- Name: COLUMN objeto_rubro.perhasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_rubro.perhasta IS 'PERIODO HASTA';


--
-- TOC entry 7646 (class 0 OID 0)
-- Dependencies: 392
-- Name: COLUMN objeto_rubro.fiscaliza; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_rubro.fiscaliza IS 'SI ES FISCALIZACION';


--
-- TOC entry 7647 (class 0 OID 0)
-- Dependencies: 392
-- Name: COLUMN objeto_rubro.cant; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_rubro.cant IS 'CANTIDAD';


--
-- TOC entry 7648 (class 0 OID 0)
-- Dependencies: 392
-- Name: COLUMN objeto_rubro.tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_rubro.tipo IS 'RUBRO PRINCIPAL O SECUNDARIO';


--
-- TOC entry 7649 (class 0 OID 0)
-- Dependencies: 392
-- Name: COLUMN objeto_rubro.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_rubro.est IS 'ESTADO';


--
-- TOC entry 7650 (class 0 OID 0)
-- Dependencies: 392
-- Name: COLUMN objeto_rubro.expe; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_rubro.expe IS 'EXPEDIENTE';


--
-- TOC entry 7651 (class 0 OID 0)
-- Dependencies: 392
-- Name: COLUMN objeto_rubro.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_rubro.obs IS 'OBSERVACIONES';


--
-- TOC entry 7652 (class 0 OID 0)
-- Dependencies: 392
-- Name: COLUMN objeto_rubro.porc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_rubro.porc IS 'PORCENTAJE';


--
-- TOC entry 7653 (class 0 OID 0)
-- Dependencies: 392
-- Name: COLUMN objeto_rubro.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_rubro.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7654 (class 0 OID 0)
-- Dependencies: 392
-- Name: COLUMN objeto_rubro.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_rubro.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 393 (class 1259 OID 5285116)
-- Name: objeto_taccion; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.objeto_taccion (
    cod smallint NOT NULL,
    tobj smallint NOT NULL,
    nombre character varying(40) NOT NULL,
    interno character varying(1) NOT NULL,
    estactual character varying(10) NOT NULL,
    estnuevo character varying(1) NOT NULL,
    desdehasta smallint NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.objeto_taccion OWNER TO postgres;

--
-- TOC entry 7655 (class 0 OID 0)
-- Dependencies: 393
-- Name: TABLE objeto_taccion; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.objeto_taccion IS 'DIFERENTES ACCIONES O REGISTROS POR TIPO DE OBJETO';


--
-- TOC entry 7656 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN objeto_taccion.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_taccion.cod IS 'CODIGO';


--
-- TOC entry 7657 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN objeto_taccion.tobj; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_taccion.tobj IS 'CODIGO DE TIPO DE OBJETO';


--
-- TOC entry 7658 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN objeto_taccion.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_taccion.nombre IS 'NOMBRE';


--
-- TOC entry 7659 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN objeto_taccion.interno; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_taccion.interno IS 'SI ES ACCION INTERNA O NO (S/N)';


--
-- TOC entry 7660 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN objeto_taccion.estactual; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_taccion.estactual IS 'ESTADOS ACTUALES DEL OBJETO';


--
-- TOC entry 7661 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN objeto_taccion.estnuevo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_taccion.estnuevo IS 'ESTADO A ASIGNAR AL OBJETO';


--
-- TOC entry 7662 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN objeto_taccion.desdehasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_taccion.desdehasta IS 'SI DEBE SOLICITAR RANGO DE FECHA';


--
-- TOC entry 7663 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN objeto_taccion.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_taccion.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7664 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN objeto_taccion.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_taccion.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 394 (class 1259 OID 5285120)
-- Name: objeto_tbaja; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.objeto_tbaja (
    cod smallint NOT NULL,
    tobj smallint NOT NULL,
    nombre character varying(70) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.objeto_tbaja OWNER TO postgres;

--
-- TOC entry 7665 (class 0 OID 0)
-- Dependencies: 394
-- Name: TABLE objeto_tbaja; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.objeto_tbaja IS 'DISTINTOS MOTIVOS DE BAJA POR TIPO DE OBJETOS';


--
-- TOC entry 7666 (class 0 OID 0)
-- Dependencies: 394
-- Name: COLUMN objeto_tbaja.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_tbaja.cod IS 'CODIGO ';


--
-- TOC entry 7667 (class 0 OID 0)
-- Dependencies: 394
-- Name: COLUMN objeto_tbaja.tobj; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_tbaja.tobj IS 'CODIGO DE TIPO DE OBJETO';


--
-- TOC entry 7668 (class 0 OID 0)
-- Dependencies: 394
-- Name: COLUMN objeto_tbaja.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_tbaja.nombre IS 'NOMBRE';


--
-- TOC entry 7669 (class 0 OID 0)
-- Dependencies: 394
-- Name: COLUMN objeto_tbaja.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_tbaja.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7670 (class 0 OID 0)
-- Dependencies: 394
-- Name: COLUMN objeto_tbaja.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_tbaja.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 395 (class 1259 OID 5285124)
-- Name: objeto_tdistrib; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.objeto_tdistrib (
    cod smallint NOT NULL,
    nombre character varying(30) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.objeto_tdistrib OWNER TO postgres;

--
-- TOC entry 7671 (class 0 OID 0)
-- Dependencies: 395
-- Name: TABLE objeto_tdistrib; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.objeto_tdistrib IS 'MODOS DE DISTRIBUCIÓN';


--
-- TOC entry 7672 (class 0 OID 0)
-- Dependencies: 395
-- Name: COLUMN objeto_tdistrib.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_tdistrib.cod IS 'CODIGO ';


--
-- TOC entry 7673 (class 0 OID 0)
-- Dependencies: 395
-- Name: COLUMN objeto_tdistrib.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_tdistrib.nombre IS 'NOMBRE';


--
-- TOC entry 7674 (class 0 OID 0)
-- Dependencies: 395
-- Name: COLUMN objeto_tdistrib.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_tdistrib.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7675 (class 0 OID 0)
-- Dependencies: 395
-- Name: COLUMN objeto_tdistrib.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_tdistrib.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 396 (class 1259 OID 5285128)
-- Name: objeto_test; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.objeto_test (
    tobj smallint NOT NULL,
    cod character(1) NOT NULL,
    nombre character varying(20) NOT NULL,
    estgral character varying(1),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.objeto_test OWNER TO postgres;

--
-- TOC entry 7676 (class 0 OID 0)
-- Dependencies: 396
-- Name: TABLE objeto_test; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.objeto_test IS 'DISTINTOS ESTADOS DEL OBJETO POR TIPO DE OBJETOS';


--
-- TOC entry 7677 (class 0 OID 0)
-- Dependencies: 396
-- Name: COLUMN objeto_test.tobj; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_test.tobj IS 'CODIGO DE TIPO DE OBJETO';


--
-- TOC entry 7678 (class 0 OID 0)
-- Dependencies: 396
-- Name: COLUMN objeto_test.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_test.cod IS 'CODIGO DE ESTADO';


--
-- TOC entry 7679 (class 0 OID 0)
-- Dependencies: 396
-- Name: COLUMN objeto_test.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_test.nombre IS 'NOMBRE';


--
-- TOC entry 7680 (class 0 OID 0)
-- Dependencies: 396
-- Name: COLUMN objeto_test.estgral; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_test.estgral IS 'CODIGO DE ESTADO GENERAL';


--
-- TOC entry 7681 (class 0 OID 0)
-- Dependencies: 396
-- Name: COLUMN objeto_test.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_test.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7682 (class 0 OID 0)
-- Dependencies: 396
-- Name: COLUMN objeto_test.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_test.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 397 (class 1259 OID 5285132)
-- Name: objeto_tipo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.objeto_tipo (
    cod smallint NOT NULL,
    nombre character varying(25) DEFAULT ''::character varying NOT NULL,
    nombre_redu character varying(3) DEFAULT ''::character varying NOT NULL,
    campo_clave character varying(15) DEFAULT ''::character varying,
    letra character varying(1) DEFAULT ''::character varying,
    autoinc smallint,
    est character(1),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.objeto_tipo OWNER TO postgres;

--
-- TOC entry 7683 (class 0 OID 0)
-- Dependencies: 397
-- Name: TABLE objeto_tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.objeto_tipo IS 'TIPOS DE OBJETOS IMPONIBLES';


--
-- TOC entry 7684 (class 0 OID 0)
-- Dependencies: 397
-- Name: COLUMN objeto_tipo.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_tipo.cod IS 'CODIGO';


--
-- TOC entry 7685 (class 0 OID 0)
-- Dependencies: 397
-- Name: COLUMN objeto_tipo.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_tipo.nombre IS 'NOMBRE';


--
-- TOC entry 7686 (class 0 OID 0)
-- Dependencies: 397
-- Name: COLUMN objeto_tipo.nombre_redu; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_tipo.nombre_redu IS 'NOMBRE REDUCIDO';


--
-- TOC entry 7687 (class 0 OID 0)
-- Dependencies: 397
-- Name: COLUMN objeto_tipo.campo_clave; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_tipo.campo_clave IS 'CAMPO CLAVE';


--
-- TOC entry 7688 (class 0 OID 0)
-- Dependencies: 397
-- Name: COLUMN objeto_tipo.letra; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_tipo.letra IS 'LETRA QUE LO IDENTIFICA';


--
-- TOC entry 7689 (class 0 OID 0)
-- Dependencies: 397
-- Name: COLUMN objeto_tipo.autoinc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_tipo.autoinc IS 'SI EL CODIGO ES AUTOINCREMENTAL';


--
-- TOC entry 7690 (class 0 OID 0)
-- Dependencies: 397
-- Name: COLUMN objeto_tipo.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_tipo.est IS 'ESTADO';


--
-- TOC entry 7691 (class 0 OID 0)
-- Dependencies: 397
-- Name: COLUMN objeto_tipo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_tipo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7692 (class 0 OID 0)
-- Dependencies: 397
-- Name: COLUMN objeto_tipo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_tipo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 398 (class 1259 OID 5285140)
-- Name: objeto_trib; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.objeto_trib (
    obj_id character varying(8) NOT NULL,
    trib_id smallint NOT NULL,
    perdesde integer NOT NULL,
    perhasta integer NOT NULL,
    cat character varying(2) NOT NULL,
    fchalta date,
    expe character varying(12),
    base numeric(12,2),
    cant smallint,
    sup smallint,
    obs character varying(250),
    est character varying(1) DEFAULT 'A'::character varying,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.objeto_trib OWNER TO postgres;

--
-- TOC entry 7693 (class 0 OID 0)
-- Dependencies: 398
-- Name: TABLE objeto_trib; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.objeto_trib IS 'TRIBUTOS ASIGNADOS A OBJETOS';


--
-- TOC entry 7694 (class 0 OID 0)
-- Dependencies: 398
-- Name: COLUMN objeto_trib.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_trib.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 7695 (class 0 OID 0)
-- Dependencies: 398
-- Name: COLUMN objeto_trib.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_trib.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 7696 (class 0 OID 0)
-- Dependencies: 398
-- Name: COLUMN objeto_trib.perdesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_trib.perdesde IS 'PERIODO DESDE';


--
-- TOC entry 7697 (class 0 OID 0)
-- Dependencies: 398
-- Name: COLUMN objeto_trib.perhasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_trib.perhasta IS 'PERIODO HASTA';


--
-- TOC entry 7698 (class 0 OID 0)
-- Dependencies: 398
-- Name: COLUMN objeto_trib.cat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_trib.cat IS 'CATEGORIA';


--
-- TOC entry 7699 (class 0 OID 0)
-- Dependencies: 398
-- Name: COLUMN objeto_trib.fchalta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_trib.fchalta IS 'FECHA DE ALTA';


--
-- TOC entry 7700 (class 0 OID 0)
-- Dependencies: 398
-- Name: COLUMN objeto_trib.expe; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_trib.expe IS 'EXPEDIENTE';


--
-- TOC entry 7701 (class 0 OID 0)
-- Dependencies: 398
-- Name: COLUMN objeto_trib.base; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_trib.base IS 'BASE IMPONIBLE PROMEDIO ANUAL';


--
-- TOC entry 7702 (class 0 OID 0)
-- Dependencies: 398
-- Name: COLUMN objeto_trib.cant; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_trib.cant IS 'CANTIDAD';


--
-- TOC entry 7703 (class 0 OID 0)
-- Dependencies: 398
-- Name: COLUMN objeto_trib.sup; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_trib.sup IS 'SUPERFICIE DEL COMERCIO';


--
-- TOC entry 7704 (class 0 OID 0)
-- Dependencies: 398
-- Name: COLUMN objeto_trib.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_trib.obs IS 'OBSERVACIÓN';


--
-- TOC entry 7705 (class 0 OID 0)
-- Dependencies: 398
-- Name: COLUMN objeto_trib.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_trib.est IS 'ESTADO';


--
-- TOC entry 7706 (class 0 OID 0)
-- Dependencies: 398
-- Name: COLUMN objeto_trib.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_trib.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7707 (class 0 OID 0)
-- Dependencies: 398
-- Name: COLUMN objeto_trib.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_trib.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 399 (class 1259 OID 5285145)
-- Name: objeto_trib_cat; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.objeto_trib_cat (
    trib_id smallint NOT NULL,
    cat character varying(2) NOT NULL,
    nombre character varying(35),
    det character varying(100),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.objeto_trib_cat OWNER TO postgres;

--
-- TOC entry 7708 (class 0 OID 0)
-- Dependencies: 399
-- Name: TABLE objeto_trib_cat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.objeto_trib_cat IS 'CATEGORIA DE TRIBUTOS';


--
-- TOC entry 7709 (class 0 OID 0)
-- Dependencies: 399
-- Name: COLUMN objeto_trib_cat.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_trib_cat.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 7710 (class 0 OID 0)
-- Dependencies: 399
-- Name: COLUMN objeto_trib_cat.cat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_trib_cat.cat IS 'CATEGORIA';


--
-- TOC entry 7711 (class 0 OID 0)
-- Dependencies: 399
-- Name: COLUMN objeto_trib_cat.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_trib_cat.nombre IS 'NOMBRE';


--
-- TOC entry 7712 (class 0 OID 0)
-- Dependencies: 399
-- Name: COLUMN objeto_trib_cat.det; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_trib_cat.det IS 'DETALLE';


--
-- TOC entry 7713 (class 0 OID 0)
-- Dependencies: 399
-- Name: COLUMN objeto_trib_cat.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_trib_cat.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7714 (class 0 OID 0)
-- Dependencies: 399
-- Name: COLUMN objeto_trib_cat.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_trib_cat.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 400 (class 1259 OID 5285149)
-- Name: objeto_trubro; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.objeto_trubro (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod integer NOT NULL
);


ALTER TABLE public.objeto_trubro OWNER TO postgres;

--
-- TOC entry 7716 (class 0 OID 0)
-- Dependencies: 400
-- Name: TABLE objeto_trubro; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.objeto_trubro IS 'TIPOS DE RUBROS COMERCIALES';


--
-- TOC entry 7717 (class 0 OID 0)
-- Dependencies: 400
-- Name: COLUMN objeto_trubro.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_trubro.cod IS 'CODIGO ';


--
-- TOC entry 7718 (class 0 OID 0)
-- Dependencies: 400
-- Name: COLUMN objeto_trubro.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_trubro.nombre IS 'NOMBRE';


--
-- TOC entry 7719 (class 0 OID 0)
-- Dependencies: 400
-- Name: COLUMN objeto_trubro.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_trubro.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7720 (class 0 OID 0)
-- Dependencies: 400
-- Name: COLUMN objeto_trubro.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_trubro.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 401 (class 1259 OID 5285153)
-- Name: objeto_var; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.objeto_var (
    obj_id character varying(8) NOT NULL,
    var_id smallint NOT NULL,
    valor character varying(20) NOT NULL
);


ALTER TABLE public.objeto_var OWNER TO postgres;

--
-- TOC entry 7721 (class 0 OID 0)
-- Dependencies: 401
-- Name: TABLE objeto_var; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.objeto_var IS 'VALORES DE VARIABLES ASIGNADOS A LOS OBJETOS';


--
-- TOC entry 7722 (class 0 OID 0)
-- Dependencies: 401
-- Name: COLUMN objeto_var.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_var.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 7723 (class 0 OID 0)
-- Dependencies: 401
-- Name: COLUMN objeto_var.var_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_var.var_id IS 'IDENTIFICADOR DE VARIABLE';


--
-- TOC entry 7724 (class 0 OID 0)
-- Dependencies: 401
-- Name: COLUMN objeto_var.valor; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.objeto_var.valor IS 'VALOR';


--
-- TOC entry 402 (class 1259 OID 5285219)
-- Name: osm; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.osm (
    obj_id character varying(8) NOT NULL,
    subcta smallint DEFAULT 0 NOT NULL,
    ctaosm character varying(10) DEFAULT ''::character varying NOT NULL,
    fchinicio timestamp without time zone NOT NULL,
    tliq smallint NOT NULL,
    tipomedidor smallint NOT NULL,
    nummedidor integer NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint DEFAULT 100 NOT NULL
);


ALTER TABLE public.osm OWNER TO postgres;

--
-- TOC entry 7725 (class 0 OID 0)
-- Dependencies: 402
-- Name: TABLE osm; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.osm IS 'DATOS PRINCIPALES DE OBRAS SANITARIAS MUNICIPAL';


--
-- TOC entry 7726 (class 0 OID 0)
-- Dependencies: 402
-- Name: COLUMN osm.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 7727 (class 0 OID 0)
-- Dependencies: 402
-- Name: COLUMN osm.subcta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm.subcta IS 'NUMERO DE SUBCUENTA';


--
-- TOC entry 7728 (class 0 OID 0)
-- Dependencies: 402
-- Name: COLUMN osm.ctaosm; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm.ctaosm IS 'NUMERO DE CUENTA DE OSM';


--
-- TOC entry 7729 (class 0 OID 0)
-- Dependencies: 402
-- Name: COLUMN osm.fchinicio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm.fchinicio IS 'FECHA DE INICIO';


--
-- TOC entry 7730 (class 0 OID 0)
-- Dependencies: 402
-- Name: COLUMN osm.tliq; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm.tliq IS 'CODIGO DE TIPO DE LIQUIDACION';


--
-- TOC entry 7731 (class 0 OID 0)
-- Dependencies: 402
-- Name: COLUMN osm.tipomedidor; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm.tipomedidor IS 'CODIGO DE TIPO DE MEDIDOR';


--
-- TOC entry 7732 (class 0 OID 0)
-- Dependencies: 402
-- Name: COLUMN osm.nummedidor; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm.nummedidor IS 'NUMERO DE MEDIDOR';


--
-- TOC entry 7733 (class 0 OID 0)
-- Dependencies: 402
-- Name: COLUMN osm.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7734 (class 0 OID 0)
-- Dependencies: 402
-- Name: COLUMN osm.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 403 (class 1259 OID 5285226)
-- Name: osm_consumo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.osm_consumo (
    obj_id character varying(8) NOT NULL,
    subcta smallint NOT NULL,
    anio smallint NOT NULL,
    cuota smallint NOT NULL,
    fchlect timestamp without time zone NOT NULL,
    tlect smallint NOT NULL,
    lect_ant smallint NOT NULL,
    lect_act smallint NOT NULL,
    consumo smallint NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.osm_consumo OWNER TO postgres;

--
-- TOC entry 7735 (class 0 OID 0)
-- Dependencies: 403
-- Name: TABLE osm_consumo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.osm_consumo IS 'CONSUMO DE MEDIDORES DE OBRAS SANITARIAS';


--
-- TOC entry 7736 (class 0 OID 0)
-- Dependencies: 403
-- Name: COLUMN osm_consumo.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_consumo.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 7737 (class 0 OID 0)
-- Dependencies: 403
-- Name: COLUMN osm_consumo.subcta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_consumo.subcta IS 'NUMERO DE SUBCUENTA';


--
-- TOC entry 7738 (class 0 OID 0)
-- Dependencies: 403
-- Name: COLUMN osm_consumo.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_consumo.anio IS 'AÑO';


--
-- TOC entry 7739 (class 0 OID 0)
-- Dependencies: 403
-- Name: COLUMN osm_consumo.cuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_consumo.cuota IS 'CUOTA';


--
-- TOC entry 7740 (class 0 OID 0)
-- Dependencies: 403
-- Name: COLUMN osm_consumo.fchlect; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_consumo.fchlect IS 'FECHA DE LECTURA';


--
-- TOC entry 7741 (class 0 OID 0)
-- Dependencies: 403
-- Name: COLUMN osm_consumo.tlect; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_consumo.tlect IS 'CODIGO DE TIPO DE LECTURA';


--
-- TOC entry 7742 (class 0 OID 0)
-- Dependencies: 403
-- Name: COLUMN osm_consumo.lect_ant; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_consumo.lect_ant IS 'NUMERO DE LECTURA ANTERIOR';


--
-- TOC entry 7743 (class 0 OID 0)
-- Dependencies: 403
-- Name: COLUMN osm_consumo.lect_act; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_consumo.lect_act IS 'NUMERO DE LECTURA ACTUAL';


--
-- TOC entry 7744 (class 0 OID 0)
-- Dependencies: 403
-- Name: COLUMN osm_consumo.consumo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_consumo.consumo IS 'VALOR DE CONSUMO';


--
-- TOC entry 7745 (class 0 OID 0)
-- Dependencies: 403
-- Name: COLUMN osm_consumo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_consumo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7746 (class 0 OID 0)
-- Dependencies: 403
-- Name: COLUMN osm_consumo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_consumo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 404 (class 1259 OID 5285230)
-- Name: osm_tipo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.osm_tipo (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.osm_tipo OWNER TO postgres;

--
-- TOC entry 7747 (class 0 OID 0)
-- Dependencies: 404
-- Name: TABLE osm_tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.osm_tipo IS 'TIPOS DE CUENTA DE OSM';


--
-- TOC entry 7748 (class 0 OID 0)
-- Dependencies: 404
-- Name: COLUMN osm_tipo.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_tipo.cod IS 'CODIGO ';


--
-- TOC entry 7749 (class 0 OID 0)
-- Dependencies: 404
-- Name: COLUMN osm_tipo.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_tipo.nombre IS 'NOMBRE';


--
-- TOC entry 7750 (class 0 OID 0)
-- Dependencies: 404
-- Name: COLUMN osm_tipo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_tipo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7751 (class 0 OID 0)
-- Dependencies: 404
-- Name: COLUMN osm_tipo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_tipo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 405 (class 1259 OID 5285234)
-- Name: osm_tlect; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.osm_tlect (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.osm_tlect OWNER TO postgres;

--
-- TOC entry 7752 (class 0 OID 0)
-- Dependencies: 405
-- Name: TABLE osm_tlect; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.osm_tlect IS 'TIPOS DE LECTURA PARA OSM';


--
-- TOC entry 7753 (class 0 OID 0)
-- Dependencies: 405
-- Name: COLUMN osm_tlect.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_tlect.cod IS 'CODIGO ';


--
-- TOC entry 7754 (class 0 OID 0)
-- Dependencies: 405
-- Name: COLUMN osm_tlect.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_tlect.nombre IS 'NOMBRE';


--
-- TOC entry 7755 (class 0 OID 0)
-- Dependencies: 405
-- Name: COLUMN osm_tlect.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_tlect.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7756 (class 0 OID 0)
-- Dependencies: 405
-- Name: COLUMN osm_tlect.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_tlect.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 406 (class 1259 OID 5285238)
-- Name: osm_tliq; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.osm_tliq (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.osm_tliq OWNER TO postgres;

--
-- TOC entry 7757 (class 0 OID 0)
-- Dependencies: 406
-- Name: TABLE osm_tliq; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.osm_tliq IS 'TIPOS DE LIQUIDACIÓN DE OSM';


--
-- TOC entry 7758 (class 0 OID 0)
-- Dependencies: 406
-- Name: COLUMN osm_tliq.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_tliq.cod IS 'CODIGO ';


--
-- TOC entry 7759 (class 0 OID 0)
-- Dependencies: 406
-- Name: COLUMN osm_tliq.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_tliq.nombre IS 'NOMBRE';


--
-- TOC entry 7760 (class 0 OID 0)
-- Dependencies: 406
-- Name: COLUMN osm_tliq.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_tliq.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7761 (class 0 OID 0)
-- Dependencies: 406
-- Name: COLUMN osm_tliq.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_tliq.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 407 (class 1259 OID 5285242)
-- Name: osm_treccons; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.osm_treccons (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    item_id smallint NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.osm_treccons OWNER TO postgres;

--
-- TOC entry 7762 (class 0 OID 0)
-- Dependencies: 407
-- Name: TABLE osm_treccons; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.osm_treccons IS 'DIFERENTES RECARGOS POR CONSUMO DE OSM';


--
-- TOC entry 7763 (class 0 OID 0)
-- Dependencies: 407
-- Name: COLUMN osm_treccons.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_treccons.cod IS 'CODIGO';


--
-- TOC entry 7764 (class 0 OID 0)
-- Dependencies: 407
-- Name: COLUMN osm_treccons.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_treccons.nombre IS 'NOMBRE';


--
-- TOC entry 7765 (class 0 OID 0)
-- Dependencies: 407
-- Name: COLUMN osm_treccons.item_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_treccons.item_id IS 'CODIGO DE ITEM';


--
-- TOC entry 7766 (class 0 OID 0)
-- Dependencies: 407
-- Name: COLUMN osm_treccons.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_treccons.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7767 (class 0 OID 0)
-- Dependencies: 407
-- Name: COLUMN osm_treccons.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.osm_treccons.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 184 (class 1259 OID 5283830)
-- Name: persona; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.persona (
    obj_id character varying(8) NOT NULL,
    inscrip integer,
    tipo smallint,
    tdoc smallint NOT NULL,
    ndoc bigint NOT NULL,
    fchnac date,
    sexo character(1) NOT NULL,
    nacionalidad smallint NOT NULL,
    estcivil smallint NOT NULL,
    clasif smallint NOT NULL,
    iva smallint NOT NULL,
    cuit character varying(11),
    ag_rete character varying(8),
    ag_rete_manual smallint,
    tel character varying(15) NOT NULL,
    cel character varying(15) DEFAULT ''::character varying NOT NULL,
    mail character varying(40) NOT NULL,
    exis_doc smallint DEFAULT 0 NOT NULL,
    exis_insc smallint DEFAULT 0 NOT NULL,
    exis_foto smallint DEFAULT 0,
    est_ib character varying(1) DEFAULT 'N'::character varying NOT NULL,
    ib character varying(11),
    orgjuri smallint,
    tipoliq character varying(2),
    contador smallint DEFAULT 0,
    contador_verdeuda smallint DEFAULT 0,
    fchalta_ib date,
    fchbaja_ib date,
    nombre_fantasia character varying(50) DEFAULT ''::character varying,
    tbaja_ib character varying(2) DEFAULT ''::character varying
);


ALTER TABLE public.persona OWNER TO postgres;

--
-- TOC entry 7768 (class 0 OID 0)
-- Dependencies: 184
-- Name: TABLE persona; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.persona IS 'DATOS PRINCIPALES DE PERSONAS';


--
-- TOC entry 7769 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 7770 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.inscrip; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.inscrip IS 'NUMERO DE INSCRIPCION';


--
-- TOC entry 7771 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.tipo IS 'TIPO DE PERSONA';


--
-- TOC entry 7772 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.tdoc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.tdoc IS 'CODIGO DE TIPO DE DOCUMENTO';


--
-- TOC entry 7773 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.ndoc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.ndoc IS 'NUMERO DE DOCUMENTO';


--
-- TOC entry 7774 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.fchnac; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.fchnac IS 'FECHA DE NACIMIENTO';


--
-- TOC entry 7775 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.sexo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.sexo IS 'CODIGO DE SEXO';


--
-- TOC entry 7776 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.nacionalidad; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.nacionalidad IS 'CODIGO DE NACIONALIDAD';


--
-- TOC entry 7777 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.estcivil; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.estcivil IS 'CODIGO DE ESTADO CIVIL';


--
-- TOC entry 7778 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.clasif; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.clasif IS 'CODIGO DE CLASIFICACION';


--
-- TOC entry 7779 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.iva; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.iva IS 'CODIGO DE SITUACION ANTE EL IVA';


--
-- TOC entry 7780 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.cuit; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.cuit IS 'NUMERO DE CUIT';


--
-- TOC entry 7781 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.ag_rete; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.ag_rete IS 'NUMERO AGENTE DE RETENCION';


--
-- TOC entry 7782 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.ag_rete_manual; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.ag_rete_manual IS 'INDICA SI SE PERMITE EL INGRESO DE RETENCIONES MANUALES DEL AGENTE';


--
-- TOC entry 7783 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.tel; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.tel IS 'TELEFONO';


--
-- TOC entry 7784 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.cel; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.cel IS 'TELEFONO CELULAR';


--
-- TOC entry 7785 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.mail; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.mail IS 'DIRECCION DE E-MAIL';


--
-- TOC entry 7786 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.exis_doc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.exis_doc IS 'SI TIENE FOTO DOCUMENTO';


--
-- TOC entry 7787 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.exis_insc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.exis_insc IS 'SI EXISTE FOTO INSCRIPCION';


--
-- TOC entry 7788 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.exis_foto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.exis_foto IS 'SI EXISTE FOTO';


--
-- TOC entry 7789 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.est_ib; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.est_ib IS 'ESTADO IIBB (NO TIENE / ACTIVO / BAJA)';


--
-- TOC entry 7790 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.ib; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.ib IS 'NUMERO DE INGRESOS BRUTOS';


--
-- TOC entry 7791 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.orgjuri; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.orgjuri IS 'TIPO DE ORGANIZACIÓN JURÍDICA';


--
-- TOC entry 7792 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.tipoliq; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.tipoliq IS 'TIPO DE LIQUIDACION ING. BRUTOS';


--
-- TOC entry 7793 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.contador; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.contador IS 'CODIGO DE CONTADOR (USUARIOWEB)';


--
-- TOC entry 7794 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.contador_verdeuda; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.contador_verdeuda IS 'SI EL CONTADOR PUEDE VER LA DEUDA DEL CONTRIBUYENTE';


--
-- TOC entry 7795 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.fchalta_ib; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.fchalta_ib IS 'FECHA DE ALTA IIBB';


--
-- TOC entry 7796 (class 0 OID 0)
-- Dependencies: 184
-- Name: COLUMN persona.fchbaja_ib; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona.fchbaja_ib IS 'FECHA DE BAJA IIBB';


--
-- TOC entry 408 (class 1259 OID 5285246)
-- Name: seq_persona_ajuste; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_persona_ajuste
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.seq_persona_ajuste OWNER TO postgres;

--
-- TOC entry 409 (class 1259 OID 5285248)
-- Name: persona_ajuste; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.persona_ajuste (
    aju_id integer DEFAULT nextval('public.seq_persona_ajuste'::regclass) NOT NULL,
    fecha timestamp without time zone NOT NULL,
    obj_id character varying(8) NOT NULL,
    nombre character varying(50),
    tdoc smallint,
    ndoc bigint,
    cuit character varying(11),
    domicilio character varying(250),
    est character(1) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint DEFAULT 0 NOT NULL
);


ALTER TABLE public.persona_ajuste OWNER TO postgres;

--
-- TOC entry 7798 (class 0 OID 0)
-- Dependencies: 409
-- Name: TABLE persona_ajuste; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.persona_ajuste IS 'DATOS CARGADOS POR EL CONTRIBUYENTE PARA MODIFICAR EN SISTEMA';


--
-- TOC entry 7799 (class 0 OID 0)
-- Dependencies: 409
-- Name: COLUMN persona_ajuste.aju_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_ajuste.aju_id IS 'CODIGO';


--
-- TOC entry 7800 (class 0 OID 0)
-- Dependencies: 409
-- Name: COLUMN persona_ajuste.fecha; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_ajuste.fecha IS 'FECHA EN QUE EL CONTRIBUYENTE CAMBIO SUS DATOS';


--
-- TOC entry 7801 (class 0 OID 0)
-- Dependencies: 409
-- Name: COLUMN persona_ajuste.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_ajuste.obj_id IS 'CODIGO DEL CONTRIBUYENTE';


--
-- TOC entry 7802 (class 0 OID 0)
-- Dependencies: 409
-- Name: COLUMN persona_ajuste.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_ajuste.nombre IS 'NOMBRE CONTRIBUYENTE';


--
-- TOC entry 7803 (class 0 OID 0)
-- Dependencies: 409
-- Name: COLUMN persona_ajuste.tdoc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_ajuste.tdoc IS 'TIPO DE DOCUMENTO';


--
-- TOC entry 7804 (class 0 OID 0)
-- Dependencies: 409
-- Name: COLUMN persona_ajuste.ndoc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_ajuste.ndoc IS 'NUMERO DE DOCUMENTO';


--
-- TOC entry 7805 (class 0 OID 0)
-- Dependencies: 409
-- Name: COLUMN persona_ajuste.cuit; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_ajuste.cuit IS 'CUIT';


--
-- TOC entry 7806 (class 0 OID 0)
-- Dependencies: 409
-- Name: COLUMN persona_ajuste.domicilio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_ajuste.domicilio IS 'DOMICILIO';


--
-- TOC entry 7807 (class 0 OID 0)
-- Dependencies: 409
-- Name: COLUMN persona_ajuste.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_ajuste.est IS 'ESTADO';


--
-- TOC entry 7808 (class 0 OID 0)
-- Dependencies: 409
-- Name: COLUMN persona_ajuste.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_ajuste.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7809 (class 0 OID 0)
-- Dependencies: 409
-- Name: COLUMN persona_ajuste.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_ajuste.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 410 (class 1259 OID 5285254)
-- Name: persona_rela; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.persona_rela (
    obj_id character varying(8) NOT NULL,
    obj_rela character varying(8) NOT NULL,
    trela smallint NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.persona_rela OWNER TO postgres;

--
-- TOC entry 7810 (class 0 OID 0)
-- Dependencies: 410
-- Name: TABLE persona_rela; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.persona_rela IS 'RELACIÓN ENTRE PERSONAS';


--
-- TOC entry 7811 (class 0 OID 0)
-- Dependencies: 410
-- Name: COLUMN persona_rela.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_rela.obj_id IS 'OBJETO PRINCIPAL';


--
-- TOC entry 7812 (class 0 OID 0)
-- Dependencies: 410
-- Name: COLUMN persona_rela.obj_rela; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_rela.obj_rela IS 'PERSONA RELACIONADA';


--
-- TOC entry 7813 (class 0 OID 0)
-- Dependencies: 410
-- Name: COLUMN persona_rela.trela; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_rela.trela IS 'TIPO DE RELACION';


--
-- TOC entry 7814 (class 0 OID 0)
-- Dependencies: 410
-- Name: COLUMN persona_rela.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_rela.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7815 (class 0 OID 0)
-- Dependencies: 410
-- Name: COLUMN persona_rela.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_rela.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 411 (class 1259 OID 5285258)
-- Name: persona_socio; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.persona_socio (
    obj_id character varying(8) NOT NULL,
    socio_id integer NOT NULL,
    porc numeric(5,2) NOT NULL,
    nombre character varying(50) NOT NULL,
    domi character varying(50),
    tel character varying(15),
    contacto character varying(50),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.persona_socio OWNER TO postgres;

--
-- TOC entry 7816 (class 0 OID 0)
-- Dependencies: 411
-- Name: TABLE persona_socio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.persona_socio IS 'SOCIOS DE EMPRESA/PERSONA JURIDICA';


--
-- TOC entry 7817 (class 0 OID 0)
-- Dependencies: 411
-- Name: COLUMN persona_socio.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_socio.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 7818 (class 0 OID 0)
-- Dependencies: 411
-- Name: COLUMN persona_socio.socio_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_socio.socio_id IS 'CODIGO DE SOCIO';


--
-- TOC entry 7819 (class 0 OID 0)
-- Dependencies: 411
-- Name: COLUMN persona_socio.porc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_socio.porc IS 'PORCENTAJE';


--
-- TOC entry 7820 (class 0 OID 0)
-- Dependencies: 411
-- Name: COLUMN persona_socio.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_socio.nombre IS 'NOMBRE';


--
-- TOC entry 7821 (class 0 OID 0)
-- Dependencies: 411
-- Name: COLUMN persona_socio.domi; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_socio.domi IS 'DOMICILIO';


--
-- TOC entry 7822 (class 0 OID 0)
-- Dependencies: 411
-- Name: COLUMN persona_socio.tel; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_socio.tel IS 'TELEFONO';


--
-- TOC entry 7823 (class 0 OID 0)
-- Dependencies: 411
-- Name: COLUMN persona_socio.contacto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_socio.contacto IS 'CONTACTO';


--
-- TOC entry 7824 (class 0 OID 0)
-- Dependencies: 411
-- Name: COLUMN persona_socio.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_socio.fchmod IS 'FECHA DE MODIFICACION';


SET default_with_oids = true;

--
-- TOC entry 412 (class 1259 OID 5285262)
-- Name: persona_tbajaib; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.persona_tbajaib (
    cod character varying(2) NOT NULL,
    nombre character varying(60) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.persona_tbajaib OWNER TO postgres;

--
-- TOC entry 7825 (class 0 OID 0)
-- Dependencies: 412
-- Name: TABLE persona_tbajaib; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.persona_tbajaib IS 'TIPOS DE BAJA DE IB';


--
-- TOC entry 7826 (class 0 OID 0)
-- Dependencies: 412
-- Name: COLUMN persona_tbajaib.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tbajaib.cod IS 'CODIGO DE TIPO';


--
-- TOC entry 7827 (class 0 OID 0)
-- Dependencies: 412
-- Name: COLUMN persona_tbajaib.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tbajaib.nombre IS 'NOMBRE DEL TIPO';


--
-- TOC entry 7828 (class 0 OID 0)
-- Dependencies: 412
-- Name: COLUMN persona_tbajaib.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tbajaib.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7829 (class 0 OID 0)
-- Dependencies: 412
-- Name: COLUMN persona_tbajaib.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tbajaib.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


SET default_with_oids = false;

--
-- TOC entry 413 (class 1259 OID 5285266)
-- Name: persona_tclasif; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.persona_tclasif (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.persona_tclasif OWNER TO postgres;

--
-- TOC entry 7831 (class 0 OID 0)
-- Dependencies: 413
-- Name: TABLE persona_tclasif; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.persona_tclasif IS 'TIPOS DE CLASIFICACIONES DE PERSONAS';


--
-- TOC entry 7832 (class 0 OID 0)
-- Dependencies: 413
-- Name: COLUMN persona_tclasif.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tclasif.cod IS 'CODIGO ';


--
-- TOC entry 7833 (class 0 OID 0)
-- Dependencies: 413
-- Name: COLUMN persona_tclasif.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tclasif.nombre IS 'NOMBRE';


--
-- TOC entry 7834 (class 0 OID 0)
-- Dependencies: 413
-- Name: COLUMN persona_tclasif.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tclasif.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7835 (class 0 OID 0)
-- Dependencies: 413
-- Name: COLUMN persona_tclasif.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tclasif.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 414 (class 1259 OID 5285270)
-- Name: persona_tdoc; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.persona_tdoc (
    cod smallint NOT NULL,
    nombre character varying(15) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.persona_tdoc OWNER TO postgres;

--
-- TOC entry 7836 (class 0 OID 0)
-- Dependencies: 414
-- Name: TABLE persona_tdoc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.persona_tdoc IS 'TIPOS DE DOCUMENTOS DE PERSONAS';


--
-- TOC entry 7837 (class 0 OID 0)
-- Dependencies: 414
-- Name: COLUMN persona_tdoc.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tdoc.cod IS 'CODIGO ';


--
-- TOC entry 7838 (class 0 OID 0)
-- Dependencies: 414
-- Name: COLUMN persona_tdoc.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tdoc.nombre IS 'NOMBRE';


--
-- TOC entry 7839 (class 0 OID 0)
-- Dependencies: 414
-- Name: COLUMN persona_tdoc.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tdoc.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7840 (class 0 OID 0)
-- Dependencies: 414
-- Name: COLUMN persona_tdoc.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tdoc.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 415 (class 1259 OID 5285274)
-- Name: persona_test_ib; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.persona_test_ib (
    cod character varying(1) NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.persona_test_ib OWNER TO postgres;

--
-- TOC entry 7841 (class 0 OID 0)
-- Dependencies: 415
-- Name: TABLE persona_test_ib; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.persona_test_ib IS 'ESTADOS DE INSCRIPCIÓN IIBB';


--
-- TOC entry 7842 (class 0 OID 0)
-- Dependencies: 415
-- Name: COLUMN persona_test_ib.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_test_ib.cod IS 'CODIGO ';


--
-- TOC entry 7843 (class 0 OID 0)
-- Dependencies: 415
-- Name: COLUMN persona_test_ib.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_test_ib.nombre IS 'NOMBRE';


--
-- TOC entry 7844 (class 0 OID 0)
-- Dependencies: 415
-- Name: COLUMN persona_test_ib.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_test_ib.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7845 (class 0 OID 0)
-- Dependencies: 415
-- Name: COLUMN persona_test_ib.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_test_ib.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 416 (class 1259 OID 5285278)
-- Name: persona_testcivil; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.persona_testcivil (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.persona_testcivil OWNER TO postgres;

--
-- TOC entry 7847 (class 0 OID 0)
-- Dependencies: 416
-- Name: TABLE persona_testcivil; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.persona_testcivil IS 'DISTINTOS ESTADOS CIVILES PARA PERSONAS';


--
-- TOC entry 7848 (class 0 OID 0)
-- Dependencies: 416
-- Name: COLUMN persona_testcivil.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_testcivil.cod IS 'CODIGO ';


--
-- TOC entry 7849 (class 0 OID 0)
-- Dependencies: 416
-- Name: COLUMN persona_testcivil.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_testcivil.nombre IS 'NOMBRE';


--
-- TOC entry 7850 (class 0 OID 0)
-- Dependencies: 416
-- Name: COLUMN persona_testcivil.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_testcivil.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7851 (class 0 OID 0)
-- Dependencies: 416
-- Name: COLUMN persona_testcivil.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_testcivil.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 185 (class 1259 OID 5283842)
-- Name: persona_tipo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.persona_tipo (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.persona_tipo OWNER TO postgres;

--
-- TOC entry 7852 (class 0 OID 0)
-- Dependencies: 185
-- Name: TABLE persona_tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.persona_tipo IS 'TIPOS DE PERSONAS';


--
-- TOC entry 7853 (class 0 OID 0)
-- Dependencies: 185
-- Name: COLUMN persona_tipo.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tipo.cod IS 'CODIGO ';


--
-- TOC entry 7854 (class 0 OID 0)
-- Dependencies: 185
-- Name: COLUMN persona_tipo.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tipo.nombre IS 'NOMBRE';


--
-- TOC entry 7855 (class 0 OID 0)
-- Dependencies: 185
-- Name: COLUMN persona_tipo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tipo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7856 (class 0 OID 0)
-- Dependencies: 185
-- Name: COLUMN persona_tipo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tipo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 417 (class 1259 OID 5285282)
-- Name: persona_tnac; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.persona_tnac (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.persona_tnac OWNER TO postgres;

--
-- TOC entry 7857 (class 0 OID 0)
-- Dependencies: 417
-- Name: TABLE persona_tnac; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.persona_tnac IS 'DIFERENTES NACIONALIDADES';


--
-- TOC entry 7858 (class 0 OID 0)
-- Dependencies: 417
-- Name: COLUMN persona_tnac.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tnac.cod IS 'CODIGO ';


--
-- TOC entry 7859 (class 0 OID 0)
-- Dependencies: 417
-- Name: COLUMN persona_tnac.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tnac.nombre IS 'NOMBRE';


--
-- TOC entry 7860 (class 0 OID 0)
-- Dependencies: 417
-- Name: COLUMN persona_tnac.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tnac.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7861 (class 0 OID 0)
-- Dependencies: 417
-- Name: COLUMN persona_tnac.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tnac.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 418 (class 1259 OID 5285286)
-- Name: persona_trela; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.persona_trela (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.persona_trela OWNER TO postgres;

--
-- TOC entry 7862 (class 0 OID 0)
-- Dependencies: 418
-- Name: TABLE persona_trela; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.persona_trela IS 'TIPOS DE RELACIONES ENTRE PERSONAS';


--
-- TOC entry 7863 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN persona_trela.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_trela.cod IS 'CODIGO ';


--
-- TOC entry 7864 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN persona_trela.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_trela.nombre IS 'NOMBRE';


--
-- TOC entry 7865 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN persona_trela.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_trela.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7866 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN persona_trela.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_trela.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 419 (class 1259 OID 5285290)
-- Name: persona_tsexo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.persona_tsexo (
    cod character varying(1) NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.persona_tsexo OWNER TO postgres;

--
-- TOC entry 7867 (class 0 OID 0)
-- Dependencies: 419
-- Name: TABLE persona_tsexo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.persona_tsexo IS 'DIFERENTES SEXOS';


--
-- TOC entry 7868 (class 0 OID 0)
-- Dependencies: 419
-- Name: COLUMN persona_tsexo.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tsexo.cod IS 'CODIGO ';


--
-- TOC entry 7869 (class 0 OID 0)
-- Dependencies: 419
-- Name: COLUMN persona_tsexo.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tsexo.nombre IS 'NOMBRE';


--
-- TOC entry 7870 (class 0 OID 0)
-- Dependencies: 419
-- Name: COLUMN persona_tsexo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tsexo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7871 (class 0 OID 0)
-- Dependencies: 419
-- Name: COLUMN persona_tsexo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tsexo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 420 (class 1259 OID 5285294)
-- Name: persona_tvinc; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.persona_tvinc (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    tobj smallint NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.persona_tvinc OWNER TO postgres;

--
-- TOC entry 7872 (class 0 OID 0)
-- Dependencies: 420
-- Name: TABLE persona_tvinc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.persona_tvinc IS 'TIPOS DE VÍNCULOS ENTRE OBJETOS';


--
-- TOC entry 7873 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN persona_tvinc.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tvinc.cod IS 'CODIGO ';


--
-- TOC entry 7874 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN persona_tvinc.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tvinc.nombre IS 'NOMBRE';


--
-- TOC entry 7875 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN persona_tvinc.tobj; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tvinc.tobj IS 'CODIGO DE TIPO DE OBJETO';


--
-- TOC entry 7876 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN persona_tvinc.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tvinc.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7877 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN persona_tvinc.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.persona_tvinc.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 421 (class 1259 OID 5285298)
-- Name: plan; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.plan (
    plan_id integer NOT NULL,
    tplan smallint NOT NULL,
    obj_id character varying(8) NOT NULL,
    num character varying(8) NOT NULL,
    resp character varying(50) NOT NULL,
    resptdoc smallint,
    respndoc bigint,
    resptel character varying(15),
    nominal numeric(12,2) NOT NULL,
    accesor numeric(12,2) NOT NULL,
    multa numeric(9,2) NOT NULL,
    financia numeric(12,2) NOT NULL,
    sellado numeric(12,2) NOT NULL,
    anticipo numeric(12,2) NOT NULL,
    origen smallint NOT NULL,
    tpago smallint NOT NULL,
    caja_id smallint,
    temple smallint DEFAULT 0,
    temple_area character varying(20) DEFAULT ''::character varying,
    bco_suc smallint DEFAULT 0,
    bco_tcta smallint DEFAULT 0,
    tpago_nro character varying(22) DEFAULT 0,
    cuotas smallint NOT NULL,
    montocuo numeric(12,2) NOT NULL,
    descnominal numeric(12,2) DEFAULT 0,
    descinteres numeric(12,2) DEFAULT 0,
    descmulta numeric(12,2) DEFAULT 0,
    interes numeric(12,2) DEFAULT 0,
    obs character varying(250) DEFAULT ''::character varying,
    est smallint NOT NULL,
    fchalta timestamp without time zone NOT NULL,
    usralta smallint,
    fchbaja timestamp without time zone,
    fchimputa timestamp without time zone,
    fchdecae timestamp without time zone,
    fchconsolida timestamp without time zone NOT NULL,
    planant character varying(15),
    distrib smallint NOT NULL,
    tdistrib smallint DEFAULT 0 NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint DEFAULT 0 NOT NULL
);


ALTER TABLE public.plan OWNER TO postgres;

--
-- TOC entry 7878 (class 0 OID 0)
-- Dependencies: 421
-- Name: TABLE plan; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.plan IS 'DATOS PRINCIPALES DE PLANES ASOCIADOS A OBJETOS';


--
-- TOC entry 7879 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.plan_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.plan_id IS 'IDENTIFICADOR DEL PLAN';


--
-- TOC entry 7880 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.tplan; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.tplan IS 'CODIGO DE TIPO DE PLAN';


--
-- TOC entry 7881 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 7882 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.num; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.num IS 'CODIGO DE NUM - RESPONSABLE';


--
-- TOC entry 7883 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.resp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.resp IS 'NOMBRE DEL RESPONSABLE';


--
-- TOC entry 7884 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.resptdoc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.resptdoc IS 'CODIGO DE TIPO DE DOCUMENTO DEL RESPONSABLE';


--
-- TOC entry 7885 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.respndoc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.respndoc IS 'NUMERO DE DOCUMENTO DEL RESPONSABLE';


--
-- TOC entry 7886 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.resptel; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.resptel IS 'TELEFONO DEL RESPONSABLE';


--
-- TOC entry 7887 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.nominal; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.nominal IS 'MONTO NOMINAL';


--
-- TOC entry 7888 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.accesor; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.accesor IS 'MONTO ACCESORIOS';


--
-- TOC entry 7889 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.multa; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.multa IS 'MONTO MULTA';


--
-- TOC entry 7890 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.financia; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.financia IS 'MONTO FINANCIACION';


--
-- TOC entry 7891 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.sellado; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.sellado IS 'MONTO SELLADO';


--
-- TOC entry 7892 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.anticipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.anticipo IS 'MONTO ANTICIPO';


--
-- TOC entry 7893 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.origen; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.origen IS 'CODIGO DE ORIGEN';


--
-- TOC entry 7894 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.tpago; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.tpago IS 'CODIGO DE TIPO DE PAGO';


--
-- TOC entry 7895 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.caja_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.caja_id IS 'CODIGO DE CAJA VINCULADA';


--
-- TOC entry 7896 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.temple; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.temple IS 'TIPO DE EMPLEADO';


--
-- TOC entry 7897 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.temple_area; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.temple_area IS 'AREA DE TRABAJO';


--
-- TOC entry 7898 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.bco_suc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.bco_suc IS 'SUCURSAL BANCARIA';


--
-- TOC entry 7899 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.bco_tcta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.bco_tcta IS 'TIPO DE CUENTA';


--
-- TOC entry 7900 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.tpago_nro; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.tpago_nro IS 'NUMERO IDENTIFICADOR';


--
-- TOC entry 7901 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.cuotas; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.cuotas IS 'CANTIDAD DE CUOTAS';


--
-- TOC entry 7902 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.montocuo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.montocuo IS 'MONTO DE CADA CUOTA';


--
-- TOC entry 7903 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.descnominal; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.descnominal IS 'DESCUENTO DE NOMINAL';


--
-- TOC entry 7904 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.descinteres; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.descinteres IS 'DESCUENTO DE INTERES';


--
-- TOC entry 7905 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.descmulta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.descmulta IS 'DESCUENTO DE MULTA';


--
-- TOC entry 7906 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.interes; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.interes IS 'DESCUENTO DE INTERES';


--
-- TOC entry 7907 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.obs IS 'OBSERVACIONES';


--
-- TOC entry 7908 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.est IS 'ESTADO ';


--
-- TOC entry 7909 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.fchalta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.fchalta IS 'FECHA DE ALTA';


--
-- TOC entry 7910 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.usralta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.usralta IS 'CODIGO DE USUARIO QUE DIO DE ALTA';


--
-- TOC entry 7911 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.fchbaja; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.fchbaja IS 'FECHA DE BAJA';


--
-- TOC entry 7912 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.fchimputa; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.fchimputa IS 'FECHA DE IMPUTACION';


--
-- TOC entry 7913 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.fchdecae; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.fchdecae IS 'FECHA DE DECAIMIENTO';


--
-- TOC entry 7914 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.fchconsolida; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.fchconsolida IS 'FECHA DE CONSOLIDACION';


--
-- TOC entry 7915 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.planant; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.planant IS 'CODIGO DE PLAN ANTERIOR';


--
-- TOC entry 7916 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.distrib; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.distrib IS 'CODIGO DE DISTRIBUIDOR';


--
-- TOC entry 7917 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN plan.tdistrib; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan.tdistrib IS 'TIPO DE DISTRIBUCIÓN';


--
-- TOC entry 422 (class 1259 OID 5285314)
-- Name: plan_config; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.plan_config (
    cod smallint DEFAULT nextval(('public.seq_plan_config'::text)::regclass) NOT NULL,
    nombre character varying(50) NOT NULL,
    sistema smallint NOT NULL,
    aldia smallint NOT NULL,
    aplica smallint NOT NULL,
    deuda smallint NOT NULL,
    cantcuotas smallint NOT NULL,
    importecuota smallint NOT NULL,
    sinplan smallint,
    aldiadesde integer,
    aldiahasta integer,
    aplicadesde integer NOT NULL,
    aplicahasta integer NOT NULL,
    mindeuda numeric(12,2) NOT NULL,
    maxdeuda numeric(12,2) NOT NULL,
    mincantcuo smallint NOT NULL,
    maxcantcuo smallint NOT NULL,
    minmontocuo numeric(12,2) NOT NULL,
    maxmontocuo numeric(12,2) NOT NULL,
    diavenc smallint NOT NULL,
    descnominal numeric(12,2) NOT NULL,
    descinteres numeric(12,2) NOT NULL,
    descmulta numeric(12,2) NOT NULL,
    vigenciadesde date NOT NULL,
    vigenciahasta date,
    tactiva smallint,
    tactivaporc numeric(5,2),
    interes numeric(12,5) NOT NULL,
    sellado numeric(12,2),
    anticipo numeric(12,2),
    anticipocuota smallint,
    anticipomanual smallint,
    multa numeric(12,2),
    usarctaper smallint DEFAULT 0 NOT NULL,
    cta_id smallint DEFAULT 0 NOT NULL,
    cta_id_rec smallint DEFAULT 0 NOT NULL,
    cta_id_sellado smallint DEFAULT 0 NOT NULL,
    cta_id_multa smallint DEFAULT 0 NOT NULL,
    texto_id smallint,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.plan_config OWNER TO postgres;

--
-- TOC entry 7918 (class 0 OID 0)
-- Dependencies: 422
-- Name: TABLE plan_config; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.plan_config IS 'DISTINTAS CONFIGURACIONES DE PLANES';


--
-- TOC entry 7919 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.cod IS 'CODIGO';


--
-- TOC entry 7920 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.nombre IS 'NOMBRE';


--
-- TOC entry 7921 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.sistema; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.sistema IS 'CODIGO DE TIPO DE SISTEMA DE PLAN';


--
-- TOC entry 7922 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.aldia; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.aldia IS 'SI EXISTE LIMITE EN PERIODOS AL DIA';


--
-- TOC entry 7923 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.aplica; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.aplica IS 'SI EXISTE LIMITE EN APLICABLE A POSICIONES';


--
-- TOC entry 7924 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.deuda; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.deuda IS 'SI EXISTE LIMITE EN LA DEUDA NOMINAL';


--
-- TOC entry 7925 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.cantcuotas; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.cantcuotas IS 'SI EXISTE LIMITE EN LA CANTIDAD DE CUOTAS';


--
-- TOC entry 7926 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.importecuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.importecuota IS 'SI EXISTE LIMITE EN EL IMPORTE DE CUOTA';


--
-- TOC entry 7927 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.sinplan; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.sinplan IS 'SI SE TIENE EN CUENTA QUE NO TENGA PLAN';


--
-- TOC entry 7928 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.aldiadesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.aldiadesde IS 'PERIODO AL DIA DESDE';


--
-- TOC entry 7929 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.aldiahasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.aldiahasta IS 'PERIODO AL DIA HASTA';


--
-- TOC entry 7930 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.aplicadesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.aplicadesde IS 'PERIODO APLICABLE DESDE';


--
-- TOC entry 7931 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.aplicahasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.aplicahasta IS 'PERIODO APLICABLE HASTA';


--
-- TOC entry 7932 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.mindeuda; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.mindeuda IS 'MINIMA DEUDA';


--
-- TOC entry 7933 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.maxdeuda; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.maxdeuda IS 'MAXIMA DEUDA';


--
-- TOC entry 7934 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.mincantcuo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.mincantcuo IS 'MINIMA CANTIDAD DE CUOTAS';


--
-- TOC entry 7935 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.maxcantcuo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.maxcantcuo IS 'MAXIMA CANTIDAD DE CUOTAS';


--
-- TOC entry 7936 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.minmontocuo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.minmontocuo IS 'VALOR MINIMO DE CUOTA';


--
-- TOC entry 7937 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.maxmontocuo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.maxmontocuo IS 'VALOR MAXIMO DE CUOTA';


--
-- TOC entry 7938 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.diavenc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.diavenc IS 'DIA DE VENCIMIENTO';


--
-- TOC entry 7939 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.descnominal; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.descnominal IS 'PORCENTAJE DE DESCUENTO DE NOMINAL';


--
-- TOC entry 7940 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.descinteres; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.descinteres IS 'PORCENTAJE DE DESCUENTO DE INTERES';


--
-- TOC entry 7941 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.descmulta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.descmulta IS 'PORCENTAJE DE DESCUENTO DE MULTA';


--
-- TOC entry 7942 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.vigenciadesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.vigenciadesde IS 'FECHA DE VIGENCIA DESDE';


--
-- TOC entry 7943 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.vigenciahasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.vigenciahasta IS 'FECHA DE VIGENCIA HASTA';


--
-- TOC entry 7944 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.tactiva; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.tactiva IS 'SI SE HACE SEGUN TASA ACTIVA';


--
-- TOC entry 7945 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.tactivaporc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.tactivaporc IS 'PORCENTAJE DE TASA ACTIVA';


--
-- TOC entry 7946 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.interes; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.interes IS 'PORCENTAJE DE INTERES';


--
-- TOC entry 7947 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.sellado; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.sellado IS 'MONTO DE SELLADO';


--
-- TOC entry 7948 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.anticipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.anticipo IS 'PORCENTAJE DE ANTICIPO';


--
-- TOC entry 7949 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.anticipocuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.anticipocuota IS 'SI EL ANTICIPO DEBE SER MAYOR QUE LA CUOTA';


--
-- TOC entry 7950 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.anticipomanual; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.anticipomanual IS 'SI ES MANUAL EL ANTICIPO';


--
-- TOC entry 7951 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.multa; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.multa IS 'MULTA POR DECAIMIENTO';


--
-- TOC entry 7952 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.usarctaper; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.usarctaper IS 'INDICA SI SE USAN LAS CUENTAS DE LOS PERIODOS AFECTADOS PARA LA IMPUTACIÓN DEL PAGO O BIEN LA CUENTA DEFINIDA';


--
-- TOC entry 7953 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.cta_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.cta_id IS 'CODIGO DE CUENTA';


--
-- TOC entry 7954 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.cta_id_rec; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.cta_id_rec IS 'CODIGO DE CUENTA DE RECARGO';


--
-- TOC entry 7955 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.cta_id_sellado; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.cta_id_sellado IS 'CODIGO DE CUENTA DE SELLADO';


--
-- TOC entry 7956 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.cta_id_multa; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.cta_id_multa IS 'CODIGO DE CUENTA DE MULTA';


--
-- TOC entry 7957 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.texto_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.texto_id IS 'IDENTIFICADOR DE TEXTO';


--
-- TOC entry 7958 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7959 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN plan_config.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 423 (class 1259 OID 5285324)
-- Name: plan_config_decaer; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.plan_config_decaer (
    tplan smallint NOT NULL,
    origen smallint NOT NULL,
    tpago smallint NOT NULL,
    caja_id smallint NOT NULL,
    cant_atras smallint,
    cant_cons smallint,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint DEFAULT 0 NOT NULL
);


ALTER TABLE public.plan_config_decaer OWNER TO postgres;

--
-- TOC entry 7960 (class 0 OID 0)
-- Dependencies: 423
-- Name: TABLE plan_config_decaer; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.plan_config_decaer IS 'CONFIGURACIÓN DE PLANES A DECAER MEDIANTE PROCESOS AUTOMATIZADOS';


--
-- TOC entry 424 (class 1259 OID 5285329)
-- Name: plan_config_trib; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.plan_config_trib (
    tplan smallint NOT NULL,
    trib_id smallint NOT NULL
);


ALTER TABLE public.plan_config_trib OWNER TO postgres;

--
-- TOC entry 7961 (class 0 OID 0)
-- Dependencies: 424
-- Name: TABLE plan_config_trib; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.plan_config_trib IS 'TRIBUTOS ASIGNADOS PARA CADA TIPO DE PLAN';


--
-- TOC entry 7962 (class 0 OID 0)
-- Dependencies: 424
-- Name: COLUMN plan_config_trib.tplan; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config_trib.tplan IS 'CODIGO DE TIPO DE PLAN';


--
-- TOC entry 7963 (class 0 OID 0)
-- Dependencies: 424
-- Name: COLUMN plan_config_trib.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config_trib.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 425 (class 1259 OID 5285332)
-- Name: plan_config_usuario; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.plan_config_usuario (
    tplan smallint NOT NULL,
    usr_id smallint NOT NULL
);


ALTER TABLE public.plan_config_usuario OWNER TO postgres;

--
-- TOC entry 7964 (class 0 OID 0)
-- Dependencies: 425
-- Name: TABLE plan_config_usuario; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.plan_config_usuario IS 'USUARIOS ASIGNADOS PARA CADA TIPO DE PLAN';


--
-- TOC entry 7965 (class 0 OID 0)
-- Dependencies: 425
-- Name: COLUMN plan_config_usuario.tplan; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config_usuario.tplan IS 'CODIGO DE TIPO DE PLAN';


--
-- TOC entry 7966 (class 0 OID 0)
-- Dependencies: 425
-- Name: COLUMN plan_config_usuario.usr_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_config_usuario.usr_id IS 'CODIGO DE USUARIO';


--
-- TOC entry 426 (class 1259 OID 5285335)
-- Name: plan_cuota; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.plan_cuota (
    plan_id integer NOT NULL,
    ctacte_id integer NOT NULL,
    cuota smallint NOT NULL,
    capital numeric(12,2) NOT NULL,
    financia numeric(12,2) NOT NULL,
    cuota_adelanta smallint DEFAULT 0 NOT NULL
);


ALTER TABLE public.plan_cuota OWNER TO postgres;

--
-- TOC entry 7967 (class 0 OID 0)
-- Dependencies: 426
-- Name: TABLE plan_cuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.plan_cuota IS 'DETALLE DE CUOTAS DE PLANES';


--
-- TOC entry 7968 (class 0 OID 0)
-- Dependencies: 426
-- Name: COLUMN plan_cuota.plan_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_cuota.plan_id IS 'IDENTIFICADOR DEL PLAN';


--
-- TOC entry 7969 (class 0 OID 0)
-- Dependencies: 426
-- Name: COLUMN plan_cuota.ctacte_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_cuota.ctacte_id IS 'IDENTIFICADOR DE CUENTA CORRIENTE';


--
-- TOC entry 7970 (class 0 OID 0)
-- Dependencies: 426
-- Name: COLUMN plan_cuota.cuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_cuota.cuota IS 'NUMERO DE CUOTA';


--
-- TOC entry 7971 (class 0 OID 0)
-- Dependencies: 426
-- Name: COLUMN plan_cuota.capital; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_cuota.capital IS 'MONTO DE CAPITAL';


--
-- TOC entry 7972 (class 0 OID 0)
-- Dependencies: 426
-- Name: COLUMN plan_cuota.financia; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_cuota.financia IS 'MONTO DE FINANCIACION';


--
-- TOC entry 7973 (class 0 OID 0)
-- Dependencies: 426
-- Name: COLUMN plan_cuota.cuota_adelanta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_cuota.cuota_adelanta IS 'NUMERO DE CUOTA ADELANTADA';


--
-- TOC entry 427 (class 1259 OID 5285339)
-- Name: plan_periodo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.plan_periodo (
    plan_id integer NOT NULL,
    ctacte_id integer NOT NULL,
    nominalreal numeric(12,2) NOT NULL,
    nominal numeric(12,2) NOT NULL,
    accesorreal numeric(12,2) NOT NULL,
    accesor numeric(12,2) NOT NULL,
    multareal numeric(12,2) NOT NULL,
    multa numeric(12,2) NOT NULL,
    nominalcub numeric(12,2) NOT NULL,
    accesorcub numeric(12,2) NOT NULL,
    multacub numeric(12,2) NOT NULL,
    estant character varying(1) NOT NULL
);


ALTER TABLE public.plan_periodo OWNER TO postgres;

--
-- TOC entry 7974 (class 0 OID 0)
-- Dependencies: 427
-- Name: TABLE plan_periodo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.plan_periodo IS 'PERIODOS INCLUIDOS EN PLANES';


--
-- TOC entry 7975 (class 0 OID 0)
-- Dependencies: 427
-- Name: COLUMN plan_periodo.plan_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_periodo.plan_id IS 'IDENTIFICADOR DEL PLAN';


--
-- TOC entry 7976 (class 0 OID 0)
-- Dependencies: 427
-- Name: COLUMN plan_periodo.ctacte_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_periodo.ctacte_id IS 'IDENTIFICADOR DE CUENTA CORRIENTE';


--
-- TOC entry 7977 (class 0 OID 0)
-- Dependencies: 427
-- Name: COLUMN plan_periodo.nominalreal; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_periodo.nominalreal IS 'NOMINAL REAL';


--
-- TOC entry 7978 (class 0 OID 0)
-- Dependencies: 427
-- Name: COLUMN plan_periodo.nominal; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_periodo.nominal IS 'NOMINAL';


--
-- TOC entry 7979 (class 0 OID 0)
-- Dependencies: 427
-- Name: COLUMN plan_periodo.accesorreal; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_periodo.accesorreal IS 'ACCESORIO REAL';


--
-- TOC entry 7980 (class 0 OID 0)
-- Dependencies: 427
-- Name: COLUMN plan_periodo.accesor; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_periodo.accesor IS 'ACCESORIO';


--
-- TOC entry 7981 (class 0 OID 0)
-- Dependencies: 427
-- Name: COLUMN plan_periodo.multareal; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_periodo.multareal IS 'MULTA REAL';


--
-- TOC entry 7982 (class 0 OID 0)
-- Dependencies: 427
-- Name: COLUMN plan_periodo.multa; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_periodo.multa IS 'MULTA';


--
-- TOC entry 7983 (class 0 OID 0)
-- Dependencies: 427
-- Name: COLUMN plan_periodo.nominalcub; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_periodo.nominalcub IS 'NOMINAL CUBIERTO';


--
-- TOC entry 7984 (class 0 OID 0)
-- Dependencies: 427
-- Name: COLUMN plan_periodo.accesorcub; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_periodo.accesorcub IS 'ACCESORIO CUBIERTO';


--
-- TOC entry 7985 (class 0 OID 0)
-- Dependencies: 427
-- Name: COLUMN plan_periodo.multacub; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_periodo.multacub IS 'MULTA CUBIERTA';


--
-- TOC entry 7986 (class 0 OID 0)
-- Dependencies: 427
-- Name: COLUMN plan_periodo.estant; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_periodo.estant IS 'ESTADO DE CUENTA CORRIENTE ANTERIOR';


--
-- TOC entry 428 (class 1259 OID 5285342)
-- Name: plan_temple; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.plan_temple (
    cod smallint NOT NULL,
    caja_id smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.plan_temple OWNER TO postgres;

--
-- TOC entry 7987 (class 0 OID 0)
-- Dependencies: 428
-- Name: TABLE plan_temple; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.plan_temple IS 'TIPOS DE EMPLEADOS';


--
-- TOC entry 7988 (class 0 OID 0)
-- Dependencies: 428
-- Name: COLUMN plan_temple.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_temple.cod IS 'CODIGO ';


--
-- TOC entry 7989 (class 0 OID 0)
-- Dependencies: 428
-- Name: COLUMN plan_temple.caja_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_temple.caja_id IS 'NUMERO DE CAJA';


--
-- TOC entry 7990 (class 0 OID 0)
-- Dependencies: 428
-- Name: COLUMN plan_temple.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_temple.nombre IS 'NOMBRE';


--
-- TOC entry 7991 (class 0 OID 0)
-- Dependencies: 428
-- Name: COLUMN plan_temple.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_temple.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7992 (class 0 OID 0)
-- Dependencies: 428
-- Name: COLUMN plan_temple.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_temple.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 429 (class 1259 OID 5285346)
-- Name: plan_test; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.plan_test (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.plan_test OWNER TO postgres;

--
-- TOC entry 7993 (class 0 OID 0)
-- Dependencies: 429
-- Name: TABLE plan_test; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.plan_test IS 'DIFERENTES ESTADOS DE PLANES';


--
-- TOC entry 7994 (class 0 OID 0)
-- Dependencies: 429
-- Name: COLUMN plan_test.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_test.cod IS 'CODIGO ';


--
-- TOC entry 7995 (class 0 OID 0)
-- Dependencies: 429
-- Name: COLUMN plan_test.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_test.nombre IS 'NOMBRE';


--
-- TOC entry 7996 (class 0 OID 0)
-- Dependencies: 429
-- Name: COLUMN plan_test.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_test.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 7997 (class 0 OID 0)
-- Dependencies: 429
-- Name: COLUMN plan_test.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_test.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 430 (class 1259 OID 5285350)
-- Name: plan_torigen; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.plan_torigen (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.plan_torigen OWNER TO postgres;

--
-- TOC entry 7998 (class 0 OID 0)
-- Dependencies: 430
-- Name: TABLE plan_torigen; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.plan_torigen IS 'DISTINTOS ORÍGENES DE PLANES';


--
-- TOC entry 7999 (class 0 OID 0)
-- Dependencies: 430
-- Name: COLUMN plan_torigen.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_torigen.cod IS 'CODIGO ';


--
-- TOC entry 8000 (class 0 OID 0)
-- Dependencies: 430
-- Name: COLUMN plan_torigen.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_torigen.nombre IS 'NOMBRE';


--
-- TOC entry 8001 (class 0 OID 0)
-- Dependencies: 430
-- Name: COLUMN plan_torigen.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_torigen.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8002 (class 0 OID 0)
-- Dependencies: 430
-- Name: COLUMN plan_torigen.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_torigen.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 431 (class 1259 OID 5285354)
-- Name: plan_tpago; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.plan_tpago (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.plan_tpago OWNER TO postgres;

--
-- TOC entry 8003 (class 0 OID 0)
-- Dependencies: 431
-- Name: TABLE plan_tpago; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.plan_tpago IS 'TIPOS DE ACUERDOS EN PLANES';


--
-- TOC entry 8004 (class 0 OID 0)
-- Dependencies: 431
-- Name: COLUMN plan_tpago.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_tpago.cod IS 'CODIGO ';


--
-- TOC entry 8005 (class 0 OID 0)
-- Dependencies: 431
-- Name: COLUMN plan_tpago.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_tpago.nombre IS 'NOMBRE';


--
-- TOC entry 8006 (class 0 OID 0)
-- Dependencies: 431
-- Name: COLUMN plan_tpago.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_tpago.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8007 (class 0 OID 0)
-- Dependencies: 431
-- Name: COLUMN plan_tpago.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_tpago.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 432 (class 1259 OID 5285358)
-- Name: plan_tsistema; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.plan_tsistema (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.plan_tsistema OWNER TO postgres;

--
-- TOC entry 8008 (class 0 OID 0)
-- Dependencies: 432
-- Name: TABLE plan_tsistema; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.plan_tsistema IS 'DIFERENTES SISTEMAS DE FINANCIACIÓN ';


--
-- TOC entry 8009 (class 0 OID 0)
-- Dependencies: 432
-- Name: COLUMN plan_tsistema.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_tsistema.cod IS 'CODIGO ';


--
-- TOC entry 8010 (class 0 OID 0)
-- Dependencies: 432
-- Name: COLUMN plan_tsistema.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_tsistema.nombre IS 'NOMBRE';


--
-- TOC entry 8011 (class 0 OID 0)
-- Dependencies: 432
-- Name: COLUMN plan_tsistema.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_tsistema.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8012 (class 0 OID 0)
-- Dependencies: 432
-- Name: COLUMN plan_tsistema.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.plan_tsistema.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 433 (class 1259 OID 5285401)
-- Name: resol; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.resol (
    resol_id smallint NOT NULL,
    nombre character varying(50) NOT NULL,
    trib_id smallint NOT NULL,
    perdesde integer NOT NULL,
    perhasta integer NOT NULL,
    funcion character varying(35) NOT NULL,
    formula character varying(1000) NOT NULL,
    filtro character varying(250) DEFAULT ''::character varying NOT NULL,
    anual smallint NOT NULL,
    cant_anio smallint DEFAULT 0 NOT NULL,
    detalle character varying(250) DEFAULT ''::character varying NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint DEFAULT 0 NOT NULL
);


ALTER TABLE public.resol OWNER TO postgres;

--
-- TOC entry 8013 (class 0 OID 0)
-- Dependencies: 433
-- Name: TABLE resol; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.resol IS 'RESOLUCIONES PARA EMISION';


--
-- TOC entry 8014 (class 0 OID 0)
-- Dependencies: 433
-- Name: COLUMN resol.resol_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol.resol_id IS 'IDENTIFICADOR DE RESOLUCION';


--
-- TOC entry 8015 (class 0 OID 0)
-- Dependencies: 433
-- Name: COLUMN resol.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol.nombre IS 'NOMBRE';


--
-- TOC entry 8016 (class 0 OID 0)
-- Dependencies: 433
-- Name: COLUMN resol.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 8017 (class 0 OID 0)
-- Dependencies: 433
-- Name: COLUMN resol.perdesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol.perdesde IS 'PERIODO DESDE';


--
-- TOC entry 8018 (class 0 OID 0)
-- Dependencies: 433
-- Name: COLUMN resol.perhasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol.perhasta IS 'PERIODO HASTA';


--
-- TOC entry 8019 (class 0 OID 0)
-- Dependencies: 433
-- Name: COLUMN resol.funcion; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol.funcion IS 'NOMBRE DE LA FUNCION';


--
-- TOC entry 8020 (class 0 OID 0)
-- Dependencies: 433
-- Name: COLUMN resol.formula; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol.formula IS 'DESCRIPCION DE LA FORMULA';


--
-- TOC entry 8021 (class 0 OID 0)
-- Dependencies: 433
-- Name: COLUMN resol.filtro; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol.filtro IS 'FILTRO PARA SELECCIONAR OBJETOS A EMITIR';


--
-- TOC entry 8022 (class 0 OID 0)
-- Dependencies: 433
-- Name: COLUMN resol.anual; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol.anual IS 'SI ES ANUAL';


--
-- TOC entry 8023 (class 0 OID 0)
-- Dependencies: 433
-- Name: COLUMN resol.cant_anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol.cant_anio IS 'CANTIDAD DE PERÍODOS POR AÑO';


--
-- TOC entry 8024 (class 0 OID 0)
-- Dependencies: 433
-- Name: COLUMN resol.detalle; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol.detalle IS 'DETALLE DE REQUERIMIENTOS PARA EMITIR';


--
-- TOC entry 434 (class 1259 OID 5285412)
-- Name: resol_aux; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.resol_aux (
    resol_id smallint NOT NULL,
    aux smallint NOT NULL
);


ALTER TABLE public.resol_aux OWNER TO postgres;

--
-- TOC entry 8025 (class 0 OID 0)
-- Dependencies: 434
-- Name: TABLE resol_aux; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.resol_aux IS 'TABLAS AUXILIARES VINCULADAS CON CADA RESOLUCIÓN';


--
-- TOC entry 8026 (class 0 OID 0)
-- Dependencies: 434
-- Name: COLUMN resol_aux.resol_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_aux.resol_id IS 'IDENTIFICADOR DE RESOLUCION';


--
-- TOC entry 8027 (class 0 OID 0)
-- Dependencies: 434
-- Name: COLUMN resol_aux.aux; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_aux.aux IS 'CODIGO DE LA TABLA AUXILIAR RELACIONADA';


--
-- TOC entry 435 (class 1259 OID 5285415)
-- Name: resol_local; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.resol_local (
    resol_id smallint NOT NULL,
    varlocal character varying(15) NOT NULL,
    tipo smallint NOT NULL,
    valor character varying(20) NOT NULL
);


ALTER TABLE public.resol_local OWNER TO postgres;

--
-- TOC entry 8028 (class 0 OID 0)
-- Dependencies: 435
-- Name: TABLE resol_local; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.resol_local IS 'VARIABLES LOCALES USADAS EN RESOLUCIONES';


--
-- TOC entry 8029 (class 0 OID 0)
-- Dependencies: 435
-- Name: COLUMN resol_local.resol_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_local.resol_id IS 'IDENTIFICADOR DE RESOLUCION';


--
-- TOC entry 8030 (class 0 OID 0)
-- Dependencies: 435
-- Name: COLUMN resol_local.varlocal; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_local.varlocal IS 'NOMBRE DE LA VARIABLE LOCAL';


--
-- TOC entry 8031 (class 0 OID 0)
-- Dependencies: 435
-- Name: COLUMN resol_local.tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_local.tipo IS 'CODIGO DE TIPO DE DATOS';


--
-- TOC entry 8032 (class 0 OID 0)
-- Dependencies: 435
-- Name: COLUMN resol_local.valor; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_local.valor IS 'VALOR';


--
-- TOC entry 436 (class 1259 OID 5285418)
-- Name: resol_salida; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.resol_salida (
    resol_id smallint NOT NULL,
    varsalida character varying(15) NOT NULL,
    item_id smallint NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.resol_salida OWNER TO postgres;

--
-- TOC entry 8033 (class 0 OID 0)
-- Dependencies: 436
-- Name: TABLE resol_salida; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.resol_salida IS 'NOMBRE DE VARIABLES DE SALIDA USADAS EN RESOLUCIONES';


--
-- TOC entry 8034 (class 0 OID 0)
-- Dependencies: 436
-- Name: COLUMN resol_salida.resol_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_salida.resol_id IS 'IDENTIFICADOR DE RESOLUCION';


--
-- TOC entry 8035 (class 0 OID 0)
-- Dependencies: 436
-- Name: COLUMN resol_salida.varsalida; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_salida.varsalida IS 'NOMBRE DE LA VARIABLE DE SALIDA';


--
-- TOC entry 8036 (class 0 OID 0)
-- Dependencies: 436
-- Name: COLUMN resol_salida.item_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_salida.item_id IS 'CODIGO DE ITEM';


--
-- TOC entry 8037 (class 0 OID 0)
-- Dependencies: 436
-- Name: COLUMN resol_salida.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_salida.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8038 (class 0 OID 0)
-- Dependencies: 436
-- Name: COLUMN resol_salida.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_salida.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 437 (class 1259 OID 5285422)
-- Name: resol_tabla; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.resol_tabla (
    tabla_id smallint NOT NULL,
    nombre character varying(25) NOT NULL,
    resol_id smallint NOT NULL,
    cantcol smallint NOT NULL,
    cantcolfijas smallint NOT NULL,
    uso_paramstr smallint DEFAULT 1 NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint DEFAULT 0 NOT NULL
);


ALTER TABLE public.resol_tabla OWNER TO postgres;

--
-- TOC entry 8039 (class 0 OID 0)
-- Dependencies: 437
-- Name: TABLE resol_tabla; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.resol_tabla IS 'TABLAS RELACIONADAS A LAS RESOLUCIONES';


--
-- TOC entry 8040 (class 0 OID 0)
-- Dependencies: 437
-- Name: COLUMN resol_tabla.tabla_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla.tabla_id IS 'CODIGO DE TABLA';


--
-- TOC entry 8041 (class 0 OID 0)
-- Dependencies: 437
-- Name: COLUMN resol_tabla.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla.nombre IS 'NOMBRE';


--
-- TOC entry 8042 (class 0 OID 0)
-- Dependencies: 437
-- Name: COLUMN resol_tabla.resol_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla.resol_id IS 'IDENTIFICADOR DE RESOLUCION';


--
-- TOC entry 8043 (class 0 OID 0)
-- Dependencies: 437
-- Name: COLUMN resol_tabla.cantcol; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla.cantcol IS 'CANTIDAD DE COLUMNAS';


--
-- TOC entry 8044 (class 0 OID 0)
-- Dependencies: 437
-- Name: COLUMN resol_tabla.cantcolfijas; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla.cantcolfijas IS 'CANTIDAD DE COLUMNAS FIJAS';


--
-- TOC entry 8045 (class 0 OID 0)
-- Dependencies: 437
-- Name: COLUMN resol_tabla.uso_paramstr; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla.uso_paramstr IS 'INDICA SI SE UTILIZA PARAMSTR PARA INGRESO DE TEXTO EN resol_tabla_dato';


--
-- TOC entry 8046 (class 0 OID 0)
-- Dependencies: 437
-- Name: COLUMN resol_tabla.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8047 (class 0 OID 0)
-- Dependencies: 437
-- Name: COLUMN resol_tabla.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 438 (class 1259 OID 5285428)
-- Name: resol_tabla_col; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.resol_tabla_col (
    tabla_id smallint NOT NULL,
    orden smallint NOT NULL,
    nombre character varying(15) NOT NULL,
    tipo smallint NOT NULL,
    param smallint NOT NULL,
    compara character varying(2) NOT NULL
);


ALTER TABLE public.resol_tabla_col OWNER TO postgres;

--
-- TOC entry 8048 (class 0 OID 0)
-- Dependencies: 438
-- Name: TABLE resol_tabla_col; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.resol_tabla_col IS 'NOMBRES DE COLUMNAS DE DATOS USADAS EN RESOLUCIONES ';


--
-- TOC entry 8049 (class 0 OID 0)
-- Dependencies: 438
-- Name: COLUMN resol_tabla_col.tabla_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla_col.tabla_id IS 'CODIGO DE TABLA';


--
-- TOC entry 8050 (class 0 OID 0)
-- Dependencies: 438
-- Name: COLUMN resol_tabla_col.orden; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla_col.orden IS 'NUMERO DE ORDEN';


--
-- TOC entry 8051 (class 0 OID 0)
-- Dependencies: 438
-- Name: COLUMN resol_tabla_col.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla_col.nombre IS 'NOMBRE';


--
-- TOC entry 8052 (class 0 OID 0)
-- Dependencies: 438
-- Name: COLUMN resol_tabla_col.tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla_col.tipo IS 'CODIGO DE TIPO DE DATO';


--
-- TOC entry 8053 (class 0 OID 0)
-- Dependencies: 438
-- Name: COLUMN resol_tabla_col.param; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla_col.param IS 'PARAMETRO';


--
-- TOC entry 8054 (class 0 OID 0)
-- Dependencies: 438
-- Name: COLUMN resol_tabla_col.compara; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla_col.compara IS 'TIPO DE COMPARACION UTILIZADA';


--
-- TOC entry 439 (class 1259 OID 5285431)
-- Name: resol_tabla_dato; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.resol_tabla_dato (
    tabla_id smallint NOT NULL,
    dato_id smallint NOT NULL,
    perdesde integer NOT NULL,
    perhasta integer NOT NULL,
    paramstr character varying(8),
    param1 numeric(15,4),
    param2 numeric(15,4),
    param3 numeric(15,4),
    param4 numeric(15,4),
    param5 numeric(15,4),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.resol_tabla_dato OWNER TO postgres;

--
-- TOC entry 8055 (class 0 OID 0)
-- Dependencies: 439
-- Name: TABLE resol_tabla_dato; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.resol_tabla_dato IS 'DATOS EN TABLAS USADAS EN RESOLUCIONES';


--
-- TOC entry 8056 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN resol_tabla_dato.tabla_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla_dato.tabla_id IS 'CODIGO DE TABLA';


--
-- TOC entry 8057 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN resol_tabla_dato.dato_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla_dato.dato_id IS 'IDENTIFICADOR DE DATO';


--
-- TOC entry 8058 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN resol_tabla_dato.perdesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla_dato.perdesde IS 'PERIODO DESDE';


--
-- TOC entry 8059 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN resol_tabla_dato.perhasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla_dato.perhasta IS 'PERIODO HASTA';


--
-- TOC entry 8060 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN resol_tabla_dato.paramstr; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla_dato.paramstr IS 'PARAMETRO DE TIPO CARACTER';


--
-- TOC entry 8061 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN resol_tabla_dato.param1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla_dato.param1 IS 'PARAMETRO 1';


--
-- TOC entry 8062 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN resol_tabla_dato.param2; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla_dato.param2 IS 'PARAMETRO 2';


--
-- TOC entry 8063 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN resol_tabla_dato.param3; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla_dato.param3 IS 'PARAMETRO 3';


--
-- TOC entry 8064 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN resol_tabla_dato.param4; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla_dato.param4 IS 'PARAMETRO 4';


--
-- TOC entry 8065 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN resol_tabla_dato.param5; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla_dato.param5 IS 'PARAMETRO 5';


--
-- TOC entry 8066 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN resol_tabla_dato.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla_dato.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8067 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN resol_tabla_dato.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.resol_tabla_dato.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 440 (class 1259 OID 5285435)
-- Name: seq_ret_id; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_ret_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.seq_ret_id OWNER TO postgres;

--
-- TOC entry 441 (class 1259 OID 5285437)
-- Name: ret; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ret (
    retdj_id integer DEFAULT nextval('public.seq_ret_id'::regclass) NOT NULL,
    ag_rete character varying(8),
    anio smallint NOT NULL,
    mes smallint NOT NULL,
    cant smallint NOT NULL,
    monto numeric(12,2) NOT NULL,
    fchpresenta timestamp without time zone NOT NULL,
    est character varying(1) NOT NULL,
    ctacte_id integer DEFAULT 0 NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint DEFAULT 100 NOT NULL
);


ALTER TABLE public.ret OWNER TO postgres;

--
-- TOC entry 8068 (class 0 OID 0)
-- Dependencies: 441
-- Name: TABLE ret; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ret IS 'DATOS PRINCIPALES DE RETENCIONES';


--
-- TOC entry 8069 (class 0 OID 0)
-- Dependencies: 441
-- Name: COLUMN ret.retdj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret.retdj_id IS 'IDENTIFICADOR DE DJ';


--
-- TOC entry 8070 (class 0 OID 0)
-- Dependencies: 441
-- Name: COLUMN ret.ag_rete; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret.ag_rete IS 'AGENTE DE RETENCION';


--
-- TOC entry 8071 (class 0 OID 0)
-- Dependencies: 441
-- Name: COLUMN ret.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret.anio IS 'AÑO';


--
-- TOC entry 8072 (class 0 OID 0)
-- Dependencies: 441
-- Name: COLUMN ret.mes; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret.mes IS 'MES';


--
-- TOC entry 8073 (class 0 OID 0)
-- Dependencies: 441
-- Name: COLUMN ret.cant; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret.cant IS 'CANTIDAD';


--
-- TOC entry 8074 (class 0 OID 0)
-- Dependencies: 441
-- Name: COLUMN ret.monto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret.monto IS 'MONTO';


--
-- TOC entry 8075 (class 0 OID 0)
-- Dependencies: 441
-- Name: COLUMN ret.fchpresenta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret.fchpresenta IS 'FECHA DE PRESENTACION';


--
-- TOC entry 8076 (class 0 OID 0)
-- Dependencies: 441
-- Name: COLUMN ret.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret.est IS 'ESTADO';


--
-- TOC entry 442 (class 1259 OID 5285444)
-- Name: ret_det; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ret_det (
    ret_id integer NOT NULL,
    retdj_id integer NOT NULL,
    obj_id character varying(8) NOT NULL,
    numero integer NOT NULL,
    lugar character varying(30) NOT NULL,
    fecha date NOT NULL,
    tcomprob character varying(2) NOT NULL,
    comprob character varying(12) NOT NULL,
    base numeric(12,2) NOT NULL,
    ali numeric(9,2) NOT NULL,
    monto numeric(12,2) NOT NULL,
    fchaplic timestamp without time zone,
    ctacte_id integer NOT NULL,
    est character varying(1) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL,
    ag_rete character varying(8)
);


ALTER TABLE public.ret_det OWNER TO postgres;

--
-- TOC entry 8078 (class 0 OID 0)
-- Dependencies: 442
-- Name: TABLE ret_det; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ret_det IS 'DETALLE DE RETENCIONES';


--
-- TOC entry 8079 (class 0 OID 0)
-- Dependencies: 442
-- Name: COLUMN ret_det.ret_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret_det.ret_id IS 'IDENTIFICADOR DE RETENCION';


--
-- TOC entry 8080 (class 0 OID 0)
-- Dependencies: 442
-- Name: COLUMN ret_det.retdj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret_det.retdj_id IS 'IDENTIFICADOR DE DJ';


--
-- TOC entry 8081 (class 0 OID 0)
-- Dependencies: 442
-- Name: COLUMN ret_det.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret_det.obj_id IS 'OBJETO';


--
-- TOC entry 8082 (class 0 OID 0)
-- Dependencies: 442
-- Name: COLUMN ret_det.numero; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret_det.numero IS 'NUMERO';


--
-- TOC entry 8083 (class 0 OID 0)
-- Dependencies: 442
-- Name: COLUMN ret_det.lugar; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret_det.lugar IS 'LUGAR';


--
-- TOC entry 8084 (class 0 OID 0)
-- Dependencies: 442
-- Name: COLUMN ret_det.fecha; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret_det.fecha IS 'FECHA';


--
-- TOC entry 8085 (class 0 OID 0)
-- Dependencies: 442
-- Name: COLUMN ret_det.tcomprob; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret_det.tcomprob IS 'TIPO DE COMPROBANTE';


--
-- TOC entry 8086 (class 0 OID 0)
-- Dependencies: 442
-- Name: COLUMN ret_det.comprob; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret_det.comprob IS 'COMPROBANTE';


--
-- TOC entry 8087 (class 0 OID 0)
-- Dependencies: 442
-- Name: COLUMN ret_det.base; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret_det.base IS 'BASE';


--
-- TOC entry 8088 (class 0 OID 0)
-- Dependencies: 442
-- Name: COLUMN ret_det.ali; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret_det.ali IS 'ALICUOTA';


--
-- TOC entry 8089 (class 0 OID 0)
-- Dependencies: 442
-- Name: COLUMN ret_det.monto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret_det.monto IS 'MONTO';


--
-- TOC entry 8090 (class 0 OID 0)
-- Dependencies: 442
-- Name: COLUMN ret_det.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret_det.est IS 'ESTADO';


--
-- TOC entry 8091 (class 0 OID 0)
-- Dependencies: 442
-- Name: COLUMN ret_det.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret_det.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 443 (class 1259 OID 5285448)
-- Name: ret_det_ret_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.ret_det_ret_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ret_det_ret_id_seq OWNER TO postgres;

--
-- TOC entry 8092 (class 0 OID 0)
-- Dependencies: 443
-- Name: ret_det_ret_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.ret_det_ret_id_seq OWNED BY public.ret_det.ret_id;


--
-- TOC entry 444 (class 1259 OID 5285450)
-- Name: ret_tcomprob; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ret_tcomprob (
    cod character varying(2) NOT NULL,
    nombre character varying(15) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint
);


ALTER TABLE public.ret_tcomprob OWNER TO postgres;

--
-- TOC entry 8093 (class 0 OID 0)
-- Dependencies: 444
-- Name: TABLE ret_tcomprob; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ret_tcomprob IS 'TIPO DE COMPROBANTE DE RETENCION';


--
-- TOC entry 8094 (class 0 OID 0)
-- Dependencies: 444
-- Name: COLUMN ret_tcomprob.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret_tcomprob.cod IS 'CODIGO ';


--
-- TOC entry 8095 (class 0 OID 0)
-- Dependencies: 444
-- Name: COLUMN ret_tcomprob.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret_tcomprob.nombre IS 'NOMBRE';


--
-- TOC entry 8096 (class 0 OID 0)
-- Dependencies: 444
-- Name: COLUMN ret_tcomprob.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret_tcomprob.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8097 (class 0 OID 0)
-- Dependencies: 444
-- Name: COLUMN ret_tcomprob.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret_tcomprob.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 445 (class 1259 OID 5285454)
-- Name: ret_test; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ret_test (
    cod character varying(1) NOT NULL,
    nombre character varying(15) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint
);


ALTER TABLE public.ret_test OWNER TO postgres;

--
-- TOC entry 8098 (class 0 OID 0)
-- Dependencies: 445
-- Name: TABLE ret_test; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.ret_test IS 'ESTADO DE RETENCIONES';


--
-- TOC entry 8099 (class 0 OID 0)
-- Dependencies: 445
-- Name: COLUMN ret_test.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret_test.cod IS 'CODIGO ';


--
-- TOC entry 8100 (class 0 OID 0)
-- Dependencies: 445
-- Name: COLUMN ret_test.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret_test.nombre IS 'NOMBRE';


--
-- TOC entry 8101 (class 0 OID 0)
-- Dependencies: 445
-- Name: COLUMN ret_test.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret_test.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8102 (class 0 OID 0)
-- Dependencies: 445
-- Name: COLUMN ret_test.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.ret_test.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


SET default_with_oids = true;

--
-- TOC entry 446 (class 1259 OID 5285458)
-- Name: rodado; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rodado (
    obj_id character varying(8) NOT NULL,
    talta smallint,
    perini integer,
    tliq smallint,
    aforo_id character varying(8),
    cat smallint,
    marca smallint,
    modelo smallint,
    modelo_nom character varying(50),
    anio smallint,
    dominio character varying(9),
    dominioant character varying(9),
    marcamotor smallint,
    nromotor character varying(30) NOT NULL,
    marcachasis smallint,
    nrochasis character varying(30),
    peso numeric DEFAULT 0,
    cilindrada smallint NOT NULL,
    deleg integer,
    color character varying(15),
    combustible smallint,
    uso smallint,
    conductor character varying(8),
    fchcompra date,
    tform character varying(1) DEFAULT ''::character varying,
    remito character varying(10) DEFAULT ''::character varying,
    remito_anio smallint DEFAULT 0
);


ALTER TABLE public.rodado OWNER TO postgres;

--
-- TOC entry 8103 (class 0 OID 0)
-- Dependencies: 446
-- Name: TABLE rodado; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.rodado IS 'RODADOS';


--
-- TOC entry 8104 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN rodado.obj_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 8105 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN rodado.talta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado.talta IS 'TIPO DE ALTA';


--
-- TOC entry 8106 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN rodado.perini; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado.perini IS 'PERIODO INICIAL A TRIBUTAR';


--
-- TOC entry 8107 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN rodado.tliq; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado.tliq IS 'TIPO DE LIQUIDACIÓN (AFORO/PESO)';


--
-- TOC entry 8108 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN rodado.cat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado.cat IS 'CATEGORIA';


--
-- TOC entry 8109 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN rodado.marca; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado.marca IS 'CÓDIGO DE MARCA';


--
-- TOC entry 8110 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN rodado.modelo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado.modelo IS 'CODIGO DEL MODELO DEL VEHICULO';


--
-- TOC entry 8111 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN rodado.modelo_nom; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado.modelo_nom IS 'NOMBRE DEL MODELO DEL VEHICULO';


--
-- TOC entry 8112 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN rodado.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado.anio IS 'AÑO FABRICACION';


--
-- TOC entry 8113 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN rodado.dominio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado.dominio IS 'PATENTE AUTOMOTOR';


--
-- TOC entry 8114 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN rodado.dominioant; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado.dominioant IS 'PATENTE AUTOMOTOR ANTERIOR';


--
-- TOC entry 8115 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN rodado.marcamotor; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado.marcamotor IS 'MARCA DE MOTOR';


--
-- TOC entry 8116 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN rodado.nromotor; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado.nromotor IS 'NUMERO DE MOTOR';


--
-- TOC entry 8117 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN rodado.marcachasis; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado.marcachasis IS 'MARCA DE CHASIS';


--
-- TOC entry 8118 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN rodado.nrochasis; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado.nrochasis IS 'NUMERO DE CHASIS';


--
-- TOC entry 8119 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN rodado.peso; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado.peso IS 'PESO RODADO EN KG';


--
-- TOC entry 8120 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN rodado.cilindrada; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado.cilindrada IS 'CILINDRADA DEL RODADO';


--
-- TOC entry 8121 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN rodado.deleg; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado.deleg IS 'DELEGACION DEL REGISTRO AUTOMOTOR';


--
-- TOC entry 8122 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN rodado.color; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado.color IS 'COLOR DEL VEHICULO';


--
-- TOC entry 8123 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN rodado.combustible; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado.combustible IS 'TIPO DE COMBUSTIBLE DEL VEHICULO';


--
-- TOC entry 8124 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN rodado.uso; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado.uso IS 'USO DEL RODADO';


--
-- TOC entry 8125 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN rodado.conductor; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado.conductor IS 'CONDUCTOR DEL VEHICULO';


--
-- TOC entry 8126 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN rodado.fchcompra; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado.fchcompra IS 'FECHA DE COMPRA';


SET default_with_oids = false;

--
-- TOC entry 447 (class 1259 OID 5285468)
-- Name: rodado_aforo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rodado_aforo (
    aforo_id character varying(8) NOT NULL,
    origen character varying(1) NOT NULL,
    fabr character varying(3) NOT NULL,
    marca character varying(3) NOT NULL,
    tipo character varying(2) NOT NULL,
    modelo character varying(3) NOT NULL,
    tvehic character varying(1) NOT NULL,
    marca_nom character varying(25) NOT NULL,
    tipo_nom character varying(35) NOT NULL,
    modelo_nom character varying(50) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.rodado_aforo OWNER TO postgres;

--
-- TOC entry 8127 (class 0 OID 0)
-- Dependencies: 447
-- Name: TABLE rodado_aforo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.rodado_aforo IS 'MODELOS DE AUTOS (CONFORME A RNPA)';


--
-- TOC entry 8128 (class 0 OID 0)
-- Dependencies: 447
-- Name: COLUMN rodado_aforo.aforo_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_aforo.aforo_id IS 'CÓDIGO (MTM/FMM)';


--
-- TOC entry 8129 (class 0 OID 0)
-- Dependencies: 447
-- Name: COLUMN rodado_aforo.origen; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_aforo.origen IS 'ORIGEN (N/I)';


--
-- TOC entry 8130 (class 0 OID 0)
-- Dependencies: 447
-- Name: COLUMN rodado_aforo.fabr; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_aforo.fabr IS 'CÓDIGO DDE FÁBRICA';


--
-- TOC entry 8131 (class 0 OID 0)
-- Dependencies: 447
-- Name: COLUMN rodado_aforo.marca; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_aforo.marca IS 'CÓDIGO DE MARCA';


--
-- TOC entry 8132 (class 0 OID 0)
-- Dependencies: 447
-- Name: COLUMN rodado_aforo.tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_aforo.tipo IS 'TIPO DE RODADO';


--
-- TOC entry 8133 (class 0 OID 0)
-- Dependencies: 447
-- Name: COLUMN rodado_aforo.modelo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_aforo.modelo IS 'TIPO DE VEHICULO (A/C/M/Q)';


--
-- TOC entry 8134 (class 0 OID 0)
-- Dependencies: 447
-- Name: COLUMN rodado_aforo.marca_nom; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_aforo.marca_nom IS 'NOMBRE DE LA MARCA';


--
-- TOC entry 8135 (class 0 OID 0)
-- Dependencies: 447
-- Name: COLUMN rodado_aforo.tipo_nom; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_aforo.tipo_nom IS 'NOMBRE DEL TIPO';


--
-- TOC entry 8136 (class 0 OID 0)
-- Dependencies: 447
-- Name: COLUMN rodado_aforo.modelo_nom; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_aforo.modelo_nom IS 'NOMBRE DEL MODELO';


--
-- TOC entry 8137 (class 0 OID 0)
-- Dependencies: 447
-- Name: COLUMN rodado_aforo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_aforo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8138 (class 0 OID 0)
-- Dependencies: 447
-- Name: COLUMN rodado_aforo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_aforo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 448 (class 1259 OID 5285472)
-- Name: rodado_aforo_val; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rodado_aforo_val (
    aforo_id character varying(8) NOT NULL,
    anio smallint NOT NULL,
    anioval integer DEFAULT 0 NOT NULL,
    valor numeric(12,2) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.rodado_aforo_val OWNER TO postgres;

--
-- TOC entry 8139 (class 0 OID 0)
-- Dependencies: 448
-- Name: TABLE rodado_aforo_val; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.rodado_aforo_val IS 'AFOROS O VALORES DEFINIDOS POR EL RNPA';


--
-- TOC entry 8140 (class 0 OID 0)
-- Dependencies: 448
-- Name: COLUMN rodado_aforo_val.aforo_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_aforo_val.aforo_id IS 'MTM/FMM';


--
-- TOC entry 8141 (class 0 OID 0)
-- Dependencies: 448
-- Name: COLUMN rodado_aforo_val.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_aforo_val.anio IS 'AÑO VALUACION';


--
-- TOC entry 8142 (class 0 OID 0)
-- Dependencies: 448
-- Name: COLUMN rodado_aforo_val.anioval; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_aforo_val.anioval IS 'AÑO DEL AFORO';


--
-- TOC entry 8143 (class 0 OID 0)
-- Dependencies: 448
-- Name: COLUMN rodado_aforo_val.valor; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_aforo_val.valor IS 'VALUACION';


--
-- TOC entry 8144 (class 0 OID 0)
-- Dependencies: 448
-- Name: COLUMN rodado_aforo_val.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_aforo_val.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8145 (class 0 OID 0)
-- Dependencies: 448
-- Name: COLUMN rodado_aforo_val.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_aforo_val.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


SET default_with_oids = true;

--
-- TOC entry 449 (class 1259 OID 5285477)
-- Name: rodado_marca; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rodado_marca (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.rodado_marca OWNER TO postgres;

--
-- TOC entry 8146 (class 0 OID 0)
-- Dependencies: 449
-- Name: TABLE rodado_marca; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.rodado_marca IS 'MARCAS DE RODADOS';


--
-- TOC entry 8147 (class 0 OID 0)
-- Dependencies: 449
-- Name: COLUMN rodado_marca.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_marca.cod IS 'CODIGO';


--
-- TOC entry 8148 (class 0 OID 0)
-- Dependencies: 449
-- Name: COLUMN rodado_marca.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_marca.nombre IS 'NOMBRE';


--
-- TOC entry 8149 (class 0 OID 0)
-- Dependencies: 449
-- Name: COLUMN rodado_marca.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_marca.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8150 (class 0 OID 0)
-- Dependencies: 449
-- Name: COLUMN rodado_marca.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_marca.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 450 (class 1259 OID 5285481)
-- Name: rodado_modelo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rodado_modelo (
    cod smallint DEFAULT nextval(('public.rodado_modelo_cod_seq'::text)::regclass) NOT NULL,
    nombre character varying(50) NOT NULL,
    marca smallint NOT NULL,
    cat smallint NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.rodado_modelo OWNER TO postgres;

--
-- TOC entry 8151 (class 0 OID 0)
-- Dependencies: 450
-- Name: TABLE rodado_modelo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.rodado_modelo IS 'MODELOS DE AUTOS (CONFORME A RNPA)';


--
-- TOC entry 8152 (class 0 OID 0)
-- Dependencies: 450
-- Name: COLUMN rodado_modelo.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_modelo.cod IS 'CODIGO';


--
-- TOC entry 8153 (class 0 OID 0)
-- Dependencies: 450
-- Name: COLUMN rodado_modelo.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_modelo.nombre IS 'NOMBRE';


--
-- TOC entry 8154 (class 0 OID 0)
-- Dependencies: 450
-- Name: COLUMN rodado_modelo.marca; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_modelo.marca IS 'MARCA';


--
-- TOC entry 8155 (class 0 OID 0)
-- Dependencies: 450
-- Name: COLUMN rodado_modelo.cat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_modelo.cat IS 'TIPO';


--
-- TOC entry 8156 (class 0 OID 0)
-- Dependencies: 450
-- Name: COLUMN rodado_modelo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_modelo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8157 (class 0 OID 0)
-- Dependencies: 450
-- Name: COLUMN rodado_modelo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_modelo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 451 (class 1259 OID 5285486)
-- Name: rodado_talta; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rodado_talta (
    cod smallint NOT NULL,
    nombre character varying(40) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.rodado_talta OWNER TO postgres;

--
-- TOC entry 8158 (class 0 OID 0)
-- Dependencies: 451
-- Name: TABLE rodado_talta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.rodado_talta IS 'TIPO DE INSCRIPCIÓN DE RODADOS';


--
-- TOC entry 8159 (class 0 OID 0)
-- Dependencies: 451
-- Name: COLUMN rodado_talta.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_talta.cod IS 'CODIGO';


--
-- TOC entry 8160 (class 0 OID 0)
-- Dependencies: 451
-- Name: COLUMN rodado_talta.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_talta.nombre IS 'NOMBRE';


--
-- TOC entry 8161 (class 0 OID 0)
-- Dependencies: 451
-- Name: COLUMN rodado_talta.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_talta.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8162 (class 0 OID 0)
-- Dependencies: 451
-- Name: COLUMN rodado_talta.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_talta.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 452 (class 1259 OID 5285490)
-- Name: rodado_tcat; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rodado_tcat (
    cod smallint NOT NULL,
    nombre character varying(40) NOT NULL,
    gru smallint NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.rodado_tcat OWNER TO postgres;

--
-- TOC entry 8163 (class 0 OID 0)
-- Dependencies: 452
-- Name: TABLE rodado_tcat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.rodado_tcat IS 'CATEGORÍAS DE RODADOS';


--
-- TOC entry 8164 (class 0 OID 0)
-- Dependencies: 452
-- Name: COLUMN rodado_tcat.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tcat.cod IS 'CODIGO';


--
-- TOC entry 8165 (class 0 OID 0)
-- Dependencies: 452
-- Name: COLUMN rodado_tcat.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tcat.nombre IS 'GRUPO';


--
-- TOC entry 8166 (class 0 OID 0)
-- Dependencies: 452
-- Name: COLUMN rodado_tcat.gru; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tcat.gru IS 'AGRUPAMIENTO';


--
-- TOC entry 8167 (class 0 OID 0)
-- Dependencies: 452
-- Name: COLUMN rodado_tcat.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tcat.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8168 (class 0 OID 0)
-- Dependencies: 452
-- Name: COLUMN rodado_tcat.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tcat.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 453 (class 1259 OID 5285494)
-- Name: rodado_tcombustible; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rodado_tcombustible (
    cod smallint NOT NULL,
    nombre character varying(15) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.rodado_tcombustible OWNER TO postgres;

--
-- TOC entry 8169 (class 0 OID 0)
-- Dependencies: 453
-- Name: TABLE rodado_tcombustible; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.rodado_tcombustible IS 'TIPOS DE COMBUSTIBLES';


--
-- TOC entry 8170 (class 0 OID 0)
-- Dependencies: 453
-- Name: COLUMN rodado_tcombustible.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tcombustible.cod IS 'CODIGO';


--
-- TOC entry 8171 (class 0 OID 0)
-- Dependencies: 453
-- Name: COLUMN rodado_tcombustible.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tcombustible.nombre IS 'NOMBRE';


--
-- TOC entry 8172 (class 0 OID 0)
-- Dependencies: 453
-- Name: COLUMN rodado_tcombustible.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tcombustible.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8173 (class 0 OID 0)
-- Dependencies: 453
-- Name: COLUMN rodado_tcombustible.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tcombustible.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 454 (class 1259 OID 5285498)
-- Name: rodado_tdeleg; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rodado_tdeleg (
    cod integer NOT NULL,
    nombre character varying(60) NOT NULL,
    encargado character varying(60) NOT NULL,
    prov_id smallint NOT NULL,
    localidad character varying(30),
    domi character varying(50) NOT NULL,
    cp smallint,
    tel character varying(35),
    fax character varying(20),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.rodado_tdeleg OWNER TO postgres;

--
-- TOC entry 8174 (class 0 OID 0)
-- Dependencies: 454
-- Name: TABLE rodado_tdeleg; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.rodado_tdeleg IS 'DELEGACIONES DE RODADOS';


--
-- TOC entry 8175 (class 0 OID 0)
-- Dependencies: 454
-- Name: COLUMN rodado_tdeleg.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tdeleg.cod IS 'CODIGO DE DELEGACION';


--
-- TOC entry 8176 (class 0 OID 0)
-- Dependencies: 454
-- Name: COLUMN rodado_tdeleg.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tdeleg.nombre IS 'NOMBRE DE LA DELEGACION';


--
-- TOC entry 8177 (class 0 OID 0)
-- Dependencies: 454
-- Name: COLUMN rodado_tdeleg.encargado; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tdeleg.encargado IS 'APELLIDO Y NOMBRE ENCARGADO';


--
-- TOC entry 8178 (class 0 OID 0)
-- Dependencies: 454
-- Name: COLUMN rodado_tdeleg.prov_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tdeleg.prov_id IS 'CODIGO DE PROVINCIA';


--
-- TOC entry 8179 (class 0 OID 0)
-- Dependencies: 454
-- Name: COLUMN rodado_tdeleg.localidad; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tdeleg.localidad IS 'NOMBRE DE LA LOCALIDAD';


--
-- TOC entry 8180 (class 0 OID 0)
-- Dependencies: 454
-- Name: COLUMN rodado_tdeleg.domi; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tdeleg.domi IS 'DOMICILIO';


--
-- TOC entry 8181 (class 0 OID 0)
-- Dependencies: 454
-- Name: COLUMN rodado_tdeleg.cp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tdeleg.cp IS 'CODIGO POSTAL';


--
-- TOC entry 8182 (class 0 OID 0)
-- Dependencies: 454
-- Name: COLUMN rodado_tdeleg.tel; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tdeleg.tel IS 'TELEFONO';


--
-- TOC entry 8183 (class 0 OID 0)
-- Dependencies: 454
-- Name: COLUMN rodado_tdeleg.fax; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tdeleg.fax IS 'FAX';


--
-- TOC entry 8184 (class 0 OID 0)
-- Dependencies: 454
-- Name: COLUMN rodado_tdeleg.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tdeleg.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8185 (class 0 OID 0)
-- Dependencies: 454
-- Name: COLUMN rodado_tdeleg.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tdeleg.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 455 (class 1259 OID 5285502)
-- Name: rodado_tform; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rodado_tform (
    cod character varying(2) NOT NULL,
    nombre character varying(60) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.rodado_tform OWNER TO postgres;

--
-- TOC entry 8186 (class 0 OID 0)
-- Dependencies: 455
-- Name: TABLE rodado_tform; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.rodado_tform IS 'TIPOS DE FORMULARIOES DE RODADOS';


--
-- TOC entry 8187 (class 0 OID 0)
-- Dependencies: 455
-- Name: COLUMN rodado_tform.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tform.cod IS 'CODIGO DE FORMULARIO';


--
-- TOC entry 8188 (class 0 OID 0)
-- Dependencies: 455
-- Name: COLUMN rodado_tform.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tform.nombre IS 'NOMBRE DEL FORMULARIO';


--
-- TOC entry 8189 (class 0 OID 0)
-- Dependencies: 455
-- Name: COLUMN rodado_tform.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tform.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8190 (class 0 OID 0)
-- Dependencies: 455
-- Name: COLUMN rodado_tform.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tform.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 456 (class 1259 OID 5285506)
-- Name: rodado_tliq; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rodado_tliq (
    cod smallint NOT NULL,
    nombre character varying(40) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.rodado_tliq OWNER TO postgres;

--
-- TOC entry 8192 (class 0 OID 0)
-- Dependencies: 456
-- Name: TABLE rodado_tliq; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.rodado_tliq IS 'TIPO DE LIQUIDACIÓN DE RODADOS';


--
-- TOC entry 8193 (class 0 OID 0)
-- Dependencies: 456
-- Name: COLUMN rodado_tliq.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tliq.cod IS 'CODIGO';


--
-- TOC entry 8194 (class 0 OID 0)
-- Dependencies: 456
-- Name: COLUMN rodado_tliq.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tliq.nombre IS 'NOMBRE';


--
-- TOC entry 8195 (class 0 OID 0)
-- Dependencies: 456
-- Name: COLUMN rodado_tliq.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tliq.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8196 (class 0 OID 0)
-- Dependencies: 456
-- Name: COLUMN rodado_tliq.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tliq.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 457 (class 1259 OID 5285510)
-- Name: rodado_torigen; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rodado_torigen (
    cod character varying(1) NOT NULL,
    nombre character varying(15) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.rodado_torigen OWNER TO postgres;

--
-- TOC entry 8197 (class 0 OID 0)
-- Dependencies: 457
-- Name: TABLE rodado_torigen; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.rodado_torigen IS 'PROCEDENCIAS DE RODADOS';


--
-- TOC entry 8198 (class 0 OID 0)
-- Dependencies: 457
-- Name: COLUMN rodado_torigen.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_torigen.cod IS 'CODIGO';


--
-- TOC entry 8199 (class 0 OID 0)
-- Dependencies: 457
-- Name: COLUMN rodado_torigen.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_torigen.nombre IS 'NOMBRE';


--
-- TOC entry 8200 (class 0 OID 0)
-- Dependencies: 457
-- Name: COLUMN rodado_torigen.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_torigen.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8201 (class 0 OID 0)
-- Dependencies: 457
-- Name: COLUMN rodado_torigen.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_torigen.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 458 (class 1259 OID 5285514)
-- Name: rodado_tuso; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rodado_tuso (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.rodado_tuso OWNER TO postgres;

--
-- TOC entry 8202 (class 0 OID 0)
-- Dependencies: 458
-- Name: TABLE rodado_tuso; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.rodado_tuso IS 'USOS DEL RODADO';


--
-- TOC entry 8203 (class 0 OID 0)
-- Dependencies: 458
-- Name: COLUMN rodado_tuso.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tuso.cod IS 'CODIGO';


--
-- TOC entry 8204 (class 0 OID 0)
-- Dependencies: 458
-- Name: COLUMN rodado_tuso.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tuso.nombre IS 'NOMBRE';


--
-- TOC entry 8205 (class 0 OID 0)
-- Dependencies: 458
-- Name: COLUMN rodado_tuso.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tuso.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8206 (class 0 OID 0)
-- Dependencies: 458
-- Name: COLUMN rodado_tuso.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_tuso.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 459 (class 1259 OID 5285518)
-- Name: rodado_val; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rodado_val (
    anioval smallint NOT NULL,
    gru smallint NOT NULL,
    anio smallint NOT NULL,
    pesodesde numeric(12,2) NOT NULL,
    pesohasta numeric(12,2) NOT NULL,
    valor numeric(12,2) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.rodado_val OWNER TO postgres;

--
-- TOC entry 8207 (class 0 OID 0)
-- Dependencies: 459
-- Name: TABLE rodado_val; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.rodado_val IS 'MONTOS A VALORES DEFINIDOS SEGÚN CATEGORÍA Y PESO DEL RODADO';


--
-- TOC entry 8208 (class 0 OID 0)
-- Dependencies: 459
-- Name: COLUMN rodado_val.anioval; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_val.anioval IS 'ANIO DEL VALOR u NORMA TRIBUTARIA';


--
-- TOC entry 8209 (class 0 OID 0)
-- Dependencies: 459
-- Name: COLUMN rodado_val.gru; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_val.gru IS 'CATEGORIA DEL RODADO';


--
-- TOC entry 8210 (class 0 OID 0)
-- Dependencies: 459
-- Name: COLUMN rodado_val.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_val.anio IS 'ANIO DEL RODADO';


--
-- TOC entry 8211 (class 0 OID 0)
-- Dependencies: 459
-- Name: COLUMN rodado_val.pesodesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_val.pesodesde IS 'PESO DESDE';


--
-- TOC entry 8212 (class 0 OID 0)
-- Dependencies: 459
-- Name: COLUMN rodado_val.pesohasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_val.pesohasta IS 'PESO HASTA';


--
-- TOC entry 8213 (class 0 OID 0)
-- Dependencies: 459
-- Name: COLUMN rodado_val.valor; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rodado_val.valor IS 'VALOR, MONTO O MÓDULOS';


SET default_with_oids = false;

--
-- TOC entry 460 (class 1259 OID 5285522)
-- Name: rubro; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rubro (
    rubro_id character varying(8) NOT NULL,
    nombre character varying(150) NOT NULL,
    nomen_id character varying(1),
    grupo character varying(2) NOT NULL,
    tunidad character varying(8),
    osmreccons smallint DEFAULT 0 NOT NULL,
    tipif_id smallint,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.rubro OWNER TO postgres;

--
-- TOC entry 8214 (class 0 OID 0)
-- Dependencies: 460
-- Name: TABLE rubro; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.rubro IS 'DISTINTOS RUBROS DE ACTIVIDADES COMERCIALES';


--
-- TOC entry 8215 (class 0 OID 0)
-- Dependencies: 460
-- Name: COLUMN rubro.rubro_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro.rubro_id IS 'CODIGO DE RUBRO';


--
-- TOC entry 8216 (class 0 OID 0)
-- Dependencies: 460
-- Name: COLUMN rubro.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro.nombre IS 'NOMBRE';


--
-- TOC entry 8217 (class 0 OID 0)
-- Dependencies: 460
-- Name: COLUMN rubro.nomen_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro.nomen_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 8218 (class 0 OID 0)
-- Dependencies: 460
-- Name: COLUMN rubro.grupo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro.grupo IS 'CODIGO DE GRUPO';


--
-- TOC entry 8219 (class 0 OID 0)
-- Dependencies: 460
-- Name: COLUMN rubro.tunidad; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro.tunidad IS 'DESCRIPCION DEL TIPO DE UNIDAD';


--
-- TOC entry 8220 (class 0 OID 0)
-- Dependencies: 460
-- Name: COLUMN rubro.osmreccons; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro.osmreccons IS 'CODIGO DE TIPO DE RECARGO POR CONSUMO';


--
-- TOC entry 8221 (class 0 OID 0)
-- Dependencies: 460
-- Name: COLUMN rubro.tipif_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro.tipif_id IS 'CODIGO DE TIPIFICACION';


--
-- TOC entry 8222 (class 0 OID 0)
-- Dependencies: 460
-- Name: COLUMN rubro.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8223 (class 0 OID 0)
-- Dependencies: 460
-- Name: COLUMN rubro.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 461 (class 1259 OID 5285527)
-- Name: rubro_general; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rubro_general (
    nomen_id character varying(1) NOT NULL,
    pi smallint NOT NULL,
    perdesde integer NOT NULL,
    perhasta integer NOT NULL,
    alicuota numeric(9,4) NOT NULL,
    minimo numeric(12,2) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.rubro_general OWNER TO postgres;

--
-- TOC entry 8224 (class 0 OID 0)
-- Dependencies: 461
-- Name: TABLE rubro_general; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.rubro_general IS 'CONFIGURACIÓN GENERAL DE RUBRO POR TRIBUTO Y PERÍODO';


--
-- TOC entry 8225 (class 0 OID 0)
-- Dependencies: 461
-- Name: COLUMN rubro_general.nomen_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_general.nomen_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 8226 (class 0 OID 0)
-- Dependencies: 461
-- Name: COLUMN rubro_general.pi; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_general.pi IS 'PARQUE INDUSTRIAL';


--
-- TOC entry 8227 (class 0 OID 0)
-- Dependencies: 461
-- Name: COLUMN rubro_general.perdesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_general.perdesde IS 'PERIODO DESDE';


--
-- TOC entry 8228 (class 0 OID 0)
-- Dependencies: 461
-- Name: COLUMN rubro_general.perhasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_general.perhasta IS 'PERIODO HASTA';


--
-- TOC entry 8229 (class 0 OID 0)
-- Dependencies: 461
-- Name: COLUMN rubro_general.alicuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_general.alicuota IS 'ALICUOTA';


--
-- TOC entry 8230 (class 0 OID 0)
-- Dependencies: 461
-- Name: COLUMN rubro_general.minimo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_general.minimo IS 'MINIMO';


--
-- TOC entry 8231 (class 0 OID 0)
-- Dependencies: 461
-- Name: COLUMN rubro_general.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_general.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8232 (class 0 OID 0)
-- Dependencies: 461
-- Name: COLUMN rubro_general.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_general.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 671 (class 1259 OID 5316994)
-- Name: rubro_grupo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rubro_grupo (
    cod character varying(2) NOT NULL,
    nomen_id character varying(1) NOT NULL,
    nombre character varying(50) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.rubro_grupo OWNER TO postgres;

--
-- TOC entry 8233 (class 0 OID 0)
-- Dependencies: 671
-- Name: TABLE rubro_grupo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.rubro_grupo IS 'GRUPOS DE RUBROS COMERCIALES';


--
-- TOC entry 8234 (class 0 OID 0)
-- Dependencies: 671
-- Name: COLUMN rubro_grupo.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_grupo.cod IS 'CODIGO ';


--
-- TOC entry 8235 (class 0 OID 0)
-- Dependencies: 671
-- Name: COLUMN rubro_grupo.nomen_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_grupo.nomen_id IS 'CODIGO DEL NOMENCLADOR';


--
-- TOC entry 8236 (class 0 OID 0)
-- Dependencies: 671
-- Name: COLUMN rubro_grupo.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_grupo.nombre IS 'NOMBRE';


--
-- TOC entry 8237 (class 0 OID 0)
-- Dependencies: 671
-- Name: COLUMN rubro_grupo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_grupo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8238 (class 0 OID 0)
-- Dependencies: 671
-- Name: COLUMN rubro_grupo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_grupo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 462 (class 1259 OID 5285535)
-- Name: rubro_temporada; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rubro_temporada (
    cuota smallint NOT NULL,
    temporada character(1) NOT NULL
);


ALTER TABLE public.rubro_temporada OWNER TO postgres;

--
-- TOC entry 8239 (class 0 OID 0)
-- Dependencies: 462
-- Name: TABLE rubro_temporada; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.rubro_temporada IS 'TIPOS DE TEMPORADAS SEGÚN CUOTA';


--
-- TOC entry 8240 (class 0 OID 0)
-- Dependencies: 462
-- Name: COLUMN rubro_temporada.cuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_temporada.cuota IS 'CUOTA';


--
-- TOC entry 8241 (class 0 OID 0)
-- Dependencies: 462
-- Name: COLUMN rubro_temporada.temporada; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_temporada.temporada IS 'LETRA QUE IDENTIFICA LA TEMPORADA';


--
-- TOC entry 463 (class 1259 OID 5285538)
-- Name: rubro_tfcalculo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rubro_tfcalculo (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.rubro_tfcalculo OWNER TO postgres;

--
-- TOC entry 8242 (class 0 OID 0)
-- Dependencies: 463
-- Name: TABLE rubro_tfcalculo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.rubro_tfcalculo IS 'FÓRMULA DE CÁLCULO DEL RUBRO';


--
-- TOC entry 8243 (class 0 OID 0)
-- Dependencies: 463
-- Name: COLUMN rubro_tfcalculo.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_tfcalculo.cod IS 'CODIGO ';


--
-- TOC entry 8244 (class 0 OID 0)
-- Dependencies: 463
-- Name: COLUMN rubro_tfcalculo.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_tfcalculo.nombre IS 'NOMBRE';


--
-- TOC entry 8245 (class 0 OID 0)
-- Dependencies: 463
-- Name: COLUMN rubro_tfcalculo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_tfcalculo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8246 (class 0 OID 0)
-- Dependencies: 463
-- Name: COLUMN rubro_tfcalculo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_tfcalculo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 464 (class 1259 OID 5285542)
-- Name: rubro_tminimo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rubro_tminimo (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.rubro_tminimo OWNER TO postgres;

--
-- TOC entry 8247 (class 0 OID 0)
-- Dependencies: 464
-- Name: TABLE rubro_tminimo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.rubro_tminimo IS 'DISTINTOS TIPOS DE MINIMOS';


--
-- TOC entry 8248 (class 0 OID 0)
-- Dependencies: 464
-- Name: COLUMN rubro_tminimo.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_tminimo.cod IS 'CODIGO ';


--
-- TOC entry 8249 (class 0 OID 0)
-- Dependencies: 464
-- Name: COLUMN rubro_tminimo.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_tminimo.nombre IS 'NOMBRE';


--
-- TOC entry 8250 (class 0 OID 0)
-- Dependencies: 464
-- Name: COLUMN rubro_tminimo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_tminimo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8251 (class 0 OID 0)
-- Dependencies: 464
-- Name: COLUMN rubro_tminimo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_tminimo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 669 (class 1259 OID 5316928)
-- Name: rubro_tnomen; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rubro_tnomen (
    nomen_id character varying(1) NOT NULL,
    tobj smallint NOT NULL,
    nombre character varying(30) NOT NULL,
    perdesde integer NOT NULL,
    perhasta integer,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.rubro_tnomen OWNER TO postgres;

--
-- TOC entry 8252 (class 0 OID 0)
-- Dependencies: 669
-- Name: TABLE rubro_tnomen; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.rubro_tnomen IS 'NOMENCLADORES DE ACTIVIDADES COMERCIALES';


--
-- TOC entry 8253 (class 0 OID 0)
-- Dependencies: 669
-- Name: COLUMN rubro_tnomen.nomen_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_tnomen.nomen_id IS 'CODIGO';


--
-- TOC entry 8254 (class 0 OID 0)
-- Dependencies: 669
-- Name: COLUMN rubro_tnomen.tobj; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_tnomen.tobj IS 'TIPO DE OBJETO';


--
-- TOC entry 8255 (class 0 OID 0)
-- Dependencies: 669
-- Name: COLUMN rubro_tnomen.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_tnomen.nombre IS 'NOMBRE';


--
-- TOC entry 8256 (class 0 OID 0)
-- Dependencies: 669
-- Name: COLUMN rubro_tnomen.perdesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_tnomen.perdesde IS 'VIGENCIA DESDE';


--
-- TOC entry 8257 (class 0 OID 0)
-- Dependencies: 669
-- Name: COLUMN rubro_tnomen.perhasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_tnomen.perhasta IS 'VIGENCIA HASTA';


--
-- TOC entry 8258 (class 0 OID 0)
-- Dependencies: 669
-- Name: COLUMN rubro_tnomen.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_tnomen.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8259 (class 0 OID 0)
-- Dependencies: 669
-- Name: COLUMN rubro_tnomen.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_tnomen.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 465 (class 1259 OID 5285546)
-- Name: rubro_vigencia; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rubro_vigencia (
    rubro_id character varying(8) NOT NULL,
    perdesde integer NOT NULL,
    perhasta integer NOT NULL,
    tcalculo smallint NOT NULL,
    tminimo smallint,
    alicuota numeric(9,4) NOT NULL,
    alicuota_atras numeric(9,4),
    minimo numeric(12,2) NOT NULL,
    minalta numeric(12,2) NOT NULL,
    fijo numeric(12,2) NOT NULL,
    canthasta smallint DEFAULT 0,
    porc numeric(5,2) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.rubro_vigencia OWNER TO postgres;

--
-- TOC entry 8261 (class 0 OID 0)
-- Dependencies: 465
-- Name: TABLE rubro_vigencia; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.rubro_vigencia IS 'CONFIGURACIÓN DE RUBROS SEGÚN PERÍODOS';


--
-- TOC entry 8262 (class 0 OID 0)
-- Dependencies: 465
-- Name: COLUMN rubro_vigencia.rubro_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_vigencia.rubro_id IS 'CODIGO DE RUBRO';


--
-- TOC entry 8263 (class 0 OID 0)
-- Dependencies: 465
-- Name: COLUMN rubro_vigencia.perdesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_vigencia.perdesde IS 'PERIODO DESDE';


--
-- TOC entry 8264 (class 0 OID 0)
-- Dependencies: 465
-- Name: COLUMN rubro_vigencia.perhasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_vigencia.perhasta IS 'PERIODO HASTA';


--
-- TOC entry 8265 (class 0 OID 0)
-- Dependencies: 465
-- Name: COLUMN rubro_vigencia.tcalculo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_vigencia.tcalculo IS 'CODIGO DE TIPO DE FORMULA DE CALCULO';


--
-- TOC entry 8266 (class 0 OID 0)
-- Dependencies: 465
-- Name: COLUMN rubro_vigencia.tminimo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_vigencia.tminimo IS 'CODIGO DE TIPO DE MINIMO';


--
-- TOC entry 8267 (class 0 OID 0)
-- Dependencies: 465
-- Name: COLUMN rubro_vigencia.alicuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_vigencia.alicuota IS 'ALICUOTA';


--
-- TOC entry 8268 (class 0 OID 0)
-- Dependencies: 465
-- Name: COLUMN rubro_vigencia.alicuota_atras; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_vigencia.alicuota_atras IS 'ALICUOTA FUERA DE TERMINO';


--
-- TOC entry 8269 (class 0 OID 0)
-- Dependencies: 465
-- Name: COLUMN rubro_vigencia.minimo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_vigencia.minimo IS 'MINIMO';


--
-- TOC entry 8270 (class 0 OID 0)
-- Dependencies: 465
-- Name: COLUMN rubro_vigencia.minalta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_vigencia.minalta IS 'MINIMO PARA TEMPORADA ALTA';


--
-- TOC entry 8271 (class 0 OID 0)
-- Dependencies: 465
-- Name: COLUMN rubro_vigencia.fijo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_vigencia.fijo IS 'FIJO';


--
-- TOC entry 8272 (class 0 OID 0)
-- Dependencies: 465
-- Name: COLUMN rubro_vigencia.canthasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_vigencia.canthasta IS 'CANTIDAD LIMITE - HASTA';


--
-- TOC entry 8273 (class 0 OID 0)
-- Dependencies: 465
-- Name: COLUMN rubro_vigencia.porc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_vigencia.porc IS 'PORCENTAJE';


--
-- TOC entry 8274 (class 0 OID 0)
-- Dependencies: 465
-- Name: COLUMN rubro_vigencia.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_vigencia.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8275 (class 0 OID 0)
-- Dependencies: 465
-- Name: COLUMN rubro_vigencia.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rubro_vigencia.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 466 (class 1259 OID 5285551)
-- Name: seq_banco_cuenta; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_banco_cuenta
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.seq_banco_cuenta OWNER TO postgres;

--
-- TOC entry 467 (class 1259 OID 5285553)
-- Name: seq_caja_cheque_cartera; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_caja_cheque_cartera
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.seq_caja_cheque_cartera OWNER TO postgres;

--
-- TOC entry 468 (class 1259 OID 5285555)
-- Name: seq_caja_opera; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_caja_opera
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.seq_caja_opera OWNER TO postgres;

--
-- TOC entry 469 (class 1259 OID 5285557)
-- Name: seq_caja_opera_mdp; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_caja_opera_mdp
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.seq_caja_opera_mdp OWNER TO postgres;

--
-- TOC entry 8276 (class 0 OID 0)
-- Dependencies: 469
-- Name: seq_caja_opera_mdp; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.seq_caja_opera_mdp OWNED BY public.caja_opera_mdp.orden;


--
-- TOC entry 470 (class 1259 OID 5285559)
-- Name: seq_caja_pagoold; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_caja_pagoold
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.seq_caja_pagoold OWNER TO postgres;

--
-- TOC entry 471 (class 1259 OID 5285561)
-- Name: seq_calc_desc; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_calc_desc
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.seq_calc_desc OWNER TO postgres;

--
-- TOC entry 8277 (class 0 OID 0)
-- Dependencies: 471
-- Name: seq_calc_desc; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.seq_calc_desc OWNED BY public.calc_desc.desc_id;


--
-- TOC entry 472 (class 1259 OID 5285563)
-- Name: seq_cem_alq_id; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_cem_alq_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_cem_alq_id OWNER TO postgres;

--
-- TOC entry 473 (class 1259 OID 5285565)
-- Name: seq_cem_fall_id; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_cem_fall_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_cem_fall_id OWNER TO postgres;

--
-- TOC entry 474 (class 1259 OID 5285567)
-- Name: seq_ctacte_aju_id; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_ctacte_aju_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_ctacte_aju_id OWNER TO postgres;

--
-- TOC entry 475 (class 1259 OID 5285569)
-- Name: seq_ctacte_cambio_est; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_ctacte_cambio_est
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_ctacte_cambio_est OWNER TO postgres;

--
-- TOC entry 476 (class 1259 OID 5285571)
-- Name: seq_ctacte_excep; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_ctacte_excep
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.seq_ctacte_excep OWNER TO postgres;

--
-- TOC entry 8278 (class 0 OID 0)
-- Dependencies: 476
-- Name: seq_ctacte_excep; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.seq_ctacte_excep OWNED BY public.ctacte_excep.excep_id;


--
-- TOC entry 477 (class 1259 OID 5285573)
-- Name: seq_ctacte_id; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_ctacte_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_ctacte_id OWNER TO postgres;

--
-- TOC entry 478 (class 1259 OID 5285575)
-- Name: seq_ctacte_libredeuda; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_ctacte_libredeuda
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.seq_ctacte_libredeuda OWNER TO postgres;

--
-- TOC entry 8279 (class 0 OID 0)
-- Dependencies: 478
-- Name: seq_ctacte_libredeuda; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.seq_ctacte_libredeuda OWNED BY public.ctacte_libredeuda.ldeuda_id;


--
-- TOC entry 479 (class 1259 OID 5285577)
-- Name: seq_ctacte_pagocta; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_ctacte_pagocta
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.seq_ctacte_pagocta OWNER TO postgres;

--
-- TOC entry 8280 (class 0 OID 0)
-- Dependencies: 479
-- Name: seq_ctacte_pagocta; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.seq_ctacte_pagocta OWNED BY public.ctacte_pagocta.pago_id;


--
-- TOC entry 480 (class 1259 OID 5285579)
-- Name: seq_ctacte_planvenc_corr_id; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_ctacte_planvenc_corr_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_ctacte_planvenc_corr_id OWNER TO postgres;

--
-- TOC entry 481 (class 1259 OID 5285581)
-- Name: seq_cuenta; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_cuenta
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 32767
    CACHE 1;


ALTER TABLE public.seq_cuenta OWNER TO postgres;

--
-- TOC entry 482 (class 1259 OID 5285583)
-- Name: seq_debito_adh; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_debito_adh
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_debito_adh OWNER TO postgres;

--
-- TOC entry 483 (class 1259 OID 5285585)
-- Name: seq_domi_barr_id; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_domi_barr_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_domi_barr_id OWNER TO postgres;

--
-- TOC entry 484 (class 1259 OID 5285587)
-- Name: seq_emision_margen_cod; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_emision_margen_cod
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_emision_margen_cod OWNER TO postgres;


--
-- TOC entry 487 (class 1259 OID 5285593)
-- Name: seq_facilida_id; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_facilida_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_facilida_id OWNER TO postgres;

--
-- TOC entry 488 (class 1259 OID 5285595)
-- Name: seq_firma_id; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_firma_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_firma_id OWNER TO postgres;

--
-- TOC entry 489 (class 1259 OID 5285597)
-- Name: seq_fisca_id; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_fisca_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_fisca_id OWNER TO postgres;

--
-- TOC entry 490 (class 1259 OID 5285599)
-- Name: seq_hab_id; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_hab_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_hab_id OWNER TO postgres;

--
-- TOC entry 491 (class 1259 OID 5285601)
-- Name: seq_his_cem; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_his_cem
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_his_cem OWNER TO postgres;

--
-- TOC entry 492 (class 1259 OID 5285603)
-- Name: seq_his_comer; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_his_comer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_his_comer OWNER TO postgres;

--
-- TOC entry 493 (class 1259 OID 5285605)
-- Name: seq_his_inm; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_his_inm
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_his_inm OWNER TO postgres;

--
-- TOC entry 494 (class 1259 OID 5285607)
-- Name: seq_his_inm_cambio; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_his_inm_cambio
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_his_inm_cambio OWNER TO postgres;

--
-- TOC entry 495 (class 1259 OID 5285609)
-- Name: seq_his_objeto; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_his_objeto
    START WITH 1171706
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_his_objeto OWNER TO postgres;

--
-- TOC entry 496 (class 1259 OID 5285611)
-- Name: seq_his_objeto_excep_id; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_his_objeto_excep_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_his_objeto_excep_id OWNER TO postgres;

--
-- TOC entry 497 (class 1259 OID 5285613)
-- Name: seq_his_objeto_item; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_his_objeto_item
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.seq_his_objeto_item OWNER TO postgres;

--
-- TOC entry 8283 (class 0 OID 0)
-- Dependencies: 497
-- Name: seq_his_objeto_item; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.seq_his_objeto_item OWNED BY public.his_objeto_item.his_id;


--
-- TOC entry 498 (class 1259 OID 5285617)
-- Name: seq_his_persona; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_his_persona
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_his_persona OWNER TO postgres;

--
-- TOC entry 499 (class 1259 OID 5285619)
-- Name: seq_his_plan; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_his_plan
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_his_plan OWNER TO postgres;

--
-- TOC entry 500 (class 1259 OID 5285621)
-- Name: seq_his_rodado; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_his_rodado
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.seq_his_rodado OWNER TO postgres;

--
-- TOC entry 501 (class 1259 OID 5285623)
-- Name: seq_inm_cif; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_inm_cif
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.seq_inm_cif OWNER TO postgres;

--
-- TOC entry 502 (class 1259 OID 5285625)
-- Name: seq_inm_vta; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_inm_vta
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.seq_inm_vta OWNER TO postgres;

--
-- TOC entry 503 (class 1259 OID 5285635)
-- Name: seq_item; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_item
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_item OWNER TO postgres;

--
-- TOC entry 504 (class 1259 OID 5285639)
-- Name: seq_objeto_ttabla; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_objeto_ttabla
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_objeto_ttabla OWNER TO postgres;

--
-- TOC entry 505 (class 1259 OID 5285649)
-- Name: seq_persona_ib; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_persona_ib
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_persona_ib OWNER TO postgres;

--
-- TOC entry 506 (class 1259 OID 5285651)
-- Name: seq_plan; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_plan
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.seq_plan OWNER TO postgres;

--
-- TOC entry 507 (class 1259 OID 5285653)
-- Name: seq_plan_config; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_plan_config
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_plan_config OWNER TO postgres;

--
-- TOC entry 508 (class 1259 OID 5285657)
-- Name: seq_ret_det_id; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_ret_det_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.seq_ret_det_id OWNER TO postgres;

--
-- TOC entry 509 (class 1259 OID 5285659)
-- Name: seq_texto_id; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_texto_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.seq_texto_id OWNER TO postgres;

--
-- TOC entry 510 (class 1259 OID 5285661)
-- Name: seq_trib; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_trib
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.seq_trib OWNER TO postgres;

--
-- TOC entry 511 (class 1259 OID 5285678)
-- Name: texto; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.texto (
    texto_id integer DEFAULT nextval(('public.seq_texto_id'::text)::regclass) NOT NULL,
    tuso smallint,
    nombre character varying(20) NOT NULL,
    titulo character varying(50),
    detalle character varying(4000),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.texto OWNER TO postgres;

--
-- TOC entry 8285 (class 0 OID 0)
-- Dependencies: 511
-- Name: TABLE texto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.texto IS 'DIFERENTES TEXTOS Y SU CONFIGURACIÓN';


--
-- TOC entry 8286 (class 0 OID 0)
-- Dependencies: 511
-- Name: COLUMN texto.texto_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.texto.texto_id IS 'IDENTIFICADOR DE TEXTO';


--
-- TOC entry 8287 (class 0 OID 0)
-- Dependencies: 511
-- Name: COLUMN texto.tuso; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.texto.tuso IS 'CODIGO DE TIPO DE USO';


--
-- TOC entry 8288 (class 0 OID 0)
-- Dependencies: 511
-- Name: COLUMN texto.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.texto.nombre IS 'NOMBRE';


--
-- TOC entry 8289 (class 0 OID 0)
-- Dependencies: 511
-- Name: COLUMN texto.titulo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.texto.titulo IS 'TITULO';


--
-- TOC entry 8290 (class 0 OID 0)
-- Dependencies: 511
-- Name: COLUMN texto.detalle; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.texto.detalle IS 'DETALLE - CONTENIDO DEL TEXTO';


--
-- TOC entry 8291 (class 0 OID 0)
-- Dependencies: 511
-- Name: COLUMN texto.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.texto.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8292 (class 0 OID 0)
-- Dependencies: 511
-- Name: COLUMN texto.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.texto.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 512 (class 1259 OID 5285686)
-- Name: texto_tuso; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.texto_tuso (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    proceso smallint
);


ALTER TABLE public.texto_tuso OWNER TO postgres;

--
-- TOC entry 8293 (class 0 OID 0)
-- Dependencies: 512
-- Name: TABLE texto_tuso; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.texto_tuso IS 'TIPOS DE USO DE VARIABLES';


--
-- TOC entry 8294 (class 0 OID 0)
-- Dependencies: 512
-- Name: COLUMN texto_tuso.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.texto_tuso.cod IS 'CODIGO ';


--
-- TOC entry 8295 (class 0 OID 0)
-- Dependencies: 512
-- Name: COLUMN texto_tuso.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.texto_tuso.nombre IS 'NOMBRE';


--
-- TOC entry 8296 (class 0 OID 0)
-- Dependencies: 512
-- Name: COLUMN texto_tuso.proceso; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.texto_tuso.proceso IS 'CODIGO DE PROCESO ';


--
-- TOC entry 513 (class 1259 OID 5285689)
-- Name: texto_var; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.texto_var (
    tuso smallint NOT NULL,
    variablenombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now(),
    usrmod smallint
);


ALTER TABLE public.texto_var OWNER TO postgres;

--
-- TOC entry 8297 (class 0 OID 0)
-- Dependencies: 513
-- Name: TABLE texto_var; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.texto_var IS 'DISTINTAS VARIABLES SEGÚN USO';


--
-- TOC entry 8298 (class 0 OID 0)
-- Dependencies: 513
-- Name: COLUMN texto_var.tuso; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.texto_var.tuso IS 'CODIGO DE TIPO DE USO';


--
-- TOC entry 8299 (class 0 OID 0)
-- Dependencies: 513
-- Name: COLUMN texto_var.variablenombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.texto_var.variablenombre IS 'NOMBRE DE VARIABLE';


--
-- TOC entry 8300 (class 0 OID 0)
-- Dependencies: 513
-- Name: COLUMN texto_var.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.texto_var.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8301 (class 0 OID 0)
-- Dependencies: 513
-- Name: COLUMN texto_var.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.texto_var.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 514 (class 1259 OID 5285693)
-- Name: trib; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.trib (
    trib_id smallint NOT NULL,
    nombre character varying(50) NOT NULL,
    nombre_redu character varying(15) NOT NULL,
    nombre_reduhbank character varying(5),
    tobj smallint NOT NULL,
    tipo smallint NOT NULL,
    genestcta smallint,
    texto_id smallint,
    ucm smallint DEFAULT 0 NOT NULL,
    calc_rec smallint DEFAULT 0,
    calc_rec_tasa numeric(5,2) DEFAULT 0 NOT NULL,
    cta_id_rec smallint,
    rec_venc2 numeric(9,3) DEFAULT 0 NOT NULL,
    cta_id_redon smallint DEFAULT 0 NOT NULL,
    prescrip smallint NOT NULL,
    uso_subcta smallint DEFAULT 0 NOT NULL,
    uso_mm smallint DEFAULT 0,
    oficina smallint,
    bol_domimuni boolean,
    bol_domi character varying(30),
    bol_tel character varying(30),
    bol_mail character varying(30),
    quitafaci numeric(5,2),
    compensa smallint DEFAULT 0,
    est character(1),
    dj_tribprinc smallint DEFAULT 0 NOT NULL,
    inscrip_req smallint DEFAULT 0 NOT NULL,
    inscrip_auto smallint DEFAULT 0 NOT NULL,
    inscrip_incomp smallint DEFAULT 0 NOT NULL,
    fchmod timestamp(0) without time zone DEFAULT now(),
    usrmod smallint,
    cta_id_desc smallint DEFAULT 0,
    calc_act smallint DEFAULT 0 NOT NULL,
    calc_act_faci smallint DEFAULT 0 NOT NULL,
    cta_id_act smallint DEFAULT 0 NOT NULL
);


ALTER TABLE public.trib OWNER TO postgres;

--
-- TOC entry 8302 (class 0 OID 0)
-- Dependencies: 514
-- Name: TABLE trib; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.trib IS 'DATOS PRINCIPALES DE TRIBUTOS Y SU CONFIGURACION';


--
-- TOC entry 8303 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 8304 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.nombre IS 'NOMBRE';


--
-- TOC entry 8305 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.nombre_redu; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.nombre_redu IS 'NOMBRE REDUCIDO';


--
-- TOC entry 8306 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.nombre_reduhbank; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.nombre_reduhbank IS 'NOMBRE REDUCIDO PARA MOSTRAR EN HOME BANKING';


--
-- TOC entry 8307 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.tobj; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.tobj IS 'CODIGO DE TIPO DE OBJETO';


--
-- TOC entry 8308 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.tipo IS 'CODIGO DE TIPO DE TRIBUTO';


--
-- TOC entry 8309 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.genestcta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.genestcta IS 'SI SE MUESTRA EN LA BOLETA EL ESTADO DE CTACTE';


--
-- TOC entry 8310 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.texto_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.texto_id IS 'IDENTIFICADOR DE TEXTO';


--
-- TOC entry 8311 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.ucm; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.ucm IS 'UCM A UTILIZAR. 0 INDICA SIN UCM.';


--
-- TOC entry 8312 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.calc_rec; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.calc_rec IS 'SI SE CALCULAN INTERESES';


--
-- TOC entry 8313 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.calc_rec_tasa; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.calc_rec_tasa IS 'TASA DE RECARGO ESPECÍFICA DEL TRIBUTO (0==>TASA GENERAL)';


--
-- TOC entry 8314 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.cta_id_rec; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.cta_id_rec IS 'CODIGO DE CUENTA DE REDONDEO';


--
-- TOC entry 8315 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.rec_venc2; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.rec_venc2 IS 'TASA DE RECARGO AL SEGUNDO VENCIMIENTO';


--
-- TOC entry 8316 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.cta_id_redon; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.cta_id_redon IS 'CUENTA PARA IMPUTAR EL REDONDEO';


--
-- TOC entry 8317 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.prescrip; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.prescrip IS 'AÑOS DE PRESCRIPCION';


--
-- TOC entry 8318 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.uso_subcta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.uso_subcta IS 'SI EL TRIBUTO HACE USO DE LA SUBCTA';


--
-- TOC entry 8319 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.uso_mm; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.uso_mm IS 'INDICA SI SE APLICAN O NO LOS MÓDULOS AL TRIBUTO';


--
-- TOC entry 8320 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.oficina; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.oficina IS 'CODIGO DE OFICINA PRINCIPAL QUE LO UTILIZA';


--
-- TOC entry 8321 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.bol_domimuni; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.bol_domimuni IS 'USAR DOMICILIO GENERAL DEL MUNICIPIO EN LA BOLETA';


--
-- TOC entry 8322 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.bol_domi; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.bol_domi IS 'DOMICILIO A IMPRIMIR EN LA BOLETA';


--
-- TOC entry 8323 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.bol_tel; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.bol_tel IS 'TELEFONO A IMPRIMIR EN LA BOLETA';


--
-- TOC entry 8324 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.bol_mail; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.bol_mail IS 'MAIL A IMPRIMIR EN LA BOLETA';


--
-- TOC entry 8325 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.quitafaci; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.quitafaci IS 'PORCENTAJE DE QUITA DE ACCESORIOS PARA UNA FACILIDAD CUANDO SE PAGA TODA LA DEUDA DEL TRIBUTO';


--
-- TOC entry 8326 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.compensa; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.compensa IS 'SI SE PERMITE COMPENSAR';


--
-- TOC entry 8327 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.est IS 'ESTADO DEL TRIBUTO';


--
-- TOC entry 8328 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.dj_tribprinc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.dj_tribprinc IS 'INDICA EL TRIBUTO PRINCIPAL EN CASO DE SER DECLARATIVO';


--
-- TOC entry 8329 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.inscrip_req; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.inscrip_req IS 'INDICA QUE SE REQUIERE INSCRIPCIÓN EN EL TRIBUTO';


--
-- TOC entry 8330 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.inscrip_auto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.inscrip_auto IS 'INDICA QUE LA INSCRIPCIÓN EN EL TRIBUTO ES AUTOMÁTICA, AL DAR DE ALTA UN NUEVO OBJETO';


--
-- TOC entry 8331 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.inscrip_incomp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.inscrip_incomp IS 'INDICA INCOMPATIBILIDAD DE INSCRIPCIÓN CON OTRO TRIBUTO';


--
-- TOC entry 8332 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8333 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 8334 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.calc_act; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.calc_act IS 'INDICA SI SE CALCULA ACTUALIZACIÓN EN EL TRIBUTO';


--
-- TOC entry 8335 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.calc_act_faci; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.calc_act_faci IS 'INDICA SI SE CALCULA ACTUALIZACIÓN EN FACILIDAD (SI SE INCLUYE TODA LA DEUDA)';


--
-- TOC entry 8336 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN trib.cta_id_act; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib.cta_id_act IS 'CUENTA DONDE SE IMPUTAN LAS ACTUALIZACIONES DE DEUDA';


--
-- TOC entry 515 (class 1259 OID 5285710)
-- Name: trib_tgenestcta; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.trib_tgenestcta (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod integer NOT NULL
);


ALTER TABLE public.trib_tgenestcta OWNER TO postgres;

--
-- TOC entry 8337 (class 0 OID 0)
-- Dependencies: 515
-- Name: TABLE trib_tgenestcta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.trib_tgenestcta IS 'INDICADOR DE GENERAR ESTADO DE CUENTA';


--
-- TOC entry 8338 (class 0 OID 0)
-- Dependencies: 515
-- Name: COLUMN trib_tgenestcta.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_tgenestcta.cod IS 'CODIGO ';


--
-- TOC entry 8339 (class 0 OID 0)
-- Dependencies: 515
-- Name: COLUMN trib_tgenestcta.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_tgenestcta.nombre IS 'NOMBRE';


--
-- TOC entry 8340 (class 0 OID 0)
-- Dependencies: 515
-- Name: COLUMN trib_tgenestcta.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_tgenestcta.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8341 (class 0 OID 0)
-- Dependencies: 515
-- Name: COLUMN trib_tgenestcta.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_tgenestcta.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 516 (class 1259 OID 5285714)
-- Name: trib_tipo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.trib_tipo (
    cod smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    detalle character varying(250),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod integer NOT NULL
);


ALTER TABLE public.trib_tipo OWNER TO postgres;

--
-- TOC entry 8342 (class 0 OID 0)
-- Dependencies: 516
-- Name: TABLE trib_tipo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.trib_tipo IS 'TIPOS DE TRIBUTOS';


--
-- TOC entry 8343 (class 0 OID 0)
-- Dependencies: 516
-- Name: COLUMN trib_tipo.cod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_tipo.cod IS 'CODIGO ';


--
-- TOC entry 8344 (class 0 OID 0)
-- Dependencies: 516
-- Name: COLUMN trib_tipo.nombre; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_tipo.nombre IS 'NOMBRE';


--
-- TOC entry 8345 (class 0 OID 0)
-- Dependencies: 516
-- Name: COLUMN trib_tipo.detalle; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_tipo.detalle IS 'DETALLE';


--
-- TOC entry 8346 (class 0 OID 0)
-- Dependencies: 516
-- Name: COLUMN trib_tipo.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_tipo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8347 (class 0 OID 0)
-- Dependencies: 516
-- Name: COLUMN trib_tipo.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_tipo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 517 (class 1259 OID 5285718)
-- Name: trib_venc; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.trib_venc (
    trib_id smallint NOT NULL,
    anio smallint NOT NULL,
    cuota smallint NOT NULL,
    fchvenc1 date,
    fchvenc2 date,
    fchvencanual date,
    segun_term smallint,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE public.trib_venc OWNER TO postgres;

--
-- TOC entry 8348 (class 0 OID 0)
-- Dependencies: 517
-- Name: TABLE trib_venc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.trib_venc IS 'FECHAS DE VENCIMIENTOS DE LOS TRIBUTOS SEGÚN PERÍODO';


--
-- TOC entry 8349 (class 0 OID 0)
-- Dependencies: 517
-- Name: COLUMN trib_venc.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_venc.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 8350 (class 0 OID 0)
-- Dependencies: 517
-- Name: COLUMN trib_venc.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_venc.anio IS 'AÑO';


--
-- TOC entry 8351 (class 0 OID 0)
-- Dependencies: 517
-- Name: COLUMN trib_venc.cuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_venc.cuota IS 'CUOTA';


--
-- TOC entry 8352 (class 0 OID 0)
-- Dependencies: 517
-- Name: COLUMN trib_venc.fchvenc1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_venc.fchvenc1 IS 'FECHA DE VENCIMIENTO 1';


--
-- TOC entry 8353 (class 0 OID 0)
-- Dependencies: 517
-- Name: COLUMN trib_venc.fchvenc2; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_venc.fchvenc2 IS 'FECHA DE VENCIMIENTO 2';


--
-- TOC entry 8354 (class 0 OID 0)
-- Dependencies: 517
-- Name: COLUMN trib_venc.fchvencanual; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_venc.fchvencanual IS 'FECHA DE VENCIMIENTO ANUAL';


--
-- TOC entry 8355 (class 0 OID 0)
-- Dependencies: 517
-- Name: COLUMN trib_venc.segun_term; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_venc.segun_term IS 'SI EL VENCIMIENTO ES SEGUN LA TERMINACION DE CUIT';


--
-- TOC entry 8356 (class 0 OID 0)
-- Dependencies: 517
-- Name: COLUMN trib_venc.fchmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_venc.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8357 (class 0 OID 0)
-- Dependencies: 517
-- Name: COLUMN trib_venc.usrmod; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_venc.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 518 (class 1259 OID 5285722)
-- Name: trib_venc_cuit; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.trib_venc_cuit (
    trib_id smallint NOT NULL,
    anio smallint NOT NULL,
    cuota smallint NOT NULL,
    term smallint NOT NULL,
    fchvenc date
);


ALTER TABLE public.trib_venc_cuit OWNER TO postgres;

--
-- TOC entry 8358 (class 0 OID 0)
-- Dependencies: 518
-- Name: TABLE trib_venc_cuit; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.trib_venc_cuit IS 'FECHAS DE VENCIMIENTOS SEGÚN LA TERMINACION DEL CUIT';


--
-- TOC entry 8359 (class 0 OID 0)
-- Dependencies: 518
-- Name: COLUMN trib_venc_cuit.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_venc_cuit.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 8360 (class 0 OID 0)
-- Dependencies: 518
-- Name: COLUMN trib_venc_cuit.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_venc_cuit.anio IS 'AÑO';


--
-- TOC entry 8361 (class 0 OID 0)
-- Dependencies: 518
-- Name: COLUMN trib_venc_cuit.cuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_venc_cuit.cuota IS 'CUOTA';


--
-- TOC entry 8362 (class 0 OID 0)
-- Dependencies: 518
-- Name: COLUMN trib_venc_cuit.term; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_venc_cuit.term IS 'NUMERO DE TERMINACION';


--
-- TOC entry 8363 (class 0 OID 0)
-- Dependencies: 518
-- Name: COLUMN trib_venc_cuit.fchvenc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_venc_cuit.fchvenc IS 'FECHA DE VENCIMIENTO';


--
-- TOC entry 519 (class 1259 OID 5285725)
-- Name: trib_venc_item; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.trib_venc_item (
    trib_id smallint NOT NULL,
    anio smallint NOT NULL,
    cuota smallint NOT NULL,
    item_id smallint NOT NULL,
    monto numeric(12,2) NOT NULL
);


ALTER TABLE public.trib_venc_item OWNER TO postgres;

--
-- TOC entry 8364 (class 0 OID 0)
-- Dependencies: 519
-- Name: TABLE trib_venc_item; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.trib_venc_item IS 'VALOR DEL ITEM SEGÚN TRIBUTO Y PERÍODO';


--
-- TOC entry 8365 (class 0 OID 0)
-- Dependencies: 519
-- Name: COLUMN trib_venc_item.trib_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_venc_item.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 8366 (class 0 OID 0)
-- Dependencies: 519
-- Name: COLUMN trib_venc_item.anio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_venc_item.anio IS 'AÑO';


--
-- TOC entry 8367 (class 0 OID 0)
-- Dependencies: 519
-- Name: COLUMN trib_venc_item.cuota; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_venc_item.cuota IS 'CUOTA';


--
-- TOC entry 8368 (class 0 OID 0)
-- Dependencies: 519
-- Name: COLUMN trib_venc_item.item_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_venc_item.item_id IS 'CODIGO DE ITEM';


--
-- TOC entry 8369 (class 0 OID 0)
-- Dependencies: 519
-- Name: COLUMN trib_venc_item.monto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trib_venc_item.monto IS 'MONTO';


--
-- TOC entry 173 (class 1259 OID 5283664)
-- Name: sis_usuario; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.sis_usuario (
    usr_id smallint DEFAULT nextval(('"sam"."sis_usuario_usr_id_seq"'::text)::regclass) NOT NULL,
    nombre character varying(15) NOT NULL,
    clave character varying(32) NOT NULL,
    apenom character varying(40) NOT NULL,
    domi character varying(40),
    tdoc smallint DEFAULT 0 NOT NULL,
    ndoc bigint DEFAULT 0 NOT NULL,
    oficina smallint,
    cargo character varying(30),
    legajo integer,
    matricula integer,
    grupo smallint,
    est character(1) NOT NULL,
    tel character varying(20),
    cel character varying(20),
    mail character varying(50),
    distrib smallint NOT NULL,
    inspec_inm smallint NOT NULL,
    inspec_comer smallint NOT NULL,
    inspec_op smallint,
    inspec_juz smallint,
    inspec_recl smallint,
    abogado smallint NOT NULL,
    cajero smallint NOT NULL,
    fchalta timestamp without time zone NOT NULL,
    fchbaja timestamp without time zone,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint DEFAULT 0 NOT NULL
);


ALTER TABLE sam.sis_usuario OWNER TO postgres;

--
-- TOC entry 8370 (class 0 OID 0)
-- Dependencies: 173
-- Name: TABLE sis_usuario; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.sis_usuario IS 'DATOS PRINCIPALES Y CONFIGURACIÓN DE USUARIOS DEL SISTEMA';


--
-- TOC entry 8371 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.usr_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.usr_id IS 'CODIGO';


--
-- TOC entry 8372 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.nombre; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.nombre IS 'NOMBRE';


--
-- TOC entry 8373 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.clave; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.clave IS 'CLAVE ENCRIPTADA';


--
-- TOC entry 8374 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.apenom; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.apenom IS 'APELLIDO Y NOMBRE';


--
-- TOC entry 8375 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.domi; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.domi IS 'DOMICILIO';


--
-- TOC entry 8376 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.tdoc; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.tdoc IS 'CODIGO DE TIPO DE DOCUMENTO';


--
-- TOC entry 8377 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.ndoc; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.ndoc IS 'NUMERO DE DOCUMENTO';


--
-- TOC entry 8378 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.oficina; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.oficina IS 'CODIGO DE OFICINA';


--
-- TOC entry 8379 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.cargo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.cargo IS 'DESCRIPCION DEL CARGO';


--
-- TOC entry 8380 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.legajo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.legajo IS 'NUMERO DE LEGAJO';


--
-- TOC entry 8381 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.matricula; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.matricula IS 'MATRICULA';


--
-- TOC entry 8382 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.grupo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.grupo IS 'CODIGO DE GRUPO AL QUE PERTENECE';


--
-- TOC entry 8383 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.est; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.est IS 'ESTADO';


--
-- TOC entry 8384 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.tel; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.tel IS 'TELEFONO';


--
-- TOC entry 8385 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.cel; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.cel IS 'CELULAR';


--
-- TOC entry 8386 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.mail; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.mail IS 'DIRECCION DE E-MAIL';


--
-- TOC entry 8387 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.distrib; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.distrib IS 'SI ES DISTRIBUIDOR';


--
-- TOC entry 8388 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.inspec_inm; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.inspec_inm IS 'SI ES INSPECTOR';


--
-- TOC entry 8389 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.inspec_comer; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.inspec_comer IS 'SI ES CENSISTA';


--
-- TOC entry 8390 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.inspec_op; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.inspec_op IS 'SI ES INSPECTOR DE OBRAS PRIVADAS';


--
-- TOC entry 8391 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.inspec_juz; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.inspec_juz IS 'SI ES CONTADOR';


--
-- TOC entry 8392 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.inspec_recl; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.inspec_recl IS 'SI ES INSPECTOR DE RECLAMOS';


--
-- TOC entry 8393 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.abogado; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.abogado IS 'SI ES ABOGADO';


--
-- TOC entry 8394 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.cajero; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.cajero IS 'SI ES CAJERO';


--
-- TOC entry 8395 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.fchalta; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.fchalta IS 'FECHA DE ALTA';


--
-- TOC entry 8396 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.fchbaja; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.fchbaja IS 'FECHA DE BAJA';


--
-- TOC entry 8397 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.fchmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8398 (class 0 OID 0)
-- Dependencies: 173
-- Name: COLUMN sis_usuario.usrmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';

--
-- TOC entry 731 (class 1255 OID 5282690)
-- Name: uf_caja_codbarra(integer, character varying, integer, integer, integer, numeric, date, numeric, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_codbarra(_trib_id integer, _obj_id character varying, _subcta integer, _anio integer, _cuota integer, _monto numeric, _fchvenc date, _monto2 numeric DEFAULT 0, _fchvenc2 date DEFAULT NULL::date) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
    codbarra varchar(44);
    muni varchar(4);
    auxobjanio varchar(9);
    n smallint;
    x smallint;
    suma smallint;
    verif smallint;
    cb_monto numeric(12,2);
    recargo numeric(12,2);
    difdias smallint;
begin
    -- Función que genera el Código de barra a partir de los parámetros

    select into muni m.cod_ent from sam.muni_datos m;

    If (_cuota=0 and _fchvenc is null) Then
      	codbarra= '';
    ElsIf (_monto < 0) Then 
	codbarra= '';
    Else
    	If _trib_id in (1,2,3,10) Then
        	auxobjanio := iif(_subcta=0, lpad(cast(_anio as varchar(9)),9,'0'), _subcta || lpad(cast(_anio as varchar(8)),8,'0'));
        Else
        	auxobjanio := iif(_subcta=0, substr(_obj_id,2,7), _subcta || substr(_obj_id,3,6)) || substr(cast(_anio as varchar(4)),3,2);
        End If;
        If (_monto < 0) Then
        	cb_monto := 0;
        Else
        	cb_monto = _monto;
        End If;

        If (_monto2 = 0 or _monto2 = cb_monto) Then
            difdias := 0;
            recargo := 0;
        Else
            difdias = _fchvenc2 - _fchvenc;
            if (difdias > 0) Then
              recargo := _monto2 - cb_monto;
            else
              difdias := 0;
              recargo := 0;
            end if;  
        End If;

        codbarra = muni
        	|| lpad(cast(trunc(cb_monto) as varchar(6)),6,'0')
        	|| lpad(cast(trunc((cb_monto - trunc(cb_monto))*100) as varchar(2)),2,'0')
        	|| to_char(_fchvenc,'YYddd')
            || lpad(cast(_trib_id as varchar(2)),2,'0')
        	|| auxobjanio
	        || lpad(cast(_cuota as varchar(3)),3,'0')
            || '0'       -- moneda
        	|| lpad(cast(trunc(recargo) as varchar(4)),4,'0')		-- recargo parte entera
        	|| lpad(cast(trunc((recargo - trunc(recargo))*100) as varchar(2)),2,'0'); -- recargo parte decimal

            codbarra = codbarra || lpad(cast(difdias as varchar(2)),2,'0');      -- días al 2° venc.

        -- Genero los dígitos de paridad
        x := 1;
        suma := 0;
        For i IN 1..40 Loop
        	n := cast(substr(codbarra,i,1) as smallint);
            suma := suma + n * x;
            If x=9 Then
            	x := 3;
            Else
            	x := x + 2;
            End If;
        End Loop;

        verif := trunc(suma/2)::integer % 10;
        codbarra := codbarra || verif::text;
        suma := suma + verif * x;
        verif := trunc(suma/2)::integer % 10;
        codbarra := codbarra || verif::text;

	End If;

    Return codbarra;

end
$$;


ALTER FUNCTION sam.uf_caja_codbarra(_trib_id integer, _obj_id character varying, _subcta integer, _anio integer, _cuota integer, _monto numeric, _fchvenc date, _monto2 numeric, _fchvenc2 date) OWNER TO postgres;

--
-- TOC entry 732 (class 1255 OID 5282691)
-- Name: uf_caja_codbarra_det(character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_codbarra_det(_codbarra character varying) RETURNS TABLE(trib_id smallint, obj_id character varying, subcta smallint, anio integer, cuota smallint, monto numeric, fchvenc date)
    LANGUAGE plpgsql
    AS $$
declare
    ttrib smallint;
    vletra varchar(1);
    pos smallint;
    vctacte_id integer;
    vtrib_id smallint;
    vanio integer;
begin
  -- Función que obtiene los componentes del código de barra

  -- Inicializo los datos
  trib_id=0;  obj_id='';  subcta=0;  anio=0;  cuota=0; monto=0;  fchvenc=null;

  If (length(_codbarra)=42) Then
    trib_id := cast(substr(_CodBarra,18,2) as smallint);
    subcta := cast(substr(_CodBarra,20,1) as smallint);
    cuota := cast(substr(_codbarra,29,3) as smallint);
    monto := cast(substr(_codbarra,5,8) as decimal(15,2))/100;
    fchvenc := to_date(substr(_codbarra,13,5),'YYddd');

    If (trib_id in (1,2,3,10)) Then
    	If subcta=0 Then
        	anio := cast(substr(_codbarra,20,9) as integer);
		Else
        	anio := cast(substr(_codbarra,21,8) as integer);
        End If; 
    	vanio= anio;
        -- Obtengo el objeto del plan o facilidad
        If (trib_id=1) Then
        	Select Into Obj_id p.obj_id from plan p where plan_id=vanio;
        elseif (trib_id=2) Then
	        Select Into Obj_id f.obj_id from facilida f where faci_id=vanio;
        else
            Select Into Obj_id p.obj_id from ctacte_pagocta p where pago_id=vanio;
        End If;
    Else
	    anio := 2000 + cast(substr(_codbarra,27,2) as integer);

        vtrib_id = trib_id;
        select into vletra  o.letra
        from trib t left join objeto_tipo o on t.tobj = o.Cod
        where t.trib_id = vtrib_id ;

        If (vletra is null) Then
        	If (Trib_id <> 12) Then
            	raise exception 'Tributo u objeto no definido adecuadamente';
            Else
            	vletra :='_';
            End If;
        End If;
		
        If subcta=0 Then	-- Si subcuenta es distinta de cero, tomo el objeto de 6 caracteres
	    	obj_id := vletra || substr(_CodBarra,20,7);
        Else
        	obj_id := vletra || '0' || substr(_CodBarra,21,6);
        End If;
	End If;

  ElseIf upper(substr(_codbarra,1,1))='C' Then -- Código Especial para Higiene
	    pos := position('-' in _codbarra);
        trib_id := 22;
        obj_id := 'C' || lpad(substr(_codbarra,2,pos-2),7,'0');
        subcta := 0;
        anio := cast(substr(_codbarra,pos+1,4) as integer);
        cuota := cast(substr(_codbarra,pos+5,2) as integer);

  ElseIf (length(_codbarra)>10) Then  --error, supera el dato integer para ser ctacte_id
		Raise Exception 'Datos inexistentes';
  Else
        -- si el codbarra es de menor longitud significa que se trata de ctacte_id
        vctacte_id := cast(_codbarra as integer);

        Select Into trib_id, obj_id, subcta, anio, cuota, monto, fchvenc
        c.trib_id, c.obj_id, c.subcta, c.anio, c.cuota, c.nominal, c.fchvenc
        From ctacte c Where c.ctacte_id = vctacte_id;
  End If;

  Return Next;
end
$$;


ALTER FUNCTION sam.uf_caja_codbarra_det(_codbarra character varying) OWNER TO postgres;


--
-- TOC entry 520 (class 1259 OID 5285737)
-- Name: v_banco_cuenta; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_banco_cuenta AS
 SELECT c.bcocta_id,
    ("substring"((c.cbu)::text, 1, 3))::smallint AS bco_ent,
    (("substring"((c.cbu)::text, 1, 3) || ' - '::text) || (e.nombre)::text) AS bco_ent_nom,
    ("substring"((c.cbu)::text, 5, 4))::smallint AS bco_suc,
    (("substring"((c.cbu)::text, 1, 3) || ' - '::text) || (s.nombre)::text) AS bco_suc_nom,
    c.tipo AS bco_tcta,
    t.nombre AS bco_tcta_nom,
        CASE
            WHEN (c.tipo = 1) THEN 'CA'::text
            ELSE 'CC'::text
        END AS bco_tcta_nom_redu,
    "substring"((c.cbu)::text, 9, 13) AS bco_cta,
    c.titular,
    c.est,
    (((u.nombre)::text || ' - '::text) || to_char(c.fchmod, 'dd/mm/yyyy'::text)) AS modif
   FROM ((((public.banco_cuenta c
     LEFT JOIN public.banco_tcuenta t ON ((c.tipo = t.cod)))
     LEFT JOIN public.banco s ON (((("substring"((c.cbu)::text, 1, 3))::smallint = s.bco_suc) AND (("substring"((c.cbu)::text, 5, 4))::smallint = s.bco_suc))))
     LEFT JOIN public.banco_entidad e ON ((("substring"((c.cbu)::text, 1, 3))::smallint = e.bco_ent)))
     LEFT JOIN sam.sis_usuario u ON ((c.usrmod = u.usr_id)));

ALTER TABLE public.v_banco_cuenta OWNER TO postgres;
	 
--
-- TOC entry 859 (class 1255 OID 5282868)
-- Name: uf_inm_armar_nc_guiones(character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_inm_armar_nc_guiones(_obj_id character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
    vs1 varchar;
    vs2 varchar;
    vs3 varchar;
    vmanz varchar;
    vparc varchar;
	nc varchar(25);
	vnombre varchar(8);
	vlargo smallint:=0;
	l_s1 smallint:= 0;
    l_s2 smallint:= 0;
    l_s3 smallint:= 0;
    l_manz smallint:= 0;
    l_parc smallint:= 0;
    sep varchar(1);
BEGIN
	-- Recupero el largo de cada campo de la configuracion de nc
    -- No se utilizar caracter de relleno, se separan los valores que intervienen con guiones
    sep = '-';
    
	For vnombre,vlargo In Select campo,max_largo
      From sam.config_inm_nc Where aplica=true Loop
		If vnombre='s1' Then l_s1:=vlargo; End If;
		If vnombre='s2' Then l_s2:=vlargo; End If;
		If vnombre='s3' Then l_s3:=vlargo; End If;
		If vnombre='manz' Then l_manz:=vlargo; End If;
		If vnombre='parc' Then l_parc:=vlargo; End If;
	End Loop;
    Select Into vs1, vs2, vs3, vmanz, vparc
      i.s1, i.s2, i.s3, i.manz, i.parc
	  from inm i where i.obj_id = _obj_id;

    nc:= case when l_s1>0 then trim(vs1)||sep else '' end
      || case when l_s2>0 then trim(vs2)||sep else '' end
      || case when l_s3>0 then trim(vs3)||sep else '' end
      || case when l_manz>0 then trim(vmanz)||sep else '' end
      || case when l_parc>0 then trim(vparc) else '' end;

    if nc is null then nc= ''; end if;
	return nc;
END;
$$;


ALTER FUNCTION sam.uf_inm_armar_nc_guiones(_obj_id character varying) OWNER TO postgres;

--
-- TOC entry 860 (class 1255 OID 5282869)
-- Name: uf_inm_armar_nc_guiones(character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_inm_armar_nc_guiones(_s1 character varying, _s2 character varying, _s3 character varying, _manz character varying, _parc character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
	nc varchar(25);
	vnombre varchar(8);
	vlargo smallint:=0;
	l_s1 smallint:= 0;
        l_s2 smallint:= 0;
        l_s3 smallint:= 0;
        l_manz smallint:= 0;
        l_parc smallint:= 0;
        sep varchar(1);
BEGIN
	-- Recupero el largo de cada campo de la configuracion de nc
    -- No se utilizar caracter de relleno, se separan los valores que intervienen con guiones y otro separador
    sep = '-';
    
	For vnombre,vlargo In Select campo,max_largo
      From sam.config_inm_nc Where aplica=true Loop
		If vnombre='s1' Then l_s1:=vlargo; End If;
		If vnombre='s2' Then l_s2:=vlargo; End If;
		If vnombre='s3' Then l_s3:=vlargo; End If;
		If vnombre='manz' Then l_manz:=vlargo; End If;
		If vnombre='parc' Then l_parc:=vlargo; End If;
	End Loop;

    nc:= case when l_s1>0 then trim(_s1)||sep else '' end
      || case when l_s2>0 then trim(_s2)||sep else '' end
      || case when l_s3>0 then trim(_s3)||sep else '' end
      || case when l_manz>0 then trim(_manz)||sep else '' end
      || case when l_parc>0 then trim(_parc) else '' end;

	return nc;
END;
$$;


ALTER FUNCTION sam.uf_inm_armar_nc_guiones(_s1 character varying, _s2 character varying, _s3 character varying, _manz character varying, _parc character varying) OWNER TO postgres;

--
-- TOC entry 861 (class 1255 OID 5282870)
-- Name: uf_inm_armar_ncc(integer, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_inm_armar_ncc(_calle_id integer, _mz1_s1 character varying, _mz1_s2 character varying, _mz1_s3 character varying, _mz1_lmanz character varying, _mz1_nmanz character varying, _mz2_s1 character varying, _mz2_s2 character varying, _mz2_s3 character varying, _mz2_lmanz character varying, _mz2_nmanz character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
	ncc varchar(40);
	vnombre varchar(8);
	vlargo smallint:=0;
	l_s1 smallint:= 0;
    l_s2 smallint:= 0;
    l_s3 smallint:= 0;
    l_nmanz smallint:= 0;
BEGIN
	-- Recupero el largo de cada campo de la configuracion de nc
    -- El caracter de relleno siempre es '0'
	For vnombre,vlargo In Select campo,max_largo
      From sam.config_inm_nc Where aplica=true Loop
		If vnombre='s1' Then l_s1:=vlargo; End If;
		If vnombre='s2' Then l_s2:=vlargo; End If;
		If vnombre='s3' Then l_s3:=vlargo; End If;
		If vnombre='manz' Then l_nmanz:=vlargo; End If;
	End Loop;
    ncc := lpad(cast(_calle_id as varchar(6)),6,'0')
		|| lpad(ltrim(_mz1_s1),l_s1,'0')
        || lpad(ltrim(_mz1_s2),l_s2,'0')
		|| lpad(ltrim(_mz1_s3),l_s3,'0')
        || lpad(ltrim(_mz1_nmanz),l_nmanz,'0')
		|| lpad(ltrim(_mz2_s1),l_s1,'0')
        || lpad(ltrim(_mz2_s2),l_s2,'0')
		|| lpad(ltrim(_mz2_s3),l_s3,'0')
        || lpad(ltrim(_mz2_nmanz),l_nmanz,'0');

	return ncc;
END;
$$;


ALTER FUNCTION sam.uf_inm_armar_ncc(_calle_id integer, _mz1_s1 character varying, _mz1_s2 character varying, _mz1_s3 character varying, _mz1_lmanz character varying, _mz1_nmanz character varying, _mz2_s1 character varying, _mz2_s2 character varying, _mz2_s3 character varying, _mz2_lmanz character varying, _mz2_nmanz character varying) OWNER TO postgres;

--
-- TOC entry 5686 (class 0 OID 0)
-- Dependencies: 861
-- Name: FUNCTION uf_inm_armar_ncc(_calle_id integer, _mz1_s1 character varying, _mz1_s2 character varying, _mz1_s3 character varying, _mz1_lmanz character varying, _mz1_nmanz character varying, _mz2_s1 character varying, _mz2_s2 character varying, _mz2_s3 character varying, _mz2_lmanz character varying, _mz2_nmanz character varying); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_inm_armar_ncc(_calle_id integer, _mz1_s1 character varying, _mz1_s2 character varying, _mz1_s3 character varying, _mz1_lmanz character varying, _mz1_nmanz character varying, _mz2_s1 character varying, _mz2_s2 character varying, _mz2_s3 character varying, _mz2_lmanz character varying, _mz2_nmanz character varying) IS 'Genera la nomenclatura de Cuadra para los Ejes de Calle.
Parámetros:
  calle_id integer: Código de Calle.
  mz1_s1 varchar: s1 de la Manzana 1.
  mz1_s2 varchar: s1 de la Manzana 1.
  mz1_s3 varchar: s1 de la Manzana 1.
  mz1_lmanz varchar: Letra de la Manzana 1.
  mz1_nmanz varchar: Número de la Manzana 1.
  mz2_s1 varchar: s1 de la Manzana 2.
  mz2_s2 varchar: s1 de la Manzana 2.
  mz2_s3 varchar: s1 de la Manzana 2.
  mz2_lmanz varchar: Letra de la Manzana 2.
  mz2_nmanz varchar: Número de la Manzana 2.';


--
-- TOC entry 862 (class 1255 OID 5282871)
-- Name: uf_inm_armar_ncm(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_inm_armar_ncm(_s1 character varying, _s2 character varying, _s3 character varying, _manz character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
	ncm varchar(26);
	vnombre varchar(8);
	vlargo smallint:=0;
	l_s1 smallint:= 0;
    l_s2 smallint:= 0;
    l_s3 smallint:= 0;
    l_manz smallint:= 0;
BEGIN
	-- Recupero el largo de cada campo de la configuracion de nc
    -- El caracter de relleno siempre es '0'
	For vnombre,vlargo In Select campo,max_largo
      From sam.config_inm_nc Where aplica=true Loop
		If vnombre='s1' Then l_s1:=vlargo; End If;
		If vnombre='s2' Then l_s2:=vlargo; End If;
		If vnombre='s3' Then l_s3:=vlargo; End If;
		If vnombre='manz' Then l_manz:=vlargo; End If;
	End Loop;
	ncm:= lpad(ltrim(_s1),l_s1,'0')
        || lpad(ltrim(_s2),l_s2,'0')
		|| lpad(ltrim(_s3),l_s3,'0')
        || lpad(ltrim(_manz),l_manz,'0');

	return ncm;
END;
$$;


ALTER FUNCTION sam.uf_inm_armar_ncm(_s1 character varying, _s2 character varying, _s3 character varying, _manz character varying) OWNER TO postgres;

--
-- TOC entry 5687 (class 0 OID 0)
-- Dependencies: 862
-- Name: FUNCTION uf_inm_armar_ncm(_s1 character varying, _s2 character varying, _s3 character varying, _manz character varying); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_inm_armar_ncm(_s1 character varying, _s2 character varying, _s3 character varying, _manz character varying) IS 'Devuelve la nomenclatura de manzana desarmada:
  s1 varchar: s1 de la Manzana.
  s2 varchar: s1 de la Manzana.
  s3 varchar: s1 de la Manzana.
  lmanz varchar: Letra de la Manzana.
  nmanz varchar: Número de la Manzana.
Parámetros: ncm  
';


--
-- TOC entry 845 (class 1255 OID 5282872)
-- Name: uf_inm_armar_ncm_guiones(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_inm_armar_ncm_guiones(_s1 character varying, _s2 character varying, _s3 character varying, _manz character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
	ncm varchar(26);
	vnombre varchar(8);
	vlargo smallint:=0;
	l_s1 smallint:= 0;
    l_s2 smallint:= 0;
    l_s3 smallint:= 0;
    l_manz smallint:= 0;
BEGIN
	-- Recupero el largo de cada campo de la configuracion de nc
    -- El caracter de relleno siempre es '0'
	For vnombre,vlargo In Select campo,max_largo
      From sam.config_inm_nc Where aplica=true Loop
		If vnombre='s1' Then l_s1:=vlargo; End If;
		If vnombre='s2' Then l_s2:=vlargo; End If;
		If vnombre='s3' Then l_s3:=vlargo; End If;
		If vnombre='manz' Then l_manz:=vlargo; End If;
	End Loop;
    ncm:= _s1
      || case when l_s2>0 then '-'||ltrim(_s2) else '' end
      || case when l_s3>0 then '-'||ltrim(_s3) else '' end
      || case when l_manz>0 then '-'||ltrim(_manz) else '' end;

	return ncm;
END;
$$;


ALTER FUNCTION sam.uf_inm_armar_ncm_guiones(_s1 character varying, _s2 character varying, _s3 character varying, _manz character varying) OWNER TO postgres;

--
-- TOC entry 5688 (class 0 OID 0)
-- Dependencies: 845
-- Name: FUNCTION uf_inm_armar_ncm_guiones(_s1 character varying, _s2 character varying, _s3 character varying, _manz character varying); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_inm_armar_ncm_guiones(_s1 character varying, _s2 character varying, _s3 character varying, _manz character varying) IS 'Genera la nomenclatura de Manzana con guiones.
Parámetros:
  s1 varchar: s1 de la Manzana.
  s2 varchar: s1 de la Manzana.
  s3 varchar: s1 de la Manzana.
  lmanz varchar: Letra de la Manzana.
  nmanz varchar: Número de la Manzana.
';
	 
--
-- TOC entry 768 (class 1255 OID 5282738)
-- Name: uf_code128c(character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_code128c(tcstring character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
	lcStart text;
    lcStop text;
    lcRet text;
    lcCheck text;
    lcCar text;
    lnLong smallint;
    lnI smallint;
    lnCheckSum smallint;
    lnAsc smallint;
    numero integer;
begin
  --------------------------------------------------------
  -- Convierte un string para ser impreso con
  -- fuente True Type "PF Barcode 128"
  -- Solo caracteres numéricos
  -- USO: sam.uf_code128c('1234567890')
  -- RETORNA: Caracter
  --------------------------------------------------------
  lcStart := '‰'; --CHR(105 + 32);
  lcStop := 'Š'; --CHR(106 + 32);
  lnCheckSum := 105; -- ASCII(lcStart) - 32;
  lcRet := TRIM(tcString);
  lnLong := LENGTH(lcRet);

  If (lnLong > 0) Then 
    
	--- La longitud debe ser par
	IF (lnLong % 2) <> 0 Then
        lcRet := '0' || lcRet;
        lnLong := LENGTH(lcRet);
	End If;

    --- Convierto los pares a caracteres
    lcCar := '';
    lnI := 1;
    WHILE lnI<lnLong Loop
    	lcCar := lcCar || chr_ansi(Cast(SUBSTR(lcRet,lnI,2) as smallint) + 32);
        numero := Cast(SUBSTR(lcRet,lnI,2) as smallint) + 32;
        --raise notice 'numero: %',numero;
        lnI := lnI + 2;
    End Loop;

	--raise notice 'lcCar: %',lcCar;
    
    lcRet := lcCar;

    lnLong := LENGTH(lcRet);
    FOR lnI IN 1..lnLong Loop
        lnAsc := ascii_ansi(SUBSTR(lcRet,lnI,1)) - 32;
        --raise notice 'lnAsc: %',lnAsc;
        lnCheckSum := lnCheckSum + (lnAsc * lnI);
    End Loop;

	--raise notice 'lnCheckSum: %',lnCheckSum;
    
    lcCheck := chr_ansi((lnCheckSum % 103) + 32);
    lcRet := lcStart || lcRet || lcCheck || lcStop;
    --lcRet := lcRet || lcCheck ;

    --- Esto es para cambiar los espacios y caracteres invalidos
    lcRet := replace(lcRet,CHR(32),'è');	--  32 x 232
    lcRet := replace(lcRet,CHR(127),'À');	-- 127 x 192
    lcRet := replace(lcRet,'€','Á');		-- 128 x 193

  End If;
  
  Return lcRet;

end
$$;


ALTER FUNCTION sam.uf_code128c(tcstring character varying) OWNER TO postgres;

--
-- TOC entry 5660 (class 0 OID 0)
-- Dependencies: 768
-- Name: FUNCTION uf_code128c(tcstring character varying); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_code128c(tcstring character varying) IS 'Devuelve la codificación Bar128c';


--
-- TOC entry 521 (class 1259 OID 5285742)
-- Name: v_caja; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_caja AS
 SELECT c.caja_id,
    c.nombre AS caja_nom,
    t.teso_id AS cod,
    t.nombre,
    u.nombre AS cajero_nom,
    s1.nombre AS sup1_nom,
    s2.nombre AS sup2_nom,
    ti.nombre AS tipo_nom,
    td.nombre AS destino_nom,
        CASE c.validar
            WHEN 0 THEN 'NO'::text
            ELSE 'SI'::text
        END AS validar,
        CASE c.copia
            WHEN 0 THEN 'NO'::text
            ELSE 'SI'::text
        END AS copia,
        CASE c.resumen
            WHEN 0 THEN 'NO'::text
            ELSE 'SI'::text
        END AS resumen,
    te.nombre AS est_nom,
        CASE c.est
            WHEN 'A'::text THEN 'SI'::text
            ELSE 'NO'::text
        END AS activa
   FROM ((((((((public.caja c
     JOIN public.caja_tesoreria t ON ((c.teso_id = t.teso_id)))
     LEFT JOIN sam.sis_usuario u ON ((c.usr_id = u.usr_id)))
     LEFT JOIN sam.sis_usuario s1 ON ((c.sup1 = s1.usr_id)))
     LEFT JOIN sam.sis_usuario s2 ON ((c.sup2 = s2.usr_id)))
     JOIN public.caja_tipo ti ON ((c.tipo = ti.cod)))
     LEFT JOIN public.caja_estado e ON (((c.caja_id = e.caja_id) AND (e.fecha = ( SELECT max(caja_estados.fecha) AS max
           FROM public.caja_estado caja_estados
          WHERE (caja_estados.caja_id = e.caja_id))))))
     LEFT JOIN public.caja_test te ON ((e.est = te.cod)))
     LEFT JOIN public.caja_tdestino td ON ((c.destino = td.cod)))
  WHERE (t.est = 'A'::bpchar);


ALTER TABLE public.v_caja OWNER TO postgres;

--
-- TOC entry 522 (class 1259 OID 5285747)
-- Name: v_caja_cheque_cartera; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_caja_cheque_cartera AS
 SELECT c.cart_id,
    c.nrocheque,
    c.monto,
    c.bco_ent,
    c.bco_suc,
    c.bco_cta,
    COALESCE(e.nombre, ''::character varying) AS bco_ent_nom,
    c.titular,
    c.plan_id,
    c.plan_id2,
    c.est,
    c.fchalta,
    c.fchcobro
   FROM (public.caja_cheque_cartera c
     LEFT JOIN public.banco_entidad e ON ((c.bco_ent = e.bco_ent)));


ALTER TABLE public.v_caja_cheque_cartera OWNER TO postgres;

--
-- TOC entry 523 (class 1259 OID 5285751)
-- Name: v_caja_estado; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_caja_estado AS
 SELECT c.teso_id,
    c.caja_id,
    c.nombre AS caja_nom,
    u.apenom AS cajero,
    COALESCE((e.est)::integer, (-1)) AS est,
    COALESCE(t.nombre, ''::character varying) AS est_nom,
    e.fecha,
    COALESCE(u1.apenom, ''::character varying) AS apesup,
    e.fchapesup,
    COALESCE(u2.apenom, ''::character varying) AS apecaj,
    e.fchapecaj,
    COALESCE(u3.apenom, ''::character varying) AS ciecaj,
    e.fchciecaj,
    COALESCE(u4.apenom, ''::character varying) AS ciesup,
    e.fchciesup
   FROM (((((((public.caja c
     LEFT JOIN sam.sis_usuario u ON ((c.usr_id = u.usr_id)))
     LEFT JOIN public.caja_estado e ON (((c.caja_id = e.caja_id) AND (e.fecha = ( SELECT max(caja_estado.fecha) AS max
           FROM public.caja_estado
          WHERE (caja_estado.caja_id = c.caja_id))))))
     LEFT JOIN public.caja_test t ON ((e.est = t.cod)))
     LEFT JOIN sam.sis_usuario u1 ON ((e.apesup = u1.usr_id)))
     LEFT JOIN sam.sis_usuario u2 ON ((e.apecaj = u2.usr_id)))
     LEFT JOIN sam.sis_usuario u3 ON ((e.ciecaj = u3.usr_id)))
     LEFT JOIN sam.sis_usuario u4 ON ((e.ciesup = u4.usr_id)));


ALTER TABLE public.v_caja_estado OWNER TO postgres;

--
-- TOC entry 524 (class 1259 OID 5285756)
-- Name: v_caja_opera; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_caja_opera AS
 SELECT o.opera,
    o.caja_id,
    c.nombre AS caja_nom,
    t.nombre AS teso_nom,
    o.fecha,
    o.lote,
    o.cant,
    o.monto,
    o.fchrecep,
    COALESCE(sum(
        CASE
            WHEN (m.monto > (0)::numeric) THEN m.monto
            ELSE (0)::numeric
        END), (0)::numeric) AS entregado,
    COALESCE(sum(
        CASE
            WHEN (m.monto < (0)::numeric) THEN m.monto
            ELSE (0)::numeric
        END), (0)::numeric) AS vuelto,
    o.ctacte_id,
    m.fchcobro,
    o.est
   FROM (((public.caja_opera o
     LEFT JOIN public.caja c ON ((o.caja_id = c.caja_id)))
     LEFT JOIN public.caja_tesoreria t ON ((c.teso_id = t.teso_id)))
     LEFT JOIN public.caja_opera_mdp m ON ((o.opera = m.opera)))
  GROUP BY o.opera, o.caja_id, c.nombre, t.nombre, o.fecha, o.lote, o.cant, o.monto, o.fchrecep, o.ctacte_id, m.fchcobro, o.est;


ALTER TABLE public.v_caja_opera OWNER TO postgres;

--
-- TOC entry 686 (class 1259 OID 5486571)
-- Name: v_caja_opera_mdp; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_caja_opera_mdp AS
 SELECT m.opera,
    o.caja_id,
    o.fecha,
    m.orden,
    m.mdp,
    t.nombre AS mdp_nom,
    t.tipo AS mdp_tipo,
    m.comprob,
    m.cant,
    m.cotiza,
    m.monto,
    m.bco_cta,
    m.bco_suc,
    m.bco_ent,
    COALESCE(e.nombre, ''::character varying) AS bco_ent_nom,
    m.titular,
    COALESCE(ct.nombre, ''::character varying) AS tcta_nom,
    m.bcocta_id,
    m.fchcobro,
    o.est,
    tt.lista_ticket
   FROM (((((public.caja_opera o
     LEFT JOIN public.caja_opera_mdp m ON ((m.opera = o.opera)))
     LEFT JOIN public.caja_mdp t ON ((m.mdp = t.mdp)))
     LEFT JOIN public.banco_entidad e ON ((m.bco_ent = e.bco_ent)))
     LEFT JOIN public.banco_tcuenta ct ON ((m.tcta = ct.cod)))
     JOIN ( SELECT t_1.opera,
            string_agg((t_1.ticket)::text, '-'::text) AS lista_ticket
           FROM public.caja_ticket t_1
          GROUP BY t_1.opera) tt ON ((m.opera = tt.opera)));


ALTER TABLE public.v_caja_opera_mdp OWNER TO postgres;

--
-- TOC entry 525 (class 1259 OID 5285766)
-- Name: v_caja_opera_mdp_agrupa; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_caja_opera_mdp_agrupa AS
 SELECT m.opera,
    m.mdp,
    t.nombre AS mdp_nom,
    sum(
        CASE
            WHEN (m.monto > (0)::numeric) THEN m.monto
            ELSE (0)::numeric
        END) AS entrega,
    sum(
        CASE
            WHEN (m.monto < (0)::numeric) THEN abs(m.monto)
            ELSE (0)::numeric
        END) AS vuelto
   FROM (public.caja_opera_mdp m
     LEFT JOIN public.caja_mdp t ON ((m.mdp = t.mdp)))
  GROUP BY m.opera, m.mdp, t.nombre
  ORDER BY m.opera, t.nombre;


ALTER TABLE public.v_caja_opera_mdp_agrupa OWNER TO postgres;

--
-- TOC entry 526 (class 1259 OID 5285771)
-- Name: v_caja_ticket; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_caja_ticket AS
 SELECT ct.ticket,
    ct.opera,
    ct.fecha,
    ((date_part('hour'::text, ct.hora) || ':'::text) || lpad((date_part('minute'::text, ct.hora))::text, 2, '0'::text)) AS hora,
    ct.caja_id,
    c.nombre AS caja_nom,
    c.teso_id,
    COALESCE(te.nombre, ''::character varying) AS teso_nom,
    ct.trib_id,
    t.nombre_redu AS trib_nom,
    t.tipo AS trib_tipo,
    COALESCE(tb.nombre_redu, ''::character varying) AS tobj_nom,
    ct.obj_id,
    COALESCE(o.nombre, ''::character varying) AS obj_nom,
    ct.subcta,
    ct.anio,
    ct.cuota,
    ct.faci_id,
    ct.num,
    COALESCE(p.nombre, ' '::character varying) AS num_nom,
    ct.monto,
    ct.est,
    ct.ctacte_id,
    ct.obs,
    m.mdps
   FROM (((((((public.caja_ticket ct
     JOIN public.caja c ON ((ct.caja_id = c.caja_id)))
     LEFT JOIN public.caja_tesoreria te ON ((c.teso_id = te.teso_id)))
     JOIN public.trib t ON ((ct.trib_id = t.trib_id)))
     LEFT JOIN public.objeto o ON (((ct.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.objeto_tipo tb ON ((o.tobj = tb.cod)))
     LEFT JOIN public.objeto p ON (((ct.num)::text = (p.obj_id)::text)))
     LEFT JOIN ( SELECT o_1.opera,
            string_agg(DISTINCT (m_1.tipo)::text, ' '::text) AS mdps
           FROM (public.caja_opera_mdp o_1
             JOIN public.caja_mdp m_1 ON ((o_1.mdp = m_1.mdp)))
          GROUP BY o_1.opera) m ON ((ct.opera = m.opera)));


ALTER TABLE public.v_caja_ticket OWNER TO postgres;

--
-- TOC entry 527 (class 1259 OID 5285776)
-- Name: v_caja_ticket_det; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_caja_ticket_det AS
 SELECT d.ticket,
    d.cta_id,
    c.nombre_redu AS cta_nom,
    d.monto
   FROM (public.caja_ticket_det d
     JOIN public.cuenta c ON ((d.cta_id = c.cta_id)));


ALTER TABLE public.v_caja_ticket_det OWNER TO postgres;

--
-- TOC entry 528 (class 1259 OID 5285780)
-- Name: v_caja_ticket_item; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_caja_ticket_item AS
 SELECT t.ticket,
    t.item_id,
    i.nombre AS item_nom,
    t.cant,
    t.monto
   FROM (public.caja_ticket_item t
     JOIN public.item i ON ((t.item_id = i.item_id)));


ALTER TABLE public.v_caja_ticket_item OWNER TO postgres;

--
-- TOC entry 529 (class 1259 OID 5285784)
-- Name: v_caja_ticket_plan; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_caja_ticket_plan AS
 SELECT d.ticket,
    d.cta_id,
    c.nombre_redu AS item_nom,
    d.monto
   FROM (public.caja_ticket_det d
     JOIN public.cuenta c ON ((d.cta_id = c.cta_id)))
  WHERE (c.tcta = ANY (ARRAY[2, 3]))
UNION
 SELECT t.ticket,
    0 AS cta_id,
    'CAPITAL'::character varying AS item_nom,
    p.capital AS monto
   FROM (public.caja_ticket t
     JOIN public.plan_cuota p ON ((((t.trib_id = 1) AND (t.anio = p.plan_id)) AND (t.cuota = p.cuota))))
UNION
 SELECT t.ticket,
    0 AS cta_id,
    'SELLADO'::character varying AS item_nom,
    p.sellado AS monto
   FROM ((public.caja_ticket t
     JOIN public.plan p ON (((t.trib_id = 1) AND (t.anio = p.plan_id))))
     JOIN public.plan_cuota pc ON ((((p.plan_id = pc.plan_id) AND (t.cuota = pc.cuota)) AND (((p.anticipo > (0)::numeric) AND (pc.cuota = 0)) OR ((p.anticipo = (0)::numeric) AND (pc.cuota = 1))))))
  WHERE (p.sellado > (0)::numeric)
UNION
 SELECT t.ticket,
    0 AS cta_id,
    'FINANCIACION'::character varying AS item_nom,
    p.financia AS monto
   FROM (public.caja_ticket t
     JOIN public.plan_cuota p ON ((((t.trib_id = 1) AND (t.anio = p.plan_id)) AND (t.cuota = p.cuota))))
  WHERE (p.financia > (0)::numeric);


ALTER TABLE public.v_caja_ticket_plan OWNER TO postgres;

--
-- TOC entry 176 (class 1259 OID 5283710)
-- Name: seq_muni_ofi_id; Type: SEQUENCE; Schema: sam; Owner: postgres
--

CREATE SEQUENCE sam.seq_muni_ofi_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE sam.seq_muni_ofi_id OWNER TO postgres;

--
-- TOC entry 177 (class 1259 OID 5283712)
-- Name: muni_oficina; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.muni_oficina (
    ofi_id smallint DEFAULT nextval('sam.seq_muni_ofi_id'::regclass) NOT NULL,
    nombre character varying(35) NOT NULL,
    resp character varying(45),
    sec_id smallint,
    part_id integer DEFAULT 0 NOT NULL,
    fchmod timestamp without time zone,
    usrmod smallint
);


ALTER TABLE sam.muni_oficina OWNER TO postgres;

--
-- TOC entry 8403 (class 0 OID 0)
-- Dependencies: 177
-- Name: TABLE muni_oficina; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.muni_oficina IS 'DISTINTAS OFICINAS MUNICIPALES';


--
-- TOC entry 8404 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN muni_oficina.ofi_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_oficina.ofi_id IS 'IDENTIFICADOR DE OFICINAS';


--
-- TOC entry 8405 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN muni_oficina.nombre; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_oficina.nombre IS 'NOMBRE ';


--
-- TOC entry 8406 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN muni_oficina.resp; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_oficina.resp IS 'NOMBRE DEL RESPONSABLE';


--
-- TOC entry 8407 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN muni_oficina.sec_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_oficina.sec_id IS 'SECRETARIA';


--
-- TOC entry 530 (class 1259 OID 5285789)
-- Name: v_caja_ticket_rec; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_caja_ticket_rec AS
 SELECT t.ticket,
    r.recibo,
    to_char((r.fecha)::timestamp with time zone, 'DD/MM/YYYY'::text) AS fecha,
    r.acta,
    COALESCE(i.nombre, ''::character varying) AS item_nom,
    COALESCE(o.nombre, ''::character varying) AS area_nom,
    r.monto
   FROM (((public.caja_ticket t
     JOIN public.ctacte_rec r ON ((t.ctacte_id = r.ctacte_id)))
     LEFT JOIN public.item i ON ((r.item_id = i.item_id)))
     LEFT JOIN sam.muni_oficina o ON ((r.area = o.ofi_id)));


ALTER TABLE public.v_caja_ticket_rec OWNER TO postgres;

--
-- TOC entry 531 (class 1259 OID 5285794)
-- Name: v_calc_multa; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_calc_multa AS
 SELECT m.trib_id,
    t.nombre AS trib_nom,
    m.perdesde,
    (("left"((m.perdesde)::text, 4) || '-'::text) || "right"((m.perdesde)::text, 3)) AS perdesde_format,
    m.perhasta,
    (("left"((m.perhasta)::text, 4) || '-'::text) || "right"((m.perhasta)::text, 3)) AS perhasta_format,
    m.tipo,
    tc.nombre AS tipo_nom,
    m.montodesde,
    m.montohasta,
    m.item_id,
    i.nombre AS item_nom,
    m.tcalculo,
    f.nombre AS tcalculo_nom,
    m.valor,
    m.alicuota,
    m.finmes,
    m.diasvenc,
    m.quita,
    m.valormaximo
   FROM ((((public.calc_multa m
     LEFT JOIN public.item i ON ((m.item_id = i.item_id)))
     LEFT JOIN public.trib t ON ((m.trib_id = t.trib_id)))
     LEFT JOIN public.comer_tipo tc ON ((m.tipo = tc.cod)))
     LEFT JOIN public.calc_multa_tfcalculo f ON ((m.tcalculo = f.cod)));


ALTER TABLE public.v_calc_multa OWNER TO postgres;

--
-- TOC entry 532 (class 1259 OID 5285799)
-- Name: v_calle; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_calle AS
 SELECT c.calle_id,
    c.nombre,
    c.tcalle,
    t.nombre AS tcalle_nom,
    c.fchmod,
    c.usrmod,
    (((u.nombre)::text || ' - '::text) || to_char(c.fchmod, 'DD/MM/YYYY'::text)) AS modif
   FROM ((public.domi_calle c
     LEFT JOIN public.domi_tcalle t ON ((c.tcalle = t.cod)))
     LEFT JOIN sam.sis_usuario u ON ((c.usrmod = u.usr_id)));


ALTER TABLE public.v_calle OWNER TO postgres;

--
-- TOC entry 533 (class 1259 OID 5285804)
-- Name: v_domi; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_domi AS
 SELECT d.torigen,
    t.nombre AS torigen_nom,
    d.obj_id,
    d.id,
    ((((((
        CASE COALESCE(c.nombre, ''::character varying)
            WHEN ''::text THEN d.nomcalle
            ELSE c.nombre
        END)::text ||
        CASE d.puerta
            WHEN 0 THEN ''::text
            ELSE lpad((d.puerta)::text, 5, ' '::text)
        END) ||
        CASE COALESCE(ltrim((d.piso)::text), ''::text)
            WHEN ''::text THEN ''::text
            WHEN '0'::text THEN ''::text
            ELSE (' Piso: '::text || (d.piso)::text)
        END) ||
        CASE COALESCE(ltrim((d.dpto)::text), ''::text)
            WHEN ''::text THEN ''::text
            WHEN '0'::text THEN ''::text
            ELSE (' Dpto: '::text || (d.dpto)::text)
        END) ||
        CASE COALESCE(ltrim((d.det)::text), ''::text)
            WHEN ''::text THEN ''::text
            ELSE ((' ('::text || (d.det)::text) || ')'::text)
        END) ||
        CASE d.barr_id
            WHEN 0 THEN ''::text
            ELSE (' - B°: '::text || (b.nombre)::text)
        END) AS direccion,
    d.cp,
    d.loc_id AS loc,
    (((l.nombre)::text || ' - '::text) || (p.nombre)::text) AS locprov,
    d.calle_id,
        CASE d.nomcalle
            WHEN ''::text THEN c.nombre
            ELSE d.nomcalle
        END AS nomcalle,
    d.puerta,
    d.det,
    d.piso,
    d.dpto,
    d.barr_id,
    b.nombre AS barr_nom
   FROM (((((public.domi d
     LEFT JOIN public.domi_torigen t ON (((d.torigen)::text = (t.cod)::text)))
     LEFT JOIN public.domi_calle c ON ((d.calle_id = c.calle_id)))
     LEFT JOIN public.domi_localidad l ON ((d.loc_id = l.loc_id)))
     LEFT JOIN public.domi_provincia p ON ((l.prov_id = p.prov_id)))
     LEFT JOIN public.domi_barrio b ON ((d.barr_id = b.barr_id)));


ALTER TABLE public.v_domi OWNER TO postgres;

--
-- TOC entry 534 (class 1259 OID 5285809)
-- Name: v_cem; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_cem AS
 SELECT c.obj_id,
    c.cod_ant,
    o.nombre,
    c.cua_id,
    c.cue_id,
    c.tipo,
    COALESCE(t.nombre) AS tipo_nom,
    c.piso,
    c.fila,
    c.nume,
    c.bis,
    c.cat,
    c.deleg,
    g.nombre AS deleg_nom,
    c.tomo,
    c.folio,
    c.fchcompra,
    c.fchingreso,
    c.fchvenc,
    c.exenta,
    x.nombre AS exenta_nom,
    c.edicto,
    ((d.direccion || ' - '::text) || d.locprov) AS dompos_dir,
    ff.fallecidos,
    o.distrib,
    o.tdistrib,
    o.est,
    e.nombre AS est_nom,
    (o.fchalta)::date AS fchalta,
    (o.fchbaja)::date AS fchbaja,
    (o.fchmod)::date AS fchmod,
    o.num,
    op.nombre AS num_nom,
    o.obs,
    o.usrmod
   FROM ((((((((public.cem c
     JOIN public.objeto o ON (((c.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.objeto op ON (((o.num)::text = (op.obj_id)::text)))
     LEFT JOIN public.v_domi d ON ((((d.torigen)::text = 'OBJ'::text) AND ((d.obj_id)::text = (o.obj_id)::text))))
     LEFT JOIN ( SELECT f.obj_id,
            string_agg((f.apenom)::text, ', '::text) AS fallecidos
           FROM public.cem_fall f
          GROUP BY f.obj_id) ff ON (((c.obj_id)::text = (ff.obj_id)::text)))
     LEFT JOIN public.cem_tipo t ON (((c.tipo)::text = (t.cod)::text)))
     LEFT JOIN public.cem_tdeleg g ON ((c.deleg = g.cod)))
     LEFT JOIN public.cem_texenta x ON ((c.exenta = x.cod)))
     LEFT JOIN public.objeto_test e ON (((e.tobj = 4) AND (o.est = e.cod))));


ALTER TABLE public.v_cem OWNER TO postgres;

--
-- TOC entry 535 (class 1259 OID 5285814)
-- Name: v_cem_alq; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_cem_alq AS
 SELECT a.alq_id,
    a.obj_id,
    a.titulo,
    a.fchalq,
    a.fchini,
    a.fchfin,
    a.duracion,
    a.est,
    e.nombre AS est_nom,
    a.resp,
    o.nombre AS resp_nom,
    (a.fchmod)::date AS fchmod,
    a.usrmod
   FROM ((public.cem_alquiler a
     LEFT JOIN public.cem_talq_est e ON (((a.est)::text = (e.cod)::text)))
     LEFT JOIN public.objeto o ON (((a.resp)::text = (o.obj_id)::text)));


ALTER TABLE public.v_cem_alq OWNER TO postgres;

--
-- TOC entry 536 (class 1259 OID 5285819)
-- Name: v_cem_fall; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_cem_fall AS
 SELECT f.fall_id,
    COALESCE(f.obj_id, ''::character varying) AS obj_id,
    COALESCE(t.cua_id, ''::character varying) AS cua_id,
    COALESCE(t.cue_id, ''::character varying) AS cue_id,
    t.tipo,
    COALESCE(p.nombre, ''::character varying) AS tipo_nom,
    t.piso,
    t.fila,
    t.nume,
    t.bis,
    f.est,
    e.nombre AS est_nom,
    f.tdoc,
    td.nombre AS tdoc_nom,
    f.ndoc,
    f.apenom,
    f.fchnac,
    f.nacionalidad,
        CASE
            WHEN (((f.fchnac IS NULL) OR (f.fchdef IS NULL)) OR (f.fchnac > f.fchdef)) THEN 0
            ELSE ((floor((((f.fchdef - f.fchnac))::numeric / 365.25)))::smallint)::integer
        END AS edad,
    n.nombre AS nacionalidad_nom,
    f.sexo,
    f.estcivil,
    v.nombre AS estcivil_nom,
    f.domi,
    f.actadef,
    f.foliodef,
    f.fchinh,
    f.fchdef,
    f.causamuerte,
    c.nombre AS causamuerte_nom,
    f.procedencia,
    COALESCE(l.nombre, ''::character varying) AS procedencia_nom,
    COALESCE(f.med_nombre, ''::character varying) AS med_nombre,
    COALESCE(f.med_matricula, ''::character varying) AS med_matricula,
    COALESCE((f.emp_funebre)::integer, 0) AS emp_funebre,
    ef.nombre AS emp_funebre_nom,
    COALESCE(f.resp, ''::character varying) AS resp,
    COALESCE(o.nombre, ''::character varying) AS resp_nom,
    f.indigente,
    COALESCE(f.obs, ''::character varying) AS obs,
    (((COALESCE(u.nombre, ''::character varying))::text || ' - '::text) || to_char(f.fchmod, 'DD/MM/YYYY'::text)) AS modif
   FROM (((((((((((public.cem_fall f
     LEFT JOIN public.cem t ON (((f.obj_id)::text = (t.obj_id)::text)))
     LEFT JOIN public.cem_tipo p ON (((t.tipo)::text = (p.cod)::text)))
     LEFT JOIN public.cem_fall_test e ON (((f.est)::text = (e.cod)::text)))
     LEFT JOIN public.persona_tdoc td ON ((f.tdoc = td.cod)))
     LEFT JOIN public.persona_tnac n ON ((f.nacionalidad = n.cod)))
     LEFT JOIN public.persona_testcivil v ON ((f.estcivil = v.cod)))
     LEFT JOIN public.cem_tcausa c ON ((f.causamuerte = c.cod)))
     LEFT JOIN public.cem_tfunebre ef ON ((f.emp_funebre = ef.cod)))
     LEFT JOIN public.domi_localidad l ON ((f.procedencia = l.loc_id)))
     LEFT JOIN public.objeto o ON (((f.resp)::text = (o.obj_id)::text)))
     LEFT JOIN sam.sis_usuario u ON ((f.usrmod = u.usr_id)));


ALTER TABLE public.v_cem_fall OWNER TO postgres;

--
-- TOC entry 537 (class 1259 OID 5285824)
-- Name: v_cem_fall_serv; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_cem_fall_serv AS
 SELECT s.fall_id,
    f.apenom,
    s.orden,
    s.tserv,
    ts.nombre AS tserv_nom,
    s.fecha,
    s.acta,
    s.resp,
    o.nombre AS resp_nom,
    s.obj_id_ori,
    s.obj_id_dest,
    s.destino,
    s.obs,
    s.fchmod,
    s.usrmod
   FROM (((public.cem_fall_serv s
     LEFT JOIN public.cem_fall f ON ((s.fall_id = f.fall_id)))
     LEFT JOIN public.cem_fall_tserv ts ON (((s.tserv)::text = (ts.cod)::text)))
     LEFT JOIN public.objeto o ON (((s.resp)::text = (o.obj_id)::text)));


ALTER TABLE public.v_cem_fall_serv OWNER TO postgres;

--
-- TOC entry 538 (class 1259 OID 5285829)
-- Name: v_cem_fall_tserv; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_cem_fall_tserv AS
 SELECT t.cod,
    t.nombre,
    t.est_fin,
    e.nombre AS est_fin_nom,
    t.pedir_obj_dest,
    t.pedir_dest,
    t.fchmod,
    u.nombre AS usrmod_nom
   FROM ((public.cem_fall_tserv t
     LEFT JOIN public.cem_fall_test e ON (((t.est_fin)::text = (e.cod)::text)))
     LEFT JOIN sam.sis_usuario u ON ((t.usrmod = u.usr_id)));


ALTER TABLE public.v_cem_fall_tserv OWNER TO postgres;

--
-- TOC entry 539 (class 1259 OID 5285834)
-- Name: v_cem_talq; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_cem_talq AS
 SELECT DISTINCT t.cod,
    t.tipo,
    tt.nombre AS tipo_nom,
    t.cuadesde,
    cd.nombre AS cuadesde_nom,
    t.cuahasta,
    ch.nombre AS cuahasta_nom,
    t.cue_id,
    cp.nombre AS cue_nom,
    t.fila,
    t.cat,
    t.supdesde,
    t.suphasta,
    t.desde,
    t.hasta,
    t.duracion,
    t.fchmod,
    u.nombre AS usrmod_nom
   FROM (((((public.cem_talq t
     LEFT JOIN public.cem_tipo tt ON (((t.tipo)::text = (tt.cod)::text)))
     LEFT JOIN public.cem_cuadro cd ON ((btrim((t.cuadesde)::text) = btrim((cd.cua_id)::text))))
     LEFT JOIN public.cem_cuadro ch ON ((btrim((t.cuahasta)::text) = btrim((ch.cua_id)::text))))
     LEFT JOIN public.cem_cuerpo cp ON ((btrim((t.cue_id)::text) = btrim((cp.cue_id)::text))))
     LEFT JOIN sam.sis_usuario u ON ((t.usrmod = u.usr_id)));


ALTER TABLE public.v_cem_talq OWNER TO postgres;

--
-- TOC entry 678 (class 1259 OID 5317042)
-- Name: v_comer; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_comer AS
 SELECT o.obj_id,
    o.nombre,
    COALESCE(c.legajo, ''::character varying(10)) AS legajo,
    o.num,
    op.nombre AS num_nom,
    p.ndoc AS num_ndoc,
    p.iva,
    i.nombre AS iva_nom,
    p.cuit,
    p.ib,
    c.tipo,
    t.nombre AS tipo_nom,
    c.thab,
    h.nombre AS thab_nom,
    p.orgjuri,
    oj.nombre AS orgjuri_nom,
    p.tipoliq,
    tl.nombre AS tipoliq_nom,
    c.pi,
    c.alquila,
    c.cantemple,
    o.fchalta,
    c.fchhab,
    c.fchvenchab,
    o.fchbaja,
    c.supcub,
    c.supsemi,
    c.supdes,
    ((((((capa.nombre)::text || ' '::text) || (dpa.det)::text) ||
        CASE (dpa.puerta)::text
            WHEN '0'::text THEN ''::text
            ELSE (dpa.puerta)::text
        END) ||
        CASE
            WHEN (btrim((dpa.piso)::text) <> ALL (ARRAY[''::text, '0'::text])) THEN (' Piso: '::text || (dpa.piso)::text)
            ELSE ''::text
        END) ||
        CASE
            WHEN (btrim((dpa.dpto)::text) <> ALL (ARRAY[''::text, '0'::text])) THEN (' Dpto: '::text || (dpa.dpto)::text)
            ELSE ''::text
        END) AS dompar_dir,
    dpa.barr_id AS barrpar_id,
    bapa.nombre AS barrpar_nom,
    ((((((((((capo.nombre)::text || ' '::text) ||
        CASE (dpo.det)::text
            WHEN ''::text THEN ''::text
            ELSE ((' '::text || (dpo.det)::text) || ' '::text)
        END) ||
        CASE (dpo.puerta)::text
            WHEN '0'::text THEN ''::text
            ELSE (dpo.puerta)::text
        END) ||
        CASE
            WHEN (btrim((dpo.piso)::text) <> ALL (ARRAY[''::text, '0'::text])) THEN (' Piso: '::text || (dpo.piso)::text)
            ELSE ''::text
        END) ||
        CASE
            WHEN (btrim((dpo.dpto)::text) <> ALL (ARRAY[''::text, '0'::text])) THEN (' Dpto: '::text || (dpo.dpto)::text)
            ELSE ''::text
        END) || ' ('::text) || ((lpo.nombre)::text || ' - '::text)) || (prpo.nombre)::text) || ')'::text) AS dompos_dir,
    c.tel,
    c.mail,
    p.contador,
    uc.apenom AS contador_nom,
    c.zona,
    z.nombre AS zona_nom,
    c.inmueble,
    COALESCE(((('Inmueble: '::text || (oi.obj_id)::text) || ' - '::text) || (oi.obj_dato)::text), ''::text) AS inm_dato,
    c.rodados,
    COALESCE(((('Dominio: '::text || (ro.dominio)::text) || '-'::text) || COALESCE((((ra.marca_nom)::text || ' '::text) || (ra.modelo_nom)::text), (
        CASE
            WHEN ((ro.modelo_nom)::text = ''::text) THEN rm.nombre
            ELSE ro.modelo_nom
        END)::text)), ''::text) AS rodado_dato,
    o.est,
    ec.nombre AS est_nom,
    o.objunifica AS objetounifica,
    o.distrib,
    ud.nombre AS distrib_nom,
    COALESCE(ru.nombre, ''::character varying) AS rubro_nom,
    o.fchmod,
    o.usrmod,
    um.apenom AS usrmod_nom,
    o.obs
   FROM (((((((((((((((((((((((((((public.objeto o
     JOIN public.comer c ON (((o.obj_id)::text = (c.obj_id)::text)))
     LEFT JOIN public.objeto op ON (((o.num)::text = (op.obj_id)::text)))
     LEFT JOIN public.persona p ON (((o.num)::text = (p.obj_id)::text)))
     LEFT JOIN public.objeto_test ec ON (((ec.tobj = 2) AND (ec.cod = o.est))))
     LEFT JOIN public.comer_tiva i ON ((p.iva = i.cod)))
     LEFT JOIN public.comer_tipo t ON ((c.tipo = t.cod)))
     LEFT JOIN public.comer_thab h ON (((c.thab)::text = (h.cod)::text)))
     LEFT JOIN public.comer_torgjuri oj ON ((p.orgjuri = oj.cod)))
     LEFT JOIN public.comer_tliq tl ON (((p.tipoliq)::text = (tl.cod)::text)))
     LEFT JOIN public.domi dpa ON (((((dpa.torigen)::text = 'COM'::text) AND ((dpa.obj_id)::text = (c.obj_id)::text)) AND (dpa.id = 0))))
     LEFT JOIN public.domi_calle capa ON ((dpa.calle_id = capa.calle_id)))
     LEFT JOIN public.domi_barrio bapa ON ((dpa.barr_id = bapa.barr_id)))
     LEFT JOIN public.domi dpo ON (((((dpo.torigen)::text = 'OBJ'::text) AND ((dpo.obj_id)::text = (o.obj_id)::text)) AND (dpo.id = 0))))
     LEFT JOIN public.domi_calle capo ON ((dpo.calle_id = capo.calle_id)))
     LEFT JOIN public.domi_barrio bapo ON ((dpo.barr_id = bapo.barr_id)))
     LEFT JOIN public.domi_localidad lpo ON ((dpo.loc_id = lpo.loc_id)))
     LEFT JOIN public.domi_provincia prpo ON ((lpo.prov_id = prpo.prov_id)))
     LEFT JOIN sam.sis_usuario uc ON ((p.contador = uc.usr_id)))
     LEFT JOIN public.rodado ro ON (((c.rodados)::text = (ro.obj_id)::text)))
     LEFT JOIN public.rodado_aforo ra ON (((ro.aforo_id)::text = (ra.aforo_id)::text)))
     LEFT JOIN public.rodado_marca rm ON ((ro.marca = rm.cod)))
     LEFT JOIN public.objeto oi ON (((c.inmueble)::text = (o.obj_id)::text)))
     LEFT JOIN public.comer_tzona z ON ((c.zona = z.cod)))
     LEFT JOIN public.objeto_rubro cr ON (((((((c.obj_id)::text = (cr.obj_id)::text) AND ((cr.est)::text <> 'B'::text)) AND (cr.tipo = 1)) AND (((date_part('year'::text, ('now'::text)::date) * (1000)::double precision) + date_part('month'::text, ('now'::text)::date)) >= (cr.perdesde)::double precision)) AND (((date_part('year'::text, ('now'::text)::date) * (1000)::double precision) + date_part('month'::text, ('now'::text)::date)) <= (cr.perhasta)::double precision))))
     LEFT JOIN public.rubro ru ON (((cr.rubro_id)::text = (ru.rubro_id)::text)))
     LEFT JOIN sam.sis_usuario ud ON ((o.distrib = ud.usr_id)))
     LEFT JOIN sam.sis_usuario um ON ((o.usrmod = um.usr_id)));


ALTER TABLE public.v_comer OWNER TO postgres;

--
-- TOC entry 540 (class 1259 OID 5285844)
-- Name: v_comer_inm; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_comer_inm AS
 SELECT ci.obj_id,
    ci.inmueble,
    ci.subcta,
    o.obj_dato AS nc,
    d.direccion AS inmueble_dir,
    ci.porc,
    ci.est,
    ci.fchmod,
    ci.usrmod
   FROM (((public.comer_inm ci
     LEFT JOIN public.inm i ON (((ci.inmueble)::text = (i.obj_id)::text)))
     LEFT JOIN public.objeto o ON (((o.obj_id)::text = (i.obj_id)::text)))
     LEFT JOIN public.v_domi d ON ((((d.torigen)::text = 'INM'::text) AND ((d.obj_id)::text = (i.obj_id)::text))));


ALTER TABLE public.v_comer_inm OWNER TO postgres;

--
-- TOC entry 541 (class 1259 OID 5285849)
-- Name: v_comp; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_comp AS
 SELECT r.comp_id,
    r.expe,
    r.tipo,
    t.nombre AS tipo_nom,
    (r.fchalta)::date AS fchalta,
    (r.fchaplic)::date AS fchaplic,
    r.fchconsolida,
    (r.fchbaja)::date AS fchbaja,
    r.trib_ori,
    ot.nombre_redu AS trib_ori_nom,
    o.tobj AS tobj_ori,
    r.obj_ori,
    o.nombre AS obj_ori_nom,
    r.trib_dest,
    dt.nombre_redu AS trib_dest_nom,
    d.tobj AS tobj_dest,
    r.obj_dest,
    d.nombre AS obj_dest_nom,
    r.monto,
    r.monto_aplic,
    (r.monto - r.monto_aplic) AS saldo,
    r.est,
    e.nombre AS est_nom,
    r.obs,
    r.fchmod,
    r.usrmod,
    (((u.nombre)::text || ' - '::text) || to_char(r.fchmod, 'DD/MM/YYYY'::text)) AS modif
   FROM (((((((public.comp r
     JOIN public.comp_tipo t ON ((r.tipo = t.cod)))
     JOIN public.comp_test e ON (((r.est)::text = (e.cod)::text)))
     LEFT JOIN public.trib ot ON ((r.trib_ori = ot.trib_id)))
     LEFT JOIN public.objeto o ON (((r.obj_ori)::text = (o.obj_id)::text)))
     LEFT JOIN public.trib dt ON ((r.trib_dest = dt.trib_id)))
     LEFT JOIN public.objeto d ON (((r.obj_dest)::text = (d.obj_id)::text)))
     LEFT JOIN sam.sis_usuario u ON ((r.usrmod = u.usr_id)));


ALTER TABLE public.v_comp OWNER TO postgres;

--
-- TOC entry 542 (class 1259 OID 5285854)
-- Name: v_comp_aplic; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_comp_aplic AS
 SELECT r.comp_id,
    r.fecha,
    r.ctacte_id,
    c.obj_id,
    c.subcta,
    t.nombre_redu AS trib_nom,
    c.anio,
    c.cuota,
    r.monto_aplic AS montoaplic
   FROM ((public.comp_aplic r
     JOIN public.ctacte c ON ((r.ctacte_id = c.ctacte_id)))
     JOIN public.trib t ON ((c.trib_id = t.trib_id)));


ALTER TABLE public.v_comp_aplic OWNER TO postgres;

--
-- TOC entry 543 (class 1259 OID 5285859)
-- Name: v_comp_saldo; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_comp_saldo AS
 SELECT s.comp_id,
    s.ctacte_id,
    c.obj_id,
    c.subcta,
    t.nombre_redu AS trib_nom,
    c.anio,
    c.cuota,
    s.saldo,
    s.saldo_cub
   FROM ((public.comp_saldo s
     JOIN public.ctacte c ON ((s.ctacte_id = c.ctacte_id)))
     JOIN public.trib t ON ((c.trib_id = t.trib_id)));


ALTER TABLE public.v_comp_saldo OWNER TO postgres;

--
-- TOC entry 544 (class 1259 OID 5285864)
-- Name: v_ctacte_ajuste; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_ctacte_ajuste AS
 SELECT a.aju_id,
    c.trib_id,
    t.nombre_redu AS trib_nom,
    c.obj_id,
    o.nombre AS obj_nom,
    c.subcta,
    c.anio,
    c.cuota,
    a.expe,
    a.obs,
    a.fchmod,
    a.usrmod,
    u.apenom AS usrmod_nom,
    a.ctacte_id
   FROM ((((public.ctacte_ajuste a
     LEFT JOIN public.ctacte c ON ((a.ctacte_id = c.ctacte_id)))
     LEFT JOIN public.trib t ON ((c.trib_id = t.trib_id)))
     LEFT JOIN public.objeto o ON (((c.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN sam.sis_usuario u ON ((a.usrmod = u.usr_id)));


ALTER TABLE public.v_ctacte_ajuste OWNER TO postgres;

--
-- TOC entry 545 (class 1259 OID 5285869)
-- Name: v_ctacte_cambioest; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_ctacte_cambioest AS
 SELECT c.cambio_id,
    c.tipo,
    e.nombre AS tipo_nom,
    c.obj_id,
    o.nombre AS obj_nom,
    c.subcta,
    c.trib_id,
    t.nombre_redu AS trib_nom,
    c.perdesde,
    c.perhasta,
    c.est_orig,
    eo.nombre AS est_orig_nom,
    c.est_dest,
    ed.nombre AS est_dest_nom,
    c.expe,
    c.obs,
    c.fchmod,
    c.usrmod,
    u.apenom AS usrmod_nom
   FROM ((((((public.ctacte_cambioest c
     LEFT JOIN public.ctacte_cambioest_tipo e ON ((c.tipo = e.cod)))
     LEFT JOIN public.objeto o ON (((c.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.trib t ON ((c.trib_id = t.trib_id)))
     LEFT JOIN public.ctacte_test eo ON (((c.est_orig)::bpchar = eo.cod)))
     LEFT JOIN public.ctacte_test ed ON (((c.est_dest)::bpchar = ed.cod)))
     LEFT JOIN sam.sis_usuario u ON ((c.usrmod = u.usr_id)));


ALTER TABLE public.v_ctacte_cambioest OWNER TO postgres;

--
-- TOC entry 546 (class 1259 OID 5285874)
-- Name: v_ctacte_excep; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_ctacte_excep AS
 SELECT e.excep_id,
    e.ctacte_id,
    e.trib_id,
    t.nombre AS trib_nom,
    e.obj_id,
    o.nombre AS obj_nom,
    e.subcta,
    e.anio,
    e.cuota,
    e.tipo,
    c.nombre AS tipo_nom,
    e.fchusar,
    e.fchlimite,
    e.expe,
    e.obs,
    e.fchmod,
    e.usrmod,
    u.apenom AS usrmod_nom
   FROM ((((public.ctacte_excep e
     LEFT JOIN public.objeto o ON (((e.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.trib t ON ((e.trib_id = t.trib_id)))
     LEFT JOIN public.ctacte_tcta c ON ((e.tipo = c.cod)))
     LEFT JOIN sam.sis_usuario u ON ((e.usrmod = u.usr_id)));


ALTER TABLE public.v_ctacte_excep OWNER TO postgres;

--
-- TOC entry 547 (class 1259 OID 5285879)
-- Name: v_ctacte_pagocta; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_ctacte_pagocta AS
 SELECT p.pago_id,
    p.trib_id,
    t.nombre_redu AS trib_nom,
    p.obj_id,
    o.nombre AS obj_nom,
    p.subcta,
    p.anio,
    p.cuota,
    p.monto,
    p.est,
    p.obs,
    p.fchlimite,
    p.fchpago,
    p.fchmod,
    p.usrmod,
    u.apenom AS usrmod_nom
   FROM (((public.ctacte_pagocta p
     LEFT JOIN public.trib t ON ((p.trib_id = t.trib_id)))
     LEFT JOIN public.objeto o ON (((p.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN sam.sis_usuario u ON ((p.usrmod = u.usr_id)));


ALTER TABLE public.v_ctacte_pagocta OWNER TO postgres;

--
-- TOC entry 548 (class 1259 OID 5285884)
-- Name: v_ctacte_pagocta_det; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_ctacte_pagocta_det AS
 SELECT d.pago_id,
    d.cta_id,
    c.nombre_redu AS cta_nom,
    c.tcta,
    d.monto
   FROM (public.ctacte_pagocta_det d
     JOIN public.cuenta c ON ((d.cta_id = c.cta_id)));


ALTER TABLE public.v_ctacte_pagocta_det OWNER TO postgres;

--
-- TOC entry 549 (class 1259 OID 5285888)
-- Name: v_ctacte_pagocta_print; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_ctacte_pagocta_print AS
 SELECT p.pago_id,
    p.trib_id,
    t.nombre AS trib_nom,
    t.nombre_redu AS trib_nom_red,
    p.obj_id,
    o.nombre AS obj_nom,
    p.subcta,
    p.anio,
    p.cuota,
    p.monto,
    p.est,
    e.nombre AS est_nom,
    p.obs,
    p.fchlimite,
    p.fchpago,
    o.num,
    pe.nombre AS num_nom,
    ((((((ca.nombre)::text || ' '::text) || (d.det)::text) ||
        CASE (d.puerta)::text
            WHEN '0'::text THEN ''::text
            ELSE (d.puerta)::text
        END) ||
        CASE
            WHEN (btrim((d.piso)::text) <> ALL (ARRAY[''::text, '0'::text])) THEN (' Piso: '::text || (d.piso)::text)
            ELSE ''::text
        END) ||
        CASE
            WHEN (btrim((d.dpto)::text) <> ALL (ARRAY[''::text, '0'::text])) THEN (' Dpto: '::text || (d.piso)::text)
            ELSE ''::text
        END) AS domi,
    (
        CASE
            WHEN (bo.nombre IS NOT NULL) THEN (('Barrio: '::text || (bo.nombre)::text) || '. '::text)
            ELSE ''::text
        END || (d.det)::text) AS domi_det,
    (((l.nombre)::text || ' - '::text) || (pr.nombre)::text) AS codpos,
    bo.barr_id,
    bo.nombre AS barr_nom,
    sam.uf_caja_codbarra(10, p.obj_id, (p.subcta)::integer, p.pago_id, 0, p.monto, p.fchlimite) AS codbarra,
    sam.uf_code128c(sam.uf_caja_codbarra(10, p.obj_id, (p.subcta)::integer, p.pago_id, 0, p.monto, p.fchlimite)) AS codbarra_128c,
    p.fchmod,
    p.usrmod,
    u.apenom AS usrmod_nom
   FROM ((((((((((((public.ctacte_pagocta p
     LEFT JOIN public.trib t ON ((p.trib_id = t.trib_id)))
     LEFT JOIN public.objeto o ON (((p.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.inm i ON (((p.obj_id)::text = (i.obj_id)::text)))
     LEFT JOIN public.objeto pe ON (((o.num)::text = (pe.obj_id)::text)))
     LEFT JOIN public.domi d ON (((((d.torigen)::text = 'OBJ'::text) AND ((d.obj_id)::text = (p.obj_id)::text)) AND (d.id = 0))))
     LEFT JOIN public.domi_calle ca ON ((d.calle_id = ca.calle_id)))
     LEFT JOIN public.domi_barrio bo ON ((d.barr_id = bo.barr_id)))
     LEFT JOIN public.domi_barrio ba ON ((i.barr_id = ba.barr_id)))
     LEFT JOIN public.domi_localidad l ON ((d.loc_id = l.loc_id)))
     LEFT JOIN public.domi_provincia pr ON ((l.prov_id = pr.prov_id)))
     LEFT JOIN public.ctacte_test e ON ((p.est = e.cod)))
     LEFT JOIN sam.sis_usuario u ON ((p.usrmod = u.usr_id)));


ALTER TABLE public.v_ctacte_pagocta_print OWNER TO postgres;

--
-- TOC entry 550 (class 1259 OID 5285898)
-- Name: v_debito_adhe; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_debito_adhe AS
 SELECT a.adh_id,
    a.trib_id,
    t.nombre_redu AS trib_nom,
    a.obj_id,
    o.nombre AS obj_nom,
    o.obj_dato,
    COALESCE(d1.direccion, ''::text) AS dompar_dir,
    a.subcta,
    a.resp,
    a.resptdoc,
    td.nombre AS resptdoc_nom,
    a.respndoc,
    a.respsexo,
    a.caja_id,
    c.tipo AS caja_tipo,
    c.nombre AS caja_nom,
    a.temple,
    COALESCE(te.nombre, ''::character varying) AS temple_nom,
    a.temple_area,
    c.ext_bco_ent AS bco_ent,
    a.bco_suc,
    b.nombre AS bco_suc_nom,
    a.bco_tcta,
    bt.nombre AS bco_tcta_nom,
    a.tpago_nro,
    a.cbu,
    to_char(a.fchalta, 'DD/MM/YYYY'::text) AS fchalta,
    to_char(a.fchbaja, 'DD/MM/YYYY'::text) AS fchbaja,
    a.est,
    a.perdesde,
    a.perhasta,
    ((substr((a.perdesde)::text, 1, 4) || '-'::text) || substr((a.perdesde)::text, 5, 3)) AS per_desde,
    ((substr((a.perhasta)::text, 1, 4) || '-'::text) || substr((a.perhasta)::text, 5, 3)) AS per_hasta,
    a.obs,
    a.texto_id,
    tx.detalle AS texto_descr,
    (((u.nombre)::text || ' - '::text) || to_char(a.fchmod, 'DD/MM/YYYY'::text)) AS modif
   FROM ((((((((((public.debito_adhe a
     LEFT JOIN public.trib t ON ((a.trib_id = t.trib_id)))
     LEFT JOIN public.objeto o ON (((a.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.v_domi d1 ON ((((d1.torigen)::text = ANY (ARRAY['INM'::text, 'COM'::text])) AND ((d1.obj_id)::text = (a.obj_id)::text))))
     LEFT JOIN public.persona_tdoc td ON ((a.resptdoc = td.cod)))
     LEFT JOIN public.caja c ON ((a.caja_id = c.caja_id)))
     LEFT JOIN public.plan_temple te ON (((a.caja_id = te.caja_id) AND (a.temple = te.cod))))
     LEFT JOIN public.banco b ON (((b.bco_ent = c.ext_bco_ent) AND (a.bco_suc = b.bco_suc))))
     LEFT JOIN public.banco_tcuenta bt ON ((a.bco_tcta = bt.cod)))
     LEFT JOIN public.texto tx ON ((a.texto_id = tx.texto_id)))
     LEFT JOIN sam.sis_usuario u ON ((a.usrmod = u.usr_id)));


ALTER TABLE public.v_debito_adhe OWNER TO postgres;

--
-- TOC entry 684 (class 1259 OID 5486508)
-- Name: v_debito_entidad; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_debito_entidad AS
 SELECT d.caja_id,
    ca.tipo AS caja_tipo,
    ca.nombre AS caja_nom,
    a.resp,
    td.nombre AS resp_tdoc_nom,
    a.respndoc AS resp_ndoc,
    a.respsexo AS resp_sexo,
        CASE
            WHEN (ca.tipo = ANY (ARRAY[3, 6])) THEN a.cbu
            ELSE ''::character varying
        END AS cbu,
        CASE
            WHEN (ca.tipo = ANY (ARRAY[3, 6])) THEN ((
            CASE a.bco_tcta
                WHEN 1 THEN 'CA'::text
                ELSE 'CC'::text
            END || ' '::text) || (a.tpago_nro)::text)
            ELSE ''::text
        END AS bancocta,
        CASE
            WHEN (ca.tipo = 4) THEN a.tpago_nro
            ELSE ''::character varying
        END AS nrotarjeta,
        CASE
            WHEN (ca.tipo = 5) THEN (((COALESCE(te.nombre, ''::character varying))::text || ' - '::text) || (a.temple_area)::text)
            ELSE NULL::text
        END AS temple,
        CASE
            WHEN (ca.tipo = 5) THEN a.tpago_nro
            ELSE ''::character varying
        END AS legajo,
    c.trib_id,
    t.nombre_redu AS trib_nom,
    d.anio,
    d.mes,
    a.obj_id AS objeto,
    o.nombre AS obj_nom,
    c.subcta,
    ((c.anio || '-'::text) || lpad(((c.cuota)::character varying)::text, 2, '0'::text)) AS periodo,
    d.ctacte_id AS identificacion,
    (((((a.obj_id)::text || ' '::text) || ((c.anio - 2000))::text) || '-'::text) || lpad((c.cuota)::text, 2, '0'::text)) AS referencia,
    c.est AS ccest,
    c.fchvenc,
    d.monto,
        CASE
            WHEN (v.fchvenc1 <> v.fchvenc2) THEN v.fchvenc2
            ELSE NULL::date
        END AS fchvenc2,
        CASE
            WHEN (v.fchvenc1 <> v.fchvenc2) THEN c.montovenc2
            ELSE (0)::numeric
        END AS monto2
   FROM ((((((((public.debito_periodo d
     JOIN public.debito_adhe a ON ((d.adh_id = a.adh_id)))
     JOIN public.caja ca ON ((d.caja_id = ca.caja_id)))
     LEFT JOIN public.plan_temple te ON ((a.temple = te.cod)))
     JOIN public.ctacte c ON ((d.ctacte_id = c.ctacte_id)))
     JOIN public.trib t ON ((c.trib_id = t.trib_id)))
     JOIN public.trib_venc v ON ((((t.trib_id = v.trib_id) AND (c.anio = v.anio)) AND (c.cuota = v.cuota))))
     JOIN public.objeto o ON (((c.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.persona_tdoc td ON ((a.resptdoc = td.cod)))
UNION
 SELECT d.caja_id,
    ca.tipo AS caja_tipo,
    ca.nombre AS caja_nom,
    a.resp,
    td.nombre AS resp_tdoc_nom,
    a.respndoc AS resp_ndoc,
    op.sexo AS resp_sexo,
        CASE
            WHEN (ca.tipo = ANY (ARRAY[3, 6])) THEN a.tpago_nro
            ELSE ''::character varying
        END AS cbu,
        CASE
            WHEN (ca.tipo = ANY (ARRAY[3, 6])) THEN ((
            CASE a.bco_tcta
                WHEN 1 THEN 'CA'::text
                ELSE 'CC'::text
            END || ' '::text) || (a.tpago_nro)::text)
            ELSE ''::text
        END AS bancocta,
        CASE
            WHEN (ca.tipo = 4) THEN a.tpago_nro
            ELSE ''::character varying
        END AS nrotarjeta,
        CASE
            WHEN (ca.tipo = 5) THEN (((COALESCE(te.nombre, ''::character varying))::text || ' - '::text) || (a.temple_area)::text)
            ELSE NULL::text
        END AS temple,
        CASE
            WHEN (ca.tipo = 5) THEN a.tpago_nro
            ELSE ''::character varying
        END AS legajo,
    c.trib_id,
    t.nombre_redu AS trib_nom,
    d.anio,
    d.mes,
    a.obj_id AS objeto,
    o.nombre AS obj_nom,
    c.subcta,
    ((c.anio || '-'::text) || lpad(((c.cuota)::character varying)::text, 2, '0'::text)) AS periodo,
    d.ctacte_id AS identificacion,
    ((('PLAN '::text || c.anio) || '-'::text) || lpad((c.cuota)::text, 2, '0'::text)) AS referencia,
    c.est AS ccest,
    c.fchvenc,
    d.monto,
    NULL::date AS fchvenc2,
    0 AS monto2
   FROM ((((((((public.debito_periodo d
     JOIN public.plan a ON ((d.plan_id = a.plan_id)))
     JOIN public.caja ca ON ((d.caja_id = ca.caja_id)))
     LEFT JOIN public.plan_temple te ON ((a.temple = te.cod)))
     LEFT JOIN public.persona_tdoc td ON ((a.resptdoc = td.cod)))
     JOIN public.ctacte c ON ((d.ctacte_id = c.ctacte_id)))
     JOIN public.trib t ON ((c.trib_id = t.trib_id)))
     JOIN public.objeto o ON (((c.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.persona op ON (((o.num)::text = (op.obj_id)::text)));


ALTER TABLE public.v_debito_entidad OWNER TO postgres;

--
-- TOC entry 551 (class 1259 OID 5285908)
-- Name: v_debito_liq; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_debito_liq AS
 SELECT d.deb_id,
    d.ctacte_id,
    COALESCE(d.adh_id, 0) AS adh_id,
    COALESCE(d.plan_id, 0) AS plan_id,
    d.caja_id,
    ca.tipo AS caja_tipo,
    ca.nombre AS caja_nom,
    a.temple,
    a.temple_area,
    a.bco_suc,
    a.bco_tcta,
    a.tpago_nro,
    a.cbu,
    c.trib_id,
    t.nombre_redu AS trib_nom,
    d.anio,
    d.mes,
    upper((a.resp)::text) AS resp,
    a.respndoc,
    a.respsexo,
    c.obj_id,
    o.nombre AS obj_nom,
    c.subcta,
    ((c.anio || '-'::text) || lpad((c.cuota)::text, 2, '0'::text)) AS periodo,
    d.monto,
    d.montodebito AS montodeb,
    to_char((a.fchalta)::timestamp with time zone, 'DD/MM/YYYY'::text) AS fchalta,
    to_char((c.fchvenc)::timestamp with time zone, 'DD/MM/YYYY'::text) AS fchvenc,
    to_char(d.fchdebito, 'DD/MM/YYYY'::text) AS fchdeb,
    e.nombre AS est,
    c.est AS estcta,
    d.obs,
    d.trechazo,
        CASE
            WHEN (((d.trechazo)::text = ''::text) OR ((d.trechazo)::text = '0'::text)) THEN d.rechazo
            ELSE COALESCE(r.nombre, ''::character varying)
        END AS rechazo,
    (((u.nombre)::text || ' - '::text) || to_char(d.fchmod, 'DD/MM/YYYY'::text)) AS modif
   FROM (((((((((public.debito_periodo d
     JOIN public.caja ca ON ((d.caja_id = ca.caja_id)))
     JOIN public.ctacte c ON ((d.ctacte_id = c.ctacte_id)))
     JOIN public.objeto o ON (((c.obj_id)::text = (o.obj_id)::text)))
     JOIN public.trib t ON ((c.trib_id = t.trib_id)))
     JOIN public.debito_adhe a ON ((d.adh_id = a.adh_id)))
     LEFT JOIN public.banco b ON (((b.bco_ent = ca.ext_bco_ent) AND (a.bco_suc = b.bco_suc))))
     LEFT JOIN public.debito_test e ON ((d.est = e.cod)))
     LEFT JOIN public.debito_trechazo r ON (((d.caja_id = r.caja_id) AND ((d.trechazo)::text = (r.cod)::text))))
     LEFT JOIN sam.sis_usuario u ON ((d.usrmod = u.usr_id)))
UNION
 SELECT d.deb_id,
    d.ctacte_id,
    COALESCE(d.adh_id, 0) AS adh_id,
    COALESCE(d.plan_id, 0) AS plan_id,
    d.caja_id,
    ca.tipo AS caja_tipo,
    ca.nombre AS caja_nom,
    a.temple,
    a.temple_area,
    a.bco_suc,
    a.bco_tcta,
    a.tpago_nro,
    a.tpago_nro AS cbu,
    c.trib_id,
    t.nombre_redu AS trib_nom,
    d.anio,
    d.mes,
    upper((a.resp)::text) AS resp,
    a.respndoc,
    op.sexo AS respsexo,
    c.obj_id,
    o.nombre AS obj_nom,
    c.subcta,
    ((c.anio || '-'::text) || lpad((c.cuota)::text, 2, '0'::text)) AS periodo,
    d.monto,
    d.montodebito AS montodeb,
    to_char((a.fchalta)::timestamp with time zone, 'DD/MM/YYYY'::text) AS fchalta,
    to_char((c.fchvenc)::timestamp with time zone, 'DD/MM/YYYY'::text) AS fchvenc,
    to_char(d.fchdebito, 'DD/MM/YYYY'::text) AS fchdeb,
    e.nombre AS est,
    c.est AS estcta,
    d.obs,
    d.trechazo,
        CASE
            WHEN (((d.trechazo)::text = ''::text) OR ((d.trechazo)::text = '0'::text)) THEN d.rechazo
            ELSE COALESCE(r.nombre, ''::character varying)
        END AS rechazo,
    (((u.nombre)::text || ' - '::text) || to_char(d.fchmod, 'DD/MM/YYYY'::text)) AS modif
   FROM (((((((((public.debito_periodo d
     JOIN public.caja ca ON ((d.caja_id = ca.caja_id)))
     JOIN public.ctacte c ON ((d.ctacte_id = c.ctacte_id)))
     JOIN public.objeto o ON (((c.obj_id)::text = (o.obj_id)::text)))
     JOIN public.persona op ON (((o.num)::text = (op.obj_id)::text)))
     JOIN public.trib t ON ((c.trib_id = t.trib_id)))
     JOIN public.plan a ON ((d.plan_id = a.plan_id)))
     LEFT JOIN public.debito_test e ON ((d.est = e.cod)))
     LEFT JOIN public.debito_trechazo r ON (((d.trechazo)::text = (r.cod)::text)))
     LEFT JOIN sam.sis_usuario u ON ((d.usrmod = u.usr_id)));


ALTER TABLE public.v_debito_liq OWNER TO postgres;

--
-- TOC entry 552 (class 1259 OID 5285913)
-- Name: v_dj; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_dj AS
 SELECT d.dj_id,
    d.dj_id_web,
    d.ctacte_id,
    d.trib_id,
    t.nombre_redu AS trib_nom,
    d.obj_id,
    o.nombre AS obj_nom,
    d.subcta,
    ''::character varying AS legajo,
    o.num,
    p.nombre AS num_nom,
    d.fiscaliza,
    d.anio,
    d.cuota,
    d.orden,
        CASE
            WHEN (d.orden = 0) THEN 'Original'::text
            ELSE ('Rectif '::text || d.orden)
        END AS orden_nom,
    d.tipo,
    tt.nombre AS tipo_nom,
    d.base,
    d.monto,
    d.multa,
    d.fchpresenta,
    d.est,
    cc.est AS estctacte,
    cc.fchpago,
    cc.fchvenc,
    cc.nominalcub,
    d.error_act,
    d.fchmod,
    (((u.nombre)::text || ' - '::text) || to_char(d.fchmod, 'DD/MM/YYYY'::text)) AS modif
   FROM ((((((public.ddjj d
     JOIN public.trib t ON ((d.trib_id = t.trib_id)))
     JOIN public.objeto o ON (((d.obj_id)::text = (o.obj_id)::text)))
     JOIN public.objeto p ON (((o.num)::text = (p.obj_id)::text)))
     LEFT JOIN public.ddjj_tipo tt ON ((d.tipo = tt.cod)))
     LEFT JOIN public.ctacte cc ON ((d.ctacte_id = cc.ctacte_id)))
     LEFT JOIN sam.sis_usuario u ON ((d.usrmod = u.usr_id)));


ALTER TABLE public.v_dj OWNER TO postgres;

--
-- TOC entry 677 (class 1259 OID 5317037)
-- Name: v_dj_base; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_dj_base AS
 SELECT dj.obj_id,
    o.nombre,
    '' AS legajo,
    o.nombre AS titular,
    dp.direccion,
    dp.locprov,
    dj.dj_id,
    COALESCE((dj.fiscaliza)::integer, 0) AS fiscaliza,
    dj.anio,
    dj.cuota,
    COALESCE(cc.est, ''::bpchar) AS est,
    cc.fchpago,
    ((((dj.anio)::character varying(4))::text || '/'::text) || lpad(((dj.cuota)::character varying(2))::text, 2, '0'::text)) AS aniocuota,
        CASE dj.orden
            WHEN 0 THEN 'Original'::text
            ELSE ('Rect.'::text || ((dj.orden)::character varying(2))::text)
        END AS orden,
    n.nombre AS nomen_nom,
    d.rubro_id,
    r.nombre AS rubro_nom,
    f.nombre AS fcalculo_nom,
    d.base,
    d.cant,
    d.alicuota,
    d.minimo,
    d.monto
   FROM (((((((((public.ddjj dj
     LEFT JOIN public.objeto o ON (((dj.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.persona p ON (((o.num)::text = (p.obj_id)::text)))
     LEFT JOIN public.ctacte cc ON (((((dj.trib_id = cc.trib_id) AND ((dj.obj_id)::text = (cc.obj_id)::text)) AND (dj.anio = cc.anio)) AND (dj.cuota = cc.cuota))))
     LEFT JOIN public.ddjj_rubros d ON ((d.dj_id = dj.dj_id)))
     LEFT JOIN public.rubro r ON (((d.rubro_id)::text = (r.rubro_id)::text)))
     LEFT JOIN public.rubro_tnomen n ON (((r.nomen_id)::text = (n.nomen_id)::text)))
     LEFT JOIN public.rubro_vigencia v ON (((((d.rubro_id)::text = (v.rubro_id)::text) AND (((cc.anio * 100) + cc.cuota) >= v.perdesde)) AND ((((cc.anio * 100) + cc.cuota) <= v.perhasta) OR (v.perhasta = 0)))))
     LEFT JOIN public.rubro_tfcalculo f ON ((v.tcalculo = f.cod)))
     LEFT JOIN public.v_domi dp ON ((((dp.torigen)::text = 'COM'::text) AND ((dp.obj_id)::text = (o.obj_id)::text))))
  WHERE (dj.est = 'A'::bpchar);


ALTER TABLE public.v_dj_base OWNER TO postgres;

--
-- TOC entry 553 (class 1259 OID 5285923)
-- Name: v_dj_liq; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_dj_liq AS
 SELECT l.dj_id,
    l.item_id,
    i.nombre AS item_nom,
    l.monto AS item_monto,
    d.ctacte_id,
    d.est
   FROM ((public.ddjj d
     JOIN public.ddjj_liq l ON ((l.dj_id = d.dj_id)))
     LEFT JOIN public.item i ON ((l.item_id = i.item_id)));


ALTER TABLE public.v_dj_liq OWNER TO postgres;

--
-- TOC entry 676 (class 1259 OID 5317032)
-- Name: v_dj_rubro; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_dj_rubro AS
 SELECT d.dj_id,
    r.nomen_id,
    n.nombre AS nomen_nom,
    d.rubro_id,
    r.nombre AS rubro_nom,
    dj.tipo,
    v.tcalculo,
    f.nombre AS tcalculo_nom,
    d.base,
    d.cant,
    r.tunidad,
    d.alicuota,
    d.minimo,
    d.monto,
    dj.ctacte_id,
    dj.est
   FROM (((((public.ddjj_rubros d
     JOIN public.ddjj dj ON ((d.dj_id = dj.dj_id)))
     JOIN public.rubro r ON (((d.rubro_id)::text = (r.rubro_id)::text)))
     JOIN public.rubro_tnomen n ON (((r.nomen_id)::text = (n.nomen_id)::text)))
     LEFT JOIN public.rubro_vigencia v ON (((((d.rubro_id)::text = (v.rubro_id)::text) AND (((dj.anio * 1000) + dj.cuota) >= v.perdesde)) AND ((((dj.anio * 1000) + dj.cuota) <= v.perhasta) OR (v.perhasta = 0)))))
     LEFT JOIN public.rubro_tfcalculo f ON ((v.tcalculo = f.cod)));


ALTER TABLE public.v_dj_rubro OWNER TO postgres;

--
-- TOC entry 554 (class 1259 OID 5285933)
-- Name: v_emision; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_emision AS
 SELECT c.ctacte_id,
    c.trib_id,
    t.nombre_redu AS trib_nom_red,
    t.tipo AS trib_tipo,
    c.obj_id,
    c.subcta,
    o.nombre AS obj_nom,
    o.obj_dato,
    o.est AS obj_est,
    (ascii(substr((c.obj_id)::text, 1, 1)) || substr((c.obj_id)::text, 2, 7)) AS codigolink,
    o.num,
    op.nombre AS num_nom,
    c.anio,
    c.cuota,
    c.fchemi,
    c.fchpago,
        CASE
            WHEN (c.ucm > (0)::numeric) THEN c.ucm
            ELSE (c.nominal + c.multa)
        END AS monto,
    c.montoanual,
        CASE
            WHEN (v.fchvenc2 IS NULL) THEN c.fchvenc
            ELSE v.fchvenc2
        END AS venc2,
    btrim(((((((
        CASE COALESCE(ca.nombre, ''::character varying)
            WHEN ''::text THEN d.nomcalle
            ELSE ca.nombre
        END)::text || ' '::text) ||
        CASE (d.puerta)::text
            WHEN '0'::text THEN ''::text
            ELSE (d.puerta)::text
        END) ||
        CASE
            WHEN (btrim((d.piso)::text) <> ALL (ARRAY[''::text, '0'::text])) THEN (' Piso: '::text || (d.piso)::text)
            ELSE ''::text
        END) ||
        CASE
            WHEN (btrim((d.dpto)::text) <> ALL (ARRAY[''::text, '0'::text])) THEN (' Dpto: '::text || (d.dpto)::text)
            ELSE ''::text
        END) ||
        CASE COALESCE(btrim((d.det)::text), (''::character varying)::text)
            WHEN ''::text THEN ''::text
            ELSE ((' ('::text || btrim((d.det)::text)) || ')'::text)
        END)) AS domi,
    (((l.nombre)::text || ' - '::text) || (p.nombre)::text) AS codpos,
    d.barr_id,
    bo.nombre AS barr_nom,
    o.distrib,
    COALESCE(di.apenom, ''::character varying) AS distrib_nom,
    o.tdistrib,
    c.est,
        CASE
            WHEN (c.est = ''::bpchar) THEN 'Sin Aprobar'::character varying
            ELSE e.nombre
        END AS est_nom,
    i.nc,
    i.barr_id AS inm_barr_id,
    ba.nombre AS inm_barr_nom,
    ca.nombre AS calle,
    d.puerta,
    d.piso,
    d.dpto,
    c.expe,
    c.obs AS mensaje,
    (((u.nombre)::text || ' - '::text) || to_char(c.fchmod, 'DD/MM/YYYY'::text)) AS modif
   FROM ((((((((((((((public.ctacte c
     LEFT JOIN public.trib t ON ((c.trib_id = t.trib_id)))
     LEFT JOIN public.trib_venc v ON ((((c.trib_id = v.trib_id) AND (c.anio = v.anio)) AND (c.cuota = v.cuota))))
     LEFT JOIN public.objeto o ON (((c.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.inm i ON (((c.obj_id)::text = (i.obj_id)::text)))
     LEFT JOIN public.objeto op ON (((o.num)::text = (op.obj_id)::text)))
     LEFT JOIN public.domi d ON (((((d.torigen)::text = 'OBJ'::text) AND ((d.obj_id)::text = (c.obj_id)::text)) AND (d.id = 0))))
     LEFT JOIN public.domi_calle ca ON ((d.calle_id = ca.calle_id)))
     LEFT JOIN public.domi_localidad l ON ((d.loc_id = l.loc_id)))
     LEFT JOIN public.domi_provincia p ON ((l.prov_id = p.prov_id)))
     LEFT JOIN public.domi_barrio bo ON ((d.barr_id = bo.barr_id)))
     LEFT JOIN public.domi_barrio ba ON ((i.barr_id = ba.barr_id)))
     LEFT JOIN sam.sis_usuario di ON ((o.distrib = di.usr_id)))
     LEFT JOIN public.ctacte_test e ON ((c.est = e.cod)))
     LEFT JOIN sam.sis_usuario u ON ((c.usrmod = u.usr_id)));


ALTER TABLE public.v_emision OWNER TO postgres;

--
-- TOC entry 555 (class 1259 OID 5285938)
-- Name: v_emision_baja; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_emision_baja AS
 SELECT b.ctacte_id,
    b.orden,
        CASE b.tipo
            WHEN 'B'::text THEN 'Baja Emisión'::text
            WHEN 'R'::text THEN 'Reliquidación'::text
            ELSE ''::text
        END AS tipo,
    b.ucm,
    b.nominal,
    b.fchemi,
    b.expe,
    b.obs,
    (((u.nombre)::text || ' - '::text) || to_char(b.fchbaja, 'DD/MM/YYYY'::text)) AS baja
   FROM (public.ctacte_baja b
     LEFT JOIN sam.sis_usuario u ON ((b.usrbaja = u.usr_id)));


ALTER TABLE public.v_emision_baja OWNER TO postgres;

--
-- TOC entry 556 (class 1259 OID 5285943)
-- Name: v_emision_baja_liq; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_emision_baja_liq AS
 SELECT c.ctacte_id,
    l.item_id,
    i.nombre AS item_nom,
    i.tipo AS item_tipo,
    (((
        CASE ltrim((v.paramnombre1)::text)
            WHEN ''::text THEN ''::text
            ELSE (((v.paramnombre1)::text || '='::text) || (l.param1)::text)
        END ||
        CASE ltrim((v.paramnombre2)::text)
            WHEN ''::text THEN ''::text
            ELSE (((', '::text || (v.paramnombre2)::text) || '='::text) || (l.param2)::text)
        END) ||
        CASE ltrim((v.paramnombre3)::text)
            WHEN ''::text THEN ''::text
            ELSE (((', '::text || (v.paramnombre3)::text) || '='::text) || (l.param3)::text)
        END) ||
        CASE ltrim((v.paramnombre4)::text)
            WHEN ''::text THEN ''::text
            ELSE (((', '::text || (v.paramnombre4)::text) || '='::text) || (l.param4)::text)
        END) AS detalle,
    l.monto AS item_monto,
    l.param1,
    l.param2,
    l.param3,
    l.param4,
    l.orden,
    c.fchemi,
    c.obj_id,
    c.trib_id,
    c.expe
   FROM (((public.ctacte c
     JOIN public.ctacte_baja_liq l ON ((c.ctacte_id = l.ctacte_id)))
     LEFT JOIN public.item i ON ((l.item_id = i.item_id)))
     LEFT JOIN public.item_vigencia v ON ((((i.item_id = v.item_id) AND (((c.anio * 100) + c.cuota) >= v.perdesde)) AND (((c.anio * 100) + c.cuota) <= v.perhasta))));


ALTER TABLE public.v_emision_baja_liq OWNER TO postgres;

--
-- TOC entry 557 (class 1259 OID 5285948)
-- Name: v_emision_err; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_emision_err AS
 SELECT e.trib_id,
    e.anio,
    e.cuota,
    e.err,
    r.nombre AS err_nom,
    e.obj_id,
    o.nombre AS obj_nom,
    e.subcta
   FROM ((public.emision_err e
     JOIN public.emision_terr r ON ((e.err = r.cod)))
     JOIN public.objeto o ON (((e.obj_id)::text = (o.obj_id)::text)));


ALTER TABLE public.v_emision_err OWNER TO postgres;

--
-- TOC entry 558 (class 1259 OID 5285953)
-- Name: v_emision_esta; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_emision_esta AS
 SELECT e.trib_id,
    t.nombre AS trib_nom,
    e.anio,
    e.cuota,
    e.cant,
    e.monto,
    e.cant_err AS canterr,
    (((ue.apenom)::text || ' - '::text) || to_char((e.fchemi)::timestamp with time zone, 'DD/MM/YYYY'::text)) AS emision,
    COALESCE((((ua.apenom)::text || ' - '::text) || to_char((e.fchaprob)::timestamp with time zone, 'DD/MM/YYYY'::text)), 'Pendiente'::text) AS aprobacion,
    ((((e.anio)::character varying(4))::text || '-'::text) || ((e.cuota)::character varying(3))::text) AS per
   FROM (((public.emision_esta e
     JOIN public.trib t ON ((e.trib_id = t.trib_id)))
     JOIN sam.sis_usuario ue ON ((e.usremi = ue.usr_id)))
     LEFT JOIN sam.sis_usuario ua ON ((e.usraprob = ua.usr_id)));


ALTER TABLE public.v_emision_esta OWNER TO postgres;

--
-- TOC entry 559 (class 1259 OID 5285958)
-- Name: v_emision_item; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_emision_item AS
 SELECT e.trib_id,
    e.anio,
    e.cuota,
    l.item_id,
    i.nombre AS item_nom,
    count(l.item_id) AS cant,
    sum(l.monto) AS monto
   FROM ((public.ctacte e
     JOIN public.ctacte_liq l ON ((e.ctacte_id = l.ctacte_id)))
     JOIN public.item i ON ((l.item_id = i.item_id)))
  GROUP BY e.trib_id, e.anio, e.cuota, l.item_id, i.nombre;


ALTER TABLE public.v_emision_item OWNER TO postgres;

--
-- TOC entry 8422 (class 0 OID 0)
-- Dependencies: 559
-- Name: VIEW v_emision_item; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON VIEW public.v_emision_item IS 'Montos Emitidos por Tributo, Período e Item';


--
-- TOC entry 560 (class 1259 OID 5285963)
-- Name: config; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.config (
    ctarecargo smallint NOT NULL,
    interes_min smallint DEFAULT 0 NOT NULL,
    ctaredondeo smallint DEFAULT 0 NOT NULL,
    porcredondeo numeric(5,2) DEFAULT 0 NOT NULL,
    ctacte_anio_desde smallint,
    texto_ucm character varying(10),
    ucm1 numeric(9,3),
    ucm2 numeric(9,3),
    titulo_libredeuda character varying(100),
    titulo2_libredeuda character varying(100),
    mensaje_libredeuda character varying(500),
    proxvenc_libredeuda smallint,
    copias_recl smallint,
    calle_recl smallint,
    path_recl character varying(50),
    usar_codcalle_loc boolean DEFAULT true NOT NULL,
    inm_valida_nc boolean DEFAULT true NOT NULL,
    inm_valida_frente boolean,
    inm_gen_osm boolean,
    trib_op_matric smallint,
    judi_item_gasto smallint,
    judi_item_hono smallint,
    ctadiferencia smallint,
    itemcobro smallint DEFAULT 0,
    itemcomision smallint DEFAULT 0,
    itemcomisionbco smallint DEFAULT 0,
    cajaverifdebito smallint DEFAULT 0,
    repo_usu_nom boolean,
    djfaltantes smallint DEFAULT 0,
    op_hab_plazas boolean,
    per_plan_decaido boolean,
    comer_hab_vence smallint DEFAULT 0 NOT NULL,
    juz_origentransito1 smallint,
    juz_origentransito2 smallint,
    ctarectc smallint DEFAULT 0 NOT NULL,
    per_pedir_cuit boolean,
    per_pedir_doc boolean,
    ib_modo character varying(1) DEFAULT 'A'::character varying,
    domi_pedir_puerta boolean DEFAULT true,
    com_validar_ib smallint DEFAULT 1 NOT NULL,
    agrete_trib_id smallint DEFAULT 0,
    agrete_path character varying(100) DEFAULT ''::character varying,
    ret_sin_aprob smallint DEFAULT 0,
    inm_phmadre smallint DEFAULT 0 NOT NULL,
    bol_path character varying(50),
    bol_mail character varying(50),
    bol_mail_clave character varying(50),
    bol_mail_host character varying(50),
    bol_mail_port integer,
    cta_id_act smallint DEFAULT 0 NOT NULL
);


ALTER TABLE sam.config OWNER TO postgres;

--
-- TOC entry 8423 (class 0 OID 0)
-- Dependencies: 560
-- Name: TABLE config; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.config IS 'CONFIGURACIONES BASICAS USADAS EN EL SISTEMA';


--
-- TOC entry 8424 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.ctarecargo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.ctarecargo IS 'CODIGO DE CUENTAS DE RECARGO';


--
-- TOC entry 8425 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.interes_min; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.interes_min IS 'VALOR MINIMO DE INTERES';


--
-- TOC entry 8426 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.ctaredondeo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.ctaredondeo IS 'CODIGO DE CUENTA PARA REDONDEO';


--
-- TOC entry 8427 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.porcredondeo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.porcredondeo IS 'PORCENTAJE DE REDONDEO';


--
-- TOC entry 8428 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.ctacte_anio_desde; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.ctacte_anio_desde IS 'CANTIDAD DE AÑOS QUE SE RESTAN DEL AÑO ACTUAL PARA CONSULTAS DE CTA.CTE. POR DEFECTO';


--
-- TOC entry 8429 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.texto_ucm; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.texto_ucm IS 'DESCRIPCION PARA LA UCM';


--
-- TOC entry 8430 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.ucm1; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.ucm1 IS 'VALOR DE UCM 1';


--
-- TOC entry 8431 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.ucm2; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.ucm2 IS 'VALOR DE UCM 2';


--
-- TOC entry 8432 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.titulo_libredeuda; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.titulo_libredeuda IS 'TITULO DEL LIBRE DEUDA';


--
-- TOC entry 8433 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.titulo2_libredeuda; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.titulo2_libredeuda IS 'TITULO 2 DEL LIBRE DEUDA';


--
-- TOC entry 8434 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.mensaje_libredeuda; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.mensaje_libredeuda IS 'MENSAJE DEL LIBRE DEUDA';


--
-- TOC entry 8435 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.proxvenc_libredeuda; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.proxvenc_libredeuda IS 'INDICA SI SE VAN A MOSTRAR LOS PROXIMOS VENCIMIENTOS EN EL LIBRE DEUDA';


--
-- TOC entry 8436 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.copias_recl; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.copias_recl IS 'CANTIDAD DE COPIAS PARA RECLAMOS';


--
-- TOC entry 8437 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.calle_recl; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.calle_recl IS 'SI SE VALIDA EL INGRESO DEL DOMICILIO EN RECLAMOS';


--
-- TOC entry 8438 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.path_recl; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.path_recl IS 'UBICACIÓN DE LOS ARCHIVOS DE RECLAMOS SUBIDOS POR LOS CONTRIBUYENTES';


--
-- TOC entry 8439 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.usar_codcalle_loc; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.usar_codcalle_loc IS 'INDICA SI SE UTILIZA CODIFICACION DE CALLES PARA LAS CALLES DE LA LOCALIDAD';


--
-- TOC entry 8440 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.inm_valida_nc; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.inm_valida_nc IS 'INDICA SI SE VALIDA LA NOMENCLATURA SEGUN LAS TABLAS INM_S1, INM_S2 E INM_S3';


--
-- TOC entry 8441 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.inm_valida_frente; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.inm_valida_frente IS 'INDICA SI SE VALIDA EL INGRESO DE LOS FRENTES EN INMUEBLES';


--
-- TOC entry 8442 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.inm_gen_osm; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.inm_gen_osm IS 'INDICA SI SE GENERA O NO LA CUENTA DE OSM ASOCIADA SI EL INMUEBLE CUENTA CON SERVICIOS DE AGUA Y/O CLOACA';


--
-- TOC entry 8443 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.trib_op_matric; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.trib_op_matric IS 'TRIBUTO DE LA MATRICULA DE OBRAS PRIVADAS';


--
-- TOC entry 8444 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.judi_item_gasto; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.judi_item_gasto IS 'ITEM PARA GASTOS JUDICIALES';


--
-- TOC entry 8445 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.judi_item_hono; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.judi_item_hono IS 'ITEM PARA HONORARIOS JUDICIALES';


--
-- TOC entry 8446 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.ctadiferencia; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.ctadiferencia IS 'CODIGO DE CUENTA PARA DIFERENCIA EN CAJA EXTERNA';


--
-- TOC entry 8447 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.itemcobro; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.itemcobro IS 'CODIGO DE ITEM DE COBROS EXTERNOS TOTALES';


--
-- TOC entry 8448 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.itemcomision; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.itemcomision IS 'CODIGO DE ITEM DE COMISION AGENTE COBRO';


--
-- TOC entry 8449 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.itemcomisionbco; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.itemcomisionbco IS 'CODIGO DE ITEM DE COMISION BANCARIA';


--
-- TOC entry 8450 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.cajaverifdebito; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.cajaverifdebito IS 'ACCION A EFECTUAR EN CAJA CUANDO EXISTE ADHESION A DEBITO AUTOMATICO';


--
-- TOC entry 8451 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.repo_usu_nom; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.repo_usu_nom IS 'INDICA SI SE INCLUYE EL NOMBRE DEL USUARIO EN LOS REPORTES';


--
-- TOC entry 8452 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.djfaltantes; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.djfaltantes IS 'INDICA SI SE SOLICITAN LAS HABITACIONES Y PLAZAS EN OBRAS PARTICULARES';


--
-- TOC entry 8453 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.op_hab_plazas; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.op_hab_plazas IS 'INDICA SI SE SOLICITAN LAS HABITACIONES Y PLAZAS EN OBRAS PARTICULARES';


--
-- TOC entry 8454 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.per_plan_decaido; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.per_plan_decaido IS 'INDICA SI EN EL ALTA DE PLAN SE VAN A AGREGAR PERIODOS DE PLANES DECAIDOS';


--
-- TOC entry 8455 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.comer_hab_vence; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.comer_hab_vence IS 'INDICA LA CANTIDAD DE MESES DE VIGENCIA DE LA HABILITACIÓN (0==> NO VENCE)';


--
-- TOC entry 8456 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.juz_origentransito1; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.juz_origentransito1 IS 'Indica la oficina vinculada a "Policía de Tránsito" para su uso en juzgado';


--
-- TOC entry 8457 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.juz_origentransito2; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.juz_origentransito2 IS 'Indica la oficina vinculada a "Policía de Tránsito" para su uso en juzgado';


--
-- TOC entry 8458 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.ctarectc; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.ctarectc IS 'CUENTA RECARGO POR PAGO CON TARJETA DE CRÉDITO';


--
-- TOC entry 8459 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.per_pedir_cuit; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.per_pedir_cuit IS 'PEDIR CUIT';


--
-- TOC entry 8460 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.per_pedir_doc; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.per_pedir_doc IS 'PEDIR DOCUMENTO';


--
-- TOC entry 8461 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.ib_modo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.ib_modo IS 'INDICA COMO SE GENERA O SE INGRESA EL N° DE IIBB (M.MANUAL / A.AUTO / C.CUIT)';


--
-- TOC entry 8462 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.domi_pedir_puerta; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.domi_pedir_puerta IS 'INDICA SI EL INGRESO DEL NÚMERO DE PUERTA EN LOS DOMICILIOS ES O NO OBLIGATORIO';


--
-- TOC entry 8463 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.com_validar_ib; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.com_validar_ib IS 'VALIDAR QUE EL TITULAR PRINCIPAL TENGA INSCRIPCION A INGRESOS BRUTOS AL CREAR EL COMERCIO';


--
-- TOC entry 8464 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.ret_sin_aprob; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.ret_sin_aprob IS 'Permitir Retenciones Sin aprobar';


--
-- TOC entry 8465 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.inm_phmadre; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.inm_phmadre IS 'Indica si el Municipio trabaja con el concepto de "PH Madre" par al caso de Propiedad Horizontal de Inmuebles';


--
-- TOC entry 8466 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.bol_path; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.bol_path IS 'PATH DE ARCHIVO DE BOLETA';


--
-- TOC entry 8467 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.bol_mail; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.bol_mail IS 'MAIL QUE ENVIARA LA BOLETA';


--
-- TOC entry 8468 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.bol_mail_clave; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.bol_mail_clave IS 'CLAVE DEL MAIL QUE ENVIARA LA BOLETA';


--
-- TOC entry 8469 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.bol_mail_host; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.bol_mail_host IS 'HOST PARA LA TRANSACION SMTP';


--
-- TOC entry 8470 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.bol_mail_port; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.bol_mail_port IS 'PUERTO PARA LA TRANSACION SMTP';


--
-- TOC entry 8471 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN config.cta_id_act; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config.cta_id_act IS 'CUENTA DONDE SE IMPUTAN LAS ACTUALIZACIONES DE DEUDA SI NO ESTÁ DEFINIDA EN EL TRIBUTO';


--
-- TOC entry 561 (class 1259 OID 5285988)
-- Name: v_emision_liq; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_emision_liq AS
 SELECT c.ctacte_id,
    l.item_id,
    i.nombre AS item_nom,
    i.tipo AS item_tipo,
    (((
        CASE ltrim((v.paramnombre1)::text)
            WHEN ''::text THEN ''::text
            ELSE (((v.paramnombre1)::text || '='::text) || (l.param1)::text)
        END ||
        CASE ltrim((v.paramnombre2)::text)
            WHEN ''::text THEN ''::text
            ELSE (((', '::text || (v.paramnombre2)::text) || '='::text) || (l.param2)::text)
        END) ||
        CASE ltrim((v.paramnombre3)::text)
            WHEN ''::text THEN ''::text
            ELSE (((', '::text || (v.paramnombre3)::text) || '='::text) || (l.param3)::text)
        END) ||
        CASE ltrim((v.paramnombre4)::text)
            WHEN ''::text THEN ''::text
            ELSE (((', '::text || (v.paramnombre4)::text) || '='::text) || (l.param4)::text)
        END) AS detalle,
    l.monto AS item_monto,
    l.param1,
    l.param2,
    l.param3,
    l.param4,
    l.orden,
    c.fchemi,
    c.obj_id,
    c.trib_id,
        CASE
            WHEN (t.ucm = 0) THEN 'Importe'::character varying
            ELSE COALESCE(f.texto_ucm, 'UCM'::character varying)
        END AS trib_ucm,
    c.expe
   FROM (((((public.ctacte c
     JOIN public.ctacte_liq l ON ((c.ctacte_id = l.ctacte_id)))
     LEFT JOIN public.item i ON ((l.item_id = i.item_id)))
     LEFT JOIN public.item_vigencia v ON ((((i.item_id = v.item_id) AND (((c.anio * 100) + c.cuota) >= v.perdesde)) AND (((c.anio * 100) + c.cuota) <= v.perhasta))))
     LEFT JOIN public.trib t ON ((c.trib_id = t.trib_id)))
     LEFT JOIN sam.config f ON (((f.texto_ucm)::text <> ''::text)));


ALTER TABLE public.v_emision_liq OWNER TO postgres;

--
-- TOC entry 562 (class 1259 OID 5285993)
-- Name: emi; Type: TABLE; Schema: temp; Owner: postgres
--

CREATE TABLE temp.emi (
    fila bigint,
    ctacte_id integer,
    trib_id smallint,
    obj_id character varying(8),
    subcta smallint,
    num_nom character varying(50),
    anio integer,
    cuota smallint,
    monto numeric,
    montoanual numeric(12,2),
    venc date,
    domi text,
    codpos text,
    est_nom character varying,
    usr_id smallint,
    barr_parc character varying(50),
    barr_pos character varying(50),
    obj_dato character varying(25),
    codigolink character varying(10)
);


ALTER TABLE temp.emi OWNER TO postgres;

--
-- TOC entry 563 (class 1259 OID 5285999)
-- Name: v_emision_print; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_emision_print AS
 SELECT c.ctacte_id,
    c.trib_id,
        CASE c.trib_id
            WHEN 2 THEN tf.nombre
            ELSE t.nombre
        END AS trib_nom,
    t.nombre_redu AS trib_nom_red,
    t.nombre_reduhbank AS trib_nom_redhbank,
    t.tipo AS trib_tipo,
    t.calc_rec AS trib_calc_rec,
    c.obj_id,
    o.nombre AS obj_nom,
    o.obj_dato,
        CASE
            WHEN (c.trib_id = 1) THEN ('45'::text || lpad((c.anio)::text, 7, '0'::text))
            ELSE (ascii(substr((c.obj_id)::text, 1, 1)) || substr((c.obj_id)::text, 2, 7))
        END AS codigolink,
    c.subcta,
    c.anio,
    c.cuota,
    COALESCE(j.fchpresenta, (c.fchemi)::timestamp without time zone) AS fchemi,
    o.num,
    p.nombre AS num_nom,
    o.distrib,
    COALESCE(di.nombre, ''::character varying) AS distrib_nom,
    o.tdistrib,
    btrim(((((((
        CASE COALESCE(ca.nombre, ''::character varying)
            WHEN ''::text THEN d.nomcalle
            ELSE ca.nombre
        END)::text || ' '::text) ||
        CASE (d.puerta)::text
            WHEN '0'::text THEN ''::text
            ELSE (d.puerta)::text
        END) ||
        CASE
            WHEN (btrim((d.piso)::text) <> ALL (ARRAY[''::text, '0'::text])) THEN (' Piso: '::text || (d.piso)::text)
            ELSE ''::text
        END) ||
        CASE
            WHEN (btrim((d.dpto)::text) <> ALL (ARRAY[''::text, '0'::text])) THEN (' Dpto: '::text || (d.dpto)::text)
            ELSE ''::text
        END) ||
        CASE COALESCE(btrim((d.det)::text), (''::character varying)::text)
            WHEN ''::text THEN ''::text
            ELSE ((' ('::text || btrim((d.det)::text)) || ')'::text)
        END)) AS domi,
        CASE
            WHEN (bo.nombre IS NOT NULL) THEN (('Barrio: '::text || (bo.nombre)::text) || '. '::text)
            ELSE ''::text
        END AS domi_det,
    (((l.nombre)::text || ' - '::text) || (pr.nombre)::text) AS codpos,
    bo.barr_id,
    bo.nombre AS barr_nom,
        CASE
            WHEN ((c.ucm > (0)::numeric) AND (c.nominalcub = (0)::numeric)) THEN c.ucm
            ELSE (c.nominal + c.multa)
        END AS monto,
    c.nominalcub,
    (c.montovenc1 + c.multa) AS montovenc1,
    (c.montovenc2 + c.multa) AS montovenc2,
    c.montoanual,
        CASE
            WHEN (c.montoanual > (0)::numeric) THEN ((c.nominal * (r.cant_anio)::numeric) - c.montoanual)
            ELSE (0)::numeric
        END AS descanual,
        CASE
            WHEN (v.fchvenc1 IS NULL) THEN c.fchvenc
            ELSE v.fchvenc1
        END AS venc1,
        CASE
            WHEN (v.fchvenc2 IS NULL) THEN c.fchvenc
            ELSE v.fchvenc2
        END AS venc2,
    v.fchvencanual AS vencanual,
    o.tobj,
    t.genestcta,
    (
        CASE
            WHEN (c.texto_id = (-1)) THEN m.detalle
            WHEN (c.texto_id > 0) THEN tx.detalle
            ELSE c.obs
        END)::character varying(4000) AS mensaje,
    COALESCE(tx.titulo, ''::character varying) AS titulo_msj,
    c.texto_id,
    c.expe,
    sam.uf_caja_codbarra((c.trib_id)::integer, c.obj_id, (c.subcta)::integer, c.anio, (c.cuota)::integer, ((c.nominal + c.multa) - c.nominalcub), c.fchvenc, (c.montovenc2 + c.multa),
        CASE
            WHEN (v.fchvenc2 IS NULL) THEN c.fchvenc
            ELSE v.fchvenc2
        END) AS codbarra,
    sam.uf_code128c(sam.uf_caja_codbarra((c.trib_id)::integer, c.obj_id, (c.subcta)::integer, c.anio, (c.cuota)::integer, ((c.nominal + c.multa) - c.nominalcub), c.fchvenc, (c.montovenc2 + c.multa),
        CASE
            WHEN (v.fchvenc2 IS NULL) THEN c.fchvenc
            ELSE v.fchvenc2
        END)) AS codbarra_128c,
    sam.uf_caja_codbarra((c.trib_id)::integer, c.obj_id, (c.subcta)::integer, c.anio, 0, c.montoanual, v.fchvencanual) AS codbarraanual,
    sam.uf_code128c(sam.uf_caja_codbarra((c.trib_id)::integer, c.obj_id, (c.subcta)::integer, c.anio, 0, c.montoanual, v.fchvencanual)) AS codbarraanual_128c,
    c.fchpago,
    c.est,
        CASE
            WHEN (c.est = ''::bpchar) THEN 'Sin Aprobar'::character varying
            ELSE e.nombre
        END AS est_nom,
    (((u.nombre)::text || ' - '::text) || to_char(c.fchmod, 'DD/MM/YYYY'::text)) AS modif,
    j.dj_id,
    j.orden AS dj_orden,
    ('Rectif. N°: '::text || lpad(((j.orden)::character varying(2))::text, 2, '00'::text)) AS dj_orden_nom,
    (f.accesor - f.quita) AS accesor,
    i.nc,
    i.barr_id AS inm_barr_id,
    ba.nombre AS inm_barr_nom,
    btrim(((
        CASE COALESCE(ca.nombre, ''::character varying)
            WHEN ''::text THEN d.nomcalle
            ELSE ca.nombre
        END)::text ||
        CASE COALESCE(btrim((d.det)::text), ''::text)
            WHEN ''::text THEN ''::text
            ELSE ((' ('::text || btrim((d.det)::text)) || ')'::text)
        END)) AS calle,
    d.puerta,
    d.piso,
    d.dpto,
    te.usr_id,
    te.fila,
        CASE
            WHEN (de.adh_id IS NULL) THEN ''::text
            ELSE 'Contribuyente Adherido a débito'::text
        END AS mensaje_debito
   FROM ((((((((((((((((((((((public.ctacte c
     LEFT JOIN temp.emi te ON ((c.ctacte_id = te.ctacte_id)))
     LEFT JOIN public.trib t ON ((c.trib_id = t.trib_id)))
     LEFT JOIN public.facilida f ON (((c.trib_id = 2) AND (c.anio = f.faci_id))))
     LEFT JOIN public.trib tf ON ((f.trib_id = tf.trib_id)))
     LEFT JOIN public.resol r ON (((t.trib_id = r.trib_id) AND ((((c.anio * 1000) + c.cuota) >= r.perdesde) AND (((c.anio * 1000) + c.cuota) <= r.perhasta)))))
     LEFT JOIN public.trib_venc v ON ((((c.trib_id = v.trib_id) AND (c.anio = v.anio)) AND (c.cuota = v.cuota))))
     LEFT JOIN public.objeto o ON (((c.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.inm i ON (((c.obj_id)::text = (i.obj_id)::text)))
     LEFT JOIN public.objeto p ON (((o.num)::text = (p.obj_id)::text)))
     LEFT JOIN sam.sis_usuario di ON ((o.distrib = di.usr_id)))
     LEFT JOIN public.domi d ON (((((d.torigen)::text = 'OBJ'::text) AND ((d.obj_id)::text = (c.obj_id)::text)) AND (d.id = 0))))
     LEFT JOIN public.domi_calle ca ON ((d.calle_id = ca.calle_id)))
     LEFT JOIN public.domi_barrio bo ON ((d.barr_id = bo.barr_id)))
     LEFT JOIN public.domi_barrio ba ON ((i.barr_id = ba.barr_id)))
     LEFT JOIN public.domi_localidad l ON ((d.loc_id = l.loc_id)))
     LEFT JOIN public.domi_provincia pr ON ((l.prov_id = pr.prov_id)))
     LEFT JOIN public.emision_mensaje m ON ((c.ctacte_id = m.ctacte_id)))
     LEFT JOIN public.texto tx ON ((c.texto_id = tx.texto_id)))
     LEFT JOIN public.ctacte_test e ON ((c.est = e.cod)))
     LEFT JOIN sam.sis_usuario u ON ((c.usrmod = u.usr_id)))
     LEFT JOIN public.ddjj j ON ((c.ctacte_id = j.ctacte_id)))
     LEFT JOIN public.debito_adhe de ON (((((c.trib_id = de.trib_id) AND ((c.obj_id)::text = (de.obj_id)::text)) AND (((c.anio * 1000) + c.cuota) >= de.perdesde)) AND (((c.anio * 1000) + c.cuota) <= de.perhasta))));


ALTER TABLE public.v_emision_print OWNER TO postgres;

--
-- TOC entry 564 (class 1259 OID 5286004)
-- Name: v_emision_print_faci; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_emision_print_faci AS
 SELECT f.faci_id,
    f.trib_id,
    t.nombre AS trib_nom,
    t.nombre_redu AS trib_nom_red,
    t.nombre_reduhbank AS trib_nom_redhbank,
    t.tipo AS trib_tipo,
    t.calc_rec AS trib_calc_rec,
    f.obj_id,
    o.nombre AS obj_nom,
    o.obj_dato,
    (ascii(substr((f.obj_id)::text, 1, 1)) || substr((f.obj_id)::text, 2, 7)) AS codigolink,
    f.fchalta,
    o.num,
    p.nombre AS num_nom,
    o.distrib,
    COALESCE(di.nombre, ''::character varying) AS distrib_nom,
    o.tdistrib,
    btrim(((((((
        CASE COALESCE(ca.nombre, ''::character varying)
            WHEN ''::text THEN d.nomcalle
            ELSE ca.nombre
        END)::text || ' '::text) ||
        CASE (d.puerta)::text
            WHEN '0'::text THEN ''::text
            ELSE (d.puerta)::text
        END) ||
        CASE
            WHEN (btrim((d.piso)::text) <> ALL (ARRAY[''::text, '0'::text])) THEN (' Piso: '::text || (d.piso)::text)
            ELSE ''::text
        END) ||
        CASE
            WHEN (btrim((d.dpto)::text) <> ALL (ARRAY[''::text, '0'::text])) THEN (' Dpto: '::text || (d.dpto)::text)
            ELSE ''::text
        END) ||
        CASE COALESCE(btrim((d.det)::text), (''::character varying)::text)
            WHEN ''::text THEN ''::text
            ELSE ((' ('::text || btrim((d.det)::text)) || ')'::text)
        END)) AS domi,
        CASE
            WHEN (bo.nombre IS NOT NULL) THEN (('Barrio: '::text || (bo.nombre)::text) || '. '::text)
            ELSE ''::text
        END AS domi_det,
    (((l.nombre)::text || ' - '::text) || (pr.nombre)::text) AS codpos,
    bo.barr_id,
    bo.nombre AS barr_nom,
    f.monto,
    f.nominal,
    f.fchvenc,
    v.fchvencanual AS vencanual,
    o.tobj,
    t.genestcta,
    f.obs AS mensaje,
    sam.uf_caja_codbarra(2, f.obj_id, 0, f.faci_id, 0, f.monto, f.fchvenc) AS codbarra,
    sam.uf_code128c(sam.uf_caja_codbarra(2, f.obj_id, 0, f.faci_id, 0, f.monto, f.fchvenc)) AS codbarra_128c,
    f.fchimputa,
    f.est,
    e.nombre AS est_nom,
    (((u.nombre)::text || ' - '::text) || to_char(f.fchmod, 'DD/MM/YYYY'::text)) AS modif,
    (f.accesor - f.quita) AS accesor,
    i.nc,
    i.barr_id AS inm_barr_id,
    ba.nombre AS inm_barr_nom,
    btrim(((
        CASE COALESCE(ca.nombre, ''::character varying)
            WHEN ''::text THEN d.nomcalle
            ELSE ca.nombre
        END)::text ||
        CASE COALESCE(btrim((d.det)::text), ''::text)
            WHEN ''::text THEN ''::text
            ELSE ((' ('::text || btrim((d.det)::text)) || ')'::text)
        END)) AS calle,
    d.puerta,
    d.piso,
    d.dpto
   FROM ((((((((((((((public.facilida f
     LEFT JOIN public.trib t ON ((f.trib_id = t.trib_id)))
     LEFT JOIN public.trib_venc v ON ((((f.trib_id = v.trib_id) AND (date_part('year'::text, f.fchvenc) = (v.anio)::double precision)) AND (date_part('month'::text, f.fchvenc) = (v.cuota)::double precision))))
     LEFT JOIN public.objeto o ON (((f.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.inm i ON (((f.obj_id)::text = (i.obj_id)::text)))
     LEFT JOIN public.objeto p ON (((o.num)::text = (p.obj_id)::text)))
     LEFT JOIN sam.sis_usuario di ON ((o.distrib = di.usr_id)))
     LEFT JOIN public.domi d ON (((((d.torigen)::text = 'OBJ'::text) AND ((d.obj_id)::text = (f.obj_id)::text)) AND (d.id = 0))))
     LEFT JOIN public.domi_calle ca ON ((d.calle_id = ca.calle_id)))
     LEFT JOIN public.domi_barrio bo ON ((d.barr_id = bo.barr_id)))
     LEFT JOIN public.domi_barrio ba ON ((i.barr_id = ba.barr_id)))
     LEFT JOIN public.domi_localidad l ON ((d.loc_id = l.loc_id)))
     LEFT JOIN public.domi_provincia pr ON ((l.prov_id = pr.prov_id)))
     LEFT JOIN public.plan_test e ON ((f.est = e.cod)))
     LEFT JOIN sam.sis_usuario u ON ((f.usrmod = u.usr_id)));


ALTER TABLE public.v_emision_print_faci OWNER TO postgres;

--
-- TOC entry 565 (class 1259 OID 5286009)
-- Name: v_emision_print_sem; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_emision_print_sem AS
 SELECT c.ctacte_id,
    c.trib_id,
    t.nombre AS trib_nom,
    t.nombre_redu AS trib_nom_red,
    t.nombre_reduhbank AS trib_nom_redhbank,
    r.cant_anio,
    t.tipo AS trib_tipo,
    t.calc_rec AS trib_calc_rec,
    c.obj_id,
    o.nombre AS obj_nom,
    o.obj_dato,
    (ascii(substr((c.obj_id)::text, 1, 1)) || substr((c.obj_id)::text, 2, 7)) AS codigolink,
    c.subcta,
    c.anio,
    c.cuota,
    COALESCE(j.fchpresenta, (c.fchemi)::timestamp without time zone) AS fchemi,
    o.num,
    p.nombre AS num_nom,
    o.distrib,
    COALESCE(di.nombre, ''::character varying) AS distrib_nom,
    o.tdistrib,
    btrim(((((((
        CASE COALESCE(ca.nombre, ''::character varying)
            WHEN ''::text THEN d.nomcalle
            ELSE ca.nombre
        END)::text || ' '::text) ||
        CASE (d.puerta)::text
            WHEN '0'::text THEN ''::text
            ELSE (d.puerta)::text
        END) ||
        CASE
            WHEN (btrim((d.piso)::text) <> ALL (ARRAY[''::text, '0'::text])) THEN (' Piso: '::text || (d.piso)::text)
            ELSE ''::text
        END) ||
        CASE
            WHEN (btrim((d.dpto)::text) <> ALL (ARRAY[''::text, '0'::text])) THEN (' Dpto: '::text || (d.dpto)::text)
            ELSE ''::text
        END) ||
        CASE COALESCE(btrim((d.det)::text), (''::character varying)::text)
            WHEN ''::text THEN ''::text
            ELSE ((' ('::text || btrim((d.det)::text)) || ')'::text)
        END)) AS domi,
        CASE
            WHEN (bo.nombre IS NOT NULL) THEN (('Barrio: '::text || (bo.nombre)::text) || '. '::text)
            ELSE ''::text
        END AS domi_det,
    (((l.nombre)::text || ' - '::text) || (pr.nombre)::text) AS codpos,
    bo.barr_id,
    bo.nombre AS barr_nom,
        CASE
            WHEN ((c.ucm > (0)::numeric) AND (c.nominalcub = (0)::numeric)) THEN c.ucm
            ELSE (c.nominal + c.multa)
        END AS monto,
    c.nominalcub,
    (c.montovenc1 + c.multa) AS montovenc1,
    (c.montovenc2 + c.multa) AS montovenc2,
    c.montoanual,
        CASE
            WHEN (c.montoanual > (0)::numeric) THEN ((c.nominal * (r.cant_anio)::numeric) - c.montoanual)
            ELSE (0)::numeric
        END AS descanual,
        CASE
            WHEN (v.fchvenc1 IS NULL) THEN c.fchvenc
            ELSE v.fchvenc1
        END AS venc1,
        CASE
            WHEN (v.fchvenc2 IS NULL) THEN c.fchvenc
            ELSE v.fchvenc2
        END AS venc2,
    v.fchvencanual AS vencanual,
    o.tobj,
    t.genestcta,
    (
        CASE
            WHEN (c.texto_id = (-1)) THEN m.detalle
            WHEN (c.texto_id > 0) THEN tx.detalle
            ELSE c.obs
        END)::character varying(4000) AS mensaje,
    COALESCE(tx.titulo, ''::character varying) AS titulo_msj,
    c.texto_id,
    c.expe,
    sam.uf_caja_codbarra((c.trib_id)::integer, c.obj_id, (c.subcta)::integer, c.anio, (c.cuota)::integer, ((c.montovenc1 + c.multa) - c.nominalcub), c.fchvenc, (c.montovenc2 + c.multa),
        CASE
            WHEN (v.fchvenc2 IS NULL) THEN c.fchvenc
            ELSE v.fchvenc2
        END) AS codbarra,
    sam.uf_code128c(sam.uf_caja_codbarra((c.trib_id)::integer, c.obj_id, (c.subcta)::integer, c.anio, (c.cuota)::integer, ((c.montovenc1 + c.multa) - c.nominalcub), c.fchvenc, (c.montovenc2 + c.multa),
        CASE
            WHEN (v.fchvenc2 IS NULL) THEN c.fchvenc
            ELSE v.fchvenc2
        END)) AS codbarra_128c,
    sam.uf_caja_codbarra((c.trib_id)::integer, c.obj_id, (c.subcta)::integer, c.anio, 0, c.montoanual, v.fchvencanual) AS codbarraanual,
    sam.uf_code128c(sam.uf_caja_codbarra((c.trib_id)::integer, c.obj_id, (c.subcta)::integer, c.anio, 0, c.montoanual, v.fchvencanual)) AS codbarraanual_128c,
    sam.uf_caja_codbarra((c.trib_id)::integer, c.obj_id, (c.subcta)::integer, c.anio, (60 + ((2 + c.cuota) / 3)), s.montosem, s.fchvenc) AS codbarrasem,
    sam.uf_code128c(sam.uf_caja_codbarra((c.trib_id)::integer, c.obj_id, (c.subcta)::integer, c.anio, (60 + ((2 + c.cuota) / 3)), s.montosem, s.fchvenc)) AS codbarrasem_128c,
    s.descsem,
    s.montosem,
    s.fchvenc AS vencsem,
    c.fchpago,
    c.est,
        CASE
            WHEN (c.est = ''::bpchar) THEN 'Sin Aprobar'::character varying
            ELSE e.nombre
        END AS est_nom,
    (((u.nombre)::text || ' - '::text) || to_char(c.fchmod, 'DD/MM/YYYY'::text)) AS modif,
    j.dj_id,
    j.orden AS dj_orden,
    ('Rectif. N°: '::text || lpad(((j.orden)::character varying(2))::text, 2, '00'::text)) AS dj_orden_nom,
    0 AS accesor,
    i.nc,
    i.barr_id AS inm_barr_id,
    ba.nombre AS inm_barr_nom,
    btrim(((
        CASE COALESCE(ca.nombre, ''::character varying)
            WHEN ''::text THEN d.nomcalle
            ELSE ca.nombre
        END)::text ||
        CASE COALESCE(btrim((d.det)::text), ''::text)
            WHEN ''::text THEN ''::text
            ELSE ((' ('::text || btrim((d.det)::text)) || ')'::text)
        END)) AS calle,
    d.puerta,
    d.piso,
    d.dpto,
    te.usr_id,
    te.fila,
        CASE
            WHEN (de.adh_id IS NULL) THEN ''::text
            ELSE 'Contribuyente Adherido a débito'::text
        END AS mensaje_debito
   FROM (((((((((((((((((((((public.ctacte c
     LEFT JOIN temp.emi te ON ((c.ctacte_id = te.ctacte_id)))
     LEFT JOIN public.trib t ON ((c.trib_id = t.trib_id)))
     LEFT JOIN public.resol r ON ((((t.trib_id = r.trib_id) AND (((c.anio * 1000) + c.cuota) >= r.perdesde)) AND (((c.anio * 1000) + c.cuota) <= r.perhasta))))
     LEFT JOIN public.trib_venc v ON ((((c.trib_id = v.trib_id) AND (c.anio = v.anio)) AND (c.cuota = v.cuota))))
     LEFT JOIN public.objeto o ON (((c.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.inm i ON (((c.obj_id)::text = (i.obj_id)::text)))
     LEFT JOIN public.objeto p ON (((o.num)::text = (p.obj_id)::text)))
     LEFT JOIN sam.sis_usuario di ON ((o.distrib = di.usr_id)))
     LEFT JOIN public.domi d ON (((((d.torigen)::text = 'OBJ'::text) AND ((d.obj_id)::text = (c.obj_id)::text)) AND (d.id = 0))))
     LEFT JOIN public.domi_calle ca ON ((d.calle_id = ca.calle_id)))
     LEFT JOIN public.domi_barrio bo ON ((d.barr_id = bo.barr_id)))
     LEFT JOIN public.domi_barrio ba ON ((i.barr_id = ba.barr_id)))
     LEFT JOIN public.domi_localidad l ON ((d.loc_id = l.loc_id)))
     LEFT JOIN public.domi_provincia pr ON ((l.prov_id = pr.prov_id)))
     LEFT JOIN public.emision_mensaje m ON ((c.ctacte_id = m.ctacte_id)))
     LEFT JOIN public.texto tx ON ((c.texto_id = tx.texto_id)))
     LEFT JOIN public.ctacte_test e ON ((c.est = e.cod)))
     LEFT JOIN sam.sis_usuario u ON ((c.usrmod = u.usr_id)))
     LEFT JOIN public.ddjj j ON ((c.ctacte_id = j.ctacte_id)))
     LEFT JOIN public.ctacte_sem s ON ((c.ctacte_id = s.ctacte_id)))
     LEFT JOIN public.debito_adhe de ON ((((((c.trib_id = de.trib_id) AND ((c.obj_id)::text = (de.obj_id)::text)) AND (((c.anio * 1000) + c.cuota) >= de.perdesde)) AND (((c.anio * 1000) + c.cuota) <= de.perhasta)) AND ((de.est)::text = 'A'::text))));


ALTER TABLE public.v_emision_print_sem OWNER TO postgres;


--
-- TOC entry 567 (class 1259 OID 5286019)
-- Name: v_facilida; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_facilida AS
 SELECT f.faci_id,
    f.trib_id,
    t.nombre AS trib_nom,
    t.nombre_redu AS trib_nomredu,
    tj.nombre AS tobj_nom,
    f.obj_id,
    o.nombre AS obj_nom,
    o.obj_dato,
        CASE
            WHEN (o.num IS NULL) THEN ''::character varying
            ELSE o.num
        END AS num,
        CASE
            WHEN (op.nombre IS NULL) THEN ''::character varying
            ELSE op.nombre
        END AS num_nom,
    f.nominal,
    f.accesor,
    f.multa,
    (((f.nominal + f.accesor) + f.multa))::numeric(9,2) AS total,
    f.monto,
    f.est,
    e.nombre AS est_nom,
    (f.fchalta)::date AS fchalta,
    f.fchvenc,
    f.fchconsolida,
    (f.fchimputa)::date AS fchimputa,
    f.fchbaja,
    (((u2.nombre)::text || ' - '::text) || to_char(f.fchbaja, 'DD/MM/YYYY'::text)) AS baja,
    f.baja_auto,
    sam.uf_caja_codbarra(2, f.obj_id, 0, f.faci_id, 0, f.monto, f.fchvenc) AS codbarra,
    (((u.nombre)::text || ' - '::text) || to_char(f.fchmod, 'DD/MM/YYYY'::text)) AS modif
   FROM ((((((((public.facilida f
     LEFT JOIN public.trib t ON ((f.trib_id = t.trib_id)))
     LEFT JOIN public.objeto o ON (((f.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.objeto_tipo tj ON ((o.tobj = tj.cod)))
     LEFT JOIN public.persona p ON (((o.num)::text = (p.obj_id)::text)))
     LEFT JOIN public.objeto op ON (((p.obj_id)::text = (op.obj_id)::text)))
     LEFT JOIN public.plan_test e ON ((f.est = e.cod)))
     LEFT JOIN sam.sis_usuario u ON ((f.usrmod = u.usr_id)))
     LEFT JOIN sam.sis_usuario u2 ON ((f.usrbaja = u2.usr_id)));


ALTER TABLE public.v_facilida OWNER TO postgres;

--
-- TOC entry 568 (class 1259 OID 5286024)
-- Name: v_facilida_periodo; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_facilida_periodo AS
 SELECT p.faci_id,
    c.ctacte_id,
    c.obj_id,
    c.subcta,
    c.trib_id,
    t.nombre_redu AS trib_nom,
    c.anio,
    c.cuota,
    p.nominal,
    p.accesor,
    p.multa,
    ((((p.nominal + p.accesor) - p.quita) + p.multa))::numeric(9,2) AS total,
    p.quita,
    c.fchvenc,
    ((c.anio || '/'::text) || lpad(((c.cuota)::character varying(3))::text, 3, '0'::text)) AS periodo
   FROM ((public.facilida_periodo p
     LEFT JOIN public.ctacte c ON ((p.ctacte_id = c.ctacte_id)))
     LEFT JOIN public.trib t ON ((c.trib_id = t.trib_id)));


ALTER TABLE public.v_facilida_periodo OWNER TO postgres;

--
-- TOC entry 569 (class 1259 OID 5286029)
-- Name: v_fiscaliza; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_fiscaliza AS
 SELECT f.fisca_id,
    f.obj_id,
    o.nombre AS obj_nom,
    f.expe,
    f.inspector,
    i.nombre AS inspector_nom,
    f.fchalta,
    f.fchbaja,
    f.est,
    e.nombre AS est_nom,
    COALESCE((((u.nombre)::text || ' - '::text) || to_char(f.fchmod, 'DD/MM/YYYY'::text)), ''::text) AS modif,
    f.obs
   FROM ((((public.fiscaliza f
     JOIN public.objeto o ON (((f.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN sam.sis_usuario i ON ((f.inspector = i.usr_id)))
     JOIN public.fiscaliza_test e ON ((f.est = e.cod)))
     LEFT JOIN sam.sis_usuario u ON ((f.usrmod = u.usr_id)));


ALTER TABLE public.v_fiscaliza OWNER TO postgres;

--
-- TOC entry 675 (class 1259 OID 5317027)
-- Name: v_fiscaliza_rubro; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_fiscaliza_rubro AS
 SELECT c.obj_id,
    r.nomen_id,
    n.nombre AS nomen_nom,
    c.rubro_id,
    r.nombre AS rubro_nom,
    ((substr((c.perdesde)::text, 1, 4) || '-'::text) || substr((c.perdesde)::text, 5, 2)) AS perdesde,
    c.cant,
    c.est
   FROM ((public.objeto_rubro c
     JOIN public.rubro r ON (((c.rubro_id)::text = (r.rubro_id)::text)))
     JOIN public.rubro_tnomen n ON (((r.nomen_id)::text = (n.nomen_id)::text)))
  WHERE (c.fiscaliza = 1);


ALTER TABLE public.v_fiscaliza_rubro OWNER TO postgres;

--
-- TOC entry 570 (class 1259 OID 5286039)
-- Name: v_his_cem; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_his_cem AS
 SELECT o.obj_id,
    o.num,
    o.nombre,
    c.cod_ant,
    c.cua_id AS cuadro_id,
    c.cue_id AS cuerpo_id,
    t.nombre AS tipo_nom,
    c.piso,
    c.fila,
    c.nume,
    c.bis,
    c.cat,
    g.nombre AS deleg_nom,
    c.tomo,
    c.folio,
    c.fchcompra,
    c.fchingreso,
    c.fchvenc,
    x.nombre AS exenta_nom,
    c.edicto,
    e.nombre AS est_nom,
    o.distrib,
    o.tdistrib,
    o.obs,
    o.objunifica,
    o.vigencia,
    (((ua.nombre)::text || ' - '::text) || to_char(o.fchalta, 'DD/MM/YYYY'::text)) AS alta,
    (((um.nombre)::text || ' - '::text) || to_char(o.fchmod, 'DD/MM/YYYY'::text)) AS modif,
    (((ub.nombre)::text || ' - '::text) || to_char(o.fchbaja, 'DD/MM/YYYY'::text)) AS baja,
    'actual'::text AS histfchhora,
    now() AS hist
   FROM ((((((((public.objeto o
     LEFT JOIN public.cem c ON (((c.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.cem_tipo t ON (((c.tipo)::text = (t.cod)::text)))
     LEFT JOIN public.cem_tdeleg g ON ((c.deleg = g.cod)))
     LEFT JOIN public.cem_texenta x ON ((c.exenta = x.cod)))
     LEFT JOIN public.objeto_test e ON (((o.est = e.cod) AND (e.tobj = 4))))
     LEFT JOIN sam.sis_usuario ua ON ((o.usralta = ua.usr_id)))
     LEFT JOIN sam.sis_usuario um ON ((o.usrmod = um.usr_id)))
     LEFT JOIN sam.sis_usuario ub ON ((o.usrbaja = ub.usr_id)))
UNION
 SELECT o.obj_id,
    o.num,
    o.nombre,
    c.cod_ant,
    c.cua_id AS cuadro_id,
    c.cue_id AS cuerpo_id,
    t.nombre AS tipo_nom,
    c.piso,
    c.fila,
    c.nume,
    c.bis,
    c.cat,
    g.nombre AS deleg_nom,
    c.tomo,
    c.folio,
    c.fchcompra,
    c.fchingreso,
    c.fchvenc,
    x.nombre AS exenta_nom,
    c.edicto,
    e.nombre AS est_nom,
    o.distrib,
    o.tdistrib,
    o.obs,
    o.objunifica,
    o.vigencia,
    (((ua.nombre)::text || ' - '::text) || to_char(o.fchalta, 'DD/MM/YYYY'::text)) AS alta,
    (((um.nombre)::text || ' - '::text) || to_char(o.fchmod, 'DD/MM/YYYY'::text)) AS modif,
    (((ub.nombre)::text || ' - '::text) || to_char(o.fchbaja, 'DD/MM/YYYY'::text)) AS baja,
    to_char(o.fch_bd, 'DD/MM/YYYY HH:mm'::text) AS histfchhora,
    o.fch_bd AS hist
   FROM ((((((((public.his_objeto o
     LEFT JOIN public.his_cem c ON ((((c.obj_id)::text = (o.obj_id)::text) AND (date_trunc('minute'::text, o.fch_bd) = date_trunc('minute'::text, c.fch_bd)))))
     LEFT JOIN public.cem_tipo t ON (((c.tipo)::text = (t.cod)::text)))
     LEFT JOIN public.cem_tdeleg g ON ((c.deleg = g.cod)))
     LEFT JOIN public.cem_texenta x ON ((c.exenta = x.cod)))
     LEFT JOIN public.objeto_test e ON (((o.est = e.cod) AND (e.tobj = 4))))
     LEFT JOIN sam.sis_usuario ua ON ((o.usralta = ua.usr_id)))
     LEFT JOIN sam.sis_usuario um ON ((o.usrmod = um.usr_id)))
     LEFT JOIN sam.sis_usuario ub ON ((o.usrbaja = ub.usr_id)));


ALTER TABLE public.v_his_cem OWNER TO postgres;

--
-- TOC entry 571 (class 1259 OID 5286044)
-- Name: v_his_comer; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_his_comer AS
 SELECT o.obj_id,
    o.nombre,
    COALESCE(c.legajo, ''::character varying(10)) AS legajo,
    o.num,
    op.nombre AS num_nom,
    p.ndoc AS num_ndoc,
    p.iva,
    i.nombre AS iva_nom,
    p.cuit,
    p.ib,
    c.tipo,
    t.nombre AS tipo_nom,
    c.thab,
    h.nombre AS thab_nom,
    p.orgjuri,
    oj.nombre AS orgjuri_nom,
    p.tipoliq,
    tl.nombre AS tipoliq_nom,
    c.pi,
    c.alquila,
    c.cantemple,
    o.fchalta,
    c.fchhab,
    c.fchvenchab,
    o.fchbaja,
    c.supcub,
    c.supsemi,
    c.supdes,
    c.tel,
    c.mail,
    p.contador,
    uc.apenom AS contador_nom,
    c.zona,
    z.nombre AS zona_nom,
    c.inmueble,
    c.rodados,
    o.est,
    ec.nombre AS est_nom,
    o.objunifica AS objetounifica,
    o.distrib,
    o.fchmod,
    o.usrmod,
    um.apenom AS usrmod_nom,
    o.obs,
    (((ua.nombre)::text || ' - '::text) || to_char(o.fchalta, 'DD/MM/YYYY'::text)) AS alta,
    (((um.nombre)::text || ' - '::text) || to_char(o.fchmod, 'DD/MM/YYYY'::text)) AS modif,
    (((ub.nombre)::text || ' - '::text) || to_char(o.fchbaja, 'DD/MM/YYYY'::text)) AS baja,
    'actual'::text AS histfchhora,
    now() AS hist
   FROM ((((((((((((((public.objeto o
     JOIN public.comer c ON (((o.obj_id)::text = (c.obj_id)::text)))
     LEFT JOIN public.objeto op ON (((o.num)::text = (op.obj_id)::text)))
     LEFT JOIN public.persona p ON (((o.num)::text = (p.obj_id)::text)))
     LEFT JOIN public.objeto_test ec ON (((ec.tobj = 2) AND (ec.cod = o.est))))
     LEFT JOIN public.comer_tiva i ON ((p.iva = i.cod)))
     LEFT JOIN public.comer_tipo t ON ((c.tipo = t.cod)))
     LEFT JOIN public.comer_thab h ON (((c.thab)::text = (h.cod)::text)))
     LEFT JOIN public.comer_torgjuri oj ON ((p.orgjuri = oj.cod)))
     LEFT JOIN public.comer_tliq tl ON (((p.tipoliq)::text = (tl.cod)::text)))
     LEFT JOIN sam.sis_usuario uc ON ((p.contador = uc.usr_id)))
     LEFT JOIN public.comer_tzona z ON ((c.zona = z.cod)))
     LEFT JOIN sam.sis_usuario ua ON ((o.usralta = ua.usr_id)))
     LEFT JOIN sam.sis_usuario um ON ((o.usrmod = um.usr_id)))
     LEFT JOIN sam.sis_usuario ub ON ((o.usrbaja = ub.usr_id)))
UNION
 SELECT o.obj_id,
    o.nombre,
    COALESCE(c.legajo, ''::character varying(10)) AS legajo,
    o.num,
    op.nombre AS num_nom,
    p.ndoc AS num_ndoc,
    p.iva,
    i.nombre AS iva_nom,
    p.cuit,
    p.ib,
    c.tipo,
    t.nombre AS tipo_nom,
    c.thab,
    h.nombre AS thab_nom,
    p.orgjuri,
    oj.nombre AS orgjuri_nom,
    p.tipoliq,
    tl.nombre AS tipoliq_nom,
    c.pi,
    c.alquila,
    c.cantemple,
    o.fchalta,
    c.fchhab,
    c.fchvenchab,
    o.fchbaja,
    c.supcub,
    c.supsemi,
    c.supdes,
    c.tel,
    c.mail,
    p.contador,
    uc.apenom AS contador_nom,
    c.zona,
    z.nombre AS zona_nom,
    c.inmueble,
    c.rodados,
    o.est,
    ec.nombre AS est_nom,
    o.objunifica AS objetounifica,
    o.distrib,
    o.fchmod,
    o.usrmod,
    um.apenom AS usrmod_nom,
    o.obs,
    (((ua.nombre)::text || ' - '::text) || to_char(o.fchalta, 'DD/MM/YYYY'::text)) AS alta,
    (((um.nombre)::text || ' - '::text) || to_char(o.fchmod, 'DD/MM/YYYY'::text)) AS modif,
    (((ub.nombre)::text || ' - '::text) || to_char(o.fchbaja, 'DD/MM/YYYY'::text)) AS baja,
    to_char(o.fch_bd, 'DD/MM/YYYY HH:mm'::text) AS histfchhora,
    o.fch_bd AS hist
   FROM ((((((((((((((public.his_objeto o
     JOIN public.his_comer c ON (((o.obj_id)::text = (c.obj_id)::text)))
     LEFT JOIN public.objeto op ON (((o.num)::text = (op.obj_id)::text)))
     LEFT JOIN public.persona p ON (((o.num)::text = (p.obj_id)::text)))
     LEFT JOIN public.objeto_test ec ON (((ec.tobj = 2) AND (ec.cod = o.est))))
     LEFT JOIN public.comer_tiva i ON ((p.iva = i.cod)))
     LEFT JOIN public.comer_tipo t ON ((c.tipo = t.cod)))
     LEFT JOIN public.comer_thab h ON (((c.thab)::text = (h.cod)::text)))
     LEFT JOIN public.comer_torgjuri oj ON ((p.orgjuri = oj.cod)))
     LEFT JOIN public.comer_tliq tl ON (((p.tipoliq)::text = (tl.cod)::text)))
     LEFT JOIN sam.sis_usuario uc ON ((p.contador = uc.usr_id)))
     LEFT JOIN public.comer_tzona z ON ((c.zona = z.cod)))
     LEFT JOIN sam.sis_usuario ua ON ((o.usralta = ua.usr_id)))
     LEFT JOIN sam.sis_usuario um ON ((o.usrmod = um.usr_id)))
     LEFT JOIN sam.sis_usuario ub ON ((o.usrbaja = ub.usr_id)));


ALTER TABLE public.v_his_comer OWNER TO postgres;

--
-- TOC entry 572 (class 1259 OID 5286049)
-- Name: v_his_domi; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_his_domi AS
 SELECT d.obj_id,
    d.id,
    d.torigen,
    t.nombre AS torigen_nom,
    ((((((
        CASE COALESCE(c.nombre, ''::character varying)
            WHEN ''::text THEN d.nomcalle
            ELSE c.nombre
        END)::text ||
        CASE d.puerta
            WHEN 0 THEN ''::text
            ELSE lpad((d.puerta)::text, 5, ' '::text)
        END) ||
        CASE ltrim((d.piso)::text)
            WHEN ''::text THEN ''::text
            WHEN '0'::text THEN ''::text
            ELSE (' Piso: '::text || (d.piso)::text)
        END) ||
        CASE ltrim((d.dpto)::text)
            WHEN ''::text THEN ''::text
            WHEN '0'::text THEN ''::text
            ELSE (' Dpto: '::text || (d.dpto)::text)
        END) ||
        CASE ltrim((d.det)::text)
            WHEN ''::text THEN ''::text
            ELSE ((' ('::text || (d.det)::text) || ')'::text)
        END) ||
        CASE d.barr_id
            WHEN 0 THEN ''::text
            ELSE (' - B°: '::text || (b.nombre)::text)
        END) AS direccion,
    d.cp,
    d.loc_id AS loc,
    (((l.nombre)::text || ' - '::text) || (p.nombre)::text) AS locprov,
    d.calle_id,
        CASE d.nomcalle
            WHEN ''::text THEN c.nombre
            ELSE d.nomcalle
        END AS nomcalle,
    d.puerta,
    d.det,
    d.piso,
    d.dpto,
    d.barr_id,
    b.nombre AS barr_nom,
    (((um.nombre)::text || ' - '::text) || to_char(d.fchmod, 'DD/MM/YYYY'::text)) AS modif,
    'actual'::text AS histfchhora,
    now() AS hist
   FROM ((((((public.domi d
     LEFT JOIN public.domi_torigen t ON (((d.torigen)::text = (t.cod)::text)))
     LEFT JOIN public.domi_calle c ON ((d.calle_id = c.calle_id)))
     LEFT JOIN public.domi_localidad l ON ((d.loc_id = l.loc_id)))
     LEFT JOIN public.domi_provincia p ON ((l.prov_id = p.prov_id)))
     LEFT JOIN public.domi_barrio b ON ((d.barr_id = b.barr_id)))
     LEFT JOIN sam.sis_usuario um ON ((d.usrmod = um.usr_id)))
UNION
 SELECT d.obj_id,
    d.id,
    d.torigen,
    t.nombre AS torigen_nom,
    ((((((
        CASE COALESCE(c.nombre, ''::character varying)
            WHEN ''::text THEN d.nomcalle
            ELSE c.nombre
        END)::text ||
        CASE d.puerta
            WHEN 0 THEN ''::text
            ELSE lpad((d.puerta)::text, 5, ' '::text)
        END) ||
        CASE ltrim((d.piso)::text)
            WHEN ''::text THEN ''::text
            WHEN '0'::text THEN ''::text
            ELSE (' Piso: '::text || (d.piso)::text)
        END) ||
        CASE ltrim((d.dpto)::text)
            WHEN ''::text THEN ''::text
            WHEN '0'::text THEN ''::text
            ELSE (' Dpto: '::text || (d.dpto)::text)
        END) ||
        CASE ltrim((d.det)::text)
            WHEN ''::text THEN ''::text
            ELSE ((' ('::text || (d.det)::text) || ')'::text)
        END) ||
        CASE d.barr_id
            WHEN 0 THEN ''::text
            ELSE (' - B°: '::text || (b.nombre)::text)
        END) AS direccion,
    d.cp,
    d.loc_id AS loc,
    (((l.nombre)::text || ' - '::text) || (p.nombre)::text) AS locprov,
    d.calle_id,
        CASE d.nomcalle
            WHEN ''::text THEN c.nombre
            ELSE d.nomcalle
        END AS nomcalle,
    d.puerta,
    d.det,
    d.piso,
    d.dpto,
    d.barr_id,
    b.nombre AS barr_nom,
    (((um.nombre)::text || ' - '::text) || to_char(d.fchmod, 'DD/MM/YYYY'::text)) AS modif,
    to_char(d.fch_bd, 'DD/MM/YYYY HH:mm'::text) AS histfchhora,
    d.fch_bd AS hist
   FROM ((((((public.his_domi d
     LEFT JOIN public.domi_torigen t ON (((d.torigen)::text = (t.cod)::text)))
     LEFT JOIN public.domi_calle c ON ((d.calle_id = c.calle_id)))
     LEFT JOIN public.domi_localidad l ON ((d.loc_id = l.loc_id)))
     LEFT JOIN public.domi_provincia p ON ((l.prov_id = p.prov_id)))
     LEFT JOIN public.domi_barrio b ON ((d.barr_id = b.barr_id)))
     LEFT JOIN sam.sis_usuario um ON ((d.usrmod = um.usr_id)));


ALTER TABLE public.v_his_domi OWNER TO postgres;

--
-- TOC entry 682 (class 1259 OID 5486492)
-- Name: v_his_inm; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_his_inm AS
 SELECT o.obj_id,
    o.num,
    o.nombre,
    i.s1,
    i.s2,
    i.s3,
    i.manz,
    i.parc,
    i.parp,
    i.parporigen,
    i.plano,
    i.anio_mensura,
    i.uf,
    i.porcuf AS porc_uf,
    i.nc_ant,
    us.nombre AS urbsub_nom,
    r.nombre AS regimen_nom,
    ti.nombre AS tinm_nom,
    t.nombre AS titularidad_nom,
    u.nombre AS uso_nom,
    tm.nombre AS tmatric_nom,
    i.matric,
    i.fchmatric,
    i.anio,
    i.supt,
    i.supt_pasillo,
    i.supm,
    i.avalt,
    i.avalm,
    i.frente,
    i.es_esquina,
    i.es_calleppal,
    zt.nombre AS zonat_nom,
    zv.nombre AS zonav_nom,
    zo.nombre AS zonaop_nom,
    i.agua,
    i.cloaca,
    i.gas,
    s.nombre AS alum_nom,
    tp.nombre AS pav_nom,
    i.coef AS valbas,
    i.valbas AS coef,
    b.nombre AS barr_nom,
    i.patrimonio,
    i.objeto_superp,
    i.archivo,
    i.expe,
    i.comprador,
    e.nombre AS est_nom,
    o.distrib,
    o.tdistrib,
    o.obs,
    o.objunifica,
    o.vigencia,
    (((ua.nombre)::text || ' - '::text) || to_char(o.fchalta, 'DD/MM/YYYY'::text)) AS alta,
    (((um.nombre)::text || ' - '::text) || to_char(o.fchmod, 'DD/MM/YYYY'::text)) AS modif,
    (((ub.nombre)::text || ' - '::text) || to_char(o.fchbaja, 'DD/MM/YYYY'::text)) AS baja,
    'actual'::text AS histfchhora,
    now() AS hist
   FROM (((((((((((((((((public.objeto o
     LEFT JOIN public.inm i ON (((i.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.inm_turbsub us ON (((i.urbsub)::text = (us.cod)::text)))
     LEFT JOIN public.inm_tregimen r ON ((i.regimen = r.cod)))
     LEFT JOIN public.inm_tipo ti ON (((i.tinm)::text = (ti.cod)::text)))
     LEFT JOIN public.inm_ttitularidad t ON (((i.titularidad)::text = (t.cod)::text)))
     LEFT JOIN public.inm_tuso u ON ((i.uso = u.cod)))
     LEFT JOIN public.inm_tmatric tm ON (((i.tmatric)::text = (tm.cod)::text)))
     LEFT JOIN public.inm_tzonat zt ON (((i.zonat)::text = (zt.cod)::text)))
     LEFT JOIN public.inm_tzonav zv ON ((i.zonav = zv.cod)))
     LEFT JOIN public.inm_tzonaop zo ON ((i.zonaop = zo.cod)))
     LEFT JOIN public.inm_talum s ON ((i.alum = s.cod)))
     LEFT JOIN public.objeto_test e ON (((e.tobj = 1) AND (o.est = e.cod))))
     LEFT JOIN public.domi_barrio b ON ((i.barr_id = b.barr_id)))
     LEFT JOIN public.domi_tpav tp ON ((i.pav = tp.cod)))
     LEFT JOIN sam.sis_usuario ua ON ((o.usralta = ua.usr_id)))
     LEFT JOIN sam.sis_usuario um ON ((o.usrmod = um.usr_id)))
     LEFT JOIN sam.sis_usuario ub ON ((o.usrbaja = ub.usr_id)))
UNION
 SELECT o.obj_id,
    o.num,
    o.nombre,
    i.s1,
    i.s2,
    i.s3,
    i.manz,
    i.parc,
    i.parp,
    i.parporigen,
    i.plano,
    i.anio_mensura,
    i.uf,
    i.porcuf AS porc_uf,
    i.nc_ant,
    us.nombre AS urbsub_nom,
    r.nombre AS regimen_nom,
    ti.nombre AS tinm_nom,
    t.nombre AS titularidad_nom,
    u.nombre AS uso_nom,
    tm.nombre AS tmatric_nom,
    i.matric,
    i.fchmatric,
    i.anio,
    i.supt,
    i.supt_pasillo,
    i.supm,
    i.avalt,
    i.avalm,
    i.frente,
    i.es_esquina,
    i.es_calleppal,
    zt.nombre AS zonat_nom,
    zv.nombre AS zonav_nom,
    zo.nombre AS zonaop_nom,
    i.agua,
    i.cloaca,
    i.gas,
    s.nombre AS alum_nom,
    tp.nombre AS pav_nom,
    i.coef AS valbas,
    i.valbas AS coef,
    b.nombre AS barr_nom,
    i.patrimonio,
    i.objeto_superp,
    i.archivo,
    i.expe,
    i.comprador,
    e.nombre AS est_nom,
    o.distrib,
    o.tdistrib,
    o.obs,
    o.objunifica,
    o.vigencia,
    (((ua.nombre)::text || ' - '::text) || to_char(o.fchalta, 'DD/MM/YYYY'::text)) AS alta,
    (((um.nombre)::text || ' - '::text) || to_char(o.fchmod, 'DD/MM/YYYY'::text)) AS modif,
    (((ub.nombre)::text || ' - '::text) || to_char(o.fchbaja, 'DD/MM/YYYY'::text)) AS baja,
    to_char(o.fch_bd, 'DD/MM/YYYY HH:mm'::text) AS histfchhora,
    o.fch_bd AS hist
   FROM (((((((((((((((((public.his_objeto o
     LEFT JOIN public.his_inm i ON ((((i.obj_id)::text = (o.obj_id)::text) AND (date_trunc('minute'::text, o.fch_bd) = date_trunc('minute'::text, i.fch_bd)))))
     LEFT JOIN public.inm_turbsub us ON (((i.urbsub)::text = (us.cod)::text)))
     LEFT JOIN public.inm_tregimen r ON ((i.regimen = r.cod)))
     LEFT JOIN public.inm_tipo ti ON (((i.tinm)::text = (ti.cod)::text)))
     LEFT JOIN public.inm_ttitularidad t ON (((i.titularidad)::text = (t.cod)::text)))
     LEFT JOIN public.inm_tuso u ON ((i.uso = u.cod)))
     LEFT JOIN public.inm_tmatric tm ON (((i.tmatric)::text = (tm.cod)::text)))
     LEFT JOIN public.inm_tzonat zt ON (((i.zonat)::text = (zt.cod)::text)))
     LEFT JOIN public.inm_tzonav zv ON ((i.zonav = zv.cod)))
     LEFT JOIN public.inm_tzonaop zo ON ((i.zonaop = zo.cod)))
     LEFT JOIN public.inm_talum s ON ((i.alum = s.cod)))
     LEFT JOIN public.objeto_test e ON (((e.tobj = 1) AND (o.est = e.cod))))
     LEFT JOIN public.domi_barrio b ON ((i.barr_id = b.barr_id)))
     LEFT JOIN public.domi_tpav tp ON ((i.pav = tp.cod)))
     LEFT JOIN sam.sis_usuario ua ON ((o.usralta = ua.usr_id)))
     LEFT JOIN sam.sis_usuario um ON ((o.usrmod = um.usr_id)))
     LEFT JOIN sam.sis_usuario ub ON ((o.usrbaja = ub.usr_id)));


ALTER TABLE public.v_his_inm OWNER TO postgres;

--
-- TOC entry 573 (class 1259 OID 5286059)
-- Name: v_his_persona; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_his_persona AS
 SELECT o.obj_id,
    o.num,
    o.nombre,
    p.inscrip,
    t.nombre AS tipo_nom,
    d.nombre AS tdoc_nom,
    p.ndoc,
    COALESCE(to_char((p.fchnac)::timestamp with time zone, 'DD/MM/YYYY'::text), ''::text) AS fchnac,
    p.sexo,
    COALESCE(n.nombre, ''::character varying) AS nacionalidad_nom,
    COALESCE(ec.nombre, ''::character varying) AS estcivil_nom,
    COALESCE(c.nombre, ''::character varying) AS clasif_nom,
    COALESCE(i.nombre, ''::character varying) AS iva_nom,
    p.cuit,
    p.ag_rete,
    p.tel,
    p.mail,
    p.est_ib,
    teib.nombre AS est_ib_nom,
    p.ib,
    p.orgjuri,
    oj.nombre AS orgjuri_nom,
    p.tipoliq,
    tl.nombre AS tipoliq_nom,
    p.fchalta_ib,
    p.fchbaja_ib,
    p.nombre_fantasia,
    p.tbaja_ib,
    tb.nombre AS tbaja_ib_nom,
    e.nombre AS est_nom,
    o.distrib,
    o.tdistrib,
    o.obs,
    o.objunifica,
    o.vigencia,
    (((ua.nombre)::text || ' - '::text) || to_char(o.fchalta, 'DD/MM/YYYY'::text)) AS alta,
    (((um.nombre)::text || ' - '::text) || to_char(o.fchmod, 'DD/MM/YYYY'::text)) AS modif,
    (((ub.nombre)::text || ' - '::text) || to_char(o.fchbaja, 'DD/MM/YYYY'::text)) AS baja,
    'actual'::text AS histfchhora,
    now() AS hist
   FROM (((((((((((((((public.objeto o
     LEFT JOIN public.persona p ON (((p.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.persona_tipo t ON ((p.tipo = t.cod)))
     LEFT JOIN public.persona_tdoc d ON ((p.tdoc = d.cod)))
     LEFT JOIN public.persona_tnac n ON ((p.nacionalidad = n.cod)))
     LEFT JOIN public.comer_tiva i ON ((p.iva = i.cod)))
     LEFT JOIN public.persona_testcivil ec ON ((p.estcivil = ec.cod)))
     LEFT JOIN public.persona_tclasif c ON ((p.clasif = c.cod)))
     LEFT JOIN public.persona_test_ib teib ON (((p.est_ib)::text = (teib.cod)::text)))
     LEFT JOIN public.persona_tbajaib tb ON (((p.tbaja_ib)::text = (tb.cod)::text)))
     LEFT JOIN public.comer_torgjuri oj ON ((p.orgjuri = oj.cod)))
     LEFT JOIN public.comer_tliq tl ON (((p.tipoliq)::text = (tl.cod)::text)))
     LEFT JOIN public.objeto_test e ON (((o.est = e.cod) AND (e.tobj = 3))))
     LEFT JOIN sam.sis_usuario ua ON ((o.usralta = ua.usr_id)))
     LEFT JOIN sam.sis_usuario um ON ((o.usrmod = um.usr_id)))
     LEFT JOIN sam.sis_usuario ub ON ((o.usrbaja = ub.usr_id)))
UNION
 SELECT o.obj_id,
    o.num,
    o.nombre,
    p.inscrip,
    t.nombre AS tipo_nom,
    d.nombre AS tdoc_nom,
    p.ndoc,
    COALESCE(to_char((p.fchnac)::timestamp with time zone, 'DD/MM/YYYY'::text), ''::text) AS fchnac,
    p.sexo,
    COALESCE(n.nombre, ''::character varying) AS nacionalidad_nom,
    COALESCE(ec.nombre, ''::character varying) AS estcivil_nom,
    COALESCE(c.nombre, ''::character varying) AS clasif_nom,
    COALESCE(i.nombre, ''::character varying) AS iva_nom,
    p.cuit,
    p.ag_rete,
    p.tel,
    p.mail,
    p.est_ib,
    teib.nombre AS est_ib_nom,
    p.ib,
    p.orgjuri,
    oj.nombre AS orgjuri_nom,
    p.tipoliq,
    tl.nombre AS tipoliq_nom,
    p.fchalta_ib,
    p.fchbaja_ib,
    p.nombre_fantasia,
    p.tbaja_ib,
    tb.nombre AS tbaja_ib_nom,
    e.nombre AS est_nom,
    o.distrib,
    o.tdistrib,
    o.obs,
    o.objunifica,
    o.vigencia,
    (((ua.nombre)::text || ' - '::text) || to_char(o.fchalta, 'DD/MM/YYYY'::text)) AS alta,
    (((um.nombre)::text || ' - '::text) || to_char(o.fchmod, 'DD/MM/YYYY'::text)) AS modif,
    (((ub.nombre)::text || ' - '::text) || to_char(o.fchbaja, 'DD/MM/YYYY'::text)) AS baja,
    to_char(o.fch_bd, 'DD/MM/YYYY HH:mm'::text) AS histfchhora,
    o.fch_bd AS hist
   FROM (((((((((((((((public.his_objeto o
     LEFT JOIN public.his_persona p ON ((((p.obj_id)::text = (o.obj_id)::text) AND (date_trunc('minute'::text, o.fch_bd) = date_trunc('minute'::text, p.fch_bd)))))
     LEFT JOIN public.persona_tipo t ON ((p.tipo = t.cod)))
     LEFT JOIN public.persona_tdoc d ON ((p.tdoc = d.cod)))
     LEFT JOIN public.persona_tnac n ON ((p.nacionalidad = n.cod)))
     LEFT JOIN public.comer_tiva i ON ((p.iva = i.cod)))
     LEFT JOIN public.persona_testcivil ec ON ((p.estcivil = ec.cod)))
     LEFT JOIN public.persona_tclasif c ON ((p.clasif = c.cod)))
     LEFT JOIN public.persona_test_ib teib ON (((p.est_ib)::text = (teib.cod)::text)))
     LEFT JOIN public.persona_tbajaib tb ON (((p.tbaja_ib)::text = (tb.cod)::text)))
     LEFT JOIN public.comer_torgjuri oj ON ((p.orgjuri = oj.cod)))
     LEFT JOIN public.comer_tliq tl ON (((p.tipoliq)::text = (tl.cod)::text)))
     LEFT JOIN public.objeto_test e ON (((o.est = e.cod) AND (e.tobj = 3))))
     LEFT JOIN sam.sis_usuario ua ON ((o.usralta = ua.usr_id)))
     LEFT JOIN sam.sis_usuario um ON ((o.usrmod = um.usr_id)))
     LEFT JOIN sam.sis_usuario ub ON ((o.usrbaja = ub.usr_id)));


ALTER TABLE public.v_his_persona OWNER TO postgres;

--
-- TOC entry 574 (class 1259 OID 5286064)
-- Name: v_his_plan; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_his_plan AS
 SELECT p.plan_id,
    p.tplan,
    t.nombre AS tplan_nom,
    p.obj_id,
    o.nombre AS obj_nom,
    o.obj_dato,
    o.tobj AS obj_tipo,
    p.num,
    COALESCE(co.nombre, ''::character varying) AS num_nom,
    p.resp,
    p.resptdoc,
    p.respndoc,
    d.direccion AS respdompos_dir,
    p.resptel,
    p.nominal,
    p.accesor,
    p.multa,
    p.financia,
    p.sellado,
    p.anticipo,
    ((p.nominal + p.accesor) + p.multa) AS total,
    p.origen,
    r.nombre AS origen_nom,
    p.tpago,
    COALESCE(a.nombre, ''::character varying) AS tpago_nom,
    p.est,
    e.nombre AS est_nom,
    p.cuotas,
    p.montocuo,
    p.planant,
    p.fchalta,
    p.fchbaja,
    p.fchimputa,
    p.fchdecae,
    p.fchconsolida,
    p.descnominal,
    p.descinteres,
    p.descmulta,
    p.interes,
    p.obs,
    t.descnominal AS tdescnominal,
    t.descinteres AS tdescinteres,
    t.descmulta AS tdescmulta,
    t.interes AS tinteres,
    p.fchmod,
    ( SELECT count(*) AS count
           FROM public.ctacte
          WHERE ((((ctacte.trib_id = 1) AND (ctacte.anio = p.plan_id)) AND (ctacte.est = 'D'::bpchar)) AND (ctacte.fchvenc < '2014-08-06'::date))) AS cuotasatrasadas,
    ( SELECT max(ctacte.fchvenc) AS ultvenc
           FROM public.ctacte
          WHERE ((ctacte.trib_id = 1) AND (ctacte.anio = p.plan_id))) AS ultvenc,
    COALESCE((((ua.nombre)::text || ' - '::text) || to_char(p.fchalta, 'DD/MM/YYYY'::text)), ''::text) AS alta,
    COALESCE((((um.nombre)::text || ' - '::text) || to_char(p.fchmod, 'DD/MM/YYYY'::text)), ''::text) AS modif,
    p.distrib,
    p.caja_id,
    COALESCE(ca.nombre, ''::character varying) AS caja_nom,
    p.temple,
    COALESCE(te.nombre, ''::character varying) AS temple_nom,
    p.temple_area,
    p.bco_suc,
    b.nombre AS bco_suc_nom,
    p.bco_tcta,
    bc.nombre AS bco_tcta_nom,
    p.tpago_nro,
    p.fch_bd,
    p.usr_bd
   FROM (((((((((((((public.his_plan p
     LEFT JOIN public.objeto o ON (((p.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.objeto co ON (((p.num)::text = (co.obj_id)::text)))
     LEFT JOIN public.plan_config t ON ((p.tplan = t.cod)))
     LEFT JOIN public.plan_torigen r ON ((p.origen = r.cod)))
     LEFT JOIN public.plan_tpago a ON ((p.tpago = a.cod)))
     LEFT JOIN public.plan_test e ON ((p.est = e.cod)))
     LEFT JOIN public.plan_temple te ON (((te.caja_id = p.caja_id) AND (te.cod = p.temple))))
     LEFT JOIN public.caja ca ON ((p.caja_id = ca.caja_id)))
     LEFT JOIN public.banco b ON (((b.bco_ent = ca.ext_bco_ent) AND (b.bco_suc = p.bco_suc))))
     LEFT JOIN public.banco_tcuenta bc ON ((bc.cod = p.bco_tcta)))
     LEFT JOIN public.v_domi d ON (((((d.torigen)::text = 'PLA'::text) AND (d.id = p.plan_id)) AND ((d.obj_id)::text = (p.obj_id)::text))))
     LEFT JOIN sam.sis_usuario ua ON ((p.usralta = ua.usr_id)))
     LEFT JOIN sam.sis_usuario um ON ((p.usrmod = um.usr_id)));


ALTER TABLE public.v_his_plan OWNER TO postgres;


--
-- TOC entry 683 (class 1259 OID 5486502)
-- Name: v_inm_aval; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_inm_aval AS
 SELECT i.obj_id,
    o.nombre,
    i.s1,
    i.s2,
    i.s3,
    i.manz,
    i.parc,
    i.parp,
    i.plano,
    i.urbsub,
    i.uf,
    i.porcuf,
    da.direccion AS dompar_dir,
    a.es_esquina,
    a.es_calleppal,
    COALESCE(zt.nombre, ''::character varying) AS zonat_nom,
    COALESCE(zop.nombre, ''::character varying) AS zonaop_nom,
    a.agua,
    a.cloaca,
    a.gas,
    s.nombre AS alum_nom,
    p.nombre AS pav_nom,
    i.coef,
    i.valbas,
    a.frente,
    a.supt,
    a.supm,
    a.avalt,
    a.avalm,
    r.nombre AS regimen_nom,
    COALESCE(oc.nombre, ''::character varying) AS comprador,
    a.perdesde,
    a.perhasta
   FROM ((((((((((public.inm i
     LEFT JOIN public.objeto o ON (((i.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.inm_avaluo a ON (((i.obj_id)::text = (a.obj_id)::text)))
     LEFT JOIN public.inm_turbsub us ON (((i.urbsub)::text = (us.cod)::text)))
     LEFT JOIN public.inm_tzonat zt ON (((a.zonat)::text = (zt.cod)::text)))
     LEFT JOIN public.inm_tzonaop zop ON ((a.zonaop = zop.cod)))
     LEFT JOIN public.inm_talum s ON ((a.alum = s.cod)))
     LEFT JOIN public.domi_tpav p ON ((a.pav = p.cod)))
     LEFT JOIN public.inm_tregimen r ON ((a.regimen = r.cod)))
     LEFT JOIN public.v_domi da ON ((((da.torigen)::text = 'INM'::text) AND ((i.obj_id)::text = (da.obj_id)::text))))
     LEFT JOIN public.objeto oc ON (((i.comprador)::text = (oc.obj_id)::text)));


ALTER TABLE public.v_inm_aval OWNER TO postgres;

--
-- TOC entry 575 (class 1259 OID 5286079)
-- Name: v_inm_frente; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_inm_frente AS
 SELECT f.obj_id,
    f.calle_id,
    c.nombre AS calle_nom,
    f.medida
   FROM (public.inm_frente f
     JOIN public.domi_calle c ON ((f.calle_id = c.calle_id)));


ALTER TABLE public.v_inm_frente OWNER TO postgres;

--
-- TOC entry 576 (class 1259 OID 5286083)
-- Name: v_inm_frentista; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_inm_frentista AS
 SELECT "substring"((i.nc)::text, 1, 10) AS ncc,
    f.calle_id,
    i.obj_id,
    i.s1,
    i.s2,
    i.s3,
    i.manz,
    i.parc,
    i.uf,
    o.nombre,
    d.direccion,
    i.regimen,
    r.nombre AS regimen_nom,
    i.supt,
    i.supm,
    i.frente
   FROM ((((public.objeto o
     JOIN public.inm i ON (((o.obj_id)::text = (i.obj_id)::text)))
     JOIN public.inm_frente f ON (((i.obj_id)::text = (f.obj_id)::text)))
     LEFT JOIN public.v_domi d ON ((((d.torigen)::text = 'INM'::text) AND ((d.obj_id)::text = (i.obj_id)::text))))
     LEFT JOIN public.inm_tregimen r ON ((i.regimen = r.cod)));


ALTER TABLE public.v_inm_frentista OWNER TO postgres;

--
-- TOC entry 577 (class 1259 OID 5286088)
-- Name: v_inm_mej; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_inm_mej AS
 SELECT m.obj_id,
    m.pol,
    m.perdesde,
    ((substr((m.perdesde)::text, 1, 4) || '-'::text) || substr((m.perdesde)::text, 5, 3)) AS perdesde_nom,
    m.perhasta,
    m.tori,
    r.nombre AS tori_nom,
    m.tform,
    m.nivel,
    m.tdest,
    d.nombre AS tdest_nom,
    m.tobra,
    o.nombre AS tobra_nom,
    m.anio,
    m.est,
    e.nombre AS est_nom,
    m.supcub,
    m.supsemi,
    m.plantas,
    m.cat,
    m.item01,
    m.item02,
    m.item03,
    m.item04,
    m.item05,
    m.item06,
    m.item07,
    m.item08,
    m.item09,
    m.item10,
    m.item11,
    m.item12,
    m.item13,
    m.item14,
    m.item15,
    m.estado,
    m.fchmod,
    m.usrmod
   FROM ((((public.inm_mej m
     LEFT JOIN public.inm_mej_tdest d ON ((m.tdest = d.cod)))
     LEFT JOIN public.inm_mej_tobra o ON ((m.tobra = o.cod)))
     LEFT JOIN public.inm_mej_test e ON ((m.est = e.cod)))
     LEFT JOIN public.inm_mej_tori r ON (((m.tori)::text = (r.cod)::text)));


ALTER TABLE public.v_inm_mej OWNER TO postgres;

--
-- TOC entry 578 (class 1259 OID 5286093)
-- Name: v_inm_osm; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_inm_osm AS
 SELECT o.obj_id,
    o.subcta,
    o.ctaosm,
    o.fchinicio,
    o.tliq,
    l.nombre AS tliq_nom,
    o.tipomedidor,
    t.nombre AS tipomedidor_nom,
    o.nummedidor,
    j.nombre,
    i.s1,
    i.s2,
    i.s3,
    i.manz,
    i.parc,
    i.uf,
    o.fchmod,
    o.usrmod
   FROM ((((public.osm o
     LEFT JOIN public.inm i ON (((o.obj_id)::text = (i.obj_id)::text)))
     LEFT JOIN public.objeto j ON (((o.obj_id)::text = (j.obj_id)::text)))
     LEFT JOIN public.osm_tipo t ON ((o.tipomedidor = t.cod)))
     LEFT JOIN public.osm_tliq l ON ((o.tliq = l.cod)));


ALTER TABLE public.v_inm_osm OWNER TO postgres;

--
-- TOC entry 579 (class 1259 OID 5286098)
-- Name: v_inm_restric; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_inm_restric AS
 SELECT s.obj_id,
    s.orden,
    s.trestric,
    t.nombre AS trestric_nom,
    s.sup,
    s.inscrip,
    s.obs,
    (((u.nombre)::text || ' - '::text) || to_char(s.fchmod, 'DD/MM/YYYY'::text)) AS modif
   FROM ((public.inm_restric s
     LEFT JOIN public.inm_trestric t ON ((s.trestric = t.cod)))
     LEFT JOIN sam.sis_usuario u ON ((s.usrmod = u.usr_id)));


ALTER TABLE public.v_inm_restric OWNER TO postgres;

--
-- TOC entry 647 (class 1259 OID 5287279)
-- Name: sis_usuario_usr_id_seq; Type: SEQUENCE; Schema: sam; Owner: postgres
--

CREATE SEQUENCE sam.sis_usuario_usr_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE sam.sis_usuario_usr_id_seq OWNER TO postgres;

--
-- TOC entry 581 (class 1259 OID 5286105)
-- Name: usuarioweb; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.usuarioweb (
    usr_id integer DEFAULT nextval('sam.sis_usuario_usr_id_seq'::regclass) NOT NULL,
    nombre character varying(15) NOT NULL,
    clave character varying(32) NOT NULL,
    obj_id character varying(8) NOT NULL,
    acc_contrib character(1) NOT NULL,
    acc_dj character(1) NOT NULL,
    acc_proveedor character(1) NOT NULL,
    acc_agrete character(1) NOT NULL,
    acc_escribano character varying(1),
    mail character varying(40),
    est character(1) NOT NULL,
    fchmod timestamp without time zone NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE sam.usuarioweb OWNER TO postgres;

--
-- TOC entry 8489 (class 0 OID 0)
-- Dependencies: 581
-- Name: TABLE usuarioweb; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.usuarioweb IS 'DATOS PRINCIPALES Y CONFIGURACIÓN DE USUARIOS WEB';


--
-- TOC entry 8490 (class 0 OID 0)
-- Dependencies: 581
-- Name: COLUMN usuarioweb.usr_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.usuarioweb.usr_id IS 'CODIGO';


--
-- TOC entry 8491 (class 0 OID 0)
-- Dependencies: 581
-- Name: COLUMN usuarioweb.nombre; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.usuarioweb.nombre IS 'NOMBRE';


--
-- TOC entry 8492 (class 0 OID 0)
-- Dependencies: 581
-- Name: COLUMN usuarioweb.clave; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.usuarioweb.clave IS 'CLAVE ENCRIPTADA';


--
-- TOC entry 8493 (class 0 OID 0)
-- Dependencies: 581
-- Name: COLUMN usuarioweb.obj_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.usuarioweb.obj_id IS 'CODIGO DE OBJETO DE CONTRIBUYENTE';


--
-- TOC entry 8494 (class 0 OID 0)
-- Dependencies: 581
-- Name: COLUMN usuarioweb.acc_contrib; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.usuarioweb.acc_contrib IS 'SI TIENE ACCESO AL FORMULARIO DE AGENTE DE RETENCION VINCULADO AL CONTRIBUYENTE';


--
-- TOC entry 8495 (class 0 OID 0)
-- Dependencies: 581
-- Name: COLUMN usuarioweb.acc_proveedor; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.usuarioweb.acc_proveedor IS 'SI TIENE ACCESO A CONSULTAR INFORMACION BASICA DE PROVEEDOR, SALDO Y OC/OP PEDIENTES';


--
-- TOC entry 8496 (class 0 OID 0)
-- Dependencies: 581
-- Name: COLUMN usuarioweb.acc_escribano; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.usuarioweb.acc_escribano IS 'SI TIENE ACCESO AL MODULO DE ESCRIBANO';


--
-- TOC entry 8497 (class 0 OID 0)
-- Dependencies: 581
-- Name: COLUMN usuarioweb.mail; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.usuarioweb.mail IS 'MAIL';


--
-- TOC entry 8498 (class 0 OID 0)
-- Dependencies: 581
-- Name: COLUMN usuarioweb.est; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.usuarioweb.est IS 'ESTADO';


--
-- TOC entry 8499 (class 0 OID 0)
-- Dependencies: 581
-- Name: COLUMN usuarioweb.fchmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.usuarioweb.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8500 (class 0 OID 0)
-- Dependencies: 581
-- Name: COLUMN usuarioweb.usrmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.usuarioweb.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 680 (class 1259 OID 5486482)
-- Name: v_inm; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_inm AS
 SELECT i.obj_id,
    o.nombre,
    i.nc,
    sam.uf_inm_armar_nc_guiones(i.s1, i.s2, i.s3, i.manz, i.parc) AS nc_guiones,
    i.s1,
    i.s2,
    i.s3,
    i.manz,
    i.parc,
    i.uf,
    i.porcuf AS porc_uf,
    i.nc_ant,
    i.parp,
    i.parporigen,
    i.plano,
    i.anio_mensura,
    i.expe,
    i.urbsub,
    us.nombre AS urbsub_nom,
    i.regimen,
    r.nombre AS regimen_nom,
    i.tinm,
    ti.nombre AS tinm_nom,
    i.titularidad,
    t.nombre AS titularidad_nom,
    i.uso,
    u.nombre AS uso_nom,
    (((((
        CASE COALESCE(capa.nombre, ''::character varying)
            WHEN ''::text THEN dpa.nomcalle
            ELSE capa.nombre
        END)::text || ' '::text) ||
        CASE (dpa.puerta)::text
            WHEN '0'::text THEN ''::text
            ELSE (dpa.puerta)::text
        END) ||
        CASE
            WHEN (btrim((dpa.piso)::text) <> ALL (ARRAY[''::text, '0'::text])) THEN (' Piso: '::text || (dpa.piso)::text)
            ELSE ''::text
        END) ||
        CASE
            WHEN (btrim((dpa.dpto)::text) <> ALL (ARRAY[''::text, '0'::text])) THEN (' Dpto: '::text || (dpa.dpto)::text)
            ELSE ''::text
        END) AS dompar_dir,
    ((((((((((
        CASE COALESCE(capo.nombre, ''::character varying)
            WHEN ''::text THEN dpo.nomcalle
            ELSE capo.nombre
        END)::text || ' '::text) ||
        CASE (dpo.det)::text
            WHEN ''::text THEN ''::text
            ELSE ((' '::text || (dpo.det)::text) || ' '::text)
        END) ||
        CASE (dpo.puerta)::text
            WHEN '0'::text THEN ''::text
            ELSE (dpo.puerta)::text
        END) ||
        CASE
            WHEN (btrim((dpo.piso)::text) <> ALL (ARRAY[''::text, '0'::text])) THEN (' Piso: '::text || (dpo.piso)::text)
            ELSE ''::text
        END) ||
        CASE
            WHEN (btrim((dpo.dpto)::text) <> ALL (ARRAY[''::text, '0'::text])) THEN (' Dpto: '::text || (dpo.dpto)::text)
            ELSE ''::text
        END) || ' ('::text) || ((lpo.nombre)::text || ' - '::text)) || (prpo.nombre)::text) || ')'::text) AS dompos_dir,
    i.tmatric,
    im.nombre AS tmatric_nom,
    i.matric,
    i.fchmatric,
    i.anio,
    i.comprador,
    COALESCE(oc.nombre, ''::character varying) AS comprador_nom,
    i.zonat,
    COALESCE(zt.nombre, ''::character varying) AS zonat_nom,
    i.zonav,
    COALESCE(zv.nombre, ''::character varying) AS zonav_nom,
    i.zonaop,
    COALESCE(zo.nombre, ''::character varying) AS zonaop_nom,
    i.agua,
    i.cloaca,
    i.gas,
    i.alum,
    s.nombre AS alum_nom,
    i.pav,
    tp.nombre AS pav_nom,
    i.coef,
    i.valbas,
    i.frente,
    i.supt,
    i.supt_pasillo,
    i.supm,
    i.avalt,
    (i.avalt * mm.valor) AS avalt_mm,
    i.avalm,
    i.es_esquina,
    i.es_calleppal,
    i.barr_id,
    b.nombre AS barr_nom,
    b.cat AS barr_cat,
    i.patrimonio,
    i.objeto_superp,
    i.archivo,
    o.est,
    e.nombre AS est_nom,
    o.distrib,
    o.tdistrib,
    o.fchalta,
    o.fchmod,
    o.fchbaja,
    o.num,
    p.ndoc,
    p.cuit,
    o.obs,
    (((um.nombre)::text || ' - '::text) || to_char(o.fchmod, 'DD/MM/YYYY'::text)) AS modif,
    o.usrmod
   FROM (((((((((((((((((((((((((public.inm i
     LEFT JOIN public.objeto o ON (((i.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.inm_turbsub us ON (((i.urbsub)::text = (us.cod)::text)))
     LEFT JOIN public.inm_tregimen r ON ((i.regimen = r.cod)))
     LEFT JOIN public.inm_tipo ti ON (((i.tinm)::text = (ti.cod)::text)))
     LEFT JOIN public.inm_ttitularidad t ON (((i.titularidad)::text = (t.cod)::text)))
     LEFT JOIN public.inm_tuso u ON ((i.uso = u.cod)))
     LEFT JOIN public.inm_tmatric im ON (((i.tmatric)::text = (im.cod)::text)))
     LEFT JOIN public.inm_tzonat zt ON (((i.zonat)::text = (zt.cod)::text)))
     LEFT JOIN public.inm_tzonav zv ON ((i.zonav = zv.cod)))
     LEFT JOIN public.inm_tzonaop zo ON ((i.zonaop = zo.cod)))
     LEFT JOIN public.inm_talum s ON ((i.alum = s.cod)))
     LEFT JOIN public.domi dpa ON (((((dpa.torigen)::text = 'INM'::text) AND ((dpa.obj_id)::text = (i.obj_id)::text)) AND (dpa.id = 0))))
     LEFT JOIN public.domi_calle capa ON ((dpa.calle_id = capa.calle_id)))
     LEFT JOIN public.domi dpo ON (((((dpo.torigen)::text = 'OBJ'::text) AND ((dpo.obj_id)::text = (i.obj_id)::text)) AND (dpo.id = 0))))
     LEFT JOIN public.domi_calle capo ON ((dpo.calle_id = capo.calle_id)))
     LEFT JOIN public.domi_barrio bapo ON ((dpo.barr_id = bapo.barr_id)))
     LEFT JOIN public.domi_localidad lpo ON ((dpo.loc_id = lpo.loc_id)))
     LEFT JOIN public.domi_provincia prpo ON ((lpo.prov_id = prpo.prov_id)))
     LEFT JOIN public.objeto_test e ON (((e.tobj = 1) AND (o.est = e.cod))))
     LEFT JOIN public.domi_barrio b ON ((i.barr_id = b.barr_id)))
     LEFT JOIN public.domi_tpav tp ON ((i.pav = tp.cod)))
     LEFT JOIN public.persona p ON (((o.num)::text = (p.obj_id)::text)))
     LEFT JOIN sam.sis_usuario um ON ((o.usrmod = um.usr_id)))
     LEFT JOIN public.calc_mm mm ON (((('now'::text)::date >= mm.fchdesde) AND (('now'::text)::date <= mm.fchhasta))))
     LEFT JOIN public.objeto oc ON (((i.comprador)::text = (oc.obj_id)::text)));


ALTER TABLE public.v_inm OWNER TO postgres;


--
-- TOC entry 681 (class 1259 OID 5486487)
-- Name: v_inm_vta; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_inm_vta AS
 SELECT v.vta_id,
    v.obj_id,
    i.nombre,
    i.nc,
    i.dompar_dir AS domicilio,
    v.escribano,
    e.nombre AS escribano_nom,
    v.fecha,
    v.est,
    te.nombre AS est_nom,
    ((to_char(v.fchmod, 'dd/mm/yyyy'::text) || ' - '::text) || (u.nombre)::text) AS modif
   FROM ((((public.inm_vta v
     JOIN public.inm_tvtaest te ON (((v.est)::text = (te.cod)::text)))
     JOIN public.v_inm i ON (((v.obj_id)::text = (i.obj_id)::text)))
     JOIN sam.usuarioweb e ON ((v.escribano = e.usr_id)))
     JOIN sam.usuarioweb u ON ((v.usrmod = u.usr_id)));


ALTER TABLE public.v_inm_vta OWNER TO postgres;

--
-- TOC entry 582 (class 1259 OID 5286154)
-- Name: v_item; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_item AS
 SELECT i.item_id,
    i.nombre,
    i.trib_id,
    t.nombre AS trib_nom,
    t.nombre_redu AS trib_nom_redu,
    i.tipo,
    ti.nombre AS tipo_nom,
    i.cta_id,
    c.nombre AS cta_nom,
    (((u.nombre)::text || ' - '::text) || to_char(t.fchmod, 'DD/MM/YYYY'::text)) AS modif,
    i.fchmod,
    i.usrmod
   FROM ((((public.item i
     JOIN public.trib t ON ((i.trib_id = t.trib_id)))
     JOIN public.item_tipo ti ON ((i.tipo = ti.cod)))
     LEFT JOIN public.cuenta c ON ((i.cta_id = c.cta_id)))
     LEFT JOIN sam.sis_usuario u ON ((t.usrmod = u.usr_id)));


ALTER TABLE public.v_item OWNER TO postgres;

--
-- TOC entry 583 (class 1259 OID 5286159)
-- Name: v_item_vigencia; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_item_vigencia AS
 SELECT i.item_id,
    i.nombre,
    i.trib_id,
    v.perdesde,
    v.perhasta,
    ((substr((v.perhasta)::text, 1, 4) || '-'::text) || substr((v.perhasta)::text, 5, 3)) AS per_hasta,
    ((substr((v.perdesde)::text, 1, 4) || '-'::text) || substr((v.perdesde)::text, 5, 3)) AS per_desde,
    v.tcalculo,
    f.nombre AS tcalculo_nom,
    v.monto,
    v.porc,
    v.minimo,
    (((v.paramnombre1)::text ||
        CASE
            WHEN ((v.paramnombre2)::text = ''::text) THEN ''::text
            ELSE '-'::text
        END) || (v.paramnombre2)::text) AS param,
    v.paramnombre1,
    v.paramnombre2,
    v.paramnombre3,
    v.paramnombre4,
    v.paramcomp1,
    v.paramcomp2,
    v.paramcomp3,
    v.paramcomp4,
    (((um.nombre)::text || ' - '::text) || to_char(v.fchmod, 'DD/MM/YYYY'::text)) AS modif
   FROM (((public.item i
     JOIN public.item_vigencia v ON ((i.item_id = v.item_id)))
     JOIN public.item_tfcalculo f ON ((v.tcalculo = f.cod)))
     LEFT JOIN sam.sis_usuario um ON ((i.usrmod = um.usr_id)));


ALTER TABLE public.v_item_vigencia OWNER TO postgres;

--
-- TOC entry 8503 (class 0 OID 0)
-- Dependencies: 583
-- Name: VIEW v_item_vigencia; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON VIEW public.v_item_vigencia IS 'Valores de Item según Vigencia';


--
-- TOC entry 584 (class 1259 OID 5286164)
-- Name: v_judi; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_judi AS
 SELECT j.judi_id,
    j.obj_id,
    j.rep,
    j.nro,
    j.anio,
    j.expe,
    j.caratula,
    j.perdesde AS per_desde,
    j.perhasta AS per_hasta,
    j.nominal,
    j.accesor,
    j.multa,
    j.multa_omi,
    j.hono_jud,
    j.gasto_jud,
    j.procurador,
    p.nombre AS procurador_nom,
    j.juzgado,
    z.nombre AS juzgado_nom,
    j.fchalta,
    j.fchbaja,
    j.fchapremio,
    j.fchprocurador,
    j.fchjuicio,
    j.fchdev,
    j.motivo_dev,
    j.plan_id,
    j.est,
    e.nombre AS est_nom,
    j.obs,
    j.fchmod,
    j.usrmod
   FROM (((public.judi j
     LEFT JOIN sam.sis_usuario p ON ((j.procurador = p.usr_id)))
     LEFT JOIN public.judi_juzgado z ON ((j.juzgado = z.cod)))
     LEFT JOIN public.judi_test e ON (((j.est)::text = (e.cod)::text)));


ALTER TABLE public.v_judi OWNER TO postgres;

--
-- TOC entry 585 (class 1259 OID 5286169)
-- Name: v_judi_etapa; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_judi_etapa AS
 SELECT e.judi_id,
    e.orden,
    e.fecha,
    e.etapa,
    t.nombre AS etapa_nom,
    e.detalle,
    e.hono_jud,
    e.gasto_jud,
    (((((((u.nombre)::text || ' - '::text) || date_part('day'::text, e.fchmod)) || '/'::text) || date_part('month'::text, e.fchmod)) || '/'::text) || date_part('year'::text, e.fchmod)) AS modif
   FROM ((public.judi_etapa e
     LEFT JOIN public.judi_tetapa t ON (((e.etapa)::text = (t.cod)::text)))
     LEFT JOIN sam.sis_usuario u ON ((e.usrmod = u.usr_id)));


ALTER TABLE public.v_judi_etapa OWNER TO postgres;

--
-- TOC entry 586 (class 1259 OID 5286174)
-- Name: v_judi_periodo; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_judi_periodo AS
 SELECT p.judi_id,
    c.ctacte_id,
    c.obj_id,
    c.subcta,
    o.obj_dato,
    c.trib_id,
    t.nombre_redu AS trib_nom,
    c.anio,
    c.cuota,
    p.nominal,
    p.accesor,
    p.multa,
    ((p.nominal + p.accesor) + p.multa) AS total,
    c.fchvenc,
    p.est AS estant
   FROM (((public.judi_periodo p
     LEFT JOIN public.ctacte c ON ((p.ctacte_id = c.ctacte_id)))
     LEFT JOIN public.objeto o ON (((c.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.trib t ON ((c.trib_id = t.trib_id)));


ALTER TABLE public.v_judi_periodo OWNER TO postgres;

--
-- TOC entry 587 (class 1259 OID 5286192)
-- Name: v_libredeuda; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_libredeuda AS
 SELECT l.ldeuda_id,
    l.obj_id,
    o.nombre AS obj_nom,
    o.num,
    op.nombre AS num_nom,
    o.est AS est_obj,
    o.fchbaja,
    l.fchemi,
    l.escribano,
    t.titulo,
    t.detalle,
    COALESCE(c.mensaje_libredeuda, ''::character varying) AS mensaje,
    COALESCE(l.obs, ''::character varying) AS obs,
    ((d.direccion || ' - '::text) || d.locprov) AS dompos_dir,
    l.fchmod,
    l.usrmod,
    (((u.nombre)::text || ' - '::text) || to_char(l.fchmod, 'DD/MM/YYYY'::text)) AS modif,
    l.est
   FROM ((((((public.ctacte_libredeuda l
     LEFT JOIN public.objeto o ON (((l.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.objeto op ON (((o.num)::text = (op.obj_id)::text)))
     LEFT JOIN public.v_domi d ON ((((d.torigen)::text = 'OBJ'::text) AND ((d.obj_id)::text = (o.obj_id)::text))))
     LEFT JOIN public.texto t ON ((l.texto_id = t.texto_id)))
     LEFT JOIN sam.sis_usuario u ON ((l.usrmod = u.usr_id)))
     JOIN sam.config c ON (((c.mensaje_libredeuda)::text <> ''::text)));


ALTER TABLE public.v_libredeuda OWNER TO postgres;

--
-- TOC entry 588 (class 1259 OID 5286217)
-- Name: v_objeto; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_objeto AS
 SELECT o.obj_id,
    o.obj_dato,
    o.nombre,
    o.tobj,
    t.nombre AS tobj_nom,
    o.num,
    p.nombre AS num_nom,
    ((d.direccion || ' - '::text) || d.locprov) AS dompos_dir,
    d.loc AS loc_id,
    d.calle_id,
    d.puerta,
    o.est,
    e.nombre AS est_nom,
    o.distrib,
    COALESCE(di.nombre, ''::character varying) AS disctrib_nom,
    (((ua.nombre)::text || ' - '::text) || to_char(o.fchalta, 'DD/MM/YYYY'::text)) AS alta,
    (((ub.nombre)::text || ' - '::text) || to_char(o.fchbaja, 'DD/MM/YYYY'::text)) AS baja,
    o.fchmod,
    (((u.nombre)::text || ' - '::text) || to_char(o.fchmod, 'DD/MM/YYYY'::text)) AS modif
   FROM ((((((((public.objeto o
     LEFT JOIN public.objeto_tipo t ON ((o.tobj = t.cod)))
     LEFT JOIN public.objeto p ON (((o.num)::text = (p.obj_id)::text)))
     LEFT JOIN public.v_domi d ON ((((d.torigen)::text = 'OBJ'::text) AND ((d.obj_id)::text = (o.obj_id)::text))))
     LEFT JOIN public.objeto_test e ON (((o.est = e.cod) AND (o.tobj = e.tobj))))
     LEFT JOIN sam.sis_usuario di ON ((o.distrib = di.usr_id)))
     LEFT JOIN sam.sis_usuario ua ON ((o.usralta = ua.usr_id)))
     LEFT JOIN sam.sis_usuario ub ON ((o.usrbaja = ub.usr_id)))
     LEFT JOIN sam.sis_usuario u ON ((o.usrmod = u.usr_id)));


ALTER TABLE public.v_objeto OWNER TO postgres;

--
-- TOC entry 589 (class 1259 OID 5286222)
-- Name: v_objeto_accion; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_objeto_accion AS
 SELECT h.obj_id,
    h.taccion,
    t.nombre AS taccion_nom,
    h.fecha,
    to_char(h.fecha, 'DD/MM/YYYY'::text) AS fecha_format,
    h.fchdesde,
    h.fchhasta,
    h.orden,
    h.expe,
    h.obs,
    h.dato_ant,
    h.dato_ins,
    (((u.nombre)::text || ' - '::text) || to_char(h.fchmod, 'DD/MM/YYYY'::text)) AS modif
   FROM ((public.objeto_accion h
     LEFT JOIN public.objeto_taccion t ON ((h.taccion = t.cod)))
     LEFT JOIN sam.sis_usuario u ON ((h.usrmod = u.usr_id)));


ALTER TABLE public.v_objeto_accion OWNER TO postgres;

--
-- TOC entry 685 (class 1259 OID 5486527)
-- Name: v_objeto_item; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_objeto_item AS
 SELECT oi.obj_id,
    o.nombre AS obj_nom,
    oi.subcta,
    oi.orden,
    oi.trib_id,
    t.nombre_redu AS trib_nom,
    ti.cod AS trib_tipo,
    ti.nombre AS trib_tipo_nom,
    oi.item_id,
    i.nombre AS item_nom,
    i.tipo AS item_tipo,
    oi.perdesde,
    oi.perhasta,
        CASE
            WHEN ((date_part('year'::text, ('now'::text)::date) >= (oi.perdesde)::double precision) AND (date_part('year'::text, ('now'::text)::date) <= (oi.perhasta)::double precision)) THEN 1
            ELSE 0
        END AS vigente,
    oi.param1,
    v.paramnombre1 AS param1_nom,
    oi.param2,
    v.paramnombre2 AS param2_nom,
    oi.expe,
    oi.obs,
    v.porc,
    v.monto,
    oi.exen_id,
    (((u.nombre)::text || ' - '::text) || to_char(oi.fchmod, 'DD/MM/YYYY'::text)) AS modif,
    oi.usrmod,
    oi.fchmod
   FROM ((((((public.objeto_item oi
     JOIN public.objeto o ON (((oi.obj_id)::text = (o.obj_id)::text)))
     JOIN public.trib t ON ((oi.trib_id = t.trib_id)))
     JOIN public.item i ON ((oi.item_id = i.item_id)))
     JOIN public.item_tipo ti ON ((i.tipo = ti.cod)))
     JOIN public.item_vigencia v ON ((i.item_id = v.item_id)))
     JOIN sam.sis_usuario u ON ((oi.usrmod = u.usr_id)));


ALTER TABLE public.v_objeto_item OWNER TO postgres;

--
-- TOC entry 590 (class 1259 OID 5286232)
-- Name: v_objeto_misc; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_objeto_misc AS
 SELECT m.obj_id,
    m.orden,
    m.fecha,
    m.titulo,
    m.detalle,
    m.usrmod,
    (((u.nombre)::text || ' - '::text) || to_char(m.fchmod, 'DD/MM/YYYY'::text)) AS modif
   FROM (public.objeto_misc m
     LEFT JOIN sam.sis_usuario u ON ((m.usrmod = u.usr_id)));


ALTER TABLE public.v_objeto_misc OWNER TO postgres;

--
-- TOC entry 8505 (class 0 OID 0)
-- Dependencies: 590
-- Name: VIEW v_objeto_misc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON VIEW public.v_objeto_misc IS 'Misceláneas por Objetos';


--
-- TOC entry 591 (class 1259 OID 5286237)
-- Name: v_objeto_persona; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_objeto_persona AS
 SELECT v.obj_id,
    v.tobj,
    v.num,
    o.nombre AS num_nom,
    d.nombre AS tdoc_nom,
    p.ndoc,
    v.tvinc,
    t.nombre AS tvinc_nom,
    v.porc
   FROM ((((public.objeto_persona v
     JOIN public.objeto o ON (((v.num)::text = (o.obj_id)::text)))
     JOIN public.persona p ON (((o.obj_id)::text = (p.obj_id)::text)))
     LEFT JOIN public.persona_tdoc d ON ((p.tdoc = d.cod)))
     LEFT JOIN public.persona_tvinc t ON ((v.tvinc = t.cod)))
  WHERE (v.est = 'A'::bpchar);


ALTER TABLE public.v_objeto_persona OWNER TO postgres;

--
-- TOC entry 674 (class 1259 OID 5317017)
-- Name: v_objeto_rubro; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_objeto_rubro AS
 SELECT c.obj_id,
    c.subcta,
    r.nomen_id,
    n.nombre AS nomen_nom,
    c.rubro_id,
    r.nombre AS rubro_nom,
    ((substr((c.perdesde)::text, 1, 4) || '-'::text) || substr((c.perdesde)::text, 5, 3)) AS perdesde,
    ((substr((c.perhasta)::text, 1, 4) || '-'::text) || substr((c.perhasta)::text, 5, 3)) AS perhasta,
    c.perdesde AS nperdesde,
    c.perhasta AS nperhasta,
    c.cant,
    c.tipo,
    t.nombre AS tipo_nom,
    c.fiscaliza,
    c.est,
        CASE c.est
            WHEN 'A'::text THEN 'Activo'::text
            ELSE 'Baja'::text
        END AS est_nom,
    c.expe,
    c.obs,
    c.porc,
    fc.nombre AS tcalculo,
    c.fchmod,
    c.usrmod,
    (((u.nombre)::text || ' - '::text) || to_char(c.fchmod, 'DD/MM/YYYY'::text)) AS modif
   FROM ((((((public.objeto_rubro c
     LEFT JOIN public.rubro r ON (((c.rubro_id)::text = (r.rubro_id)::text)))
     LEFT JOIN public.rubro_tnomen n ON (((r.nomen_id)::text = (n.nomen_id)::text)))
     LEFT JOIN public.rubro_vigencia rv ON (((((r.rubro_id)::text = (rv.rubro_id)::text) AND (((date_part('year'::text, ('now'::text)::date) * (1000)::double precision) + date_part('month'::text, ('now'::text)::date)) >= (rv.perdesde)::double precision)) AND (((date_part('year'::text, ('now'::text)::date) * (1000)::double precision) + date_part('month'::text, ('now'::text)::date)) <= (rv.perhasta)::double precision))))
     LEFT JOIN public.rubro_tfcalculo fc ON ((rv.tcalculo = fc.cod)))
     LEFT JOIN public.objeto_trubro t ON ((c.tipo = t.cod)))
     LEFT JOIN sam.sis_usuario u ON ((c.usrmod = u.usr_id)));


ALTER TABLE public.v_objeto_rubro OWNER TO postgres;

--
-- TOC entry 592 (class 1259 OID 5286247)
-- Name: v_objeto_tit; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_objeto_tit AS
 SELECT o.obj_id,
    v.num,
    op.nombre AS apenom,
        CASE
            WHEN (p.ndoc <> 0) THEN d.nombre
            ELSE 'C.U.I.T.'::character varying
        END AS tdoc,
        CASE
            WHEN (p.ndoc <> 0) THEN (p.ndoc)::character varying
            ELSE p.cuit
        END AS ndoc,
    v.tvinc,
    t.nombre AS tvinc_nom,
    v.porc,
    v.est,
    v.fchmod,
    v.usrmod,
    (((u.nombre)::text || ' - '::text) || to_char(o.fchmod, 'dd/mm/yyyy'::text)) AS modif,
        CASE
            WHEN ((o.num)::text = (v.num)::text) THEN 'Princ'::text
            ELSE ''::text
        END AS princ
   FROM ((((((public.objeto o
     JOIN public.objeto_persona v ON (((o.obj_id)::text = (v.obj_id)::text)))
     JOIN public.objeto op ON (((v.num)::text = (op.obj_id)::text)))
     JOIN public.persona p ON (((op.obj_id)::text = (p.obj_id)::text)))
     JOIN public.persona_tdoc d ON ((p.tdoc = d.cod)))
     JOIN public.persona_tvinc t ON ((v.tvinc = t.cod)))
     LEFT JOIN sam.sis_usuario u ON ((o.usrmod = u.usr_id)));


ALTER TABLE public.v_objeto_tit OWNER TO postgres;

--
-- TOC entry 593 (class 1259 OID 5286252)
-- Name: v_objeto_trib; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_objeto_trib AS
 SELECT o.obj_id,
    j.obj_dato,
    j.nombre,
    o.trib_id,
    t.nombre AS trib_nom,
    t.nombre_redu AS trib_nom_redu,
    o.perdesde,
    o.perhasta,
    ((substr((o.perdesde)::text, 1, 4) || '-'::text) || substr((o.perdesde)::text, 5, 3)) AS per_desde,
    ((substr((o.perhasta)::text, 1, 4) || '-'::text) || substr((o.perhasta)::text, 5, 3)) AS per_hasta,
    o.cat,
    c.nombre AS cat_nom,
    o.fchalta,
    o.expe,
    o.base,
    o.cant,
    o.sup,
    o.est,
    o.obs,
    (((u.nombre)::text || ' - '::text) || to_char(o.fchmod, 'DD/MM/YYYY'::text)) AS modif
   FROM ((((public.objeto_trib o
     LEFT JOIN public.objeto j ON (((o.obj_id)::text = (j.obj_id)::text)))
     LEFT JOIN public.trib t ON ((o.trib_id = t.trib_id)))
     LEFT JOIN public.objeto_trib_cat c ON (((o.cat)::text = (c.cat)::text)))
     LEFT JOIN sam.sis_usuario u ON ((o.usrmod = u.usr_id)));


ALTER TABLE public.v_objeto_trib OWNER TO postgres;

--
-- TOC entry 594 (class 1259 OID 5286257)
-- Name: v_objeto_trib_cat; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_objeto_trib_cat AS
 SELECT c.trib_id,
    t.nombre_redu AS trib_nom,
    c.cat,
    c.nombre,
    c.det,
    (((u.nombre)::text || ' - '::text) || to_char(c.fchmod, 'DD/MM/YYYY'::text)) AS modif
   FROM ((public.objeto_trib_cat c
     LEFT JOIN public.trib t ON ((c.trib_id = t.trib_id)))
     LEFT JOIN sam.sis_usuario u ON ((c.usrmod = u.usr_id)));


ALTER TABLE public.v_objeto_trib_cat OWNER TO postgres;

--
-- TOC entry 595 (class 1259 OID 5286292)
-- Name: v_osm_consumo; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_osm_consumo AS
 SELECT c.obj_id,
    c.subcta,
    c.anio,
    c.cuota,
    c.fchlect,
    c.tlect,
    l.nombre AS tlect_nom,
    c.lect_ant,
    c.lect_act,
    c.consumo,
    c.fchmod,
    c.usrmod
   FROM (public.osm_consumo c
     LEFT JOIN public.osm_tlect l ON ((c.tlect = l.cod)));


ALTER TABLE public.v_osm_consumo OWNER TO postgres;

--
-- TOC entry 596 (class 1259 OID 5286296)
-- Name: v_persona; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_persona AS
 SELECT p.obj_id,
    o.nombre,
    p.inscrip,
    p.tipo,
    t.nombre AS tipo_nom,
    p.tdoc,
    d.nombre AS tdoc_nom,
    p.ndoc,
    COALESCE(to_char((p.fchnac)::timestamp with time zone, 'DD/MM/YYYY'::text), ''::text) AS fchnac,
    p.sexo,
    p.nacionalidad,
    COALESCE(n.nombre, ''::character varying) AS nacionalidad_nom,
    p.estcivil,
    COALESCE(ec.nombre, ''::character varying) AS estcivil_nom,
    p.clasif,
    COALESCE(c.nombre, ''::character varying) AS clasif_nom,
    p.iva,
    COALESCE(i.nombre, ''::character varying) AS iva_nom,
    p.cuit,
    p.ag_rete,
    p.ag_rete_manual,
    p.tel,
    p.cel,
    p.mail,
    p.est_ib,
    teib.nombre AS est_ib_nom,
    p.ib,
    p.orgjuri,
    oj.nombre AS orgjuri_nom,
    p.tipoliq,
    tl.nombre AS tipoliq_nom,
    p.contador,
    p.fchalta_ib,
    p.fchbaja_ib,
    p.nombre_fantasia,
    p.tbaja_ib,
    tb.nombre AS tbaja_ib_nom,
    ((dp.direccion || ' - '::text) || dp.locprov) AS dompos_dir,
    ((dl.direccion || ' - '::text) || dl.locprov) AS domleg_dir,
    ((dr.direccion || ' - '::text) || dr.locprov) AS domres_dir,
    dp.cp AS cppos,
    o.fchalta,
    o.fchbaja,
    o.est,
    e.nombre AS est_nom,
    o.distrib,
    COALESCE(u1.nombre, ''::character varying) AS distrib_nom,
    o.tdistrib,
    o.fchmod,
    o.usrmod,
    u2.nombre AS usrmod_nom,
    u3.nombre AS usralta_nom,
    o.obs,
    p.obj_id AS num
   FROM ((((((((((((((((((public.persona p
     LEFT JOIN public.objeto o ON (((p.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.persona_tipo t ON ((p.tipo = t.cod)))
     LEFT JOIN public.persona_tdoc d ON ((p.tdoc = d.cod)))
     LEFT JOIN public.persona_tnac n ON ((p.nacionalidad = n.cod)))
     LEFT JOIN public.comer_tiva i ON ((p.iva = i.cod)))
     LEFT JOIN public.persona_testcivil ec ON ((p.estcivil = ec.cod)))
     LEFT JOIN public.persona_tclasif c ON ((p.clasif = c.cod)))
     LEFT JOIN public.persona_test_ib teib ON (((p.est_ib)::text = (teib.cod)::text)))
     LEFT JOIN public.persona_tbajaib tb ON (((p.tbaja_ib)::text = (tb.cod)::text)))
     LEFT JOIN public.comer_torgjuri oj ON ((p.orgjuri = oj.cod)))
     LEFT JOIN public.comer_tliq tl ON (((p.tipoliq)::text = (tl.cod)::text)))
     LEFT JOIN public.v_domi dp ON ((((dp.torigen)::text = 'OBJ'::text) AND ((dp.obj_id)::text = (o.obj_id)::text))))
     LEFT JOIN public.v_domi dl ON ((((dl.torigen)::text = 'PLE'::text) AND ((dl.obj_id)::text = (p.obj_id)::text))))
     LEFT JOIN public.v_domi dr ON ((((dr.torigen)::text = 'PRE'::text) AND ((dr.obj_id)::text = (p.obj_id)::text))))
     LEFT JOIN public.objeto_test e ON (((o.est = e.cod) AND (e.tobj = 3))))
     LEFT JOIN sam.sis_usuario u1 ON ((o.distrib = u1.usr_id)))
     LEFT JOIN sam.sis_usuario u2 ON ((o.usrmod = u2.usr_id)))
     LEFT JOIN sam.sis_usuario u3 ON ((o.usralta = u3.usr_id)));


ALTER TABLE public.v_persona OWNER TO postgres;

--
-- TOC entry 597 (class 1259 OID 5286301)
-- Name: v_plan; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_plan AS
 SELECT p.plan_id,
    p.tplan,
    t.nombre AS tplan_nom,
    p.obj_id,
    o.nombre AS obj_nom,
    o.obj_dato,
    o.tobj AS obj_tipo,
    p.num,
    COALESCE(co.nombre, ''::character varying) AS num_nom,
    p.resp,
    p.resptdoc,
    p.respndoc,
    d.direccion AS respdompos_dir,
    p.resptel,
    p.nominal,
    p.accesor,
    p.multa,
    p.financia,
    p.sellado,
    p.anticipo,
    ((p.nominal + p.accesor) + p.multa) AS total,
    p.origen,
    r.nombre AS origen_nom,
    p.tpago,
    COALESCE(a.nombre, ''::character varying) AS tpago_nom,
    p.est,
    e.nombre AS est_nom,
    p.cuotas,
    p.montocuo,
    p.planant,
    p.fchalta,
    p.fchbaja,
    p.fchimputa,
    p.fchdecae,
    p.fchconsolida,
    p.descnominal,
    p.descinteres,
    p.descmulta,
    p.interes,
    p.obs,
    t.descnominal AS tdescnominal,
    t.descinteres AS tdescinteres,
    t.descmulta AS tdescmulta,
    t.interes AS tinteres,
    p.fchmod,
    ( SELECT count(*) AS count
           FROM public.ctacte
          WHERE ((((ctacte.trib_id = 1) AND (ctacte.anio = p.plan_id)) AND (ctacte.est = 'D'::bpchar)) AND (ctacte.fchvenc < '2014-08-06'::date))) AS cuotasatrasadas,
    ( SELECT max(ctacte.fchvenc) AS ultvenc
           FROM public.ctacte
          WHERE ((ctacte.trib_id = 1) AND (ctacte.anio = p.plan_id))) AS ultvenc,
    COALESCE((((ua.nombre)::text || ' - '::text) || to_char(p.fchalta, 'DD/MM/YYYY'::text)), ''::text) AS alta,
    COALESCE((((um.nombre)::text || ' - '::text) || to_char(p.fchmod, 'DD/MM/YYYY'::text)), ''::text) AS modif,
    p.distrib,
    p.caja_id,
    COALESCE(ca.nombre, ''::character varying) AS caja_nom,
    p.temple,
    COALESCE(te.nombre, ''::character varying) AS temple_nom,
    p.temple_area,
    p.bco_suc,
    b.nombre AS bco_suc_nom,
    p.bco_tcta,
    bc.nombre AS bco_tcta_nom,
    p.tpago_nro
   FROM (((((((((((((public.plan p
     LEFT JOIN public.objeto o ON (((p.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.objeto co ON (((p.num)::text = (co.obj_id)::text)))
     LEFT JOIN public.plan_config t ON ((p.tplan = t.cod)))
     LEFT JOIN public.plan_torigen r ON ((p.origen = r.cod)))
     LEFT JOIN public.plan_tpago a ON ((p.tpago = a.cod)))
     LEFT JOIN public.plan_test e ON ((p.est = e.cod)))
     LEFT JOIN public.plan_temple te ON (((te.caja_id = p.caja_id) AND (te.cod = p.temple))))
     LEFT JOIN public.caja ca ON ((p.caja_id = ca.caja_id)))
     LEFT JOIN public.banco b ON (((b.bco_ent = ca.ext_bco_ent) AND (b.bco_suc = p.bco_suc))))
     LEFT JOIN public.banco_tcuenta bc ON ((bc.cod = p.bco_tcta)))
     LEFT JOIN public.v_domi d ON (((((d.torigen)::text = 'PLA'::text) AND (d.id = p.plan_id)) AND ((d.obj_id)::text = (p.obj_id)::text))))
     LEFT JOIN sam.sis_usuario ua ON ((p.usralta = ua.usr_id)))
     LEFT JOIN sam.sis_usuario um ON ((p.usrmod = um.usr_id)));


ALTER TABLE public.v_plan OWNER TO postgres;

--
-- TOC entry 598 (class 1259 OID 5286306)
-- Name: v_plan_config_decaer; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_plan_config_decaer AS
 SELECT p.tplan,
        CASE
            WHEN (p.tplan = 0) THEN 'Todos'::character varying
            ELSE t.nombre
        END AS tplan_nom,
    p.origen,
        CASE
            WHEN (p.origen = 0) THEN 'Todos'::character varying
            ELSE o.nombre
        END AS origen_nom,
    p.tpago,
        CASE
            WHEN (p.tpago = 0) THEN 'Todos'::character varying
            ELSE tp.nombre
        END AS tpago_nom,
    p.caja_id,
        CASE
            WHEN (p.caja_id = 0) THEN 'Todos'::character varying
            ELSE c.nombre
        END AS caja_nom,
    p.cant_atras,
    p.cant_cons,
    (((u.nombre)::text || ' - '::text) || to_char(p.fchmod, 'dd/mm/yyyy'::text)) AS modif
   FROM (((((public.plan_config_decaer p
     LEFT JOIN public.plan_config t ON ((p.tplan = t.cod)))
     LEFT JOIN public.plan_torigen o ON ((p.origen = o.cod)))
     LEFT JOIN public.plan_tpago tp ON ((p.tpago = tp.cod)))
     LEFT JOIN public.caja c ON ((p.caja_id = c.caja_id)))
     LEFT JOIN sam.sis_usuario u ON ((p.usrmod = u.usr_id)));


ALTER TABLE public.v_plan_config_decaer OWNER TO postgres;

--
-- TOC entry 599 (class 1259 OID 5286311)
-- Name: v_plan_cuota; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_plan_cuota AS
 SELECT p.plan_id,
    c.ctacte_id,
    p.cuota,
        CASE
            WHEN (p.cuota = 0) THEN 'Anticipo'::character varying
            ELSE (p.cuota)::character varying(3)
        END AS cuota_nom,
    p.capital,
    p.financia,
        CASE
            WHEN (p.cuota = 0) THEN pp.sellado
            WHEN ((p.cuota = 1) AND (p0.plan_id IS NULL)) THEN pp.sellado
            ELSE (0)::numeric
        END AS sellado,
    ((p.capital + p.financia) +
        CASE
            WHEN (p.cuota = 0) THEN pp.sellado
            WHEN ((p.cuota = 1) AND (p0.plan_id IS NULL)) THEN pp.sellado
            ELSE (0)::numeric
        END) AS total,
    c.fchvenc,
    to_char((c.fchvenc)::timestamp with time zone, 'dd/mm/yyyy'::text) AS fchvenc_format,
    c.est,
    c.fchpago,
        CASE
            WHEN (c.fchpago IS NULL) THEN ''::text
            ELSE to_char(c.fchpago, 'dd/mm/yyyy'::text)
        END AS fchpago_format,
    c.caja_id,
    COALESCE(t.nombre, ''::character varying) AS deb_est,
    pp.tplan,
    pc.nombre AS tplan_nom
   FROM ((((((public.plan_cuota p
     JOIN public.plan pp ON ((p.plan_id = pp.plan_id)))
     JOIN public.plan_config pc ON ((pp.tplan = pc.cod)))
     LEFT JOIN public.plan_cuota p0 ON (((p.plan_id = p0.plan_id) AND (p0.cuota = 0))))
     LEFT JOIN public.ctacte c ON ((p.ctacte_id = c.ctacte_id)))
     LEFT JOIN public.debito_periodo d ON ((p.ctacte_id = d.ctacte_id)))
     LEFT JOIN public.debito_test t ON ((d.est = t.cod)));


ALTER TABLE public.v_plan_cuota OWNER TO postgres;

--
-- TOC entry 600 (class 1259 OID 5286316)
-- Name: v_plan_deuda; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_plan_deuda AS
 SELECT p.obj_id,
    p.plan_id,
    p.tplan,
    count(*) AS cuotas,
    sum(c.nominal) AS total,
    sum(
        CASE
            WHEN (c.est = 'P'::bpchar) THEN c.nominal
            ELSE (0)::numeric
        END) AS pagado,
    sum(
        CASE
            WHEN (c.est = 'P'::bpchar) THEN 1
            ELSE 0
        END) AS cuotas_pag,
    sum(
        CASE
            WHEN ((c.fchvenc < now()) AND (c.est = 'D'::bpchar)) THEN 1
            ELSE 0
        END) AS cuotas_venc,
    sum(
        CASE
            WHEN ((c.fchvenc > now()) AND (c.est = 'D'::bpchar)) THEN 1
            ELSE 0
        END) AS cuotas_novenc,
    sum(
        CASE
            WHEN ((c.est = 'D'::bpchar) OR (c.est = 'J'::bpchar)) THEN c.nominal
            ELSE (0)::numeric
        END) AS saldo,
    p.est
   FROM (public.plan p
     JOIN public.ctacte c ON (((c.trib_id = 1) AND (c.anio = p.plan_id))))
  GROUP BY p.obj_id, p.plan_id, p.tplan, p.est;


ALTER TABLE public.v_plan_deuda OWNER TO postgres;

--
-- TOC entry 601 (class 1259 OID 5286321)
-- Name: v_plan_liq; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_plan_liq AS
 SELECT p.plan_id,
    p.ctacte_id,
    p.cuota,
    0 AS item_id,
    'CAPITAL'::text AS item_nom,
    'CAPITAL'::text AS detalle,
    p.capital AS item_monto
   FROM public.plan_cuota p
UNION
 SELECT p.plan_id,
    pc.ctacte_id,
    pc.cuota,
    0 AS item_id,
    'SELLADO'::text AS item_nom,
    'SELLADO'::text AS detalle,
    p.sellado AS item_monto
   FROM (public.plan p
     JOIN public.plan_cuota pc ON (((p.plan_id = pc.plan_id) AND (((p.anticipo > (0)::numeric) AND (pc.cuota = 0)) OR ((p.anticipo = (0)::numeric) AND (pc.cuota = 1))))))
  WHERE (p.sellado > (0)::numeric)
UNION
 SELECT p.plan_id,
    p.ctacte_id,
    p.cuota,
    0 AS item_id,
    'FINANCIACION'::text AS item_nom,
    'FINANCIACION'::text AS detalle,
    p.financia AS item_monto
   FROM public.plan_cuota p
  WHERE (p.financia > (0)::numeric);


ALTER TABLE public.v_plan_liq OWNER TO postgres;

--
-- TOC entry 602 (class 1259 OID 5286326)
-- Name: v_plan_periodo; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_plan_periodo AS
 SELECT p.plan_id,
    c.ctacte_id,
    c.obj_id,
    c.subcta,
    c.trib_id,
    t.nombre_redu AS trib_nom,
    c.anio,
    c.cuota,
    p.nominalreal,
    p.accesorreal,
    p.multareal,
    ((p.nominalreal + p.accesorreal) + p.multareal) AS totalreal,
    p.nominal,
    p.accesor,
    p.multa,
    (((p.nominal + p.accesor) + p.multa))::numeric(12,2) AS total,
    p.nominalcub,
    p.accesorcub,
    p.multacub,
    (((p.nominalcub + p.accesorcub) + p.multacub))::numeric(12,2) AS totalcub,
    ((((p.nominal + p.accesor) + p.multa) - ((p.nominalcub + p.accesorcub) + p.multacub)))::numeric(12,2) AS saldo,
    c.fchvenc,
    p.estant
   FROM ((public.plan_periodo p
     LEFT JOIN public.ctacte c ON ((p.ctacte_id = c.ctacte_id)))
     LEFT JOIN public.trib t ON ((c.trib_id = t.trib_id)));


ALTER TABLE public.v_plan_periodo OWNER TO postgres;

--
-- TOC entry 603 (class 1259 OID 5286331)
-- Name: v_plan_persona; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_plan_persona AS
 SELECT DISTINCT pl.plan_id,
    pl.num AS obj_id,
    pl.obj_id AS obj_plan,
    o.nombre,
    op.obj_dato,
    d2.nombre AS tdoc_nom,
    p.ndoc,
    i.nombre AS iva_nom,
    pl.planant,
    pl.cuotas,
    pl.resp,
    d1.nombre AS resptdoc_nom,
    pl.respndoc AS resp_ndoc
   FROM ((((((public.plan pl
     LEFT JOIN public.persona_tdoc d1 ON ((pl.resptdoc = d1.cod)))
     LEFT JOIN public.persona p ON (((pl.num)::text = (p.obj_id)::text)))
     LEFT JOIN public.objeto o ON (((p.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.objeto op ON (((pl.obj_id)::text = (op.obj_id)::text)))
     LEFT JOIN public.persona_tdoc d2 ON ((p.tdoc = d2.cod)))
     LEFT JOIN public.comer_tiva i ON ((p.iva = i.cod)));


ALTER TABLE public.v_plan_persona OWNER TO postgres;

--
-- TOC entry 604 (class 1259 OID 5286336)
-- Name: v_plan_tobj; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_plan_tobj AS
 SELECT DISTINCT o.cod,
    o.nombre,
    p.tplan
   FROM ((public.plan_config_trib p
     JOIN public.trib t ON ((p.trib_id = t.trib_id)))
     JOIN public.objeto_tipo o ON ((t.tobj = o.cod)));


ALTER TABLE public.v_plan_tobj OWNER TO postgres;

--
-- TOC entry 605 (class 1259 OID 5286341)
-- Name: v_recibo; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_recibo AS
 SELECT r.ctacte_id,
    r.recibo,
    r.fecha,
    r.acta,
    r.item_id,
    i.nombre AS item_nom,
    r.area,
    a.nombre AS area_nom,
    r.monto,
    c.est,
    t.ticket,
    c.obj_id
   FROM ((((public.ctacte_rec r
     LEFT JOIN public.item i ON ((r.item_id = i.item_id)))
     LEFT JOIN sam.muni_oficina a ON ((r.area = a.ofi_id)))
     LEFT JOIN public.ctacte c ON ((r.ctacte_id = c.ctacte_id)))
     LEFT JOIN public.caja_ticket t ON (((r.ctacte_id = t.ctacte_id) AND (t.est = 'A'::bpchar))));


ALTER TABLE public.v_recibo OWNER TO postgres;

--
-- TOC entry 606 (class 1259 OID 5286356)
-- Name: v_resol; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_resol AS
 SELECT r.resol_id,
    r.nombre,
    r.trib_id,
    t.nombre_redu AS trib_nom,
    t.tipo AS ttrib,
    tt.nombre AS ttrib_nom,
    r.perdesde,
    r.perhasta,
    ((substr((r.perdesde)::text, 1, 4) || '-'::text) || substr((r.perdesde)::text, 5, 2)) AS per_desde,
    ((substr((r.perhasta)::text, 1, 4) || '-'::text) || substr((r.perhasta)::text, 5, 2)) AS per_hasta,
    r.funcion,
    r.formula,
    r.filtro,
    r.anual,
        CASE
            WHEN (r.anual = 1) THEN 'Si'::text
            ELSE 'No'::text
        END AS anual_nom,
    r.cant_anio,
    r.detalle,
    (((u.nombre)::text || ' - '::text) || to_char(r.fchmod, 'DD/MM/YYYY'::text)) AS modif,
    r.fchmod,
    r.usrmod
   FROM (((public.resol r
     JOIN public.trib t ON ((r.trib_id = t.trib_id)))
     JOIN public.trib_tipo tt ON ((t.tipo = tt.cod)))
     LEFT JOIN sam.sis_usuario u ON ((r.usrmod = u.usr_id)));


ALTER TABLE public.v_resol OWNER TO postgres;

--
-- TOC entry 607 (class 1259 OID 5286361)
-- Name: v_ret; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_ret AS
 SELECT t.retdj_id,
    t.ag_rete,
    o.nombre,
    p.cuit,
    t.anio,
    t.mes,
    t.cant,
    t.monto,
    t.fchpresenta,
    t.est,
    COALESCE(c.est, ''::bpchar) AS est_cc,
    t.ctacte_id,
    t.fchmod,
    t.usrmod,
    ((COALESCE((u.nombre)::text, ''::text) || ' - '::text) || to_char(t.fchmod, 'dd/mm/yyyy'::text)) AS modif
   FROM ((((public.ret t
     LEFT JOIN public.persona p ON (((t.ag_rete)::text = (p.ag_rete)::text)))
     LEFT JOIN public.objeto o ON (((p.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.ctacte c ON ((t.ctacte_id = c.ctacte_id)))
     LEFT JOIN sam.sis_usuario u ON ((t.usrmod = u.usr_id)));


ALTER TABLE public.v_ret OWNER TO postgres;

--
-- TOC entry 608 (class 1259 OID 5286366)
-- Name: v_ret_det; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_ret_det AS
 SELECT d.ret_id,
    d.retdj_id,
        CASE
            WHEN ((COALESCE(t.ag_rete, ''::character varying))::text <> ''::text) THEN t.ag_rete
            ELSE d.ag_rete
        END AS ag_rete,
    COALESCE(ag.cuit, ''::character varying) AS ag_cuit,
    COALESCE(oag.nombre, ''::character varying) AS ag_nom,
    COALESCE(substr((oag.nombre)::text, 1, 15), ''::text) AS ag_nom_redu,
    (COALESCE((t.anio)::double precision, date_part('year'::text, d.fecha)))::smallint AS anio,
    (COALESCE((t.mes)::double precision, date_part('month'::text, d.fecha)))::smallint AS mes,
    ((t.anio * 1000) + t.mes) AS periodo,
    t.est AS ret_est,
    d.obj_id,
    o.nombre,
    pe.cuit,
    d.numero,
    d.lugar,
    d.fecha,
    d.tcomprob,
    d.comprob,
    d.base,
    d.ali,
    d.monto,
    d.ctacte_id,
    d.est,
    d.fchmod,
    d.usrmod
   FROM (((((((public.ret_det d
     LEFT JOIN public.ret t ON ((t.retdj_id = d.retdj_id)))
     LEFT JOIN public.ret_test e ON (((d.est)::text = (e.cod)::text)))
     LEFT JOIN public.ret_tcomprob c ON (((d.tcomprob)::text = (c.cod)::text)))
     LEFT JOIN public.objeto o ON (((d.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.persona pe ON (((o.num)::text = (pe.obj_id)::text)))
     LEFT JOIN public.persona ag ON (((
        CASE
            WHEN ((COALESCE(t.ag_rete, ''::character varying))::text <> ''::text) THEN t.ag_rete
            ELSE d.ag_rete
        END)::text = (ag.ag_rete)::text)))
     LEFT JOIN public.objeto oag ON (((ag.obj_id)::text = (oag.obj_id)::text)));


ALTER TABLE public.v_ret_det OWNER TO postgres;

--
-- TOC entry 609 (class 1259 OID 5286371)
-- Name: v_rodado; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_rodado AS
 SELECT DISTINCT r.obj_id,
    o.nombre,
    o.num,
    op.nombre AS num_nom,
    p.ndoc AS num_ndoc,
    p.cuit AS num_cuit,
    r.talta,
    ta.nombre AS talta_nom,
    r.perini,
    ((substr((r.perini)::text, 1, 4) || '-'::text) || substr((r.perini)::text, 5, 2)) AS per_ini,
    r.tliq,
    tl.nombre AS tliq_nom,
    r.aforo_id,
        CASE
            WHEN (r.tliq = 1) THEN (((((((af.origen)::text || ' - '::text) || (af.marca_nom)::text) || ' - '::text) || (af.tipo_nom)::text) || ' - '::text) || (af.modelo_nom)::text)
            ELSE ''::text
        END AS aforo_modelo,
        CASE
            WHEN (r.tliq = 1) THEN afv.valor
            ELSE rv.valor
        END AS aforo_valor,
    af.tipo AS aforo_tipo,
    af.tipo_nom AS aforo_tipo_nom,
    r.marca,
    m.nombre AS marca_nom,
    r.cat,
    c.nombre AS cat_nom,
    r.modelo,
    COALESCE(af.modelo_nom, COALESCE(mo.nombre, r.modelo_nom)) AS modelo_nom,
    r.anio,
    r.dominio,
    r.dominioant,
    mm.nombre AS marcamotor_nom,
    r.nromotor,
    mc.nombre AS marcachasis_nom,
    r.nrochasis,
    r.peso,
    r.cilindrada,
    r.deleg,
    de.nombre AS deleg_nom,
    r.color,
    r.combustible,
    com.nombre AS combustible_nom,
    r.uso,
    u.nombre AS uso_nom,
    r.conductor,
    oc.nombre AS conductor_nom,
    ((((((((((ca.nombre)::text || ' '::text) || (d.det)::text) ||
        CASE (d.puerta)::text
            WHEN '0'::text THEN ''::text
            ELSE (d.puerta)::text
        END) ||
        CASE
            WHEN (btrim((d.piso)::text) <> ALL (ARRAY[''::text, '0'::text])) THEN (' Piso: '::text || (d.piso)::text)
            ELSE ''::text
        END) ||
        CASE
            WHEN (btrim((d.dpto)::text) <> ALL (ARRAY[''::text, '0'::text])) THEN (' Dpto: '::text || (d.piso)::text)
            ELSE ''::text
        END) || '('::text) || ((l.nombre)::text || ' - '::text)) || (pr.nombre)::text) || ')'::text) AS dompos_dir,
    r.fchcompra,
    r.tform,
    rf.nombre AS tform_nom,
    r.remito,
    r.remito_anio,
    o.fchalta,
    o.fchbaja,
    o.est,
    e.nombre AS est_nom,
    o.objunifica AS objetounifica,
    o.distrib,
    ud.nombre AS distrib_nom,
    o.tdistrib,
    o.fchmod,
    o.usrmod,
    um.apenom AS usrmod_nom,
    o.obs
   FROM (((((((((((((((((((((((((((public.rodado r
     LEFT JOIN public.objeto o ON (((r.obj_id)::text = (o.obj_id)::text)))
     LEFT JOIN public.objeto op ON (((o.num)::text = (op.obj_id)::text)))
     LEFT JOIN public.persona p ON (((o.num)::text = (p.obj_id)::text)))
     LEFT JOIN public.rodado_talta ta ON ((r.talta = ta.cod)))
     LEFT JOIN public.rodado_tliq tl ON ((r.tliq = tl.cod)))
     LEFT JOIN public.rodado_aforo af ON (((r.aforo_id)::text = (af.aforo_id)::text)))
     LEFT JOIN ( SELECT rodado_aforo_val.aforo_id,
            rodado_aforo_val.anio,
            max(rodado_aforo_val.anioval) AS anioval
           FROM public.rodado_aforo_val
          GROUP BY rodado_aforo_val.aforo_id, rodado_aforo_val.anio) afm ON ((((afm.aforo_id)::text = (r.aforo_id)::text) AND (afm.anio = r.anio))))
     LEFT JOIN public.rodado_aforo_val afv ON (((((afv.aforo_id)::text = (r.aforo_id)::text) AND (afv.anioval = afm.anioval)) AND (afv.anio = r.anio))))
     LEFT JOIN public.rodado_marca m ON ((r.marca = m.cod)))
     LEFT JOIN public.rodado_tcat c ON ((r.cat = c.cod)))
     LEFT JOIN public.rodado_modelo mo ON (((r.modelo)::text = (mo.cod)::text)))
     LEFT JOIN public.rodado_marca mm ON ((r.marcamotor = mm.cod)))
     LEFT JOIN public.rodado_marca mc ON ((r.marcachasis = mc.cod)))
     LEFT JOIN public.rodado_tdeleg de ON ((r.deleg = de.cod)))
     LEFT JOIN public.rodado_tcombustible com ON ((r.combustible = com.cod)))
     LEFT JOIN public.rodado_tuso u ON ((r.uso = u.cod)))
     LEFT JOIN public.rodado_tform rf ON (((r.tform)::text = (rf.cod)::text)))
     LEFT JOIN public.rodado_val rv ON (((((((rv.anioval)::double precision = date_part('year'::text, ('now'::text)::date)) AND (c.gru = rv.gru)) AND (r.anio = rv.anio)) AND (r.peso >= rv.pesodesde)) AND (r.peso < rv.pesohasta))))
     LEFT JOIN public.objeto oc ON (((r.conductor)::text = (oc.obj_id)::text)))
     LEFT JOIN public.domi d ON (((((d.torigen)::text = 'OBJ'::text) AND ((d.obj_id)::text = (r.obj_id)::text)) AND (d.id = 0))))
     LEFT JOIN public.domi_calle ca ON ((d.calle_id = ca.calle_id)))
     LEFT JOIN public.domi_localidad l ON ((d.loc_id = l.loc_id)))
     LEFT JOIN public.domi_provincia pr ON ((l.prov_id = pr.prov_id)))
     LEFT JOIN public.domi_barrio bo ON ((d.barr_id = bo.barr_id)))
     LEFT JOIN public.objeto_test e ON (((o.est = e.cod) AND (e.tobj = 5))))
     LEFT JOIN sam.sis_usuario ud ON ((o.distrib = ud.usr_id)))
     LEFT JOIN sam.sis_usuario um ON ((o.usrmod = um.usr_id)));


ALTER TABLE public.v_rodado OWNER TO postgres;

--
-- TOC entry 610 (class 1259 OID 5286376)
-- Name: v_rodado_aforo; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_rodado_aforo AS
 SELECT m.aforo_id,
    m.origen,
    m.fabr,
    m.marca,
    m.tipo,
    m.modelo,
    m.tvehic,
    m.marca_nom,
    m.tipo_nom,
    m.modelo_nom,
    (((m.marca)::text || ' - '::text) || (m.marca_nom)::text) AS marca_id_nom,
    (((m.tipo)::text || ' - '::text) || (m.tipo_nom)::text) AS tipo_id_nom,
    (((m.modelo)::text || ' - '::text) || (m.modelo_nom)::text) AS modelo_id_nom,
    v.anio_min,
    v.anio_max,
    v.valor_max
   FROM (public.rodado_aforo m
     LEFT JOIN ( SELECT rodado_aforo_val.aforo_id,
            min(rodado_aforo_val.anio) AS anio_min,
            max(rodado_aforo_val.anio) AS anio_max,
            max(rodado_aforo_val.valor) AS valor_max
           FROM public.rodado_aforo_val
          GROUP BY rodado_aforo_val.aforo_id) v ON (((m.aforo_id)::text = (v.aforo_id)::text)));


ALTER TABLE public.v_rodado_aforo OWNER TO postgres;

--
-- TOC entry 611 (class 1259 OID 5286381)
-- Name: v_rodado_aforo_val; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_rodado_aforo_val AS
 SELECT DISTINCT m.aforo_id,
    m.origen,
        CASE
            WHEN ((m.origen)::text = 'I'::text) THEN 'Importado'::text
            ELSE 'Nacional'::text
        END AS origen_nom,
    m.marca,
    m.tipo,
    m.modelo,
    m.marca_nom,
    m.tipo_nom,
    m.modelo_nom,
    a00.anio AS anio00,
    a00.valor AS valor00,
    a01.anio AS anio01,
    a01.valor AS valor01,
    a02.anio AS anio02,
    a02.valor AS valor02,
    a03.anio AS anio03,
    a03.valor AS valor03,
    a04.anio AS anio04,
    a04.valor AS valor04,
    a05.anio AS anio05,
    a05.valor AS valor05,
    a06.anio AS anio06,
    a06.valor AS valor06,
    a07.anio AS anio07,
    a07.valor AS valor07,
    a08.anio AS anio08,
    a08.valor AS valor08,
    a09.anio AS anio09,
    a09.valor AS valor09,
    a10.anio AS anio10,
    a10.valor AS valor10,
    a11.anio AS anio11,
    a11.valor AS valor11,
    a12.anio AS anio12,
    a12.valor AS valor12,
    a13.anio AS anio13,
    a13.valor AS valor13,
    a14.anio AS anio14,
    a14.valor AS valor14,
    a15.anio AS anio15,
    a15.valor AS valor15,
    a16.anio AS anio16,
    a16.valor AS valor16,
    a17.anio AS anio17,
    a17.valor AS valor17,
    a18.anio AS anio18,
    a18.valor AS valor18,
    a19.anio AS anio19,
    a19.valor AS valor19,
    ((u.nombre)::text || to_char(m.fchmod, 'dd/mm/yyyy'::text)) AS modif
   FROM ((((((((((((((((((((((public.rodado_aforo m
     LEFT JOIN public.rodado_aforo_val a ON (((m.aforo_id)::text = (a.aforo_id)::text)))
     LEFT JOIN public.rodado_aforo_val a00 ON (((m.aforo_id)::text = (a00.aforo_id)::text)))
     LEFT JOIN public.rodado_aforo_val a01 ON (((m.aforo_id)::text = (a01.aforo_id)::text)))
     LEFT JOIN public.rodado_aforo_val a02 ON (((m.aforo_id)::text = (a02.aforo_id)::text)))
     LEFT JOIN public.rodado_aforo_val a03 ON (((m.aforo_id)::text = (a03.aforo_id)::text)))
     LEFT JOIN public.rodado_aforo_val a04 ON (((m.aforo_id)::text = (a04.aforo_id)::text)))
     LEFT JOIN public.rodado_aforo_val a05 ON (((m.aforo_id)::text = (a05.aforo_id)::text)))
     LEFT JOIN public.rodado_aforo_val a06 ON (((m.aforo_id)::text = (a06.aforo_id)::text)))
     LEFT JOIN public.rodado_aforo_val a07 ON (((m.aforo_id)::text = (a07.aforo_id)::text)))
     LEFT JOIN public.rodado_aforo_val a08 ON (((m.aforo_id)::text = (a08.aforo_id)::text)))
     LEFT JOIN public.rodado_aforo_val a09 ON (((m.aforo_id)::text = (a09.aforo_id)::text)))
     LEFT JOIN public.rodado_aforo_val a10 ON (((m.aforo_id)::text = (a10.aforo_id)::text)))
     LEFT JOIN public.rodado_aforo_val a11 ON (((m.aforo_id)::text = (a11.aforo_id)::text)))
     LEFT JOIN public.rodado_aforo_val a12 ON (((m.aforo_id)::text = (a12.aforo_id)::text)))
     LEFT JOIN public.rodado_aforo_val a13 ON (((m.aforo_id)::text = (a13.aforo_id)::text)))
     LEFT JOIN public.rodado_aforo_val a14 ON (((m.aforo_id)::text = (a14.aforo_id)::text)))
     LEFT JOIN public.rodado_aforo_val a15 ON (((m.aforo_id)::text = (a15.aforo_id)::text)))
     LEFT JOIN public.rodado_aforo_val a16 ON (((m.aforo_id)::text = (a16.aforo_id)::text)))
     LEFT JOIN public.rodado_aforo_val a17 ON (((m.aforo_id)::text = (a17.aforo_id)::text)))
     LEFT JOIN public.rodado_aforo_val a18 ON (((m.aforo_id)::text = (a18.aforo_id)::text)))
     LEFT JOIN public.rodado_aforo_val a19 ON (((m.aforo_id)::text = (a19.aforo_id)::text)))
     LEFT JOIN sam.sis_usuario u ON ((m.usrmod = u.usr_id)));


ALTER TABLE public.v_rodado_aforo_val OWNER TO postgres;

--
-- TOC entry 612 (class 1259 OID 5286386)
-- Name: v_rodado_val; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_rodado_val AS
 SELECT v.anioval,
    v.gru,
    v.anio,
    v.pesodesde,
    v.pesohasta,
    v.valor,
    (((u.nombre)::text || ' - '::text) || to_char(v.fchmod, 'dd/mm/yyyy'::text)) AS modif
   FROM (public.rodado_val v
     LEFT JOIN sam.sis_usuario u ON ((v.usrmod = u.usr_id)));


ALTER TABLE public.v_rodado_val OWNER TO postgres;

--
-- TOC entry 673 (class 1259 OID 5317012)
-- Name: v_rubro; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_rubro AS
 SELECT r.rubro_id,
    r.nombre,
    r.nomen_id,
    r.grupo,
    g.nombre AS grupo_nom,
    r.tunidad,
    r.osmreccons,
    o.nombre AS osmreccons_nom,
    r.tipif_id AS tipif,
    r.fchmod,
    r.usrmod,
    (((u.nombre)::text || ' - '::text) || to_char(r.fchmod, 'DD/MM/YYYY'::text)) AS modif
   FROM (((public.rubro r
     LEFT JOIN public.rubro_grupo g ON ((((r.nomen_id)::text = (g.nomen_id)::text) AND ((r.grupo)::text = (g.cod)::text))))
     LEFT JOIN public.osm_treccons o ON ((r.osmreccons = o.cod)))
     LEFT JOIN sam.sis_usuario u ON ((r.usrmod = u.usr_id)));


ALTER TABLE public.v_rubro OWNER TO postgres;

--
-- TOC entry 672 (class 1259 OID 5317007)
-- Name: v_rubro_vigencia; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_rubro_vigencia AS
 SELECT v.rubro_id,
    r.nombre,
    r.nomen_id,
    r.grupo,
    v.perdesde,
    v.perhasta,
    ((substr((v.perhasta)::text, 1, 4) || '-'::text) || substr((v.perhasta)::text, 5, 2)) AS per_hasta,
    ((substr((v.perdesde)::text, 1, 4) || '-'::text) || substr((v.perdesde)::text, 5, 2)) AS per_desde,
    v.tcalculo,
    tc.nombre AS tcalculo_nom,
    v.tminimo,
    tm.nombre AS tminimo_nom,
    v.alicuota,
    v.alicuota_atras,
    v.minimo,
    v.minalta,
    v.fijo,
    v.canthasta,
    v.porc,
    v.fchmod,
    v.usrmod,
    (((u.nombre)::text || ' - '::text) || to_char(v.fchmod, 'DD/MM/YYYY'::text)) AS modif
   FROM ((((public.rubro_vigencia v
     LEFT JOIN public.rubro r ON (((v.rubro_id)::text = (r.rubro_id)::text)))
     LEFT JOIN public.rubro_tfcalculo tc ON ((v.tcalculo = tc.cod)))
     LEFT JOIN public.rubro_tminimo tm ON ((v.tminimo = tm.cod)))
     LEFT JOIN sam.sis_usuario u ON ((v.usrmod = u.usr_id)));


ALTER TABLE public.v_rubro_vigencia OWNER TO postgres;

--
-- TOC entry 687 (class 1259 OID 5486656)
-- Name: v_trib; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.v_trib AS
 SELECT t.trib_id,
    t.nombre,
    t.nombre_redu,
    t.nombre_reduhbank,
    t.tobj,
    o.nombre AS tobj_nom,
    t.tipo,
    ti.nombre AS tipo_nom,
    t.genestcta,
        CASE t.genestcta
            WHEN 0 THEN 'No'::text
            WHEN 1 THEN 'Si'::text
            ELSE ''::text
        END AS genestcta_nom,
    t.texto_id,
    te.nombre AS texto_nom,
    t.ucm,
        CASE t.ucm
            WHEN 0 THEN 'Sin UCM'::text
            WHEN 1 THEN 'UCM 1'::text
            WHEN 2 THEN 'UCM 2'::text
            ELSE ''::text
        END AS ucm_nom,
    t.calc_rec,
        CASE t.calc_rec
            WHEN 0 THEN 'No'::text
            WHEN 1 THEN 'Si'::text
            ELSE ''::text
        END AS calc_interes_nom,
    t.calc_rec_tasa,
    t.cta_id_rec,
    c.nombre AS cta_nom_rec,
    t.cta_id_redon,
    crd.nombre AS cta_nom_redon,
    t.cta_id_desc,
    crde.nombre AS cta_nom_desc,
    t.rec_venc2,
    t.prescrip,
    t.uso_subcta,
    t.uso_mm,
    t.oficina,
    ofi.nombre AS oficina_nom,
    t.bol_domimuni,
    t.bol_domi,
    t.bol_tel,
    t.bol_mail,
    t.quitafaci,
    t.fchmod,
    t.usrmod,
    (((u.nombre)::text || ' - '::text) || to_char(t.fchmod, 'DD/MM/YYYY'::text)) AS modif,
    t.est,
    t.compensa,
        CASE t.compensa
            WHEN 0 THEN 'No'::text
            WHEN 1 THEN 'Si'::text
            ELSE ''::text
        END AS compensa_nom,
    t.dj_tribprinc,
    t.inscrip_req,
    t.inscrip_auto,
    t.inscrip_incomp,
    t.calc_act,
    t.calc_act_faci,
    t.cta_id_act,
    cad.nombre AS cta_nom_act
   FROM (((((((((public.trib t
     LEFT JOIN public.objeto_tipo o ON ((t.tobj = o.cod)))
     LEFT JOIN public.trib_tipo ti ON ((t.tipo = ti.cod)))
     LEFT JOIN public.texto te ON ((t.texto_id = te.texto_id)))
     LEFT JOIN public.cuenta c ON ((t.cta_id_rec = c.cta_id)))
     LEFT JOIN public.cuenta crd ON ((t.cta_id_redon = crd.cta_id)))
     LEFT JOIN public.cuenta crde ON ((t.cta_id_desc = crde.cta_id)))
     LEFT JOIN public.cuenta cad ON ((t.cta_id_act = cad.cta_id)))
     LEFT JOIN sam.muni_oficina ofi ON ((t.oficina = ofi.ofi_id)))
     LEFT JOIN sam.sis_usuario u ON ((t.usrmod = u.usr_id)));


ALTER TABLE public.v_trib OWNER TO postgres;

--
-- TOC entry 613 (class 1259 OID 5286416)
-- Name: val_coefmej; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.val_coefmej (
    cat character varying(2) NOT NULL,
    est smallint NOT NULL,
    ant smallint NOT NULL,
    coef numeric(12,2) NOT NULL
);


ALTER TABLE public.val_coefmej OWNER TO postgres;

--
-- TOC entry 8521 (class 0 OID 0)
-- Dependencies: 613
-- Name: TABLE val_coefmej; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.val_coefmej IS 'COEFICIENTES DE MEJORAS SEGUN CATEGORIA, ESTADO Y ANTIGUEDAD';


--
-- TOC entry 8522 (class 0 OID 0)
-- Dependencies: 613
-- Name: COLUMN val_coefmej.cat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_coefmej.cat IS 'CATEGORIA';


--
-- TOC entry 8523 (class 0 OID 0)
-- Dependencies: 613
-- Name: COLUMN val_coefmej.est; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_coefmej.est IS 'ESTADO';


--
-- TOC entry 8524 (class 0 OID 0)
-- Dependencies: 613
-- Name: COLUMN val_coefmej.ant; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_coefmej.ant IS 'ANTIGUEDAD';


--
-- TOC entry 8525 (class 0 OID 0)
-- Dependencies: 613
-- Name: COLUMN val_coefmej.coef; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_coefmej.coef IS 'COEFICIENTE';


--
-- TOC entry 614 (class 1259 OID 5286419)
-- Name: val_inm_coef1; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.val_inm_coef1 (
    freini numeric(5,2) NOT NULL,
    frefin numeric(5,2) NOT NULL,
    fonini numeric(5,2) NOT NULL,
    fonfin numeric(5,2) NOT NULL,
    coef numeric(5,2)
);


ALTER TABLE public.val_inm_coef1 OWNER TO postgres;

--
-- TOC entry 8526 (class 0 OID 0)
-- Dependencies: 614
-- Name: TABLE val_inm_coef1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.val_inm_coef1 IS 'TABLA 1 DE COEFICIENTES PARA INMUEBLES';


--
-- TOC entry 8527 (class 0 OID 0)
-- Dependencies: 614
-- Name: COLUMN val_inm_coef1.freini; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef1.freini IS 'METROS DE FRENTE INICIAL';


--
-- TOC entry 8528 (class 0 OID 0)
-- Dependencies: 614
-- Name: COLUMN val_inm_coef1.frefin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef1.frefin IS 'METROS DE FRENTE FINAL';


--
-- TOC entry 8529 (class 0 OID 0)
-- Dependencies: 614
-- Name: COLUMN val_inm_coef1.fonini; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef1.fonini IS 'METROS DE FONDO INICIAL';


--
-- TOC entry 8530 (class 0 OID 0)
-- Dependencies: 614
-- Name: COLUMN val_inm_coef1.fonfin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef1.fonfin IS 'METROS DE FONDO FINAL';


--
-- TOC entry 8531 (class 0 OID 0)
-- Dependencies: 614
-- Name: COLUMN val_inm_coef1.coef; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef1.coef IS 'COEFICIENTE';


--
-- TOC entry 615 (class 1259 OID 5286422)
-- Name: val_inm_coef2; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.val_inm_coef2 (
    supini numeric(5,2) NOT NULL,
    supfin numeric(5,2) NOT NULL,
    freini numeric(5,2) NOT NULL,
    frefin numeric(5,2) NOT NULL,
    valini numeric(5,2) NOT NULL,
    valfin numeric(5,2) NOT NULL,
    coef numeric(5,2)
);


ALTER TABLE public.val_inm_coef2 OWNER TO postgres;

--
-- TOC entry 8532 (class 0 OID 0)
-- Dependencies: 615
-- Name: TABLE val_inm_coef2; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.val_inm_coef2 IS 'TABLA 1 DE COEFICIENTES PARA INMUEBLES';


--
-- TOC entry 8533 (class 0 OID 0)
-- Dependencies: 615
-- Name: COLUMN val_inm_coef2.supini; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef2.supini IS 'SUPERFICIE INICIAL';


--
-- TOC entry 8534 (class 0 OID 0)
-- Dependencies: 615
-- Name: COLUMN val_inm_coef2.supfin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef2.supfin IS 'SUPERFICIE FINAL';


--
-- TOC entry 8535 (class 0 OID 0)
-- Dependencies: 615
-- Name: COLUMN val_inm_coef2.freini; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef2.freini IS 'METROS DE FRENTE INICIAL';


--
-- TOC entry 8536 (class 0 OID 0)
-- Dependencies: 615
-- Name: COLUMN val_inm_coef2.frefin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef2.frefin IS 'METROS DE FRENTE FINAL';


--
-- TOC entry 8537 (class 0 OID 0)
-- Dependencies: 615
-- Name: COLUMN val_inm_coef2.valini; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef2.valini IS 'RELACION VALORES INICIAL';


--
-- TOC entry 8538 (class 0 OID 0)
-- Dependencies: 615
-- Name: COLUMN val_inm_coef2.valfin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef2.valfin IS 'RELACION VALORES FINAL';


--
-- TOC entry 8539 (class 0 OID 0)
-- Dependencies: 615
-- Name: COLUMN val_inm_coef2.coef; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef2.coef IS 'COEFICIENTE';


--
-- TOC entry 616 (class 1259 OID 5286425)
-- Name: val_inm_coef3; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.val_inm_coef3 (
    fonini numeric(5,2) NOT NULL,
    fonfin numeric(5,2) NOT NULL,
    supini numeric(9,2) NOT NULL,
    supfin numeric(9,2) NOT NULL,
    coef numeric(5,2)
);


ALTER TABLE public.val_inm_coef3 OWNER TO postgres;

--
-- TOC entry 8540 (class 0 OID 0)
-- Dependencies: 616
-- Name: TABLE val_inm_coef3; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.val_inm_coef3 IS 'TABLA 3 DE COEFICIENTES PARA INMUEBLES';


--
-- TOC entry 8541 (class 0 OID 0)
-- Dependencies: 616
-- Name: COLUMN val_inm_coef3.fonini; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef3.fonini IS 'METROS DE FONDO INICIAL';


--
-- TOC entry 8542 (class 0 OID 0)
-- Dependencies: 616
-- Name: COLUMN val_inm_coef3.fonfin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef3.fonfin IS 'METROS DE FONDO FINAL';


--
-- TOC entry 8543 (class 0 OID 0)
-- Dependencies: 616
-- Name: COLUMN val_inm_coef3.supini; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef3.supini IS 'SUPERFICIE INICIAL';


--
-- TOC entry 8544 (class 0 OID 0)
-- Dependencies: 616
-- Name: COLUMN val_inm_coef3.supfin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef3.supfin IS 'SUPERFICIE FINAL';


--
-- TOC entry 8545 (class 0 OID 0)
-- Dependencies: 616
-- Name: COLUMN val_inm_coef3.coef; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef3.coef IS 'COEFICIENTE';


--
-- TOC entry 617 (class 1259 OID 5286428)
-- Name: val_inm_coef4; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.val_inm_coef4 (
    supini numeric(9,2) NOT NULL,
    supfin numeric(9,2) NOT NULL,
    coef numeric(5,2)
);


ALTER TABLE public.val_inm_coef4 OWNER TO postgres;

--
-- TOC entry 8546 (class 0 OID 0)
-- Dependencies: 617
-- Name: TABLE val_inm_coef4; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.val_inm_coef4 IS 'TABLA 4 DE COEFICIENTES PARA INMUEBLES';


--
-- TOC entry 8547 (class 0 OID 0)
-- Dependencies: 617
-- Name: COLUMN val_inm_coef4.supini; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef4.supini IS 'SUPERFICIE INICIAL';


--
-- TOC entry 8548 (class 0 OID 0)
-- Dependencies: 617
-- Name: COLUMN val_inm_coef4.supfin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef4.supfin IS 'SUPERFICIE FINAL';


--
-- TOC entry 8549 (class 0 OID 0)
-- Dependencies: 617
-- Name: COLUMN val_inm_coef4.coef; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef4.coef IS 'COEFICIENTE';


--
-- TOC entry 618 (class 1259 OID 5286431)
-- Name: val_inm_coef5; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.val_inm_coef5 (
    freini numeric(5,2) NOT NULL,
    frefin numeric(5,2) NOT NULL,
    fonini numeric(5,2) NOT NULL,
    fonfin numeric(5,2) NOT NULL,
    coef numeric(5,2)
);


ALTER TABLE public.val_inm_coef5 OWNER TO postgres;

--
-- TOC entry 8550 (class 0 OID 0)
-- Dependencies: 618
-- Name: TABLE val_inm_coef5; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.val_inm_coef5 IS 'TABLA 5 DE COEFICIENTES PARA INMUEBLES';


--
-- TOC entry 8551 (class 0 OID 0)
-- Dependencies: 618
-- Name: COLUMN val_inm_coef5.freini; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef5.freini IS 'METROS DE FRENTE INICIAL';


--
-- TOC entry 8552 (class 0 OID 0)
-- Dependencies: 618
-- Name: COLUMN val_inm_coef5.frefin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef5.frefin IS 'METROS DE FRENTE FINAL';


--
-- TOC entry 8553 (class 0 OID 0)
-- Dependencies: 618
-- Name: COLUMN val_inm_coef5.fonini; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef5.fonini IS 'METROS DE FONDO INICIAL';


--
-- TOC entry 8554 (class 0 OID 0)
-- Dependencies: 618
-- Name: COLUMN val_inm_coef5.fonfin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef5.fonfin IS 'METROS DE FONDO FINAL';


--
-- TOC entry 8555 (class 0 OID 0)
-- Dependencies: 618
-- Name: COLUMN val_inm_coef5.coef; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef5.coef IS 'COEFICIENTE';


--
-- TOC entry 619 (class 1259 OID 5286434)
-- Name: val_inm_coef6; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.val_inm_coef6 (
    freini numeric(5,2) NOT NULL,
    frefin numeric(5,2) NOT NULL,
    fonini numeric(5,2) NOT NULL,
    fonfin numeric(5,2) NOT NULL,
    coef numeric(5,2)
);


ALTER TABLE public.val_inm_coef6 OWNER TO postgres;

--
-- TOC entry 8556 (class 0 OID 0)
-- Dependencies: 619
-- Name: TABLE val_inm_coef6; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.val_inm_coef6 IS 'TABLA 5 DE COEFICIENTES PARA INMUEBLES';


--
-- TOC entry 8557 (class 0 OID 0)
-- Dependencies: 619
-- Name: COLUMN val_inm_coef6.freini; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef6.freini IS 'METROS DE FRENTE INICIAL';


--
-- TOC entry 8558 (class 0 OID 0)
-- Dependencies: 619
-- Name: COLUMN val_inm_coef6.frefin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef6.frefin IS 'METROS DE FRENTE FINAL';


--
-- TOC entry 8559 (class 0 OID 0)
-- Dependencies: 619
-- Name: COLUMN val_inm_coef6.fonini; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef6.fonini IS 'METROS DE FONDO INICIAL';


--
-- TOC entry 8560 (class 0 OID 0)
-- Dependencies: 619
-- Name: COLUMN val_inm_coef6.fonfin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef6.fonfin IS 'METROS DE FONDO FINAL';


--
-- TOC entry 8561 (class 0 OID 0)
-- Dependencies: 619
-- Name: COLUMN val_inm_coef6.coef; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_inm_coef6.coef IS 'COEFICIENTE';


--
-- TOC entry 620 (class 1259 OID 5286437)
-- Name: val_mej; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.val_mej (
    cat character varying(2) NOT NULL,
    form character varying(2) NOT NULL,
    perdesde integer NOT NULL,
    perhasta integer NOT NULL,
    valor numeric(12,2)
);


ALTER TABLE public.val_mej OWNER TO postgres;

--
-- TOC entry 8562 (class 0 OID 0)
-- Dependencies: 620
-- Name: TABLE val_mej; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.val_mej IS 'VALOR BASICO DE MEJORAS POR CATEGORIA Y SEGUN PERIODOS';


--
-- TOC entry 8563 (class 0 OID 0)
-- Dependencies: 620
-- Name: COLUMN val_mej.cat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_mej.cat IS 'CATEGORIA';


--
-- TOC entry 8564 (class 0 OID 0)
-- Dependencies: 620
-- Name: COLUMN val_mej.form; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_mej.form IS 'TIPO DE FORMULARIO';


--
-- TOC entry 8565 (class 0 OID 0)
-- Dependencies: 620
-- Name: COLUMN val_mej.perdesde; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_mej.perdesde IS 'PERIODO DESDE';


--
-- TOC entry 8566 (class 0 OID 0)
-- Dependencies: 620
-- Name: COLUMN val_mej.perhasta; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_mej.perhasta IS 'PERIODO HASTA';


--
-- TOC entry 8567 (class 0 OID 0)
-- Dependencies: 620
-- Name: COLUMN val_mej.valor; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.val_mej.valor IS 'VALOR';


--
-- TOC entry 622 (class 1259 OID 5287119)
-- Name: config_cem_nc; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.config_cem_nc (
    campo character varying(10) NOT NULL,
    aplica boolean DEFAULT false NOT NULL,
    nombre character varying(10),
    max_largo smallint DEFAULT 0 NOT NULL,
    solo_nro boolean DEFAULT false NOT NULL,
    orden smallint DEFAULT 0
);


ALTER TABLE sam.config_cem_nc OWNER TO postgres;

--
-- TOC entry 8568 (class 0 OID 0)
-- Dependencies: 622
-- Name: TABLE config_cem_nc; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.config_cem_nc IS 'CONFIGURACIÓN DE FORMA DE GENERAR NOMENCLATURA DE CEMENTERIO';


--
-- TOC entry 8569 (class 0 OID 0)
-- Dependencies: 622
-- Name: COLUMN config_cem_nc.campo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_cem_nc.campo IS 'NOMBRE DEL CAMPO';


--
-- TOC entry 8570 (class 0 OID 0)
-- Dependencies: 622
-- Name: COLUMN config_cem_nc.aplica; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_cem_nc.aplica IS 'INDICA SI SE USA O NO EL CAMPO';


--
-- TOC entry 8571 (class 0 OID 0)
-- Dependencies: 622
-- Name: COLUMN config_cem_nc.nombre; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_cem_nc.nombre IS 'DESCRIPCIÓN DEL CAMPO DE NOMENCLATURA';


--
-- TOC entry 8572 (class 0 OID 0)
-- Dependencies: 622
-- Name: COLUMN config_cem_nc.max_largo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_cem_nc.max_largo IS 'CANTIDAD DE CARACTERES QUE OCUPA AL CONCATENAR';


--
-- TOC entry 8573 (class 0 OID 0)
-- Dependencies: 622
-- Name: COLUMN config_cem_nc.solo_nro; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_cem_nc.solo_nro IS 'INDICA QUE SÓLO ADMITE VALORES NUMÉRICOS';


--
-- TOC entry 8574 (class 0 OID 0)
-- Dependencies: 622
-- Name: COLUMN config_cem_nc.orden; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_cem_nc.orden IS 'ORDEN';


--
-- TOC entry 670 (class 1259 OID 5316938)
-- Name: config_ddjj; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.config_ddjj (
    trib_id smallint NOT NULL,
    itemcompensamulta smallint,
    itembasico smallint,
    itemrete smallint,
    itembonif smallint,
    itemsaldo smallint,
    djanual smallint DEFAULT 0,
    nversion smallint NOT NULL,
    cm_dj smallint,
    cm_min smallint,
    ai_dj smallint,
    ai_min smallint,
    perm_retemanual smallint,
    perm_djfalta smallint,
    perm_saldo smallint,
    perm_bonif smallint,
    perm_anterior smallint,
    perm_tipos character varying(255) DEFAULT ''::character varying NOT NULL,
    nomen_id_1 character varying(1),
    nomen_id_2 character varying(1),
    fchmod timestamp without time zone,
    usrmod smallint
);


ALTER TABLE sam.config_ddjj OWNER TO postgres;

--
-- TOC entry 8575 (class 0 OID 0)
-- Dependencies: 670
-- Name: TABLE config_ddjj; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.config_ddjj IS 'CONFIGURACIÓN PARA DECLARACIÓN JURADA ';


--
-- TOC entry 8576 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN config_ddjj.trib_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_ddjj.trib_id IS 'TRIBUTO';


--
-- TOC entry 8577 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN config_ddjj.itemcompensamulta; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_ddjj.itemcompensamulta IS 'ITEM PARA VOLCAR LA MULTA';


--
-- TOC entry 8578 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN config_ddjj.itembasico; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_ddjj.itembasico IS 'ITEM BASICO DE INGRESOS BRUTOS';


--
-- TOC entry 8579 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN config_ddjj.itemrete; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_ddjj.itemrete IS 'ITEM PARA VOLCAR LA RETENCIÓN';


--
-- TOC entry 8580 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN config_ddjj.itembonif; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_ddjj.itembonif IS 'ITEM PARA VOLCAR LA BONIFICACION';


--
-- TOC entry 8581 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN config_ddjj.itemsaldo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_ddjj.itemsaldo IS 'ITEM PARA VOLCAR EL SALDO';


--
-- TOC entry 8582 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN config_ddjj.djanual; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_ddjj.djanual IS 'INDICA SI SE GENERA LA DDJJ ANUAL EN FUNCION DE LOS ANTICIPOS';


--
-- TOC entry 8583 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN config_ddjj.nversion; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_ddjj.nversion IS 'NUMERO DE VERSION';


--
-- TOC entry 8584 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN config_ddjj.cm_dj; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_ddjj.cm_dj IS 'SI NO PRESENTA DJ CUANDO ES CONVENIO MULTILATERAL';


--
-- TOC entry 8585 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN config_ddjj.cm_min; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_ddjj.cm_min IS 'SI NO SE APLICA EL MINIMO CUANDO ES CONVENIO MULTILATERAL';


--
-- TOC entry 8586 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN config_ddjj.ai_dj; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_ddjj.ai_dj IS 'SI NO PRESENTA DJ CUANDO ES ACUERDO INTERJURISDICCIONAL';


--
-- TOC entry 8587 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN config_ddjj.ai_min; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_ddjj.ai_min IS 'SI NO SE APLICA EL MINIMO CUANDO ES ACUERDO INTERJURISDICCIONAL';


--
-- TOC entry 8588 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN config_ddjj.perm_retemanual; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_ddjj.perm_retemanual IS 'INDICA SI SE PERMITE CARGAR RETENCIONES MANUALMENTE';


--
-- TOC entry 8589 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN config_ddjj.perm_djfalta; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_ddjj.perm_djfalta IS 'INDICA SI SE PERMITE DJ SI EXISTEN DJ PREVIAS FALTANTES';


--
-- TOC entry 8590 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN config_ddjj.perm_saldo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_ddjj.perm_saldo IS 'INDICA SI SE PERMITE INGRESAR SALDO A FAVOR DEL CONTRIBUYENTE';


--
-- TOC entry 8591 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN config_ddjj.perm_bonif; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_ddjj.perm_bonif IS 'INDICA SI SE PERMITE INGRESAR QUE SE APLICA BONIFICACIÓN';


--
-- TOC entry 8592 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN config_ddjj.perm_anterior; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_ddjj.perm_anterior IS 'INDICA SI SE PERMITE DJ POSTERIORES A LA ÚLTIMA PENDIENTE';


--
-- TOC entry 8593 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN config_ddjj.perm_tipos; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_ddjj.perm_tipos IS 'INDICA LOS TIPOS DE COMERCIO PERMITIDOS. VACÍO INDICA QUE SON TODOS.';


--
-- TOC entry 8594 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN config_ddjj.nomen_id_1; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_ddjj.nomen_id_1 IS 'NOMENCLADOR 1 UTILIZADO PARA DDJJ.';


--
-- TOC entry 8595 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN config_ddjj.nomen_id_2; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_ddjj.nomen_id_2 IS 'NOMENCLADOR 2 UTILIZADO PARA DDJJ.';


--
-- TOC entry 623 (class 1259 OID 5287131)
-- Name: config_fin_part; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.config_fin_part (
    anio smallint NOT NULL,
    caracter smallint NOT NULL,
    niv smallint NOT NULL,
    nombre character varying(6),
    largo smallint
);


ALTER TABLE sam.config_fin_part OWNER TO postgres;

--
-- TOC entry 8597 (class 0 OID 0)
-- Dependencies: 623
-- Name: TABLE config_fin_part; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.config_fin_part IS 'CONFIGURACIONES DE PARTIDAS DEL SISTEMA FINANCIERO';


--
-- TOC entry 8598 (class 0 OID 0)
-- Dependencies: 623
-- Name: COLUMN config_fin_part.anio; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_fin_part.anio IS 'ANIO DE TRABAJO';


--
-- TOC entry 8599 (class 0 OID 0)
-- Dependencies: 623
-- Name: COLUMN config_fin_part.caracter; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_fin_part.caracter IS 'TIPO DE CARACTER: 1 - RECURSO, 2: GASTO, 3: EXTRA';


--
-- TOC entry 8600 (class 0 OID 0)
-- Dependencies: 623
-- Name: COLUMN config_fin_part.niv; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_fin_part.niv IS 'NUMERO DE NIVEL';


--
-- TOC entry 8601 (class 0 OID 0)
-- Dependencies: 623
-- Name: COLUMN config_fin_part.nombre; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_fin_part.nombre IS 'NOMBRE';


--
-- TOC entry 8602 (class 0 OID 0)
-- Dependencies: 623
-- Name: COLUMN config_fin_part.largo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_fin_part.largo IS 'CANTIDAD DE DIGITOS';


--
-- TOC entry 624 (class 1259 OID 5287137)
-- Name: config_inm_mej; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.config_inm_mej (
    campo character varying(7) NOT NULL,
    nombre character varying(8) NOT NULL
);


ALTER TABLE sam.config_inm_mej OWNER TO postgres;

--
-- TOC entry 8604 (class 0 OID 0)
-- Dependencies: 624
-- Name: TABLE config_inm_mej; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.config_inm_mej IS 'CONFIGURACIÓN DE MEJORAS DE INMUEBLE';


--
-- TOC entry 8605 (class 0 OID 0)
-- Dependencies: 624
-- Name: COLUMN config_inm_mej.campo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_inm_mej.campo IS 'NOMBRE DEL CAMPO DE CATEGORIZACIÓN';


--
-- TOC entry 8606 (class 0 OID 0)
-- Dependencies: 624
-- Name: COLUMN config_inm_mej.nombre; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_inm_mej.nombre IS 'DESCRIPCIÓN A MOSTRAR AL EDITAR EL CAMPO';


--
-- TOC entry 625 (class 1259 OID 5287140)
-- Name: config_inm_nc; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.config_inm_nc (
    campo character varying(8) NOT NULL,
    aplica boolean DEFAULT false NOT NULL,
    nombre character varying(10),
    max_largo smallint DEFAULT 0 NOT NULL,
    solo_nro boolean DEFAULT false NOT NULL,
    orden smallint DEFAULT 0
);


ALTER TABLE sam.config_inm_nc OWNER TO postgres;

--
-- TOC entry 8607 (class 0 OID 0)
-- Dependencies: 625
-- Name: TABLE config_inm_nc; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.config_inm_nc IS 'CONFIGURACIÓN DE FORMA DE GENERAR NOMENCLATURA DE INMUEBLE';


--
-- TOC entry 8608 (class 0 OID 0)
-- Dependencies: 625
-- Name: COLUMN config_inm_nc.campo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_inm_nc.campo IS 'NOMBRE DEL CAMPO';


--
-- TOC entry 8609 (class 0 OID 0)
-- Dependencies: 625
-- Name: COLUMN config_inm_nc.aplica; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_inm_nc.aplica IS 'INDICA SI SE USA O NO EL CAMPO';


--
-- TOC entry 8610 (class 0 OID 0)
-- Dependencies: 625
-- Name: COLUMN config_inm_nc.nombre; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_inm_nc.nombre IS 'DESCRIPCIÓN DEL CAMPO DE NOMENCLATURA';


--
-- TOC entry 8611 (class 0 OID 0)
-- Dependencies: 625
-- Name: COLUMN config_inm_nc.max_largo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_inm_nc.max_largo IS 'CANTIDAD DE CARACTERES QUE OCUPA AL CONCATENAR';


--
-- TOC entry 8612 (class 0 OID 0)
-- Dependencies: 625
-- Name: COLUMN config_inm_nc.solo_nro; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_inm_nc.solo_nro IS 'INDICA QUE SÓLO ADMITE VALORES NUMÉRICOS';


--
-- TOC entry 8613 (class 0 OID 0)
-- Dependencies: 625
-- Name: COLUMN config_inm_nc.orden; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.config_inm_nc.orden IS 'ORDEN DE LOS CAMPOS';


--
-- TOC entry 626 (class 1259 OID 5287179)
-- Name: muni_datos; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.muni_datos (
    codigo character varying(10) NOT NULL,
    nombre character varying(35) NOT NULL,
    loc_id smallint,
    cod_ent character varying(15) DEFAULT ''::character varying NOT NULL,
    iva smallint NOT NULL,
    cuit character varying(11) NOT NULL,
    ingbrutos character varying(11) NOT NULL,
    logo bytea,
    logo_grande bytea,
    logo_talon bytea,
    incluir_logo2 smallint DEFAULT 0,
    presidente character varying(35),
    domi character varying(50),
    tel character varying(20) NOT NULL,
    mail character varying(40) NOT NULL,
    skype character varying(50),
    url character varying(250),
    recl_domi character varying(50),
    recl_tel character varying(20),
    recl_mail character varying(40),
    fisc_domi character varying(50),
    fisc_tel character varying(20),
    fisc_mail character varying(40),
    juz_domi character varying(50),
    juz_tel character varying(20),
    juz_mail character varying(40),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE sam.muni_datos OWNER TO postgres;

--
-- TOC entry 8614 (class 0 OID 0)
-- Dependencies: 626
-- Name: TABLE muni_datos; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.muni_datos IS 'DATOS PRINCIPALES DEL MUNICIPIO';


--
-- TOC entry 8615 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.codigo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.codigo IS 'CODIGO';


--
-- TOC entry 8616 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.nombre; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.nombre IS 'NOMBRE';


--
-- TOC entry 8617 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.loc_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.loc_id IS 'CODIGO DE LOCALIDAD';


--
-- TOC entry 8618 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.cod_ent; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.cod_ent IS 'CÓDIGO DE ENTIDAD, UTILIZADO EN LA IDENTIFICACIÓN DE COBROS EN AGENTES EXTERNOS.';


--
-- TOC entry 8619 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.iva; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.iva IS 'TIPO DE RESPONSABLE FRENTE AL IVA';


--
-- TOC entry 8620 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.cuit; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.cuit IS 'NUMERO DE CUIT';


--
-- TOC entry 8621 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.ingbrutos; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.ingbrutos IS 'NUMERO DE INGRESOS BRUTOS';


--
-- TOC entry 8622 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.logo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.logo IS 'LOGO';


--
-- TOC entry 8623 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.logo_grande; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.logo_grande IS 'LOGO UTILIZADO EN LA PARTE SUPERIOR DE LAS BOLETAS';


--
-- TOC entry 8624 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.logo_talon; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.logo_talon IS 'LOGO UTILIZADO EN LOS TALONES DE LAS BOLETAS';


--
-- TOC entry 8625 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.incluir_logo2; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.incluir_logo2 IS 'INCLUIR LOGO 2 EN REPORTES';


--
-- TOC entry 8626 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.presidente; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.presidente IS 'NOMBRE DEL PRESIDENTE MUNICIPAL';


--
-- TOC entry 8627 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.domi; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.domi IS 'DOMICILIO';


--
-- TOC entry 8628 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.tel; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.tel IS 'TELEFONO';


--
-- TOC entry 8629 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.mail; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.mail IS 'DIRECCION DE E-MAIL';


--
-- TOC entry 8630 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.skype; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.skype IS 'SKYPE';


--
-- TOC entry 8631 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.url; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.url IS 'DIRECCION URL DEL SITIO';


--
-- TOC entry 8632 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.recl_domi; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.recl_domi IS 'DOMICILIO PARA RECLAMOS';


--
-- TOC entry 8633 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.recl_tel; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.recl_tel IS 'TELEFONO PARA RECLAMOS';


--
-- TOC entry 8634 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.recl_mail; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.recl_mail IS 'DIRECCION DE E-MAIL PARA RECLAMOS';


--
-- TOC entry 8635 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.fisc_domi; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.fisc_domi IS 'DOMICILIO PARA FISCALIZACION';


--
-- TOC entry 8636 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.fisc_tel; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.fisc_tel IS 'TELEFONO PARA FISCALIZACION';


--
-- TOC entry 8637 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.fisc_mail; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.fisc_mail IS 'DIRECCION DE E-MAIL PARA FISCALIZACION';


--
-- TOC entry 8638 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.juz_domi; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.juz_domi IS 'DOMICILIO PARA JUZGADO';


--
-- TOC entry 8639 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.juz_tel; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.juz_tel IS 'TELEFONO PARA JUZGADO';


--
-- TOC entry 8640 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.juz_mail; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.juz_mail IS 'DIRECCION DE E-MAIL PARA JUZGADO';


--
-- TOC entry 8641 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.fchmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8642 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN muni_datos.usrmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_datos.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 621 (class 1259 OID 5286983)
-- Name: muni_sec; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.muni_sec (
    cod smallint NOT NULL,
    nombre character varying(35) NOT NULL,
    part_id integer,
    part_id2 integer DEFAULT 0 NOT NULL,
    part_id3 integer DEFAULT 0 NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint DEFAULT 100 NOT NULL
);


ALTER TABLE sam.muni_sec OWNER TO postgres;

--
-- TOC entry 8644 (class 0 OID 0)
-- Dependencies: 621
-- Name: TABLE muni_sec; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.muni_sec IS 'DISTINTAS SECRETARIAS MUNICIPALES';


--
-- TOC entry 8645 (class 0 OID 0)
-- Dependencies: 621
-- Name: COLUMN muni_sec.cod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_sec.cod IS 'IDENTIFICADOR DE SECRETARIA';


--
-- TOC entry 8646 (class 0 OID 0)
-- Dependencies: 621
-- Name: COLUMN muni_sec.nombre; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_sec.nombre IS 'NOMBRE ';


--
-- TOC entry 8647 (class 0 OID 0)
-- Dependencies: 621
-- Name: COLUMN muni_sec.part_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_sec.part_id IS 'PARTIDA';


--
-- TOC entry 8648 (class 0 OID 0)
-- Dependencies: 621
-- Name: COLUMN muni_sec.part_id2; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_sec.part_id2 IS 'PARTIDA 2';


--
-- TOC entry 8649 (class 0 OID 0)
-- Dependencies: 621
-- Name: COLUMN muni_sec.part_id3; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_sec.part_id3 IS 'PARTIDA 2';


--
-- TOC entry 8650 (class 0 OID 0)
-- Dependencies: 621
-- Name: COLUMN muni_sec.fchmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_sec.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8651 (class 0 OID 0)
-- Dependencies: 621
-- Name: COLUMN muni_sec.usrmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.muni_sec.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 627 (class 1259 OID 5287188)
-- Name: rpt_audit; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.rpt_audit (
    cod smallint NOT NULL,
    niv1 smallint,
    niv2 smallint,
    tipo character varying(15),
    nombre character varying(50),
    report character varying(15),
    padre smallint,
    fecha smallint DEFAULT 0,
    usuario smallint DEFAULT 0,
    caja smallint DEFAULT 0,
    tcambio smallint DEFAULT 0,
    cant smallint DEFAULT 0,
    detalle character varying(80)
);


ALTER TABLE sam.rpt_audit OWNER TO postgres;

--
-- TOC entry 8652 (class 0 OID 0)
-- Dependencies: 627
-- Name: TABLE rpt_audit; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.rpt_audit IS 'DIFERENTES REPORTES DE CAJA CON SU CONFIGURACIÓN';


--
-- TOC entry 8653 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN rpt_audit.cod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_audit.cod IS 'CODIGO DE RPORTE';


--
-- TOC entry 8654 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN rpt_audit.niv1; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_audit.niv1 IS 'NIVEL 1 PARA EL ARBOL';


--
-- TOC entry 8655 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN rpt_audit.niv2; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_audit.niv2 IS 'NIVEL 2 PARA EL ARBOL';


--
-- TOC entry 8656 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN rpt_audit.tipo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_audit.tipo IS 'TIPO QUE IDENTIFICA EL REPORTE';


--
-- TOC entry 8657 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN rpt_audit.nombre; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_audit.nombre IS 'NOMBRE DEL REPORTE PARA EL ARBOL';


--
-- TOC entry 8658 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN rpt_audit.report; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_audit.report IS 'NOMBRE PARA LLAMAR AL REPORTE';


--
-- TOC entry 8659 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN rpt_audit.padre; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_audit.padre IS 'CODIGO DEL PADRE EN EL ARBOL';


--
-- TOC entry 8660 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN rpt_audit.fecha; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_audit.fecha IS 'SI SOLICITA UN RANGO DE FECHAS';


--
-- TOC entry 8661 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN rpt_audit.usuario; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_audit.usuario IS 'SI SOLICITA USUARIO';


--
-- TOC entry 8662 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN rpt_audit.caja; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_audit.caja IS 'SI SOLICITA CAJA';


--
-- TOC entry 8663 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN rpt_audit.tcambio; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_audit.tcambio IS 'SI SOLICITA TIPO DE CAMBIO';


--
-- TOC entry 8664 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN rpt_audit.cant; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_audit.cant IS 'SI SOLICITA UNA CANTIDAD';


--
-- TOC entry 8665 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN rpt_audit.detalle; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_audit.detalle IS 'DETALLE DEL REPORTE. TITULO';


--
-- TOC entry 628 (class 1259 OID 5287196)
-- Name: rpt_caja; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.rpt_caja (
    cod smallint NOT NULL,
    niv1 smallint,
    niv2 smallint,
    tipo character varying(15),
    nombre character varying(50),
    report character varying(15),
    padre smallint,
    tesoreria smallint,
    caja smallint,
    sup smallint DEFAULT 0,
    fecha smallint,
    desdehasta smallint,
    trib smallint,
    cta smallint DEFAULT 0,
    item smallint,
    anio smallint,
    anio_mes smallint DEFAULT 0,
    detalle character varying(50)
);


ALTER TABLE sam.rpt_caja OWNER TO postgres;

--
-- TOC entry 8666 (class 0 OID 0)
-- Dependencies: 628
-- Name: TABLE rpt_caja; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.rpt_caja IS 'DIFERENTES REPORTES DE CAJA CON SU CONFIGURACI?N';


--
-- TOC entry 8667 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN rpt_caja.cod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_caja.cod IS 'CODIGO DE RPORTE';


--
-- TOC entry 8668 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN rpt_caja.niv1; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_caja.niv1 IS 'NIVEL 1 PARA EL ARBOL';


--
-- TOC entry 8669 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN rpt_caja.niv2; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_caja.niv2 IS 'NIVEL 2 PARA EL ARBOL';


--
-- TOC entry 8670 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN rpt_caja.tipo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_caja.tipo IS 'TIPO QUE IDENTIFICA EL REPORTE';


--
-- TOC entry 8671 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN rpt_caja.nombre; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_caja.nombre IS 'NOMBRE DEL REPORTE PARA EL ARBOL';


--
-- TOC entry 8672 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN rpt_caja.report; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_caja.report IS 'NOMBRE PARA LLAMAR AL REPORTE';


--
-- TOC entry 8673 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN rpt_caja.padre; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_caja.padre IS 'CODIGO DEL PADRE EN EL ARBOL';


--
-- TOC entry 8674 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN rpt_caja.tesoreria; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_caja.tesoreria IS 'SI SOLICITA TESORERIA';


--
-- TOC entry 8675 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN rpt_caja.caja; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_caja.caja IS 'SI SOLICITA CAJA';


--
-- TOC entry 8676 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN rpt_caja.sup; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_caja.sup IS 'SI SOLICITA SUPERVISOR';


--
-- TOC entry 8677 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN rpt_caja.fecha; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_caja.fecha IS 'SI SOLICITA UNA FECHA';


--
-- TOC entry 8678 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN rpt_caja.desdehasta; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_caja.desdehasta IS 'SI SOLICITA UN RANGO DE FECHAS';


--
-- TOC entry 8679 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN rpt_caja.trib; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_caja.trib IS 'SI SOLICITA TRIBUTO';


--
-- TOC entry 8680 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN rpt_caja.cta; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_caja.cta IS 'SI SE SOLICITA CUENTA';


--
-- TOC entry 8681 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN rpt_caja.item; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_caja.item IS 'SI SOLICITA ITEM';


--
-- TOC entry 8682 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN rpt_caja.anio; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_caja.anio IS 'SI SOLICITA A?O';


--
-- TOC entry 8683 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN rpt_caja.anio_mes; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_caja.anio_mes IS 'SI SOLICITA AÑO Y MES';


--
-- TOC entry 8684 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN rpt_caja.detalle; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_caja.detalle IS 'DETALLE DEL REPORTE. TITULO';


--
-- TOC entry 629 (class 1259 OID 5287202)
-- Name: rpt_esta; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.rpt_esta (
    cod smallint NOT NULL,
    niv1 smallint,
    niv2 smallint,
    tipo character varying(15),
    nombre character varying(45),
    report character varying(20),
    padre smallint,
    trib1 smallint,
    trib2 smallint,
    item smallint DEFAULT 0 NOT NULL,
    tobj smallint,
    per1 character varying(35),
    per2 character varying(35),
    per3 character varying(35),
    rangomontos smallint,
    rangofechas smallint NOT NULL,
    rangodeuda smallint,
    fchconsolida smallint NOT NULL,
    objetosbaja smallint NOT NULL,
    progresbar smallint,
    ordenobjeto smallint DEFAULT 0,
    ordennombre smallint DEFAULT 0,
    ordenticket smallint DEFAULT 0,
    detalle character varying(120)
);


ALTER TABLE sam.rpt_esta OWNER TO postgres;

--
-- TOC entry 8685 (class 0 OID 0)
-- Dependencies: 629
-- Name: TABLE rpt_esta; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.rpt_esta IS 'DIFERENTES REPORTES DE ESTAD?STICAS';


--
-- TOC entry 8686 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN rpt_esta.cod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_esta.cod IS 'CODIGO';


--
-- TOC entry 8687 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN rpt_esta.niv1; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_esta.niv1 IS 'NIVEL 1 PARA EL ARBOL';


--
-- TOC entry 8688 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN rpt_esta.niv2; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_esta.niv2 IS 'NIVEL 2 PARA EL ARBOL';


--
-- TOC entry 8689 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN rpt_esta.tipo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_esta.tipo IS 'TIPO QUE IDENTIFICA EL REPORTE';


--
-- TOC entry 8690 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN rpt_esta.nombre; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_esta.nombre IS 'NOMBRE DEL REPORTE PARA EL ARBOL';


--
-- TOC entry 8691 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN rpt_esta.report; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_esta.report IS 'NOMBRE PARA LLAMAR AL REPORTE';


--
-- TOC entry 8692 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN rpt_esta.padre; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_esta.padre IS 'CODIGO DEL PADRE EN EL ARBOL';


--
-- TOC entry 8693 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN rpt_esta.trib1; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_esta.trib1 IS 'SI SE SOLICITA EL TRIBUTO';


--
-- TOC entry 8694 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN rpt_esta.trib2; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_esta.trib2 IS 'SI SOLICITA UN SEGUNDO TRIBUTO';


--
-- TOC entry 8695 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN rpt_esta.tobj; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_esta.tobj IS 'SI SE SOLICITA EL TIPO DE OBJETO';


--
-- TOC entry 8696 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN rpt_esta.per1; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_esta.per1 IS 'DESCRIPCION DEL PERIODO 1';


--
-- TOC entry 8697 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN rpt_esta.per2; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_esta.per2 IS 'DESCRIPCION DEL PERIODO 2';


--
-- TOC entry 8698 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN rpt_esta.per3; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_esta.per3 IS 'DESCRIPCION DEL PERIODO 3';


--
-- TOC entry 8699 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN rpt_esta.rangomontos; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_esta.rangomontos IS 'SI SE SOLICITA RANGO DE MONTOS';


--
-- TOC entry 8700 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN rpt_esta.rangofechas; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_esta.rangofechas IS 'SI SE SOLICITA RANGO DE FECHAS';


--
-- TOC entry 8701 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN rpt_esta.rangodeuda; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_esta.rangodeuda IS 'SI SE SOLICITA RANGO DE DEUDA';


--
-- TOC entry 8702 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN rpt_esta.fchconsolida; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_esta.fchconsolida IS 'SI SE SOLICITA FECHA DE CONSOLIDACION';


--
-- TOC entry 8703 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN rpt_esta.objetosbaja; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_esta.objetosbaja IS 'SI SE LISTAN LOS OBJETOS DE BAJA';


--
-- TOC entry 8704 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN rpt_esta.progresbar; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_esta.progresbar IS 'SI SE MUESTRA LA BARRA DE PROGRESO';


--
-- TOC entry 8705 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN rpt_esta.ordenobjeto; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_esta.ordenobjeto IS 'INDICA SI DEBE SOLICITAR ORDENAR POR OBJ_ID';


--
-- TOC entry 8706 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN rpt_esta.ordennombre; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_esta.ordennombre IS 'INDICA SI DEBE SOLICITAR ORDENAR POR NOMBRE DEL OBJETO';


--
-- TOC entry 8707 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN rpt_esta.ordenticket; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_esta.ordenticket IS 'INDICA SI DEBE SOLICITAR ORDENAR POR NUMERO DE TICKET';


--
-- TOC entry 8708 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN rpt_esta.detalle; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_esta.detalle IS 'DSCRIPCION DETALLADA DE LA ESTADÃSTICA';


--
-- TOC entry 630 (class 1259 OID 5287213)
-- Name: rpt_fiscaliza; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.rpt_fiscaliza (
    cod smallint NOT NULL,
    nombre character varying(35) NOT NULL,
    report character varying(20) NOT NULL,
    detalle character varying(150),
    existefirma smallint,
    firma_id smallint,
    existetexto smallint,
    texto_id smallint
);


ALTER TABLE sam.rpt_fiscaliza OWNER TO postgres;

--
-- TOC entry 8709 (class 0 OID 0)
-- Dependencies: 630
-- Name: TABLE rpt_fiscaliza; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.rpt_fiscaliza IS 'DIFERENTES REPORTES DE FISCALIZACI?N';


--
-- TOC entry 8710 (class 0 OID 0)
-- Dependencies: 630
-- Name: COLUMN rpt_fiscaliza.cod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_fiscaliza.cod IS 'CODIGO';


--
-- TOC entry 8711 (class 0 OID 0)
-- Dependencies: 630
-- Name: COLUMN rpt_fiscaliza.nombre; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_fiscaliza.nombre IS 'NOMBRE DEL REPORTE PARA EL ARBOL';


--
-- TOC entry 8712 (class 0 OID 0)
-- Dependencies: 630
-- Name: COLUMN rpt_fiscaliza.report; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_fiscaliza.report IS 'NOMBRE PARA LLAMAR AL REPORTE';


--
-- TOC entry 8713 (class 0 OID 0)
-- Dependencies: 630
-- Name: COLUMN rpt_fiscaliza.detalle; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_fiscaliza.detalle IS 'DETALLE - TITULO';


--
-- TOC entry 8714 (class 0 OID 0)
-- Dependencies: 630
-- Name: COLUMN rpt_fiscaliza.existefirma; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_fiscaliza.existefirma IS 'SI EXISTE FIRMA';


--
-- TOC entry 8715 (class 0 OID 0)
-- Dependencies: 630
-- Name: COLUMN rpt_fiscaliza.firma_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_fiscaliza.firma_id IS 'CODIGO DEL USUARIO QUE FIRMA';


--
-- TOC entry 8716 (class 0 OID 0)
-- Dependencies: 630
-- Name: COLUMN rpt_fiscaliza.existetexto; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_fiscaliza.existetexto IS 'SI EXISTE TEXTO';


--
-- TOC entry 8717 (class 0 OID 0)
-- Dependencies: 630
-- Name: COLUMN rpt_fiscaliza.texto_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.rpt_fiscaliza.texto_id IS 'IDENTIFICADOR DE TEXTO';


--
-- TOC entry 580 (class 1259 OID 5286103)
-- Name: seq_usuarioweb_usr_id; Type: SEQUENCE; Schema: sam; Owner: postgres
--

CREATE SEQUENCE sam.seq_usuarioweb_usr_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE sam.seq_usuarioweb_usr_id OWNER TO postgres;

--
-- TOC entry 631 (class 1259 OID 5287221)
-- Name: sis_clave_blanqueo; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.sis_clave_blanqueo (
    usr_id smallint NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE sam.sis_clave_blanqueo OWNER TO postgres;

--
-- TOC entry 8718 (class 0 OID 0)
-- Dependencies: 631
-- Name: TABLE sis_clave_blanqueo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.sis_clave_blanqueo IS 'REGISTROS DE BLANQUEO DE CLAVES';


--
-- TOC entry 8719 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN sis_clave_blanqueo.usr_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_clave_blanqueo.usr_id IS 'CODIGO DE USUARIO';


--
-- TOC entry 8720 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN sis_clave_blanqueo.fchmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_clave_blanqueo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8721 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN sis_clave_blanqueo.usrmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_clave_blanqueo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 632 (class 1259 OID 5287225)
-- Name: sis_grupo_gru_id_seq; Type: SEQUENCE; Schema: sam; Owner: postgres
--

CREATE SEQUENCE sam.sis_grupo_gru_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE sam.sis_grupo_gru_id_seq OWNER TO postgres;

--
-- TOC entry 633 (class 1259 OID 5287227)
-- Name: sis_grupo; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.sis_grupo (
    gru_id smallint DEFAULT nextval('sam.sis_grupo_gru_id_seq'::regclass) NOT NULL,
    nombre character varying(20) NOT NULL,
    usradm1 smallint,
    usradm2 smallint,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE sam.sis_grupo OWNER TO postgres;

--
-- TOC entry 8723 (class 0 OID 0)
-- Dependencies: 633
-- Name: TABLE sis_grupo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.sis_grupo IS 'DISTINTOS GRUPOS DE USUARIOS DEL SISTEMA';


--
-- TOC entry 8724 (class 0 OID 0)
-- Dependencies: 633
-- Name: COLUMN sis_grupo.gru_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_grupo.gru_id IS 'CODIGO';


--
-- TOC entry 8725 (class 0 OID 0)
-- Dependencies: 633
-- Name: COLUMN sis_grupo.nombre; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_grupo.nombre IS 'NOMBRE';


--
-- TOC entry 8726 (class 0 OID 0)
-- Dependencies: 633
-- Name: COLUMN sis_grupo.usradm1; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_grupo.usradm1 IS 'CODIGO DE USUARIO QUE ADMINISTRA 1';


--
-- TOC entry 8727 (class 0 OID 0)
-- Dependencies: 633
-- Name: COLUMN sis_grupo.usradm2; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_grupo.usradm2 IS 'CODIGO DE USUARIO QUE ADMINISTRA 2';


--
-- TOC entry 8728 (class 0 OID 0)
-- Dependencies: 633
-- Name: COLUMN sis_grupo.fchmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_grupo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8729 (class 0 OID 0)
-- Dependencies: 633
-- Name: COLUMN sis_grupo.usrmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_grupo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 634 (class 1259 OID 5287232)
-- Name: sis_grupo_proceso; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.sis_grupo_proceso (
    gru_id smallint NOT NULL,
    pro_id smallint NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE sam.sis_grupo_proceso OWNER TO postgres;

--
-- TOC entry 8730 (class 0 OID 0)
-- Dependencies: 634
-- Name: TABLE sis_grupo_proceso; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.sis_grupo_proceso IS 'PROCESOS ASIGNADOS A LOS GRUPOS';


--
-- TOC entry 8731 (class 0 OID 0)
-- Dependencies: 634
-- Name: COLUMN sis_grupo_proceso.gru_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_grupo_proceso.gru_id IS 'CODIGO DE GRUPO';


--
-- TOC entry 8732 (class 0 OID 0)
-- Dependencies: 634
-- Name: COLUMN sis_grupo_proceso.pro_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_grupo_proceso.pro_id IS 'CODIGO DE PROCESO';


--
-- TOC entry 8733 (class 0 OID 0)
-- Dependencies: 634
-- Name: COLUMN sis_grupo_proceso.fchmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_grupo_proceso.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8734 (class 0 OID 0)
-- Dependencies: 634
-- Name: COLUMN sis_grupo_proceso.usrmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_grupo_proceso.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 635 (class 1259 OID 5287236)
-- Name: sis_modulo; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.sis_modulo (
    mod_id smallint NOT NULL,
    nombre character varying(25) NOT NULL,
    sis_id smallint NOT NULL,
    detalle character varying(40) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE sam.sis_modulo OWNER TO postgres;

--
-- TOC entry 8735 (class 0 OID 0)
-- Dependencies: 635
-- Name: TABLE sis_modulo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.sis_modulo IS 'DISTINTOS MÓDULOS DEL SISTEMA';


--
-- TOC entry 8736 (class 0 OID 0)
-- Dependencies: 635
-- Name: COLUMN sis_modulo.mod_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_modulo.mod_id IS 'CODIGO';


--
-- TOC entry 8737 (class 0 OID 0)
-- Dependencies: 635
-- Name: COLUMN sis_modulo.nombre; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_modulo.nombre IS 'NOMBRE';


--
-- TOC entry 8738 (class 0 OID 0)
-- Dependencies: 635
-- Name: COLUMN sis_modulo.sis_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_modulo.sis_id IS 'CODIGO DE SISTEMA';


--
-- TOC entry 8739 (class 0 OID 0)
-- Dependencies: 635
-- Name: COLUMN sis_modulo.detalle; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_modulo.detalle IS 'DETALLE';


--
-- TOC entry 8740 (class 0 OID 0)
-- Dependencies: 635
-- Name: COLUMN sis_modulo.fchmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_modulo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8741 (class 0 OID 0)
-- Dependencies: 635
-- Name: COLUMN sis_modulo.usrmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_modulo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 636 (class 1259 OID 5287240)
-- Name: sis_proceso; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.sis_proceso (
    pro_id smallint NOT NULL,
    nombre character varying(25) NOT NULL,
    mod_id smallint NOT NULL,
    detalle character varying(50) NOT NULL,
    uso_web character varying(1) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE sam.sis_proceso OWNER TO postgres;

--
-- TOC entry 8742 (class 0 OID 0)
-- Dependencies: 636
-- Name: TABLE sis_proceso; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.sis_proceso IS 'PROCESOS (PERMISOS) DEL SISTEMA';


--
-- TOC entry 8743 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN sis_proceso.pro_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_proceso.pro_id IS 'CODIGO DE PROCESO';


--
-- TOC entry 8744 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN sis_proceso.nombre; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_proceso.nombre IS 'NOMBRE';


--
-- TOC entry 8745 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN sis_proceso.mod_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_proceso.mod_id IS 'CODIGO DE MODULO';


--
-- TOC entry 8746 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN sis_proceso.detalle; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_proceso.detalle IS 'DETALLE';


--
-- TOC entry 8747 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN sis_proceso.uso_web; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_proceso.uso_web IS 'USO PARA SAM WEB';


--
-- TOC entry 8748 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN sis_proceso.fchmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_proceso.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8749 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN sis_proceso.usrmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_proceso.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 637 (class 1259 OID 5287244)
-- Name: sis_proceso_accion; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.sis_proceso_accion (
    pro_id smallint NOT NULL,
    accion character varying(50) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE sam.sis_proceso_accion OWNER TO postgres;

--
-- TOC entry 8750 (class 0 OID 0)
-- Dependencies: 637
-- Name: TABLE sis_proceso_accion; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.sis_proceso_accion IS 'PROCESOS (PERMISOS) DEL SISTEMA ASOCIADOS A ACCIONES DE LA APLICACION WEB';


--
-- TOC entry 8751 (class 0 OID 0)
-- Dependencies: 637
-- Name: COLUMN sis_proceso_accion.pro_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_proceso_accion.pro_id IS 'CODIGO DE PROCESO';


--
-- TOC entry 8752 (class 0 OID 0)
-- Dependencies: 637
-- Name: COLUMN sis_proceso_accion.accion; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_proceso_accion.accion IS 'ACCION DE LA APLICACION';


--
-- TOC entry 8753 (class 0 OID 0)
-- Dependencies: 637
-- Name: COLUMN sis_proceso_accion.fchmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_proceso_accion.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8754 (class 0 OID 0)
-- Dependencies: 637
-- Name: COLUMN sis_proceso_accion.usrmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_proceso_accion.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 638 (class 1259 OID 5287248)
-- Name: sis_sistema; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.sis_sistema (
    sis_id smallint NOT NULL,
    nombre character varying(20) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE sam.sis_sistema OWNER TO postgres;

--
-- TOC entry 8755 (class 0 OID 0)
-- Dependencies: 638
-- Name: TABLE sis_sistema; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.sis_sistema IS 'DIFERENTES SISTEMAS ASOCIADOS AL SAM';


--
-- TOC entry 8756 (class 0 OID 0)
-- Dependencies: 638
-- Name: COLUMN sis_sistema.sis_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_sistema.sis_id IS 'CODIGO';


--
-- TOC entry 8757 (class 0 OID 0)
-- Dependencies: 638
-- Name: COLUMN sis_sistema.nombre; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_sistema.nombre IS 'NOMBRE';


--
-- TOC entry 8758 (class 0 OID 0)
-- Dependencies: 638
-- Name: COLUMN sis_sistema.fchmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_sistema.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8759 (class 0 OID 0)
-- Dependencies: 638
-- Name: COLUMN sis_sistema.usrmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_sistema.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 639 (class 1259 OID 5287252)
-- Name: sis_usuario_acc; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.sis_usuario_acc (
    acc_id integer DEFAULT nextval(('"sam"."sis_usuario_acc_acc_id_seq"'::text)::regclass) NOT NULL,
    usr_id smallint,
    fchingreso timestamp without time zone,
    fchsalida timestamp without time zone,
    ip character varying(15),
    modo character varying(1) DEFAULT 'N'::character varying NOT NULL
);


ALTER TABLE sam.sis_usuario_acc OWNER TO postgres;

--
-- TOC entry 8760 (class 0 OID 0)
-- Dependencies: 639
-- Name: TABLE sis_usuario_acc; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.sis_usuario_acc IS 'REGISTRO DE ACCESOS AL SISTEMA POR USUARIO Y FECHA';


--
-- TOC entry 8761 (class 0 OID 0)
-- Dependencies: 639
-- Name: COLUMN sis_usuario_acc.acc_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario_acc.acc_id IS 'IDENTIFICADOR DE ACCESO';


--
-- TOC entry 8762 (class 0 OID 0)
-- Dependencies: 639
-- Name: COLUMN sis_usuario_acc.usr_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario_acc.usr_id IS 'CODIGO DE USUARIO';


--
-- TOC entry 8763 (class 0 OID 0)
-- Dependencies: 639
-- Name: COLUMN sis_usuario_acc.fchingreso; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario_acc.fchingreso IS 'FECHA DE INGRESO';


--
-- TOC entry 8764 (class 0 OID 0)
-- Dependencies: 639
-- Name: COLUMN sis_usuario_acc.fchsalida; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario_acc.fchsalida IS 'FECHA DE SALIDA';


--
-- TOC entry 8765 (class 0 OID 0)
-- Dependencies: 639
-- Name: COLUMN sis_usuario_acc.ip; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario_acc.ip IS 'NUMERO DE IP DE LA PC';


--
-- TOC entry 640 (class 1259 OID 5287257)
-- Name: sis_usuario_acc_acc_id_seq; Type: SEQUENCE; Schema: sam; Owner: postgres
--

CREATE SEQUENCE sam.sis_usuario_acc_acc_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE sam.sis_usuario_acc_acc_id_seq OWNER TO postgres;

--
-- TOC entry 641 (class 1259 OID 5287259)
-- Name: sis_usuario_acc_err; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.sis_usuario_acc_err (
    acc_id integer DEFAULT nextval(('"sam"."sis_usuario_acc_err_acc_id_seq"'::text)::regclass) NOT NULL,
    usr_id smallint,
    fchintento timestamp without time zone,
    ip character varying(15)
);


ALTER TABLE sam.sis_usuario_acc_err OWNER TO postgres;

--
-- TOC entry 8766 (class 0 OID 0)
-- Dependencies: 641
-- Name: TABLE sis_usuario_acc_err; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.sis_usuario_acc_err IS 'INTENTOS FALLIDOS DE ACCESO AL SISTEMA POR USUARIO';


--
-- TOC entry 8767 (class 0 OID 0)
-- Dependencies: 641
-- Name: COLUMN sis_usuario_acc_err.acc_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario_acc_err.acc_id IS 'IDENTIFICADOR DE ACCESO';


--
-- TOC entry 8768 (class 0 OID 0)
-- Dependencies: 641
-- Name: COLUMN sis_usuario_acc_err.usr_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario_acc_err.usr_id IS 'CODIGO DE USUARIO';


--
-- TOC entry 8769 (class 0 OID 0)
-- Dependencies: 641
-- Name: COLUMN sis_usuario_acc_err.fchintento; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario_acc_err.fchintento IS 'FECHA DE INTENTO DE ACCESO';


--
-- TOC entry 8770 (class 0 OID 0)
-- Dependencies: 641
-- Name: COLUMN sis_usuario_acc_err.ip; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario_acc_err.ip IS 'NUMERO DE IP DE LA PC';


--
-- TOC entry 642 (class 1259 OID 5287263)
-- Name: sis_usuario_acc_err_acc_id_seq; Type: SEQUENCE; Schema: sam; Owner: postgres
--

CREATE SEQUENCE sam.sis_usuario_acc_err_acc_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE sam.sis_usuario_acc_err_acc_id_seq OWNER TO postgres;

--
-- TOC entry 643 (class 1259 OID 5287265)
-- Name: sis_usuario_proceso; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.sis_usuario_proceso (
    usr_id smallint NOT NULL,
    pro_id smallint NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE sam.sis_usuario_proceso OWNER TO postgres;

--
-- TOC entry 8771 (class 0 OID 0)
-- Dependencies: 643
-- Name: TABLE sis_usuario_proceso; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.sis_usuario_proceso IS 'PROCESOS ASIGNADOS A LOS USUARIOS';


--
-- TOC entry 8772 (class 0 OID 0)
-- Dependencies: 643
-- Name: COLUMN sis_usuario_proceso.usr_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario_proceso.usr_id IS 'CODIGO DE USUARIO';


--
-- TOC entry 8773 (class 0 OID 0)
-- Dependencies: 643
-- Name: COLUMN sis_usuario_proceso.pro_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario_proceso.pro_id IS 'CODIGO DE PROCESO';


--
-- TOC entry 8774 (class 0 OID 0)
-- Dependencies: 643
-- Name: COLUMN sis_usuario_proceso.fchmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario_proceso.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8775 (class 0 OID 0)
-- Dependencies: 643
-- Name: COLUMN sis_usuario_proceso.usrmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario_proceso.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 644 (class 1259 OID 5287269)
-- Name: sis_usuario_tesoreria; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.sis_usuario_tesoreria (
    usr_id smallint NOT NULL,
    teso_id smallint NOT NULL
);


ALTER TABLE sam.sis_usuario_tesoreria OWNER TO postgres;

--
-- TOC entry 8776 (class 0 OID 0)
-- Dependencies: 644
-- Name: TABLE sis_usuario_tesoreria; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.sis_usuario_tesoreria IS 'TESORERÍAS ASIGNADAS A LOS USUARIOS';


--
-- TOC entry 8777 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN sis_usuario_tesoreria.usr_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario_tesoreria.usr_id IS 'CODIGO DE USUARIO';


--
-- TOC entry 8778 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN sis_usuario_tesoreria.teso_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario_tesoreria.teso_id IS 'CODIGO DE TESORERIA';


--
-- TOC entry 645 (class 1259 OID 5287272)
-- Name: sis_usuario_tmodo; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.sis_usuario_tmodo (
    cod character varying(1) NOT NULL,
    nombre character varying(15) NOT NULL,
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint NOT NULL
);


ALTER TABLE sam.sis_usuario_tmodo OWNER TO postgres;

--
-- TOC entry 8779 (class 0 OID 0)
-- Dependencies: 645
-- Name: TABLE sis_usuario_tmodo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.sis_usuario_tmodo IS 'MODO DE SALIDA';


--
-- TOC entry 8780 (class 0 OID 0)
-- Dependencies: 645
-- Name: COLUMN sis_usuario_tmodo.cod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario_tmodo.cod IS 'CODIGO';


--
-- TOC entry 8781 (class 0 OID 0)
-- Dependencies: 645
-- Name: COLUMN sis_usuario_tmodo.nombre; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario_tmodo.nombre IS 'NOMBRE';


--
-- TOC entry 8782 (class 0 OID 0)
-- Dependencies: 645
-- Name: COLUMN sis_usuario_tmodo.fchmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario_tmodo.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8783 (class 0 OID 0)
-- Dependencies: 645
-- Name: COLUMN sis_usuario_tmodo.usrmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario_tmodo.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 646 (class 1259 OID 5287276)
-- Name: sis_usuario_trib; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.sis_usuario_trib (
    usr_id smallint NOT NULL,
    trib_id smallint NOT NULL
);


ALTER TABLE sam.sis_usuario_trib OWNER TO postgres;

--
-- TOC entry 8784 (class 0 OID 0)
-- Dependencies: 646
-- Name: TABLE sis_usuario_trib; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.sis_usuario_trib IS 'TRIBUTOS ASIGNADAS A LOS USUARIOS';


--
-- TOC entry 8785 (class 0 OID 0)
-- Dependencies: 646
-- Name: COLUMN sis_usuario_trib.usr_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario_trib.usr_id IS 'CODIGO DE USUARIO';


--
-- TOC entry 8786 (class 0 OID 0)
-- Dependencies: 646
-- Name: COLUMN sis_usuario_trib.trib_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.sis_usuario_trib.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 648 (class 1259 OID 5287281)
-- Name: tabla_aux; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.tabla_aux (
    cod smallint NOT NULL,
    nombre character varying(30) NOT NULL,
    mod_id smallint,
    titulo character varying(35),
    frm character varying(25),
    link character varying(30),
    autoinc smallint,
    accesocons smallint,
    accesoedita smallint,
    tcod character varying(1),
    web character varying(1),
    fchmod timestamp without time zone DEFAULT now(),
    usrmod smallint
);


ALTER TABLE sam.tabla_aux OWNER TO postgres;

--
-- TOC entry 8787 (class 0 OID 0)
-- Dependencies: 648
-- Name: TABLE tabla_aux; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.tabla_aux IS 'DISTINTAS TABLAS AUXILIARES USADAS EN EL SISTEMA';


--
-- TOC entry 8788 (class 0 OID 0)
-- Dependencies: 648
-- Name: COLUMN tabla_aux.cod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.tabla_aux.cod IS 'CODIGO';


--
-- TOC entry 8789 (class 0 OID 0)
-- Dependencies: 648
-- Name: COLUMN tabla_aux.nombre; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.tabla_aux.nombre IS 'NOMBRE';


--
-- TOC entry 8790 (class 0 OID 0)
-- Dependencies: 648
-- Name: COLUMN tabla_aux.mod_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.tabla_aux.mod_id IS 'CODIGO DE MODULO';


--
-- TOC entry 8791 (class 0 OID 0)
-- Dependencies: 648
-- Name: COLUMN tabla_aux.titulo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.tabla_aux.titulo IS 'TITULO';


--
-- TOC entry 8792 (class 0 OID 0)
-- Dependencies: 648
-- Name: COLUMN tabla_aux.frm; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.tabla_aux.frm IS 'NOMBRE DEL FORMULARIO';


--
-- TOC entry 8793 (class 0 OID 0)
-- Dependencies: 648
-- Name: COLUMN tabla_aux.link; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.tabla_aux.link IS 'LINK DEL SISTEMA WEB';


--
-- TOC entry 8794 (class 0 OID 0)
-- Dependencies: 648
-- Name: COLUMN tabla_aux.autoinc; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.tabla_aux.autoinc IS 'SI EL CODIGO ES AUTOINCREMENTAL';


--
-- TOC entry 8795 (class 0 OID 0)
-- Dependencies: 648
-- Name: COLUMN tabla_aux.accesocons; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.tabla_aux.accesocons IS 'CODIGO DE ACCESO DE CONSULTA';


--
-- TOC entry 8796 (class 0 OID 0)
-- Dependencies: 648
-- Name: COLUMN tabla_aux.accesoedita; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.tabla_aux.accesoedita IS 'CODIGO DE ACCESO A LA EDICION';


--
-- TOC entry 8797 (class 0 OID 0)
-- Dependencies: 648
-- Name: COLUMN tabla_aux.tcod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.tabla_aux.tcod IS 'TIPO DE CAMPO DEL CÓDIGO (C/N)';


--
-- TOC entry 8798 (class 0 OID 0)
-- Dependencies: 648
-- Name: COLUMN tabla_aux.web; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.tabla_aux.web IS 'INDICA SI LA TABLE ES VISIBLE EN SISTEMA WEB';


--
-- TOC entry 8799 (class 0 OID 0)
-- Dependencies: 648
-- Name: COLUMN tabla_aux.fchmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.tabla_aux.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8800 (class 0 OID 0)
-- Dependencies: 648
-- Name: COLUMN tabla_aux.usrmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.tabla_aux.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 649 (class 1259 OID 5287295)
-- Name: v_grupo_proceso; Type: VIEW; Schema: sam; Owner: postgres
--

CREATE VIEW sam.v_grupo_proceso AS
 SELECT g.gru_id,
    g.nombre AS gru_nom,
    s.nombre AS sis_nom,
    m.nombre AS mod_nom,
    gp.pro_id,
    p.nombre AS pro_nom,
    p.detalle AS pro_det
   FROM ((((sam.sis_grupo g
     JOIN sam.sis_grupo_proceso gp ON ((g.gru_id = gp.gru_id)))
     JOIN sam.sis_proceso p ON ((gp.pro_id = p.pro_id)))
     JOIN sam.sis_modulo m ON ((p.mod_id = m.mod_id)))
     JOIN sam.sis_sistema s ON ((m.sis_id = s.sis_id)));


ALTER TABLE sam.v_grupo_proceso OWNER TO postgres;

--
-- TOC entry 650 (class 1259 OID 5287300)
-- Name: v_grupo_usuario; Type: VIEW; Schema: sam; Owner: postgres
--

CREATE VIEW sam.v_grupo_usuario AS
 SELECT g.gru_id,
    g.nombre AS gru_nom,
    u.usr_id,
    u.nombre AS usr_nom,
    u.apenom AS usr_apenom
   FROM (sam.sis_grupo g
     JOIN sam.sis_usuario u ON ((g.gru_id = u.grupo)));


ALTER TABLE sam.v_grupo_usuario OWNER TO postgres;

--
-- TOC entry 651 (class 1259 OID 5287304)
-- Name: version; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.version (
    sis_id smallint NOT NULL,
    version character varying(8) NOT NULL,
    origen character varying(50) NOT NULL,
    novedades character varying(4000),
    fchmod timestamp without time zone DEFAULT now() NOT NULL,
    usrmod smallint DEFAULT 100 NOT NULL
);


ALTER TABLE sam.version OWNER TO postgres;

--
-- TOC entry 8801 (class 0 OID 0)
-- Dependencies: 651
-- Name: TABLE version; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.version IS 'DISTINTAS VERSIONES DEL SISTEMA';


--
-- TOC entry 8802 (class 0 OID 0)
-- Dependencies: 651
-- Name: COLUMN version.sis_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.version.sis_id IS 'CODIGO DE SISTEMA';


--
-- TOC entry 8803 (class 0 OID 0)
-- Dependencies: 651
-- Name: COLUMN version.version; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.version.version IS 'NUMERO DE VERSION';


--
-- TOC entry 8804 (class 0 OID 0)
-- Dependencies: 651
-- Name: COLUMN version.origen; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.version.origen IS 'RUTA DONDE SE ENCUENTRAN LOS ARCHIVOS';


--
-- TOC entry 8805 (class 0 OID 0)
-- Dependencies: 651
-- Name: COLUMN version.novedades; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.version.novedades IS 'NOVEDADES DE LA VERSION';


--
-- TOC entry 8806 (class 0 OID 0)
-- Dependencies: 651
-- Name: COLUMN version.fchmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.version.fchmod IS 'FECHA DE MODIFICACION';


--
-- TOC entry 8807 (class 0 OID 0)
-- Dependencies: 651
-- Name: COLUMN version.usrmod; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.version.usrmod IS 'CODIGO DE USUARIO QUE MODIFICO';


--
-- TOC entry 652 (class 1259 OID 5287312)
-- Name: version_archivo; Type: TABLE; Schema: sam; Owner: postgres
--

CREATE TABLE sam.version_archivo (
    sis_id smallint NOT NULL,
    version character varying(8) NOT NULL,
    archivo character varying(20) NOT NULL,
    destino character varying(20),
    registrar smallint
);


ALTER TABLE sam.version_archivo OWNER TO postgres;

--
-- TOC entry 8808 (class 0 OID 0)
-- Dependencies: 652
-- Name: TABLE version_archivo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON TABLE sam.version_archivo IS 'ARCHIVOS A INSTALAR POR CADA VERSI?N DEL SISTEMA';


--
-- TOC entry 8809 (class 0 OID 0)
-- Dependencies: 652
-- Name: COLUMN version_archivo.sis_id; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.version_archivo.sis_id IS 'CODIGO DE SISTEMA';


--
-- TOC entry 8810 (class 0 OID 0)
-- Dependencies: 652
-- Name: COLUMN version_archivo.version; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.version_archivo.version IS 'NUMERO DE VERSION';


--
-- TOC entry 8811 (class 0 OID 0)
-- Dependencies: 652
-- Name: COLUMN version_archivo.archivo; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.version_archivo.archivo IS 'NOMBRE DEL ARCHIVO';


--
-- TOC entry 8812 (class 0 OID 0)
-- Dependencies: 652
-- Name: COLUMN version_archivo.destino; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.version_archivo.destino IS 'DESTINO';


--
-- TOC entry 8813 (class 0 OID 0)
-- Dependencies: 652
-- Name: COLUMN version_archivo.registrar; Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON COLUMN sam.version_archivo.registrar IS 'SI SE DEBE REGISTRAR';


--
-- TOC entry 653 (class 1259 OID 5287316)
-- Name: ag_rete; Type: TABLE; Schema: temp; Owner: postgres
--

CREATE TABLE temp.ag_rete (
    ag_rete character varying(8),
    fila smallint,
    cuit character varying(11),
    fecha character varying(8) NOT NULL,
    numero character varying(8) NOT NULL,
    tcomprob character varying(2) NOT NULL,
    comprob character varying(12) NOT NULL,
    base character varying(11) NOT NULL,
    alic character varying(11) NOT NULL,
    monto character varying(11) NOT NULL,
    usrmod integer,
    fchmod timestamp without time zone
);


ALTER TABLE temp.ag_rete OWNER TO postgres;

--
-- TOC entry 654 (class 1259 OID 5287319)
-- Name: ag_rete_log; Type: TABLE; Schema: temp; Owner: postgres
--

CREATE TABLE temp.ag_rete_log (
    ag_rete character varying(8),
    fila smallint,
    mensaje character varying(250),
    usrmod integer
);


ALTER TABLE temp.ag_rete_log OWNER TO postgres;

--
-- TOC entry 655 (class 1259 OID 5287322)
-- Name: ag_rete_prev; Type: TABLE; Schema: temp; Owner: postgres
--

CREATE TABLE temp.ag_rete_prev (
    dato character varying(250)
);


ALTER TABLE temp.ag_rete_prev OWNER TO postgres;

--
-- TOC entry 656 (class 1259 OID 5287356)
-- Name: ctacte_est_deuda; Type: TABLE; Schema: temp; Owner: postgres
--

CREATE TABLE temp.ctacte_est_deuda (
    trib_id smallint NOT NULL,
    obj_id character varying(8) NOT NULL,
    subcta smallint DEFAULT 0 NOT NULL,
    anio integer NOT NULL,
    detalle character varying(48) NOT NULL,
    monto numeric(12,2) NOT NULL,
    accesor numeric(12,2) NOT NULL,
    multa numeric(12,2) NOT NULL,
    total numeric(12,2) NOT NULL,
    fchalta date NOT NULL
);


ALTER TABLE temp.ctacte_est_deuda OWNER TO postgres;

--
-- TOC entry 8817 (class 0 OID 0)
-- Dependencies: 656
-- Name: TABLE ctacte_est_deuda; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON TABLE temp.ctacte_est_deuda IS 'TABLA TEMPORAL DE CTA CTE PARA DETERMINAR ESTADO DE CUENTA';


--
-- TOC entry 8818 (class 0 OID 0)
-- Dependencies: 656
-- Name: COLUMN ctacte_est_deuda.trib_id; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ctacte_est_deuda.trib_id IS 'CODIGO DE TRIBUTO';


--
-- TOC entry 8819 (class 0 OID 0)
-- Dependencies: 656
-- Name: COLUMN ctacte_est_deuda.obj_id; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ctacte_est_deuda.obj_id IS 'CODIGO DE OBJETO';


--
-- TOC entry 8820 (class 0 OID 0)
-- Dependencies: 656
-- Name: COLUMN ctacte_est_deuda.subcta; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ctacte_est_deuda.subcta IS 'NUMERO DE SUBCUENTA';


--
-- TOC entry 8821 (class 0 OID 0)
-- Dependencies: 656
-- Name: COLUMN ctacte_est_deuda.anio; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ctacte_est_deuda.anio IS 'A?O';


--
-- TOC entry 8822 (class 0 OID 0)
-- Dependencies: 656
-- Name: COLUMN ctacte_est_deuda.detalle; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ctacte_est_deuda.detalle IS 'DETALLE';


--
-- TOC entry 657 (class 1259 OID 5287360)
-- Name: ctacte_liq_manual; Type: TABLE; Schema: temp; Owner: postgres
--

CREATE TABLE temp.ctacte_liq_manual (
    liq_id integer NOT NULL,
    orden smallint NOT NULL,
    item_id smallint NOT NULL,
    param1 character varying(20),
    param2 character varying(20),
    param3 character varying(20),
    param4 character varying(20),
    monto numeric(15,4) NOT NULL
);


ALTER TABLE temp.ctacte_liq_manual OWNER TO postgres;

--
-- TOC entry 8823 (class 0 OID 0)
-- Dependencies: 657
-- Name: TABLE ctacte_liq_manual; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON TABLE temp.ctacte_liq_manual IS 'ITEMS DE LIQUIDACIONES LIQUIDACIONES MANUALES';


--
-- TOC entry 8824 (class 0 OID 0)
-- Dependencies: 657
-- Name: COLUMN ctacte_liq_manual.liq_id; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ctacte_liq_manual.liq_id IS 'IDENTIFICADOR DE LIQUIDACION';


--
-- TOC entry 8825 (class 0 OID 0)
-- Dependencies: 657
-- Name: COLUMN ctacte_liq_manual.orden; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ctacte_liq_manual.orden IS 'ORDEN';


--
-- TOC entry 8826 (class 0 OID 0)
-- Dependencies: 657
-- Name: COLUMN ctacte_liq_manual.item_id; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ctacte_liq_manual.item_id IS 'CODIGO DE ITEM';


--
-- TOC entry 8827 (class 0 OID 0)
-- Dependencies: 657
-- Name: COLUMN ctacte_liq_manual.param1; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ctacte_liq_manual.param1 IS 'PARAMETRO 1';


--
-- TOC entry 8828 (class 0 OID 0)
-- Dependencies: 657
-- Name: COLUMN ctacte_liq_manual.param2; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ctacte_liq_manual.param2 IS 'PARAMETRO 2';


--
-- TOC entry 8829 (class 0 OID 0)
-- Dependencies: 657
-- Name: COLUMN ctacte_liq_manual.param3; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ctacte_liq_manual.param3 IS 'PARAMETRO 3';


--
-- TOC entry 8830 (class 0 OID 0)
-- Dependencies: 657
-- Name: COLUMN ctacte_liq_manual.param4; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ctacte_liq_manual.param4 IS 'PARAMETRO 4';


--
-- TOC entry 8831 (class 0 OID 0)
-- Dependencies: 657
-- Name: COLUMN ctacte_liq_manual.monto; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ctacte_liq_manual.monto IS 'MONTO';


--
-- TOC entry 658 (class 1259 OID 5287363)
-- Name: ctacte_liq_rec; Type: TABLE; Schema: temp; Owner: postgres
--

CREATE TABLE temp.ctacte_liq_rec (
    liq_id integer NOT NULL,
    recibo integer NOT NULL,
    fecha date,
    acta character varying(10),
    item_id smallint,
    area smallint,
    monto numeric(12,2)
);


ALTER TABLE temp.ctacte_liq_rec OWNER TO postgres;

--
-- TOC entry 8832 (class 0 OID 0)
-- Dependencies: 658
-- Name: TABLE ctacte_liq_rec; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON TABLE temp.ctacte_liq_rec IS 'TEMPORAL DE RECIBOS';


--
-- TOC entry 8833 (class 0 OID 0)
-- Dependencies: 658
-- Name: COLUMN ctacte_liq_rec.recibo; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ctacte_liq_rec.recibo IS 'NUMERO DE RECIBO';


--
-- TOC entry 8834 (class 0 OID 0)
-- Dependencies: 658
-- Name: COLUMN ctacte_liq_rec.fecha; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ctacte_liq_rec.fecha IS 'FECHA DE RECIBO';


--
-- TOC entry 8835 (class 0 OID 0)
-- Dependencies: 658
-- Name: COLUMN ctacte_liq_rec.acta; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ctacte_liq_rec.acta IS 'NUMERO DE ACTA';


--
-- TOC entry 8836 (class 0 OID 0)
-- Dependencies: 658
-- Name: COLUMN ctacte_liq_rec.item_id; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ctacte_liq_rec.item_id IS 'CODIGO DE ITEM';


--
-- TOC entry 8837 (class 0 OID 0)
-- Dependencies: 658
-- Name: COLUMN ctacte_liq_rec.area; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ctacte_liq_rec.area IS 'CODIGO DE AREA';


--
-- TOC entry 8838 (class 0 OID 0)
-- Dependencies: 658
-- Name: COLUMN ctacte_liq_rec.monto; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ctacte_liq_rec.monto IS 'MONTO';


--
-- TOC entry 659 (class 1259 OID 5287369)
-- Name: cuenta; Type: TABLE; Schema: temp; Owner: postgres
--

CREATE TABLE temp.cuenta (
    cta_id smallint,
    nombre character varying(40),
    nombre_redu character varying(25),
    tcta smallint,
    part_id integer,
    cta_id_atras smallint,
    est character(1),
    fchmod timestamp without time zone,
    usrmod smallint
);


ALTER TABLE temp.cuenta OWNER TO postgres;

--
-- TOC entry 660 (class 1259 OID 5287375)
-- Name: ddjj_rubros; Type: TABLE; Schema: temp; Owner: postgres
--

CREATE TABLE temp.ddjj_rubros (
    djrub_id integer NOT NULL,
    rubro_id character varying(8) NOT NULL,
    base numeric(12,2) NOT NULL,
    cant numeric(12,2),
    minimo numeric(12,2) NOT NULL,
    alicuota numeric(12,2) NOT NULL,
    monto numeric(12,2) NOT NULL
);


ALTER TABLE temp.ddjj_rubros OWNER TO postgres;

--
-- TOC entry 8839 (class 0 OID 0)
-- Dependencies: 660
-- Name: TABLE ddjj_rubros; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON TABLE temp.ddjj_rubros IS 'RUBROS POR CADA DECLARACION JURADA';


--
-- TOC entry 8840 (class 0 OID 0)
-- Dependencies: 660
-- Name: COLUMN ddjj_rubros.djrub_id; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ddjj_rubros.djrub_id IS 'IDENTIFICADOR UNICO POR CADA DDJJ TEMPORAL';


--
-- TOC entry 8841 (class 0 OID 0)
-- Dependencies: 660
-- Name: COLUMN ddjj_rubros.rubro_id; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ddjj_rubros.rubro_id IS 'CODIGO DE RUBRO';


--
-- TOC entry 8842 (class 0 OID 0)
-- Dependencies: 660
-- Name: COLUMN ddjj_rubros.base; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ddjj_rubros.base IS 'MONTO DE BASE IMPONIBLE';


--
-- TOC entry 8843 (class 0 OID 0)
-- Dependencies: 660
-- Name: COLUMN ddjj_rubros.cant; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ddjj_rubros.cant IS 'CANTIDAD';


--
-- TOC entry 8844 (class 0 OID 0)
-- Dependencies: 660
-- Name: COLUMN ddjj_rubros.minimo; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ddjj_rubros.minimo IS 'MONTO MINIMO';


--
-- TOC entry 8845 (class 0 OID 0)
-- Dependencies: 660
-- Name: COLUMN ddjj_rubros.alicuota; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ddjj_rubros.alicuota IS 'ALICUOTA';


--
-- TOC entry 8846 (class 0 OID 0)
-- Dependencies: 660
-- Name: COLUMN ddjj_rubros.monto; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.ddjj_rubros.monto IS 'MONTO';


--
-- TOC entry 661 (class 1259 OID 5287381)
-- Name: fin_mov; Type: TABLE; Schema: temp; Owner: postgres
--

CREATE TABLE temp.fin_mov (
    mov_id integer,
    prov_id integer,
    tipo character varying(1),
    torigen character varying(1),
    fecha timestamp without time zone,
    total numeric(12,2),
    retenido numeric(12,2),
    monto numeric(12,2),
    bcocta_id integer,
    chequenro integer,
    chequeserie character varying(2),
    cbu character varying(22),
    titularcta character varying(50),
    expe character varying(10),
    fchcobro timestamp without time zone,
    fchconcilia timestamp without time zone,
    impreso smallint,
    obs character varying(250),
    est character varying(1),
    asien_id integer,
    fchmod timestamp without time zone,
    usrmod smallint
);


ALTER TABLE temp.fin_mov OWNER TO postgres;

--
-- TOC entry 186 (class 1259 OID 5283916)
-- Name: fin_part_anio_dinamico; Type: TABLE; Schema: temp; Owner: postgres
--

CREATE TABLE temp.fin_part_anio_dinamico (
    anio smallint,
    usr_id smallint,
    fchhasta date,
    part_id smallint,
    caracter smallint,
    fin smallint,
    fun smallint,
    obj smallint,
    ins smallint,
    ubi smallint,
    asignado numeric(12,2),
    preventivo numeric(12,2),
    comprometido numeric(12,2),
    saldo numeric(12,2),
    saldoporc numeric(12,2),
    devengado numeric(12,2),
    pagado numeric(12,2),
    cobrado numeric(12,2),
    deuda numeric(12,2),
    arecaudar numeric(12,2)
);


ALTER TABLE temp.fin_part_anio_dinamico OWNER TO postgres;

--
-- TOC entry 8847 (class 0 OID 0)
-- Dependencies: 186
-- Name: TABLE fin_part_anio_dinamico; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON TABLE temp.fin_part_anio_dinamico IS 'EJECUCIÓN PRESUPUESTARIA DINAMICA';


--
-- TOC entry 8848 (class 0 OID 0)
-- Dependencies: 186
-- Name: COLUMN fin_part_anio_dinamico.anio; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_dinamico.anio IS 'AÑO';


--
-- TOC entry 8849 (class 0 OID 0)
-- Dependencies: 186
-- Name: COLUMN fin_part_anio_dinamico.usr_id; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_dinamico.usr_id IS 'CODIGO DE USUARIO';


--
-- TOC entry 8850 (class 0 OID 0)
-- Dependencies: 186
-- Name: COLUMN fin_part_anio_dinamico.fchhasta; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_dinamico.fchhasta IS 'FECHA HASTA';


--
-- TOC entry 8851 (class 0 OID 0)
-- Dependencies: 186
-- Name: COLUMN fin_part_anio_dinamico.part_id; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_dinamico.part_id IS 'IDENTIFICADOR DE PARTIDA';


--
-- TOC entry 8852 (class 0 OID 0)
-- Dependencies: 186
-- Name: COLUMN fin_part_anio_dinamico.caracter; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_dinamico.caracter IS 'CARACTER DE LA PARTIDA';


--
-- TOC entry 8853 (class 0 OID 0)
-- Dependencies: 186
-- Name: COLUMN fin_part_anio_dinamico.fin; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_dinamico.fin IS 'FINALIDAD';


--
-- TOC entry 8854 (class 0 OID 0)
-- Dependencies: 186
-- Name: COLUMN fin_part_anio_dinamico.fun; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_dinamico.fun IS 'FUNCION';


--
-- TOC entry 8855 (class 0 OID 0)
-- Dependencies: 186
-- Name: COLUMN fin_part_anio_dinamico.obj; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_dinamico.obj IS 'OBJETO';


--
-- TOC entry 8856 (class 0 OID 0)
-- Dependencies: 186
-- Name: COLUMN fin_part_anio_dinamico.ins; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_dinamico.ins IS 'INSTITUCIONAL';


--
-- TOC entry 8857 (class 0 OID 0)
-- Dependencies: 186
-- Name: COLUMN fin_part_anio_dinamico.ubi; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_dinamico.ubi IS 'UBICACION';


--
-- TOC entry 8858 (class 0 OID 0)
-- Dependencies: 186
-- Name: COLUMN fin_part_anio_dinamico.asignado; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_dinamico.asignado IS 'ASIGNADO';


--
-- TOC entry 8859 (class 0 OID 0)
-- Dependencies: 186
-- Name: COLUMN fin_part_anio_dinamico.preventivo; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_dinamico.preventivo IS 'PREVENTIVO';


--
-- TOC entry 8860 (class 0 OID 0)
-- Dependencies: 186
-- Name: COLUMN fin_part_anio_dinamico.comprometido; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_dinamico.comprometido IS 'COMPROMETIDO';


--
-- TOC entry 8861 (class 0 OID 0)
-- Dependencies: 186
-- Name: COLUMN fin_part_anio_dinamico.saldo; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_dinamico.saldo IS 'SALDO = ASIGNADO-PREVENTIVO-COMPROMETIDO';


--
-- TOC entry 8862 (class 0 OID 0)
-- Dependencies: 186
-- Name: COLUMN fin_part_anio_dinamico.saldoporc; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_dinamico.saldoporc IS 'PORCENTAJE DE SALDO';


--
-- TOC entry 8863 (class 0 OID 0)
-- Dependencies: 186
-- Name: COLUMN fin_part_anio_dinamico.devengado; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_dinamico.devengado IS 'DEVENGADO';


--
-- TOC entry 8864 (class 0 OID 0)
-- Dependencies: 186
-- Name: COLUMN fin_part_anio_dinamico.pagado; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_dinamico.pagado IS 'PAGADO';


--
-- TOC entry 8865 (class 0 OID 0)
-- Dependencies: 186
-- Name: COLUMN fin_part_anio_dinamico.cobrado; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_dinamico.cobrado IS 'COBRADO (RECURSOS)';


--
-- TOC entry 8866 (class 0 OID 0)
-- Dependencies: 186
-- Name: COLUMN fin_part_anio_dinamico.deuda; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_dinamico.deuda IS 'DEUDA = DEVENGADO - PAGADO';


--
-- TOC entry 8867 (class 0 OID 0)
-- Dependencies: 186
-- Name: COLUMN fin_part_anio_dinamico.arecaudar; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_dinamico.arecaudar IS 'COBRADO - ASIGNADO (RECURSOS)';


--
-- TOC entry 187 (class 1259 OID 5283924)
-- Name: fin_part_anio_mes; Type: TABLE; Schema: temp; Owner: postgres
--

CREATE TABLE temp.fin_part_anio_mes (
    anio smallint,
    usr_id smallint,
    fchhasta date,
    part_id smallint,
    caracter smallint,
    fin smallint,
    fun smallint,
    obj smallint,
    ins smallint,
    ubi smallint,
    mes smallint,
    asignado numeric(12,2),
    ejecutado numeric(12,2)
);


ALTER TABLE temp.fin_part_anio_mes OWNER TO postgres;

--
-- TOC entry 8869 (class 0 OID 0)
-- Dependencies: 187
-- Name: TABLE fin_part_anio_mes; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON TABLE temp.fin_part_anio_mes IS 'EJECUCIÓN PRESUPUESTARIA DINAMICA';


--
-- TOC entry 8870 (class 0 OID 0)
-- Dependencies: 187
-- Name: COLUMN fin_part_anio_mes.anio; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_mes.anio IS 'AÑO';


--
-- TOC entry 8871 (class 0 OID 0)
-- Dependencies: 187
-- Name: COLUMN fin_part_anio_mes.usr_id; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_mes.usr_id IS 'CODIGO DE USUARIO';


--
-- TOC entry 8872 (class 0 OID 0)
-- Dependencies: 187
-- Name: COLUMN fin_part_anio_mes.fchhasta; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_mes.fchhasta IS 'FECHA HASTA';


--
-- TOC entry 8873 (class 0 OID 0)
-- Dependencies: 187
-- Name: COLUMN fin_part_anio_mes.part_id; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_mes.part_id IS 'IDENTIFICADOR DE PARTIDA';


--
-- TOC entry 8874 (class 0 OID 0)
-- Dependencies: 187
-- Name: COLUMN fin_part_anio_mes.caracter; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_mes.caracter IS 'CARACTER DE LA PARTIDA';


--
-- TOC entry 8875 (class 0 OID 0)
-- Dependencies: 187
-- Name: COLUMN fin_part_anio_mes.fin; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_mes.fin IS 'FINALIDAD';


--
-- TOC entry 8876 (class 0 OID 0)
-- Dependencies: 187
-- Name: COLUMN fin_part_anio_mes.fun; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_mes.fun IS 'FUNCION';


--
-- TOC entry 8877 (class 0 OID 0)
-- Dependencies: 187
-- Name: COLUMN fin_part_anio_mes.obj; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_mes.obj IS 'OBJETO';


--
-- TOC entry 8878 (class 0 OID 0)
-- Dependencies: 187
-- Name: COLUMN fin_part_anio_mes.ins; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_mes.ins IS 'INSTITUCIONAL';


--
-- TOC entry 8879 (class 0 OID 0)
-- Dependencies: 187
-- Name: COLUMN fin_part_anio_mes.ubi; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_mes.ubi IS 'UBICACION';


--
-- TOC entry 8880 (class 0 OID 0)
-- Dependencies: 187
-- Name: COLUMN fin_part_anio_mes.mes; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_mes.mes IS 'MES';


--
-- TOC entry 8881 (class 0 OID 0)
-- Dependencies: 187
-- Name: COLUMN fin_part_anio_mes.asignado; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_mes.asignado IS 'ASIGNADO';


--
-- TOC entry 8882 (class 0 OID 0)
-- Dependencies: 187
-- Name: COLUMN fin_part_anio_mes.ejecutado; Type: COMMENT; Schema: temp; Owner: postgres
--

COMMENT ON COLUMN temp.fin_part_anio_mes.ejecutado IS 'EJECUTADO';


--
-- TOC entry 667 (class 1259 OID 5287478)
-- Name: seq_ctacte_liq_manual; Type: SEQUENCE; Schema: temp; Owner: postgres
--

CREATE SEQUENCE temp.seq_ctacte_liq_manual
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE temp.seq_ctacte_liq_manual OWNER TO postgres;

--
-- TOC entry 668 (class 1259 OID 5287480)
-- Name: seq_ddjj_rubros; Type: SEQUENCE; Schema: temp; Owner: postgres
--

CREATE SEQUENCE temp.seq_ddjj_rubros
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE temp.seq_ddjj_rubros OWNER TO postgres;

--
-- TOC entry 4131 (class 2604 OID 5287494)
-- Name: caja_opera_mdp orden; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.caja_opera_mdp ALTER COLUMN orden SET DEFAULT nextval('public.seq_caja_opera_mdp'::regclass);


--
-- TOC entry 4144 (class 2604 OID 5287495)
-- Name: calc_desc desc_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.calc_desc ALTER COLUMN desc_id SET DEFAULT nextval('public.seq_calc_desc'::regclass);


--
-- TOC entry 4213 (class 2604 OID 5287496)
-- Name: ctacte_excep excep_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ctacte_excep ALTER COLUMN excep_id SET DEFAULT nextval('public.seq_ctacte_excep'::regclass);


--
-- TOC entry 4330 (class 2604 OID 5287499)
-- Name: his_plan his_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.his_plan ALTER COLUMN his_id SET DEFAULT nextval('public.his_plan_his_id_seq'::regclass);


--
-- TOC entry 4497 (class 2604 OID 5287502)
-- Name: ret_det ret_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ret_det ALTER COLUMN ret_id SET DEFAULT nextval('public.ret_det_ret_id_seq'::regclass);


--
-- TOC entry 4673 (class 2606 OID 5315325)
-- Name: caja_caja_mdp caja_caja_mdp_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.caja_caja_mdp
    ADD CONSTRAINT caja_caja_mdp_pkey PRIMARY KEY (caja_id, mdp);


--
-- TOC entry 4683 (class 2606 OID 5315327)
-- Name: caja_mdp_cuota caja_mdp_cuota_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.caja_mdp_cuota
    ADD CONSTRAINT caja_mdp_cuota_pkey PRIMARY KEY (mdp, cuotas);


--
-- TOC entry 4688 (class 2606 OID 5315329)
-- Name: caja_opera_mdp caja_opera_mdp_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.caja_opera_mdp
    ADD CONSTRAINT caja_opera_mdp_pkey PRIMARY KEY (orden);


--
-- TOC entry 4685 (class 2606 OID 5315331)
-- Name: caja_opera caja_opera_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.caja_opera
    ADD CONSTRAINT caja_opera_pkey PRIMARY KEY (opera);


--
-- TOC entry 4692 (class 2606 OID 5315333)
-- Name: caja_tdestino caja_tdest_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.caja_tdestino
    ADD CONSTRAINT caja_tdest_pkey PRIMARY KEY (cod);


--
-- TOC entry 4694 (class 2606 OID 5315335)
-- Name: caja_tdisenio caja_tdisenio_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.caja_tdisenio
    ADD CONSTRAINT caja_tdisenio_pkey PRIMARY KEY (cod);


--
-- TOC entry 4704 (class 2606 OID 5315337)
-- Name: caja_tmdp caja_tmdp_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.caja_tmdp
    ADD CONSTRAINT caja_tmdp_pkey PRIMARY KEY (cod);


--
-- TOC entry 4706 (class 2606 OID 5315339)
-- Name: caja_tori caja_tori_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.caja_tori
    ADD CONSTRAINT caja_tori_pkey PRIMARY KEY (cod);


--
-- TOC entry 4677 (class 2606 OID 5315341)
-- Name: caja_estado cajas_estados_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.caja_estado
    ADD CONSTRAINT cajas_estados_pkey PRIMARY KEY (caja_id, fecha);


--
-- TOC entry 4667 (class 2606 OID 5315343)
-- Name: caja cajas_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.caja
    ADD CONSTRAINT cajas_pkey PRIMARY KEY (caja_id);


--
-- TOC entry 4696 (class 2606 OID 5315345)
-- Name: caja_tesoreria cajas_tesoreria_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.caja_tesoreria
    ADD CONSTRAINT cajas_tesoreria_pkey PRIMARY KEY (teso_id);


--
-- TOC entry 4647 (class 2606 OID 5315347)
-- Name: caja_ticket cajas_ticket_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.caja_ticket
    ADD CONSTRAINT cajas_ticket_pkey PRIMARY KEY (ticket);


--
-- TOC entry 4708 (class 2606 OID 5315349)
-- Name: calc_desc calc_desc_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.calc_desc
    ADD CONSTRAINT calc_desc_pkey PRIMARY KEY (desc_id);


--
-- TOC entry 4715 (class 2606 OID 5315351)
-- Name: calc_mm calc_mm_idx; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.calc_mm
    ADD CONSTRAINT calc_mm_idx PRIMARY KEY (fchdesde, fchhasta);


--
-- TOC entry 4730 (class 2606 OID 5315353)
-- Name: cem_cuadro cem_cuadro_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cem_cuadro
    ADD CONSTRAINT cem_cuadro_pk PRIMARY KEY (cua_id);


--
-- TOC entry 4736 (class 2606 OID 5315355)
-- Name: cem_fall cem_fall_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cem_fall
    ADD CONSTRAINT cem_fall_pkey PRIMARY KEY (fall_id);


--
-- TOC entry 4742 (class 2606 OID 5315357)
-- Name: cem_fall_tserv cem_fall_tserv_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cem_fall_tserv
    ADD CONSTRAINT cem_fall_tserv_pkey PRIMARY KEY (cod);


--
-- TOC entry 4756 (class 2606 OID 5315359)
-- Name: cem_tfunebre cem_temp_funebre_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cem_tfunebre
    ADD CONSTRAINT cem_temp_funebre_pkey PRIMARY KEY (cod);


--
-- TOC entry 4728 (class 2606 OID 5315361)
-- Name: cem_alquiler cementerio_alquiler_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cem_alquiler
    ADD CONSTRAINT cementerio_alquiler_pkey PRIMARY KEY (alq_id);


--
-- TOC entry 4725 (class 2606 OID 5315363)
-- Name: cem cementerio_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cem
    ADD CONSTRAINT cementerio_pkey PRIMARY KEY (obj_id);


--
-- TOC entry 4763 (class 2606 OID 5315365)
-- Name: comer_ddjj_anual comer_ddjj_anual_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comer_ddjj_anual
    ADD CONSTRAINT comer_ddjj_anual_pkey PRIMARY KEY (obj_id, anio);


--
-- TOC entry 4761 (class 2606 OID 5315367)
-- Name: comer comer_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comer
    ADD CONSTRAINT comer_pkey PRIMARY KEY (obj_id);


--
-- TOC entry 4774 (class 2606 OID 5315369)
-- Name: comer_tipo comer_tipo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comer_tipo
    ADD CONSTRAINT comer_tipo_pkey PRIMARY KEY (cod);


--
-- TOC entry 4653 (class 2606 OID 5315371)
-- Name: comer_tiva comer_tiva_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comer_tiva
    ADD CONSTRAINT comer_tiva_pkey PRIMARY KEY (cod);


--
-- TOC entry 4776 (class 2606 OID 5315373)
-- Name: comer_tliq comer_tliq_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comer_tliq
    ADD CONSTRAINT comer_tliq_pkey PRIMARY KEY (cod);


--
-- TOC entry 4768 (class 2606 OID 5315375)
-- Name: comer_inm comercios_inm_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comer_inm
    ADD CONSTRAINT comercios_inm_pkey PRIMARY KEY (obj_id, inmueble);


--
-- TOC entry 4786 (class 2606 OID 5315377)
-- Name: comp_aplic comp_aplic_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comp_aplic
    ADD CONSTRAINT comp_aplic_pkey PRIMARY KEY (comp_id, fecha, ctacte_id);


--
-- TOC entry 4783 (class 2606 OID 5315379)
-- Name: comp comp_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comp
    ADD CONSTRAINT comp_pkey PRIMARY KEY (comp_id);


--
-- TOC entry 4788 (class 2606 OID 5315381)
-- Name: comp_saldo comp_saldo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comp_saldo
    ADD CONSTRAINT comp_saldo_pkey PRIMARY KEY (comp_id, ctacte_id);


--
-- TOC entry 4790 (class 2606 OID 5315383)
-- Name: comp_test comp_test_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comp_test
    ADD CONSTRAINT comp_test_pkey PRIMARY KEY (cod);


--
-- TOC entry 4792 (class 2606 OID 5315385)
-- Name: comp_tipo comp_tipo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comp_tipo
    ADD CONSTRAINT comp_tipo_pkey PRIMARY KEY (cod);


--
-- TOC entry 4811 (class 2606 OID 5315387)
-- Name: ctacte_cambioest ctacte_cambioest_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ctacte_cambioest
    ADD CONSTRAINT ctacte_cambioest_pkey PRIMARY KEY (cambio_id);


--
-- TOC entry 4837 (class 2606 OID 5315389)
-- Name: ctacte_pagocta_det ctacte_pagocta_det_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ctacte_pagocta_det
    ADD CONSTRAINT ctacte_pagocta_det_pkey PRIMARY KEY (pago_id, cta_id);


--
-- TOC entry 4835 (class 2606 OID 5315391)
-- Name: ctacte_pagocta ctacte_pagocta_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ctacte_pagocta
    ADD CONSTRAINT ctacte_pagocta_pkey PRIMARY KEY (pago_id);


--
-- TOC entry 4651 (class 2606 OID 5315393)
-- Name: cuenta cuentas_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cuenta
    ADD CONSTRAINT cuentas_pkey PRIMARY KEY (cta_id);


--
-- TOC entry 4857 (class 2606 OID 5315395)
-- Name: ddjj ddjj_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ddjj
    ADD CONSTRAINT ddjj_pkey PRIMARY KEY (dj_id);


--
-- TOC entry 4869 (class 2606 OID 5315397)
-- Name: ddjj_ret ddjj_ret_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ddjj_ret
    ADD CONSTRAINT ddjj_ret_pkey PRIMARY KEY (dj_id, ret_id);


--
-- TOC entry 4710 (class 2606 OID 5315399)
-- Name: calc_feriado feriados_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.calc_feriado
    ADD CONSTRAINT feriados_pkey PRIMARY KEY (fecha);


--
-- TOC entry 4951 (class 2606 OID 5315401)
-- Name: fiscaliza fiscaliza_idx; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.fiscaliza
    ADD CONSTRAINT fiscaliza_idx PRIMARY KEY (fisca_id);


--
-- TOC entry 4713 (class 2606 OID 5315403)
-- Name: calc_interes interes_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.calc_interes
    ADD CONSTRAINT interes_pkey PRIMARY KEY (fchdesde, fchhasta);


--
-- TOC entry 5088 (class 2606 OID 5315405)
-- Name: judi_etapa judi_etapas_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.judi_etapa
    ADD CONSTRAINT judi_etapas_pkey PRIMARY KEY (judi_id, orden);


--
-- TOC entry 5090 (class 2606 OID 5315407)
-- Name: judi_hono judi_hono_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.judi_hono
    ADD CONSTRAINT judi_hono_pkey PRIMARY KEY (est, supuesto, deuda_desde, deuda_hasta);


--
-- TOC entry 5094 (class 2606 OID 5315409)
-- Name: judi_periodo judi_periodos_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.judi_periodo
    ADD CONSTRAINT judi_periodos_pkey PRIMARY KEY (judi_id, ctacte_id);


--
-- TOC entry 5100 (class 2606 OID 5315411)
-- Name: judi_tetapa judi_tetapa_codi_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.judi_tetapa
    ADD CONSTRAINT judi_tetapa_codi_key PRIMARY KEY (cod);


--
-- TOC entry 4722 (class 2606 OID 5315429)
-- Name: calc_multa_tfcalculo multas_fcalculo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.calc_multa_tfcalculo
    ADD CONSTRAINT multas_fcalculo_pkey PRIMARY KEY (cod);


--
-- TOC entry 4638 (class 2606 OID 5315431)
-- Name: objeto objeto_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.objeto
    ADD CONSTRAINT objeto_pkey PRIMARY KEY (obj_id);


--
-- TOC entry 5143 (class 2606 OID 5315433)
-- Name: objeto_var objetos_variables_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.objeto_var
    ADD CONSTRAINT objetos_variables_pkey PRIMARY KEY (obj_id, var_id);


--
-- TOC entry 5158 (class 2606 OID 5315435)
-- Name: persona_ajuste persona_ajuste_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.persona_ajuste
    ADD CONSTRAINT persona_ajuste_pkey PRIMARY KEY (aju_id);


--
-- TOC entry 5310 (class 2606 OID 5315437)
-- Name: val_coefmej pk_aval_coefmej; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.val_coefmej
    ADD CONSTRAINT pk_aval_coefmej PRIMARY KEY (cat, est, ant);


--
-- TOC entry 5324 (class 2606 OID 5315439)
-- Name: val_mej pk_aval_valmej; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.val_mej
    ADD CONSTRAINT pk_aval_valmej PRIMARY KEY (cat, form, perdesde);


--
-- TOC entry 4661 (class 2606 OID 5315441)
-- Name: banco_cuenta pk_banco_cuenta; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.banco_cuenta
    ADD CONSTRAINT pk_banco_cuenta PRIMARY KEY (bcocta_id);


--
-- TOC entry 4663 (class 2606 OID 5315443)
-- Name: banco_tcuenta pk_banco_tcuenta; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.banco_tcuenta
    ADD CONSTRAINT pk_banco_tcuenta PRIMARY KEY (cod);


--
-- TOC entry 4665 (class 2606 OID 5315445)
-- Name: banco_tmoneda pk_banco_tmoneda; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.banco_tmoneda
    ADD CONSTRAINT pk_banco_tmoneda PRIMARY KEY (cod);


--
-- TOC entry 4624 (class 2606 OID 5315447)
-- Name: banco pk_bancos; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.banco
    ADD CONSTRAINT pk_bancos PRIMARY KEY (bco_ent, bco_suc);


--
-- TOC entry 4626 (class 2606 OID 5315449)
-- Name: banco_entidad pk_bancos_entidad; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.banco_entidad
    ADD CONSTRAINT pk_bancos_entidad PRIMARY KEY (bco_ent);


--
-- TOC entry 4893 (class 2606 OID 5315451)
-- Name: domi_barrio pk_barrio; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.domi_barrio
    ADD CONSTRAINT pk_barrio PRIMARY KEY (barr_id);


--
-- TOC entry 4690 (class 2606 OID 5315453)
-- Name: caja_pagoold pk_caja_pagoold; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.caja_pagoold
    ADD CONSTRAINT pk_caja_pagoold PRIMARY KEY (pago_id);


--
-- TOC entry 4669 (class 2606 OID 5315455)
-- Name: caja_anulado pk_cajas_anulado; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.caja_anulado
    ADD CONSTRAINT pk_cajas_anulado PRIMARY KEY (tipo, comprob);


--
-- TOC entry 4671 (class 2606 OID 5315457)
-- Name: caja_arqueo pk_cajas_arqueo; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.caja_arqueo
    ADD CONSTRAINT pk_cajas_arqueo PRIMARY KEY (caja_id, fecha);


--
-- TOC entry 4649 (class 2606 OID 5315459)
-- Name: caja_ticket_det pk_cajas_det; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.caja_ticket_det
    ADD CONSTRAINT pk_cajas_det PRIMARY KEY (ticket, cta_id);


--
-- TOC entry 4700 (class 2606 OID 5315461)
-- Name: caja_ticket_item pk_cajas_ticket_item; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.caja_ticket_item
    ADD CONSTRAINT pk_cajas_ticket_item PRIMARY KEY (ticket, item_id);


--
-- TOC entry 5397 (class 2606 OID 5317068)
-- Name: calc_act pk_calc_act; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.calc_act
    ADD CONSTRAINT pk_calc_act PRIMARY KEY (fchdesde, fchhasta);


--
-- TOC entry 4896 (class 2606 OID 5315463)
-- Name: domi_calle pk_calle; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.domi_calle
    ADD CONSTRAINT pk_calle PRIMARY KEY (calle_id);


--
-- TOC entry 4738 (class 2606 OID 5315465)
-- Name: cem_fall_serv pk_cem_fall_serv; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cem_fall_serv
    ADD CONSTRAINT pk_cem_fall_serv PRIMARY KEY (fall_id, orden);


--
-- TOC entry 4770 (class 2606 OID 5315467)
-- Name: comer_thab pk_comer_thab; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comer_thab
    ADD CONSTRAINT pk_comer_thab PRIMARY KEY (cod);


--
-- TOC entry 4778 (class 2606 OID 5315469)
-- Name: comer_torgjuri pk_comer_torgjuri; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comer_torgjuri
    ADD CONSTRAINT pk_comer_torgjuri PRIMARY KEY (cod);


--
-- TOC entry 4765 (class 2606 OID 5315471)
-- Name: comer_infrac pk_comercios_censo_infrac; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comer_infrac
    ADD CONSTRAINT pk_comercios_censo_infrac PRIMARY KEY (obj_id, tinfrac);


--
-- TOC entry 5108 (class 2606 OID 5315473)
-- Name: objeto_computa pk_computa; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.objeto_computa
    ADD CONSTRAINT pk_computa PRIMARY KEY (computa_id);


--
-- TOC entry 5110 (class 2606 OID 5315475)
-- Name: objeto_computa_campo pk_computa_campos; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.objeto_computa_campo
    ADD CONSTRAINT pk_computa_campos PRIMARY KEY (computa_id, campo);


--
-- TOC entry 4802 (class 2606 OID 5315477)
-- Name: ctacte pk_ctacte; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ctacte
    ADD CONSTRAINT pk_ctacte PRIMARY KEY (ctacte_id);


--
-- TOC entry 4804 (class 2606 OID 5315479)
-- Name: ctacte_ajuste pk_ctacte_ajustes; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ctacte_ajuste
    ADD CONSTRAINT pk_ctacte_ajustes PRIMARY KEY (aju_id);


--
-- TOC entry 4806 (class 2606 OID 5315481)
-- Name: ctacte_baja pk_ctacte_baja; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ctacte_baja
    ADD CONSTRAINT pk_ctacte_baja PRIMARY KEY (ctacte_id, orden);


--
-- TOC entry 4809 (class 2606 OID 5315483)
-- Name: ctacte_baja_liq pk_ctacte_baja_liq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ctacte_baja_liq
    ADD CONSTRAINT pk_ctacte_baja_liq PRIMARY KEY (ctacte_id, orden, orden_liq, item_id);


--
-- TOC entry 4820 (class 2606 OID 5315485)
-- Name: ctacte_excep pk_ctacte_excep; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ctacte_excep
    ADD CONSTRAINT pk_ctacte_excep PRIMARY KEY (excep_id);


--
-- TOC entry 4825 (class 2606 OID 5315487)
-- Name: ctacte_libredeuda_bloq pk_ctacte_libredeuda_bloq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ctacte_libredeuda_bloq
    ADD CONSTRAINT pk_ctacte_libredeuda_bloq PRIMARY KEY (obj_id);


--
-- TOC entry 4827 (class 2606 OID 5315489)
-- Name: ctacte_libredeuda_desc pk_ctacte_libredeuda_desc; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ctacte_libredeuda_desc
    ADD CONSTRAINT pk_ctacte_libredeuda_desc PRIMARY KEY (obj_id);


--
-- TOC entry 4833 (class 2606 OID 5315491)
-- Name: ctacte_liq pk_ctacte_liq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ctacte_liq
    ADD CONSTRAINT pk_ctacte_liq PRIMARY KEY (ctacte_id, orden, item_id);


--
-- TOC entry 4839 (class 2606 OID 5315493)
-- Name: ctacte_planvenc pk_ctacte_planvenc; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ctacte_planvenc
    ADD CONSTRAINT pk_ctacte_planvenc PRIMARY KEY (corr_id);


--
-- TOC entry 4843 (class 2606 OID 5315495)
-- Name: ctacte_rec pk_ctacte_rec; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ctacte_rec
    ADD CONSTRAINT pk_ctacte_rec PRIMARY KEY (ctacte_id, recibo);


--
-- TOC entry 4845 (class 2606 OID 5315497)
-- Name: ctacte_sem pk_ctacte_sem; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ctacte_sem
    ADD CONSTRAINT pk_ctacte_sem PRIMARY KEY (ctacte_id);


--
-- TOC entry 4860 (class 2606 OID 5315499)
-- Name: ddjj_anual pk_ddjj_anual; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ddjj_anual
    ADD CONSTRAINT pk_ddjj_anual PRIMARY KEY (dj_id, cuota);


--
-- TOC entry 4863 (class 2606 OID 5315501)
-- Name: ddjj_liq pk_ddjj_liq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ddjj_liq
    ADD CONSTRAINT pk_ddjj_liq PRIMARY KEY (dj_id, item_id);


--
-- TOC entry 4865 (class 2606 OID 5315503)
-- Name: ddjj_recep pk_ddjj_recep; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ddjj_recep
    ADD CONSTRAINT pk_ddjj_recep PRIMARY KEY (recep_id);


--
-- TOC entry 4867 (class 2606 OID 5315505)
-- Name: ddjj_recep_det pk_ddjj_recep_det; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ddjj_recep_det
    ADD CONSTRAINT pk_ddjj_recep_det PRIMARY KEY (recep_id, obj_id, anio, cuota);


--
-- TOC entry 4872 (class 2606 OID 5316972)
-- Name: ddjj_rubros pk_ddjj_rubro; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ddjj_rubros
    ADD CONSTRAINT pk_ddjj_rubro PRIMARY KEY (dj_id, rubro_id);


--
-- TOC entry 4874 (class 2606 OID 5315509)
-- Name: ddjj_test pk_ddjj_test; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ddjj_test
    ADD CONSTRAINT pk_ddjj_test PRIMARY KEY (cod);


--
-- TOC entry 4876 (class 2606 OID 5315511)
-- Name: ddjj_tipo pk_ddjj_tipo; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ddjj_tipo
    ADD CONSTRAINT pk_ddjj_tipo PRIMARY KEY (cod);


--
-- TOC entry 4879 (class 2606 OID 5315513)
-- Name: debito_adhe pk_debito_adhe; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.debito_adhe
    ADD CONSTRAINT pk_debito_adhe PRIMARY KEY (adh_id);


--
-- TOC entry 4881 (class 2606 OID 5315515)
-- Name: debito_entidad pk_debito_entidad; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.debito_entidad
    ADD CONSTRAINT pk_debito_entidad PRIMARY KEY (caja_id, trib_id, anio, mes);


--
-- TOC entry 4883 (class 2606 OID 5315517)
-- Name: debito_periodo pk_debito_periodo; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.debito_periodo
    ADD CONSTRAINT pk_debito_periodo PRIMARY KEY (deb_id);


--
-- TOC entry 4886 (class 2606 OID 5315519)
-- Name: debito_test pk_debito_test; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.debito_test
    ADD CONSTRAINT pk_debito_test PRIMARY KEY (cod);


--
-- TOC entry 4888 (class 2606 OID 5315521)
-- Name: debito_trechazo pk_debito_trechazo; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.debito_trechazo
    ADD CONSTRAINT pk_debito_trechazo PRIMARY KEY (caja_id, cod);


--
-- TOC entry 4891 (class 2606 OID 5315523)
-- Name: domi pk_domi; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.domi
    ADD CONSTRAINT pk_domi PRIMARY KEY (torigen, obj_id, id);


--
-- TOC entry 4898 (class 2606 OID 5315525)
-- Name: domi_localidad pk_domi_localidad; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.domi_localidad
    ADD CONSTRAINT pk_domi_localidad PRIMARY KEY (loc_id);


--
-- TOC entry 4900 (class 2606 OID 5315527)
-- Name: domi_pais pk_domi_pais; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.domi_pais
    ADD CONSTRAINT pk_domi_pais PRIMARY KEY (pais_id);


--
-- TOC entry 4902 (class 2606 OID 5315529)
-- Name: domi_provincia pk_domi_provincia; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.domi_provincia
    ADD CONSTRAINT pk_domi_provincia PRIMARY KEY (prov_id);


--
-- TOC entry 4904 (class 2606 OID 5315531)
-- Name: domi_tcalle pk_domi_tcalle; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.domi_tcalle
    ADD CONSTRAINT pk_domi_tcalle PRIMARY KEY (cod);


--
-- TOC entry 4906 (class 2606 OID 5315533)
-- Name: domi_torigen pk_domi_torigen; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.domi_torigen
    ADD CONSTRAINT pk_domi_torigen PRIMARY KEY (cod);


--
-- TOC entry 4908 (class 2606 OID 5315535)
-- Name: domi_tpav pk_domi_tpav; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.domi_tpav
    ADD CONSTRAINT pk_domi_tpav PRIMARY KEY (cod);


--
-- TOC entry 4911 (class 2606 OID 5315537)
-- Name: emision_err pk_emision_err; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.emision_err
    ADD CONSTRAINT pk_emision_err PRIMARY KEY (trib_id, anio, cuota, obj_id, subcta);


--
-- TOC entry 4913 (class 2606 OID 5315539)
-- Name: emision_esta pk_emision_esta; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.emision_esta
    ADD CONSTRAINT pk_emision_esta PRIMARY KEY (trib_id, anio, cuota);


--
-- TOC entry 4916 (class 2606 OID 5315541)
-- Name: emision_mail pk_emision_mail; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.emision_mail
    ADD CONSTRAINT pk_emision_mail PRIMARY KEY (trib_id, anio, cuota, obj_id, subcta);


--
-- TOC entry 4918 (class 2606 OID 5315543)
-- Name: emision_margen pk_emision_margen; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.emision_margen
    ADD CONSTRAINT pk_emision_margen PRIMARY KEY (cod);


--
-- TOC entry 4920 (class 2606 OID 5315545)
-- Name: emision_mensaje pk_emision_mensaje; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.emision_mensaje
    ADD CONSTRAINT pk_emision_mensaje PRIMARY KEY (ctacte_id);


--
-- TOC entry 4922 (class 2606 OID 5315547)
-- Name: emision_terr pk_emision_terr; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.emision_terr
    ADD CONSTRAINT pk_emision_terr PRIMARY KEY (cod);


--
-- TOC entry 4946 (class 2606 OID 5315569)
-- Name: facilida pk_facilida; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.facilida
    ADD CONSTRAINT pk_facilida PRIMARY KEY (faci_id);


--
-- TOC entry 4948 (class 2606 OID 5315571)
-- Name: facilida_periodo pk_facilida_periodo; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.facilida_periodo
    ADD CONSTRAINT pk_facilida_periodo PRIMARY KEY (faci_id, ctacte_id);


--
-- TOC entry 4953 (class 2606 OID 5315575)
-- Name: fiscaliza_test pk_fiscaliza_test; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.fiscaliza_test
    ADD CONSTRAINT pk_fiscaliza_test PRIMARY KEY (cod);


--
-- TOC entry 4957 (class 2606 OID 5315577)
-- Name: his_cem pk_his_cem; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.his_cem
    ADD CONSTRAINT pk_his_cem PRIMARY KEY (his_id);


--
-- TOC entry 4959 (class 2606 OID 5315579)
-- Name: his_comer pk_his_comer; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.his_comer
    ADD CONSTRAINT pk_his_comer PRIMARY KEY (his_id);


--
-- TOC entry 4962 (class 2606 OID 5315581)
-- Name: his_ctacte_ajuste pk_his_ctacte_ajustes; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.his_ctacte_ajuste
    ADD CONSTRAINT pk_his_ctacte_ajustes PRIMARY KEY (his_id);


--
-- TOC entry 4966 (class 2606 OID 5315583)
-- Name: his_domi pk_his_domi; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.his_domi
    ADD CONSTRAINT pk_his_domi PRIMARY KEY (his_id);


--
-- TOC entry 4970 (class 2606 OID 5315585)
-- Name: his_inm pk_his_inm; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.his_inm
    ADD CONSTRAINT pk_his_inm PRIMARY KEY (his_id);


--
-- TOC entry 4976 (class 2606 OID 5315587)
-- Name: his_inm_mej pk_his_inm_mej; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.his_inm_mej
    ADD CONSTRAINT pk_his_inm_mej PRIMARY KEY (his_id);


--
-- TOC entry 4979 (class 2606 OID 5315589)
-- Name: his_objeto pk_his_objeto; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.his_objeto
    ADD CONSTRAINT pk_his_objeto PRIMARY KEY (his_id);


--
-- TOC entry 4981 (class 2606 OID 5315591)
-- Name: his_objeto_item pk_his_objeto_item; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.his_objeto_item
    ADD CONSTRAINT pk_his_objeto_item PRIMARY KEY (his_id);


--
-- TOC entry 4983 (class 2606 OID 5315593)
-- Name: his_objeto_reemplaza pk_his_objeto_reemplaza; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.his_objeto_reemplaza
    ADD CONSTRAINT pk_his_objeto_reemplaza PRIMARY KEY (oldobj, newobj);


--
-- TOC entry 4985 (class 2606 OID 5315595)
-- Name: his_persona_reemplaza pk_his_persona_reemplaza; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.his_persona_reemplaza
    ADD CONSTRAINT pk_his_persona_reemplaza PRIMARY KEY (oldnum);


--
-- TOC entry 4987 (class 2606 OID 5315597)
-- Name: his_persona_reemplaza_ctacte pk_his_persona_reemplaza_ctacte; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.his_persona_reemplaza_ctacte
    ADD CONSTRAINT pk_his_persona_reemplaza_ctacte PRIMARY KEY (oldnum, ctacte_id);


--
-- TOC entry 4989 (class 2606 OID 5315599)
-- Name: his_persona_reemplaza_objeto pk_his_persona_reemplaza_objeto; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.his_persona_reemplaza_objeto
    ADD CONSTRAINT pk_his_persona_reemplaza_objeto PRIMARY KEY (oldnum, obj_id);


--
-- TOC entry 4991 (class 2606 OID 5315601)
-- Name: his_persona_reemplaza_plan pk_his_persona_reemplaza_plan; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.his_persona_reemplaza_plan
    ADD CONSTRAINT pk_his_persona_reemplaza_plan PRIMARY KEY (oldnum, plan_id);


--
-- TOC entry 4996 (class 2606 OID 5315603)
-- Name: his_plan pk_his_plan; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.his_plan
    ADD CONSTRAINT pk_his_plan PRIMARY KEY (his_id);


--
-- TOC entry 5002 (class 2606 OID 5315607)
-- Name: inm pk_inm; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm
    ADD CONSTRAINT pk_inm PRIMARY KEY (obj_id);


--
-- TOC entry 5005 (class 2606 OID 5315609)
-- Name: inm_avaluo pk_inm_avaluo; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_avaluo
    ADD CONSTRAINT pk_inm_avaluo PRIMARY KEY (obj_id, perdesde);


--
-- TOC entry 4972 (class 2606 OID 5315611)
-- Name: his_inm_cambio pk_inm_cambio; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.his_inm_cambio
    ADD CONSTRAINT pk_inm_cambio PRIMARY KEY (cbio_id);


--
-- TOC entry 5008 (class 2606 OID 5315613)
-- Name: inm_frente pk_inm_frente; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_frente
    ADD CONSTRAINT pk_inm_frente PRIMARY KEY (obj_id, calle_id);


--
-- TOC entry 5010 (class 2606 OID 5315615)
-- Name: inm_manz pk_inm_manz; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_manz
    ADD CONSTRAINT pk_inm_manz PRIMARY KEY (ncm);


--
-- TOC entry 5013 (class 2606 OID 5315617)
-- Name: inm_mej pk_inm_mej; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_mej
    ADD CONSTRAINT pk_inm_mej PRIMARY KEY (obj_id, pol, perdesde);


--
-- TOC entry 5015 (class 2606 OID 5315619)
-- Name: inm_mej_tcat pk_inm_mej_tcat; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_mej_tcat
    ADD CONSTRAINT pk_inm_mej_tcat PRIMARY KEY (cod);


--
-- TOC entry 5019 (class 2606 OID 5315621)
-- Name: inm_mej_test pk_inm_mej_test; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_mej_test
    ADD CONSTRAINT pk_inm_mej_test PRIMARY KEY (cod);


--
-- TOC entry 5021 (class 2606 OID 5315623)
-- Name: inm_mej_tform pk_inm_mej_tform; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_mej_tform
    ADD CONSTRAINT pk_inm_mej_tform PRIMARY KEY (cod);


--
-- TOC entry 5023 (class 2606 OID 5315625)
-- Name: inm_mej_tobra pk_inm_mej_tobra; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_mej_tobra
    ADD CONSTRAINT pk_inm_mej_tobra PRIMARY KEY (cod);


--
-- TOC entry 5025 (class 2606 OID 5315627)
-- Name: inm_mej_tori pk_inm_mej_tori; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_mej_tori
    ADD CONSTRAINT pk_inm_mej_tori PRIMARY KEY (cod);


--
-- TOC entry 5028 (class 2606 OID 5315629)
-- Name: inm_restric pk_inm_restric; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_restric
    ADD CONSTRAINT pk_inm_restric PRIMARY KEY (obj_id, orden);


--
-- TOC entry 5030 (class 2606 OID 5315631)
-- Name: inm_s1 pk_inm_s1; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_s1
    ADD CONSTRAINT pk_inm_s1 PRIMARY KEY (s1);


--
-- TOC entry 5032 (class 2606 OID 5315633)
-- Name: inm_s2 pk_inm_s2; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_s2
    ADD CONSTRAINT pk_inm_s2 PRIMARY KEY (s1, s2);


--
-- TOC entry 5034 (class 2606 OID 5315635)
-- Name: inm_s3 pk_inm_s3; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_s3
    ADD CONSTRAINT pk_inm_s3 PRIMARY KEY (s1, s2, s3);


--
-- TOC entry 5036 (class 2606 OID 5315637)
-- Name: inm_talum pk_inm_talum; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_talum
    ADD CONSTRAINT pk_inm_talum PRIMARY KEY (cod);


--
-- TOC entry 5038 (class 2606 OID 5315639)
-- Name: inm_tipo pk_inm_tipo; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_tipo
    ADD CONSTRAINT pk_inm_tipo PRIMARY KEY (cod);


--
-- TOC entry 5040 (class 2606 OID 5315641)
-- Name: inm_tmatric pk_inm_tmatric; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_tmatric
    ADD CONSTRAINT pk_inm_tmatric PRIMARY KEY (cod);


--
-- TOC entry 5043 (class 2606 OID 5315643)
-- Name: inm_tpatrimonio pk_inm_tpatrimonio; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_tpatrimonio
    ADD CONSTRAINT pk_inm_tpatrimonio PRIMARY KEY (cod);


--
-- TOC entry 5047 (class 2606 OID 5315645)
-- Name: inm_trestric pk_inm_trestric; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_trestric
    ADD CONSTRAINT pk_inm_trestric PRIMARY KEY (cod);


--
-- TOC entry 5049 (class 2606 OID 5315647)
-- Name: inm_tserv pk_inm_tserv; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_tserv
    ADD CONSTRAINT pk_inm_tserv PRIMARY KEY (cod);


--
-- TOC entry 5051 (class 2606 OID 5315649)
-- Name: inm_ttitularidad pk_inm_ttitularidad; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_ttitularidad
    ADD CONSTRAINT pk_inm_ttitularidad PRIMARY KEY (cod);


--
-- TOC entry 5053 (class 2606 OID 5315651)
-- Name: inm_turbsub pk_inm_turbsub; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_turbsub
    ADD CONSTRAINT pk_inm_turbsub PRIMARY KEY (cod);


--
-- TOC entry 5057 (class 2606 OID 5315653)
-- Name: inm_tvtaest pk_inm_tvtaest; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_tvtaest
    ADD CONSTRAINT pk_inm_tvtaest PRIMARY KEY (cod);


--
-- TOC entry 5059 (class 2606 OID 5315655)
-- Name: inm_tzonaop pk_inm_tzonaop; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_tzonaop
    ADD CONSTRAINT pk_inm_tzonaop PRIMARY KEY (cod);


--
-- TOC entry 5061 (class 2606 OID 5315657)
-- Name: inm_tzonat pk_inm_tzonat; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_tzonat
    ADD CONSTRAINT pk_inm_tzonat PRIMARY KEY (cod);


--
-- TOC entry 5064 (class 2606 OID 5315659)
-- Name: inm_tzonav pk_inm_tzonav; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_tzonav
    ADD CONSTRAINT pk_inm_tzonav PRIMARY KEY (cod);


--
-- TOC entry 5055 (class 2606 OID 5315661)
-- Name: inm_tuso pk_inm_uso; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_tuso
    ADD CONSTRAINT pk_inm_uso PRIMARY KEY (cod);


--
-- TOC entry 5066 (class 2606 OID 5315663)
-- Name: inm_vta pk_inm_vta; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_vta
    ADD CONSTRAINT pk_inm_vta PRIMARY KEY (vta_id);


--
-- TOC entry 5068 (class 2606 OID 5315665)
-- Name: inm_vta_comp pk_inm_vta_comp; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_vta_comp
    ADD CONSTRAINT pk_inm_vta_comp PRIMARY KEY (vta_id, cuit);


--
-- TOC entry 5070 (class 2606 OID 5315667)
-- Name: inm_vta_vend pk_inm_vta_vend; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_vta_vend
    ADD CONSTRAINT pk_inm_vta_vend PRIMARY KEY (vta_id, cuit);



--
-- TOC entry 5075 (class 2606 OID 5315693)
-- Name: item pk_item; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.item
    ADD CONSTRAINT pk_item PRIMARY KEY (item_id);


--
-- TOC entry 5077 (class 2606 OID 5315695)
-- Name: item_asoc pk_item_asoc_idx; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.item_asoc
    ADD CONSTRAINT pk_item_asoc_idx PRIMARY KEY (item_id, perdesde, perhasta, param1, param2, param3, param4);


--
-- TOC entry 5079 (class 2606 OID 5315697)
-- Name: item_tfcalculo pk_item_fcalculo; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.item_tfcalculo
    ADD CONSTRAINT pk_item_fcalculo PRIMARY KEY (cod);


--
-- TOC entry 5081 (class 2606 OID 5315699)
-- Name: item_tipo pk_item_tipo; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.item_tipo
    ADD CONSTRAINT pk_item_tipo PRIMARY KEY (cod);


--
-- TOC entry 5083 (class 2606 OID 5315701)
-- Name: item_vigencia pk_item_vigencia; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.item_vigencia
    ADD CONSTRAINT pk_item_vigencia PRIMARY KEY (item_id, perdesde, perhasta);


--
-- TOC entry 5086 (class 2606 OID 5315703)
-- Name: judi pk_judi; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.judi
    ADD CONSTRAINT pk_judi PRIMARY KEY (judi_id);


--
-- TOC entry 4823 (class 2606 OID 5315711)
-- Name: ctacte_libredeuda pk_libredeuda; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ctacte_libredeuda
    ADD CONSTRAINT pk_libredeuda PRIMARY KEY (ldeuda_id);


--
-- TOC entry 5017 (class 2606 OID 5315713)
-- Name: inm_mej_tdest pk_mej_tdest; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_mej_tdest
    ADD CONSTRAINT pk_mej_tdest PRIMARY KEY (cod);


--
-- TOC entry 4720 (class 2606 OID 5315715)
-- Name: calc_multa pk_multas; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.calc_multa
    ADD CONSTRAINT pk_multas PRIMARY KEY (trib_id, perdesde, perhasta, tipo, montodesde, montohasta);


--
-- TOC entry 5106 (class 2606 OID 5315719)
-- Name: objeto_accion pk_objeto_accion; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.objeto_accion
    ADD CONSTRAINT pk_objeto_accion PRIMARY KEY (obj_id, orden);


--
-- TOC entry 5124 (class 2606 OID 5316979)
-- Name: objeto_rubro pk_objeto_rubros; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.objeto_rubro
    ADD CONSTRAINT pk_objeto_rubros PRIMARY KEY (obj_id, rubro_id, perdesde, perhasta, fiscaliza, subcta);


--
-- TOC entry 5130 (class 2606 OID 5315723)
-- Name: objeto_tdistrib pk_objeto_tdistrib; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.objeto_tdistrib
    ADD CONSTRAINT pk_objeto_tdistrib PRIMARY KEY (cod);


--
-- TOC entry 5136 (class 2606 OID 5315725)
-- Name: objeto_trib pk_objeto_trib; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.objeto_trib
    ADD CONSTRAINT pk_objeto_trib PRIMARY KEY (obj_id, trib_id, perdesde);


--
-- TOC entry 5138 (class 2606 OID 5315727)
-- Name: objeto_trib_cat pk_objeto_trib_cat; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.objeto_trib_cat
    ADD CONSTRAINT pk_objeto_trib_cat PRIMARY KEY (trib_id, cat);


--
-- TOC entry 5114 (class 2606 OID 5315729)
-- Name: objeto_item pk_objetos_item; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.objeto_item
    ADD CONSTRAINT pk_objetos_item PRIMARY KEY (obj_id, subcta, orden, trib_id, item_id, perdesde);


--
-- TOC entry 5117 (class 2606 OID 5315731)
-- Name: objeto_misc pk_objetos_misc; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.objeto_misc
    ADD CONSTRAINT pk_objetos_misc PRIMARY KEY (obj_id, orden);


--
-- TOC entry 5146 (class 2606 OID 5315745)
-- Name: osm pk_osm; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.osm
    ADD CONSTRAINT pk_osm PRIMARY KEY (obj_id, subcta);


--
-- TOC entry 5148 (class 2606 OID 5315747)
-- Name: osm_consumo pk_osm_consumo; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.osm_consumo
    ADD CONSTRAINT pk_osm_consumo PRIMARY KEY (obj_id, subcta, anio, cuota);


--
-- TOC entry 4657 (class 2606 OID 5315749)
-- Name: persona pk_persona; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.persona
    ADD CONSTRAINT pk_persona PRIMARY KEY (obj_id);


--
-- TOC entry 5160 (class 2606 OID 5315751)
-- Name: persona_rela pk_persona_rela; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.persona_rela
    ADD CONSTRAINT pk_persona_rela PRIMARY KEY (obj_id, obj_rela);


--
-- TOC entry 5162 (class 2606 OID 5315753)
-- Name: persona_socio pk_persona_socio; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.persona_socio
    ADD CONSTRAINT pk_persona_socio PRIMARY KEY (obj_id, socio_id);


--
-- TOC entry 5164 (class 2606 OID 5315755)
-- Name: persona_tbajaib pk_persona_tbajaib; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.persona_tbajaib
    ADD CONSTRAINT pk_persona_tbajaib PRIMARY KEY (cod);


--
-- TOC entry 5166 (class 2606 OID 5315757)
-- Name: persona_tclasif pk_persona_tclasif; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.persona_tclasif
    ADD CONSTRAINT pk_persona_tclasif PRIMARY KEY (cod);


--
-- TOC entry 5168 (class 2606 OID 5315759)
-- Name: persona_tdoc pk_persona_tdoc; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.persona_tdoc
    ADD CONSTRAINT pk_persona_tdoc PRIMARY KEY (cod);


--
-- TOC entry 5170 (class 2606 OID 5315761)
-- Name: persona_test_ib pk_persona_test_ib; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.persona_test_ib
    ADD CONSTRAINT pk_persona_test_ib PRIMARY KEY (cod);


--
-- TOC entry 5172 (class 2606 OID 5315763)
-- Name: persona_testcivil pk_persona_testcivil; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.persona_testcivil
    ADD CONSTRAINT pk_persona_testcivil PRIMARY KEY (cod);


--
-- TOC entry 4659 (class 2606 OID 5315765)
-- Name: persona_tipo pk_persona_tipo; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.persona_tipo
    ADD CONSTRAINT pk_persona_tipo PRIMARY KEY (cod);


--
-- TOC entry 5174 (class 2606 OID 5315767)
-- Name: persona_tnac pk_persona_tnac; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.persona_tnac
    ADD CONSTRAINT pk_persona_tnac PRIMARY KEY (cod);


--
-- TOC entry 5176 (class 2606 OID 5315769)
-- Name: persona_trela pk_persona_trela; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.persona_trela
    ADD CONSTRAINT pk_persona_trela PRIMARY KEY (cod);


--
-- TOC entry 5178 (class 2606 OID 5315771)
-- Name: persona_tsexo pk_persona_tsexo; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.persona_tsexo
    ADD CONSTRAINT pk_persona_tsexo PRIMARY KEY (cod);


--
-- TOC entry 5180 (class 2606 OID 5315773)
-- Name: persona_tvinc pk_persona_tvinc; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.persona_tvinc
    ADD CONSTRAINT pk_persona_tvinc PRIMARY KEY (cod);


--
-- TOC entry 5182 (class 2606 OID 5315775)
-- Name: plan pk_plan; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.plan
    ADD CONSTRAINT pk_plan PRIMARY KEY (plan_id);


--
-- TOC entry 5187 (class 2606 OID 5315777)
-- Name: plan_config pk_plan_config; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.plan_config
    ADD CONSTRAINT pk_plan_config PRIMARY KEY (cod);


--
-- TOC entry 5189 (class 2606 OID 5315779)
-- Name: plan_config_decaer pk_plan_config_decaer; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.plan_config_decaer
    ADD CONSTRAINT pk_plan_config_decaer PRIMARY KEY (tplan, origen, tpago, caja_id);


--
-- TOC entry 5191 (class 2606 OID 5315781)
-- Name: plan_config_trib pk_plan_config_trib; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.plan_config_trib
    ADD CONSTRAINT pk_plan_config_trib PRIMARY KEY (tplan, trib_id);


--
-- TOC entry 5193 (class 2606 OID 5315783)
-- Name: plan_config_usuario pk_plan_config_usuario; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.plan_config_usuario
    ADD CONSTRAINT pk_plan_config_usuario PRIMARY KEY (tplan, usr_id);


--
-- TOC entry 5195 (class 2606 OID 5315785)
-- Name: plan_cuota pk_plan_cuota; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.plan_cuota
    ADD CONSTRAINT pk_plan_cuota PRIMARY KEY (plan_id, ctacte_id);


--
-- TOC entry 5200 (class 2606 OID 5315787)
-- Name: plan_temple pk_plan_temple; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.plan_temple
    ADD CONSTRAINT pk_plan_temple PRIMARY KEY (cod, caja_id);


--
-- TOC entry 5202 (class 2606 OID 5315789)
-- Name: plan_test pk_plan_test; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.plan_test
    ADD CONSTRAINT pk_plan_test PRIMARY KEY (cod);


--
-- TOC entry 5204 (class 2606 OID 5315791)
-- Name: plan_torigen pk_plan_torigen; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.plan_torigen
    ADD CONSTRAINT pk_plan_torigen PRIMARY KEY (cod);


--
-- TOC entry 5206 (class 2606 OID 5315793)
-- Name: plan_tpago pk_plan_tpago; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.plan_tpago
    ADD CONSTRAINT pk_plan_tpago PRIMARY KEY (cod);


--
-- TOC entry 5208 (class 2606 OID 5315795)
-- Name: plan_tsistema pk_plan_tsistema; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.plan_tsistema
    ADD CONSTRAINT pk_plan_tsistema PRIMARY KEY (cod);


--
-- TOC entry 5197 (class 2606 OID 5315797)
-- Name: plan_periodo pk_planes_periodos; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.plan_periodo
    ADD CONSTRAINT pk_planes_periodos PRIMARY KEY (plan_id, ctacte_id);


--
-- TOC entry 5212 (class 2606 OID 5315815)
-- Name: resol_aux pk_resol_aux; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.resol_aux
    ADD CONSTRAINT pk_resol_aux PRIMARY KEY (resol_id, aux);


--
-- TOC entry 5216 (class 2606 OID 5315817)
-- Name: resol_salida pk_resol_salida; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.resol_salida
    ADD CONSTRAINT pk_resol_salida PRIMARY KEY (resol_id, varsalida);


--
-- TOC entry 5218 (class 2606 OID 5315819)
-- Name: resol_tabla pk_resol_tabla; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.resol_tabla
    ADD CONSTRAINT pk_resol_tabla PRIMARY KEY (tabla_id);


--
-- TOC entry 5220 (class 2606 OID 5315821)
-- Name: resol_tabla_col pk_resol_tabla_col; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.resol_tabla_col
    ADD CONSTRAINT pk_resol_tabla_col PRIMARY KEY (tabla_id, orden);


--
-- TOC entry 5222 (class 2606 OID 5315823)
-- Name: resol_tabla_dato pk_resol_tablas_datos; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.resol_tabla_dato
    ADD CONSTRAINT pk_resol_tablas_datos PRIMARY KEY (tabla_id, dato_id, perdesde, perhasta);


--
-- TOC entry 5234 (class 2606 OID 5315825)
-- Name: ret_tcomprob pk_ret_tcomprob; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ret_tcomprob
    ADD CONSTRAINT pk_ret_tcomprob PRIMARY KEY (cod);


--
-- TOC entry 5236 (class 2606 OID 5315827)
-- Name: ret_test pk_ret_test; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ret_test
    ADD CONSTRAINT pk_ret_test PRIMARY KEY (cod);


--
-- TOC entry 5238 (class 2606 OID 5315829)
-- Name: rodado pk_rodado; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rodado
    ADD CONSTRAINT pk_rodado PRIMARY KEY (obj_id);


--
-- TOC entry 5240 (class 2606 OID 5315831)
-- Name: rodado_aforo pk_rodado_aforo; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rodado_aforo
    ADD CONSTRAINT pk_rodado_aforo PRIMARY KEY (aforo_id);


--
-- TOC entry 5246 (class 2606 OID 5315833)
-- Name: rodado_aforo_val pk_rodado_aforo_val; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rodado_aforo_val
    ADD CONSTRAINT pk_rodado_aforo_val PRIMARY KEY (aforo_id, anio, anioval);


--
-- TOC entry 5257 (class 2606 OID 5315835)
-- Name: rodado_tcombustible pk_rodado_combustible; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rodado_tcombustible
    ADD CONSTRAINT pk_rodado_combustible PRIMARY KEY (cod);


--
-- TOC entry 5249 (class 2606 OID 5315837)
-- Name: rodado_marca pk_rodado_marca; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rodado_marca
    ADD CONSTRAINT pk_rodado_marca PRIMARY KEY (cod);


--
-- TOC entry 5251 (class 2606 OID 5315839)
-- Name: rodado_modelo pk_rodado_modelo; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rodado_modelo
    ADD CONSTRAINT pk_rodado_modelo PRIMARY KEY (cod);


--
-- TOC entry 5253 (class 2606 OID 5315841)
-- Name: rodado_talta pk_rodado_talta; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rodado_talta
    ADD CONSTRAINT pk_rodado_talta PRIMARY KEY (cod);


--
-- TOC entry 5255 (class 2606 OID 5315843)
-- Name: rodado_tcat pk_rodado_tcat; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rodado_tcat
    ADD CONSTRAINT pk_rodado_tcat PRIMARY KEY (cod);


--
-- TOC entry 5259 (class 2606 OID 5315845)
-- Name: rodado_tdeleg pk_rodado_tdeleg; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rodado_tdeleg
    ADD CONSTRAINT pk_rodado_tdeleg PRIMARY KEY (cod);


--
-- TOC entry 5261 (class 2606 OID 5315847)
-- Name: rodado_tform pk_rodado_tform; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rodado_tform
    ADD CONSTRAINT pk_rodado_tform PRIMARY KEY (cod);


--
-- TOC entry 5263 (class 2606 OID 5315849)
-- Name: rodado_tliq pk_rodado_tliq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rodado_tliq
    ADD CONSTRAINT pk_rodado_tliq PRIMARY KEY (cod);


--
-- TOC entry 5265 (class 2606 OID 5315851)
-- Name: rodado_torigen pk_rodado_torigen; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rodado_torigen
    ADD CONSTRAINT pk_rodado_torigen PRIMARY KEY (cod);


--
-- TOC entry 5267 (class 2606 OID 5315853)
-- Name: rodado_tuso pk_rodado_tuso; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rodado_tuso
    ADD CONSTRAINT pk_rodado_tuso PRIMARY KEY (cod);


--
-- TOC entry 5269 (class 2606 OID 5315855)
-- Name: rodado_val pk_rodado_val; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rodado_val
    ADD CONSTRAINT pk_rodado_val PRIMARY KEY (anioval, gru, anio, pesodesde, pesohasta);


--
-- TOC entry 5273 (class 2606 OID 5316960)
-- Name: rubro_general pk_rubro_general; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rubro_general
    ADD CONSTRAINT pk_rubro_general PRIMARY KEY (nomen_id, pi, perdesde, perhasta);


--
-- TOC entry 5277 (class 2606 OID 5315859)
-- Name: rubro_tfcalculo pk_rubro_tfcalculo; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rubro_tfcalculo
    ADD CONSTRAINT pk_rubro_tfcalculo PRIMARY KEY (cod);


--
-- TOC entry 5279 (class 2606 OID 5315861)
-- Name: rubro_tminimo pk_rubro_tminimo; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rubro_tminimo
    ADD CONSTRAINT pk_rubro_tminimo PRIMARY KEY (cod);


--
-- TOC entry 5281 (class 2606 OID 5316966)
-- Name: rubro_vigencia pk_rubro_vigencia; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rubro_vigencia
    ADD CONSTRAINT pk_rubro_vigencia PRIMARY KEY (rubro_id, perdesde, perhasta);


--
-- TOC entry 4744 (class 2606 OID 5315865)
-- Name: cem_talq pk_tcem_alquiler; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cem_talq
    ADD CONSTRAINT pk_tcem_alquiler PRIMARY KEY (cod);


--
-- TOC entry 4748 (class 2606 OID 5315867)
-- Name: cem_tcat pk_tcem_cat; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cem_tcat
    ADD CONSTRAINT pk_tcem_cat PRIMARY KEY (tipo, cat);


--
-- TOC entry 4732 (class 2606 OID 5315869)
-- Name: cem_cuerpo pk_tcem_cuerpo; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cem_cuerpo
    ADD CONSTRAINT pk_tcem_cuerpo PRIMARY KEY (cua_id, cue_id);


--
-- TOC entry 4772 (class 2606 OID 5315871)
-- Name: comer_tinfrac pk_tcomer_censo_infrac; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comer_tinfrac
    ADD CONSTRAINT pk_tcomer_censo_infrac PRIMARY KEY (cod);


--
-- TOC entry 5283 (class 2606 OID 5315873)
-- Name: texto pk_textos; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.texto
    ADD CONSTRAINT pk_textos PRIMARY KEY (texto_id);


--
-- TOC entry 5045 (class 2606 OID 5315875)
-- Name: inm_tregimen pk_tinm_tregimen; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inm_tregimen
    ADD CONSTRAINT pk_tinm_tregimen PRIMARY KEY (cod);


--
-- TOC entry 5134 (class 2606 OID 5315879)
-- Name: objeto_tipo pk_tobjeto; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.objeto_tipo
    ADD CONSTRAINT pk_tobjeto PRIMARY KEY (cod);


--
-- TOC entry 5132 (class 2606 OID 5315881)
-- Name: objeto_test pk_tobjeto_est; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.objeto_test
    ADD CONSTRAINT pk_tobjeto_est PRIMARY KEY (tobj, cod);


--
-- TOC entry 5140 (class 2606 OID 5315883)
-- Name: objeto_trubro pk_tobjeto_rubro; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.objeto_trubro
    ADD CONSTRAINT pk_tobjeto_rubro PRIMARY KEY (cod);


--
-- TOC entry 5299 (class 2606 OID 5315885)
-- Name: trib_venc_cuit pk_tributo_venc_cuit; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trib_venc_cuit
    ADD CONSTRAINT pk_tributo_venc_cuit PRIMARY KEY (trib_id, anio, cuota, term);


--
-- TOC entry 5301 (class 2606 OID 5315887)
-- Name: trib_venc_item pk_tributo_venc_item; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trib_venc_item
    ADD CONSTRAINT pk_tributo_venc_item PRIMARY KEY (trib_id, anio, cuota, item_id);


--
-- TOC entry 5275 (class 2606 OID 5315889)
-- Name: rubro_temporada pk_trub_temporada; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rubro_temporada
    ADD CONSTRAINT pk_trub_temporada PRIMARY KEY (cuota);


--
-- TOC entry 5287 (class 2606 OID 5315891)
-- Name: texto_var pk_tuso_variable; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.texto_var
    ADD CONSTRAINT pk_tuso_variable PRIMARY KEY (tuso, variablenombre);


--
-- TOC entry 5312 (class 2606 OID 5315893)
-- Name: val_inm_coef1 pk_val_inm_coef; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.val_inm_coef1
    ADD CONSTRAINT pk_val_inm_coef PRIMARY KEY (freini, frefin, fonini, fonfin);


--
-- TOC entry 5314 (class 2606 OID 5315895)
-- Name: val_inm_coef2 pk_val_inm_coef2; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.val_inm_coef2
    ADD CONSTRAINT pk_val_inm_coef2 PRIMARY KEY (supini, supfin, freini, frefin, valini, valfin);


--
-- TOC entry 5316 (class 2606 OID 5315897)
-- Name: val_inm_coef3 pk_val_inm_coef3; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.val_inm_coef3
    ADD CONSTRAINT pk_val_inm_coef3 PRIMARY KEY (fonini, fonfin, supini, supfin);


--
-- TOC entry 5318 (class 2606 OID 5315899)
-- Name: val_inm_coef4 pk_val_inm_coef4; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.val_inm_coef4
    ADD CONSTRAINT pk_val_inm_coef4 PRIMARY KEY (supini, supfin);


--
-- TOC entry 5320 (class 2606 OID 5315901)
-- Name: val_inm_coef5 pk_val_inm_coef5; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.val_inm_coef5
    ADD CONSTRAINT pk_val_inm_coef5 PRIMARY KEY (freini, frefin, fonini, fonfin);


--
-- TOC entry 5322 (class 2606 OID 5315903)
-- Name: val_inm_coef6 pk_val_inm_coef6; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.val_inm_coef6
    ADD CONSTRAINT pk_val_inm_coef6 PRIMARY KEY (freini, frefin, fonini, fonfin);


--
-- TOC entry 5119 (class 2606 OID 5315905)
-- Name: objeto_persona pk_vinculos; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.objeto_persona
    ADD CONSTRAINT pk_vinculos PRIMARY KEY (obj_id, num, fchmod);


--
-- TOC entry 5210 (class 2606 OID 5315907)
-- Name: resol resol_idx; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.resol
    ADD CONSTRAINT resol_idx PRIMARY KEY (resol_id);


--
-- TOC entry 5214 (class 2606 OID 5315909)
-- Name: resol_local resol_locales; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.resol_local
    ADD CONSTRAINT resol_locales PRIMARY KEY (resol_id, varlocal);


--
-- TOC entry 5232 (class 2606 OID 5315911)
-- Name: ret_det ret_det_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ret_det
    ADD CONSTRAINT ret_det_pkey PRIMARY KEY (ret_id);


--
-- TOC entry 5226 (class 2606 OID 5315913)
-- Name: ret ret_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ret
    ADD CONSTRAINT ret_pkey PRIMARY KEY (retdj_id);


--
-- TOC entry 5394 (class 2606 OID 5316999)
-- Name: rubro_grupo rubro_grupo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rubro_grupo
    ADD CONSTRAINT rubro_grupo_pkey PRIMARY KEY (cod, nomen_id);


--
-- TOC entry 5271 (class 2606 OID 5316946)
-- Name: rubro rubro_idx; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rubro
    ADD CONSTRAINT rubro_idx PRIMARY KEY (rubro_id);


--
-- TOC entry 5389 (class 2606 OID 5316933)
-- Name: rubro_tnomen rubro_tnomen_idx; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rubro_tnomen
    ADD CONSTRAINT rubro_tnomen_idx PRIMARY KEY (nomen_id, tobj);


--
-- TOC entry 4675 (class 2606 OID 5315919)
-- Name: caja_cheque_cartera tcaja_cheque_cartera_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.caja_cheque_cartera
    ADD CONSTRAINT tcaja_cheque_cartera_pkey PRIMARY KEY (cart_id);


--
-- TOC entry 4698 (class 2606 OID 5315921)
-- Name: caja_test tcaja_est_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.caja_test
    ADD CONSTRAINT tcaja_est_pkey PRIMARY KEY (cod);


--
-- TOC entry 4681 (class 2606 OID 5315923)
-- Name: caja_mdp tcaja_mdp_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.caja_mdp
    ADD CONSTRAINT tcaja_mdp_pkey PRIMARY KEY (mdp);


--
-- TOC entry 4702 (class 2606 OID 5315925)
-- Name: caja_tipo tcaja_tipo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.caja_tipo
    ADD CONSTRAINT tcaja_tipo_pkey PRIMARY KEY (cod);


--
-- TOC entry 4750 (class 2606 OID 5315927)
-- Name: cem_tcausa tcem_causa_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cem_tcausa
    ADD CONSTRAINT tcem_causa_pkey PRIMARY KEY (cod);


--
-- TOC entry 4752 (class 2606 OID 5315929)
-- Name: cem_tdeleg tcem_deleg_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cem_tdeleg
    ADD CONSTRAINT tcem_deleg_pkey PRIMARY KEY (cod);


--
-- TOC entry 4746 (class 2606 OID 5315931)
-- Name: cem_talq_est tcem_estalq_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cem_talq_est
    ADD CONSTRAINT tcem_estalq_pkey PRIMARY KEY (cod);


--
-- TOC entry 4740 (class 2606 OID 5315933)
-- Name: cem_fall_test tcem_estfall_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cem_fall_test
    ADD CONSTRAINT tcem_estfall_pkey PRIMARY KEY (cod);


--
-- TOC entry 4754 (class 2606 OID 5315935)
-- Name: cem_texenta tcem_exenta_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cem_texenta
    ADD CONSTRAINT tcem_exenta_pkey PRIMARY KEY (cod);


--
-- TOC entry 4758 (class 2606 OID 5315937)
-- Name: cem_tipo tcem_tipo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cem_tipo
    ADD CONSTRAINT tcem_tipo_pkey PRIMARY KEY (cod);


--
-- TOC entry 4780 (class 2606 OID 5315939)
-- Name: comer_tzona tcomer_tzona_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comer_tzona
    ADD CONSTRAINT tcomer_tzona_pkey PRIMARY KEY (cod);


--
-- TOC entry 4813 (class 2606 OID 5315941)
-- Name: ctacte_cambioest_tipo tcta_cambioest_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ctacte_cambioest_tipo
    ADD CONSTRAINT tcta_cambioest_pkey PRIMARY KEY (cod);


--
-- TOC entry 4849 (class 2606 OID 5315943)
-- Name: ctacte_test tcta_est_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ctacte_test
    ADD CONSTRAINT tcta_est_pkey PRIMARY KEY (cod);


--
-- TOC entry 4851 (class 2606 OID 5315945)
-- Name: ctacte_topera tcta_opera_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ctacte_topera
    ADD CONSTRAINT tcta_opera_pkey PRIMARY KEY (cod);


--
-- TOC entry 4847 (class 2606 OID 5315947)
-- Name: ctacte_tcta tcta_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ctacte_tcta
    ADD CONSTRAINT tcta_pkey PRIMARY KEY (cod);


--
-- TOC entry 5096 (class 2606 OID 5315949)
-- Name: judi_tdev tjudi_devolucion_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.judi_tdev
    ADD CONSTRAINT tjudi_devolucion_pkey PRIMARY KEY (cod);


--
-- TOC entry 5098 (class 2606 OID 5315951)
-- Name: judi_test tjudi_est_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.judi_test
    ADD CONSTRAINT tjudi_est_pkey PRIMARY KEY (cod);


--
-- TOC entry 5092 (class 2606 OID 5315953)
-- Name: judi_juzgado tjudi_juzgado_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.judi_juzgado
    ADD CONSTRAINT tjudi_juzgado_pkey PRIMARY KEY (cod);


--
-- TOC entry 5102 (class 2606 OID 5315955)
-- Name: judi_trep tjudi_rep_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.judi_trep
    ADD CONSTRAINT tjudi_rep_pkey PRIMARY KEY (cod);


--
-- TOC entry 5104 (class 2606 OID 5315957)
-- Name: judi_tsupuesto tjudi_supuesto_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.judi_tsupuesto
    ADD CONSTRAINT tjudi_supuesto_pkey PRIMARY KEY (cod);


--
-- TOC entry 5128 (class 2606 OID 5315971)
-- Name: objeto_tbaja tobjeto_baja_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.objeto_tbaja
    ADD CONSTRAINT tobjeto_baja_pkey PRIMARY KEY (cod);


--
-- TOC entry 5126 (class 2606 OID 5315973)
-- Name: objeto_taccion tobjeto_historico_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.objeto_taccion
    ADD CONSTRAINT tobjeto_historico_pkey PRIMARY KEY (cod);


--
-- TOC entry 5152 (class 2606 OID 5315985)
-- Name: osm_tlect tosm_lect_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.osm_tlect
    ADD CONSTRAINT tosm_lect_pkey PRIMARY KEY (cod);


--
-- TOC entry 5154 (class 2606 OID 5315987)
-- Name: osm_tliq tosm_liq_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.osm_tliq
    ADD CONSTRAINT tosm_liq_pkey PRIMARY KEY (cod);


--
-- TOC entry 5156 (class 2606 OID 5315989)
-- Name: osm_treccons tosm_reccons_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.osm_treccons
    ADD CONSTRAINT tosm_reccons_pkey PRIMARY KEY (cod);


--
-- TOC entry 5150 (class 2606 OID 5315991)
-- Name: osm_tipo tosm_tipo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.osm_tipo
    ADD CONSTRAINT tosm_tipo_pkey PRIMARY KEY (cod);


--
-- TOC entry 5293 (class 2606 OID 5315993)
-- Name: trib_tgenestcta trib_tgenestct_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trib_tgenestcta
    ADD CONSTRAINT trib_tgenestct_pkey PRIMARY KEY (cod);


--
-- TOC entry 5291 (class 2606 OID 5315995)
-- Name: trib tributo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trib
    ADD CONSTRAINT tributo_pkey PRIMARY KEY (trib_id);


--
-- TOC entry 5297 (class 2606 OID 5315997)
-- Name: trib_venc tributo_venc_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trib_venc
    ADD CONSTRAINT tributo_venc_pkey PRIMARY KEY (trib_id, anio, cuota);


--
-- TOC entry 5295 (class 2606 OID 5315999)
-- Name: trib_tipo ttrib_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trib_tipo
    ADD CONSTRAINT ttrib_pkey PRIMARY KEY (cod);


--
-- TOC entry 5285 (class 2606 OID 5316001)
-- Name: texto_tuso tuso_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.texto_tuso
    ADD CONSTRAINT tuso_pkey PRIMARY KEY (cod);


--
-- TOC entry 5332 (class 2606 OID 5316203)
-- Name: config_inm_mej config_inmueble_mej_pkey; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.config_inm_mej
    ADD CONSTRAINT config_inmueble_mej_pkey PRIMARY KEY (campo);


--
-- TOC entry 5336 (class 2606 OID 5316205)
-- Name: muni_datos muni_datos_pkey; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.muni_datos
    ADD CONSTRAINT muni_datos_pkey PRIMARY KEY (codigo);


--
-- TOC entry 5328 (class 2606 OID 5316207)
-- Name: config_cem_nc pk_config_cem_nc; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.config_cem_nc
    ADD CONSTRAINT pk_config_cem_nc PRIMARY KEY (campo);


--
-- TOC entry 5392 (class 2606 OID 5316944)
-- Name: config_ddjj pk_config_ddjj; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.config_ddjj
    ADD CONSTRAINT pk_config_ddjj PRIMARY KEY (trib_id);


--
-- TOC entry 5330 (class 2606 OID 5316211)
-- Name: config_fin_part pk_config_fin_part; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.config_fin_part
    ADD CONSTRAINT pk_config_fin_part PRIMARY KEY (anio, caracter, niv);


--
-- TOC entry 5334 (class 2606 OID 5316215)
-- Name: config_inm_nc pk_config_inmueble_nc; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.config_inm_nc
    ADD CONSTRAINT pk_config_inmueble_nc PRIMARY KEY (campo);


--
-- TOC entry 5344 (class 2606 OID 5316217)
-- Name: rpt_fiscaliza pk_fiscaliza_rpt; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.rpt_fiscaliza
    ADD CONSTRAINT pk_fiscaliza_rpt PRIMARY KEY (cod);


--
-- TOC entry 5326 (class 2606 OID 5316219)
-- Name: muni_sec pk_muni_sec; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.muni_sec
    ADD CONSTRAINT pk_muni_sec PRIMARY KEY (cod);


--
-- TOC entry 4629 (class 2606 OID 5316221)
-- Name: muni_oficina pk_oficinas; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.muni_oficina
    ADD CONSTRAINT pk_oficinas PRIMARY KEY (ofi_id);


--
-- TOC entry 5338 (class 2606 OID 5316223)
-- Name: rpt_audit pk_rpt_audit; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.rpt_audit
    ADD CONSTRAINT pk_rpt_audit PRIMARY KEY (cod);


--
-- TOC entry 5340 (class 2606 OID 5316225)
-- Name: rpt_caja pk_rpt_caja; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.rpt_caja
    ADD CONSTRAINT pk_rpt_caja PRIMARY KEY (cod);


--
-- TOC entry 5342 (class 2606 OID 5316227)
-- Name: rpt_esta pk_rpt_esta; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.rpt_esta
    ADD CONSTRAINT pk_rpt_esta PRIMARY KEY (cod);


--
-- TOC entry 5371 (class 2606 OID 5316233)
-- Name: tabla_aux pk_sam_auxiliares; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.tabla_aux
    ADD CONSTRAINT pk_sam_auxiliares PRIMARY KEY (cod);


--
-- TOC entry 5369 (class 2606 OID 5316235)
-- Name: sis_usuario_trib pk_sam_usuario_trib; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.sis_usuario_trib
    ADD CONSTRAINT pk_sam_usuario_trib PRIMARY KEY (usr_id, trib_id);


--
-- TOC entry 5358 (class 2606 OID 5316237)
-- Name: sis_usuario_acc pk_sam_usuarios_acc; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.sis_usuario_acc
    ADD CONSTRAINT pk_sam_usuarios_acc PRIMARY KEY (acc_id);


--
-- TOC entry 5361 (class 2606 OID 5316239)
-- Name: sis_usuario_acc_err pk_sam_usuarios_err; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.sis_usuario_acc_err
    ADD CONSTRAINT pk_sam_usuarios_err PRIMARY KEY (acc_id);


--
-- TOC entry 5365 (class 2606 OID 5316241)
-- Name: sis_usuario_tesoreria pk_sam_usuarios_teso; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.sis_usuario_tesoreria
    ADD CONSTRAINT pk_sam_usuarios_teso PRIMARY KEY (usr_id, teso_id);


--
-- TOC entry 5376 (class 2606 OID 5316243)
-- Name: version_archivo pk_sam_versiones_archivos; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.version_archivo
    ADD CONSTRAINT pk_sam_versiones_archivos PRIMARY KEY (sis_id, version, archivo);


--
-- TOC entry 5354 (class 2606 OID 5316245)
-- Name: sis_proceso_accion pk_sis_proceso_accion; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.sis_proceso_accion
    ADD CONSTRAINT pk_sis_proceso_accion PRIMARY KEY (pro_id, accion);


--
-- TOC entry 5374 (class 2606 OID 5316247)
-- Name: version pk_version; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.version
    ADD CONSTRAINT pk_version PRIMARY KEY (sis_id, version);


--
-- TOC entry 5348 (class 2606 OID 5316255)
-- Name: sis_grupo_proceso sam_grupo_procesos_pkey; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.sis_grupo_proceso
    ADD CONSTRAINT sam_grupo_procesos_pkey PRIMARY KEY (gru_id, pro_id);


--
-- TOC entry 5346 (class 2606 OID 5316257)
-- Name: sis_grupo sam_grupos_pkey; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.sis_grupo
    ADD CONSTRAINT sam_grupos_pkey PRIMARY KEY (gru_id);


--
-- TOC entry 5350 (class 2606 OID 5316259)
-- Name: sis_modulo sam_modulos_pkey; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.sis_modulo
    ADD CONSTRAINT sam_modulos_pkey PRIMARY KEY (mod_id);


--
-- TOC entry 5352 (class 2606 OID 5316261)
-- Name: sis_proceso sam_procesos_pkey; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.sis_proceso
    ADD CONSTRAINT sam_procesos_pkey PRIMARY KEY (pro_id);


--
-- TOC entry 5367 (class 2606 OID 5316263)
-- Name: sis_usuario_tmodo sam_sis_usuario_acc_tmodo_pkey; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.sis_usuario_tmodo
    ADD CONSTRAINT sam_sis_usuario_acc_tmodo_pkey PRIMARY KEY (cod);


--
-- TOC entry 5356 (class 2606 OID 5316265)
-- Name: sis_sistema sam_sistemas_pkey; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.sis_sistema
    ADD CONSTRAINT sam_sistemas_pkey PRIMARY KEY (sis_id);


--
-- TOC entry 4622 (class 2606 OID 5316267)
-- Name: sis_usuario sam_usuarios_pkey; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.sis_usuario
    ADD CONSTRAINT sam_usuarios_pkey PRIMARY KEY (usr_id);


--
-- TOC entry 5363 (class 2606 OID 5316269)
-- Name: sis_usuario_proceso sam_usuarios_procesos_pkey; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.sis_usuario_proceso
    ADD CONSTRAINT sam_usuarios_procesos_pkey PRIMARY KEY (usr_id, pro_id);


--
-- TOC entry 5308 (class 2606 OID 5316271)
-- Name: usuarioweb usuarioweb_pkey; Type: CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.usuarioweb
    ADD CONSTRAINT usuarioweb_pkey PRIMARY KEY (usr_id);


--
-- TOC entry 5385 (class 2606 OID 5316986)
-- Name: ddjj_rubros PK_ddjj_rubros; Type: CONSTRAINT; Schema: temp; Owner: postgres
--

ALTER TABLE ONLY temp.ddjj_rubros
    ADD CONSTRAINT "PK_ddjj_rubros" PRIMARY KEY (djrub_id, rubro_id);


--
-- TOC entry 5381 (class 2606 OID 5316279)
-- Name: ctacte_liq_manual pk_ctacte_liq; Type: CONSTRAINT; Schema: temp; Owner: postgres
--

ALTER TABLE ONLY temp.ctacte_liq_manual
    ADD CONSTRAINT pk_ctacte_liq PRIMARY KEY (liq_id, orden, item_id);


--
-- TOC entry 5378 (class 2606 OID 5316281)
-- Name: ctacte_est_deuda pk_ctacte_temp; Type: CONSTRAINT; Schema: temp; Owner: postgres
--

ALTER TABLE ONLY temp.ctacte_est_deuda
    ADD CONSTRAINT pk_ctacte_temp PRIMARY KEY (trib_id, obj_id, subcta, anio);


--
-- TOC entry 4678 (class 1259 OID 5316311)
-- Name: caja_externa_anula_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX caja_externa_anula_idx ON public.caja_externa_anula USING btree (caja_id, fecha);


--
-- TOC entry 4679 (class 1259 OID 5316312)
-- Name: caja_externa_err_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX caja_externa_err_idx ON public.caja_externa_err USING btree (caja_id, fecha);


--
-- TOC entry 4686 (class 1259 OID 5316313)
-- Name: caja_opera_mdp_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX caja_opera_mdp_idx ON public.caja_opera_mdp USING btree (opera);


--
-- TOC entry 4639 (class 1259 OID 5316314)
-- Name: cajas_ticket_01; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX cajas_ticket_01 ON public.caja_ticket USING btree (opera);


--
-- TOC entry 4640 (class 1259 OID 5316315)
-- Name: cajas_ticket_02; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX cajas_ticket_02 ON public.caja_ticket USING btree (caja_id, fecha);


--
-- TOC entry 4641 (class 1259 OID 5316316)
-- Name: cajas_ticket_03; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX cajas_ticket_03 ON public.caja_ticket USING btree (num);


--
-- TOC entry 4642 (class 1259 OID 5316317)
-- Name: cajas_ticket_04; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX cajas_ticket_04 ON public.caja_ticket USING btree (obj_id);


--
-- TOC entry 4643 (class 1259 OID 5316318)
-- Name: cajas_ticket_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX cajas_ticket_idx1 ON public.caja_ticket USING btree (trib_id, anio);


--
-- TOC entry 4644 (class 1259 OID 5316319)
-- Name: cajas_ticket_idx2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX cajas_ticket_idx2 ON public.caja_ticket USING btree (fecha);


--
-- TOC entry 4645 (class 1259 OID 5316320)
-- Name: cajas_ticket_idx3; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX cajas_ticket_idx3 ON public.caja_ticket USING btree (trib_id, ctacte_id);


--
-- TOC entry 5395 (class 1259 OID 5317069)
-- Name: calc_act_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX calc_act_idx1 ON public.calc_act USING btree (fchhasta);


--
-- TOC entry 4894 (class 1259 OID 5316321)
-- Name: calles_idx2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX calles_idx2 ON public.domi_calle USING btree (calle_id);


--
-- TOC entry 4733 (class 1259 OID 5316322)
-- Name: cem_fall_01; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX cem_fall_01 ON public.cem_fall USING btree (obj_id);


--
-- TOC entry 4734 (class 1259 OID 5316323)
-- Name: cem_fall_02; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX cem_fall_02 ON public.cem_fall USING btree (resp);


--
-- TOC entry 4726 (class 1259 OID 5316324)
-- Name: cementerio_alquiler_01; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX cementerio_alquiler_01 ON public.cem_alquiler USING btree (resp);


--
-- TOC entry 4723 (class 1259 OID 5316325)
-- Name: cementerio_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX cementerio_idx1 ON public.cem USING btree (cua_id, cue_id, tipo, piso, fila, nume, bis);


--
-- TOC entry 4759 (class 1259 OID 5316326)
-- Name: comer_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX comer_idx1 ON public.comer USING btree (legajo);


--
-- TOC entry 4766 (class 1259 OID 5316327)
-- Name: comercios_inm_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX comercios_inm_idx1 ON public.comer_inm USING btree (obj_id);


--
-- TOC entry 4784 (class 1259 OID 5316328)
-- Name: comp_aplic_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX comp_aplic_idx1 ON public.comp_aplic USING btree (ctacte_id);


--
-- TOC entry 4781 (class 1259 OID 5316329)
-- Name: comp_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX comp_idx1 ON public.comp USING btree (obj_ori);


--
-- TOC entry 4793 (class 1259 OID 5316330)
-- Name: ctacte_01; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ctacte_01 ON public.ctacte USING btree (obj_id);


--
-- TOC entry 4794 (class 1259 OID 5316331)
-- Name: ctacte_02; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ctacte_02 ON public.ctacte USING btree (trib_id, obj_id);


--
-- TOC entry 4795 (class 1259 OID 5316335)
-- Name: ctacte_03; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ctacte_03 ON public.ctacte USING btree (trib_id, obj_id, subcta, anio, cuota);


--
-- TOC entry 4796 (class 1259 OID 5316344)
-- Name: ctacte_04; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ctacte_04 ON public.ctacte USING btree (trib_id, anio, cuota);


--
-- TOC entry 4797 (class 1259 OID 5316353)
-- Name: ctacte_05; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ctacte_05 ON public.ctacte USING btree (fchvenc);


--
-- TOC entry 4798 (class 1259 OID 5316357)
-- Name: ctacte_06; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ctacte_06 ON public.ctacte USING btree (trib_id, fchvenc);


--
-- TOC entry 4799 (class 1259 OID 5316365)
-- Name: ctacte_07; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ctacte_07 ON public.ctacte USING btree (expe);


--
-- TOC entry 4800 (class 1259 OID 5316369)
-- Name: ctacte_08; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ctacte_08 ON public.ctacte USING btree (fchmod);


--
-- TOC entry 4807 (class 1259 OID 5316370)
-- Name: ctacte_baja_liq_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ctacte_baja_liq_idx ON public.ctacte_baja_liq USING btree (ctacte_id);


--
-- TOC entry 4814 (class 1259 OID 5316373)
-- Name: ctacte_det_02; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ctacte_det_02 ON public.ctacte_det USING btree (topera, comprob);


--
-- TOC entry 4815 (class 1259 OID 5316391)
-- Name: ctacte_det_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ctacte_det_idx1 ON public.ctacte_det USING btree (ctacte_id);


--
-- TOC entry 4816 (class 1259 OID 5316392)
-- Name: ctacte_excep_01; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ctacte_excep_01 ON public.ctacte_excep USING btree (fchmod);


--
-- TOC entry 4817 (class 1259 OID 5316393)
-- Name: ctacte_excep_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ctacte_excep_idx ON public.ctacte_excep USING btree (trib_id, tipo, fchlimite);


--
-- TOC entry 4818 (class 1259 OID 5316394)
-- Name: ctacte_excep_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ctacte_excep_idx1 ON public.ctacte_excep USING btree (trib_id, obj_id, subcta, anio, cuota);


--
-- TOC entry 4828 (class 1259 OID 5316395)
-- Name: ctacte_liq_idx0; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ctacte_liq_idx0 ON public.ctacte_liq USING btree (ctacte_id, orden, item_id);


--
-- TOC entry 4829 (class 1259 OID 5316396)
-- Name: ctacte_liq_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ctacte_liq_idx1 ON public.ctacte_liq USING btree (item_id);


--
-- TOC entry 4830 (class 1259 OID 5316398)
-- Name: ctacte_liq_idx2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ctacte_liq_idx2 ON public.ctacte_liq USING btree (ctacte_id, item_id);


--
-- TOC entry 4831 (class 1259 OID 5316405)
-- Name: ctacte_liq_idx3; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ctacte_liq_idx3 ON public.ctacte_liq USING btree (ctacte_id);


--
-- TOC entry 4840 (class 1259 OID 5316406)
-- Name: ctacte_rec_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ctacte_rec_idx1 ON public.ctacte_rec USING btree (ctacte_id);


--
-- TOC entry 4841 (class 1259 OID 5316407)
-- Name: ctacte_rec_idx2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ctacte_rec_idx2 ON public.ctacte_rec USING btree (recibo);


--
-- TOC entry 4852 (class 1259 OID 5316408)
-- Name: ddjj_01; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ddjj_01 ON public.ddjj USING btree (obj_id);


--
-- TOC entry 4853 (class 1259 OID 5316409)
-- Name: ddjj_02; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ddjj_02 ON public.ddjj USING btree (ctacte_id);


--
-- TOC entry 4854 (class 1259 OID 5316410)
-- Name: ddjj_03; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ddjj_03 ON public.ddjj USING btree (fchmod);


--
-- TOC entry 4858 (class 1259 OID 5316411)
-- Name: ddjj_anual_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ddjj_anual_idx1 ON public.ddjj_anual USING btree (dj_id);


--
-- TOC entry 4855 (class 1259 OID 5316412)
-- Name: ddjj_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ddjj_idx1 ON public.ddjj USING btree (trib_id, obj_id, anio, cuota);


--
-- TOC entry 4861 (class 1259 OID 5316413)
-- Name: ddjj_liq_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ddjj_liq_idx1 ON public.ddjj_liq USING btree (dj_id);


--
-- TOC entry 4870 (class 1259 OID 5316414)
-- Name: ddjj_rubros_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ddjj_rubros_idx1 ON public.ddjj_rubros USING btree (dj_id);


--
-- TOC entry 4889 (class 1259 OID 5316415)
-- Name: domicilios_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX domicilios_idx1 ON public.domi USING btree (loc_id, calle_id, puerta);


--
-- TOC entry 4909 (class 1259 OID 5316416)
-- Name: emision_err_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX emision_err_idx1 ON public.emision_err USING btree (obj_id);


--
-- TOC entry 4914 (class 1259 OID 5316417)
-- Name: emision_mail_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX emision_mail_idx1 ON public.emision_mail USING btree (obj_id);


--
-- TOC entry 4943 (class 1259 OID 5316418)
-- Name: facilida_01; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX facilida_01 ON public.facilida USING btree (fchmod);


--
-- TOC entry 4944 (class 1259 OID 5316419)
-- Name: facilida_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX facilida_idx1 ON public.facilida USING btree (obj_id);


--
-- TOC entry 4949 (class 1259 OID 5316420)
-- Name: fiscaliza_01; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX fiscaliza_01 ON public.fiscaliza USING btree (obj_id);


--
-- TOC entry 4954 (class 1259 OID 5316421)
-- Name: his_cem_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX his_cem_idx ON public.his_cem USING btree (obj_id, fch_bd);


--
-- TOC entry 4963 (class 1259 OID 5316422)
-- Name: his_domi_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX his_domi_idx ON public.his_domi USING btree (obj_id, fch_bd);


--
-- TOC entry 4964 (class 1259 OID 5316423)
-- Name: his_domi_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX his_domi_idx1 ON public.his_domi USING btree (torigen, obj_id);


--
-- TOC entry 4967 (class 1259 OID 5316424)
-- Name: his_inm_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX his_inm_idx ON public.his_inm USING btree (obj_id, fch_bd);


--
-- TOC entry 4977 (class 1259 OID 5316425)
-- Name: his_objeto_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX his_objeto_idx ON public.his_objeto USING btree (obj_id, fch_bd);


--
-- TOC entry 5111 (class 1259 OID 5316426)
-- Name: his_objeto_item_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX his_objeto_item_idx1 ON public.objeto_item USING btree (obj_id);


--
-- TOC entry 4955 (class 1259 OID 5316427)
-- Name: idx1_his_cem; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx1_his_cem ON public.his_cem USING btree (obj_id);


--
-- TOC entry 4992 (class 1259 OID 5316428)
-- Name: idx1_his_plan; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx1_his_plan ON public.his_plan USING btree (his_id);


--
-- TOC entry 4993 (class 1259 OID 5316429)
-- Name: idx2_his_plan; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx2_his_plan ON public.his_plan USING btree (plan_id);


--
-- TOC entry 4994 (class 1259 OID 5316430)
-- Name: idx3_his_plan; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx3_his_plan ON public.his_plan USING btree (obj_id);


--
-- TOC entry 4884 (class 1259 OID 5316431)
-- Name: idx_debito_rechazo; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_debito_rechazo ON public.debito_rechazo USING btree (caja_id, fecha);


--
-- TOC entry 4960 (class 1259 OID 5316432)
-- Name: idx_his_ctacte_ajuste; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_his_ctacte_ajuste ON public.his_ctacte_ajuste USING btree (aju_id);


--
-- TOC entry 5041 (class 1259 OID 5316433)
-- Name: idx_inm_tpatrimonio; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_inm_tpatrimonio ON public.inm_tpatrimonio USING btree (nombre);


--
-- TOC entry 5003 (class 1259 OID 5316434)
-- Name: inm_avaluo_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX inm_avaluo_idx ON public.inm_avaluo USING btree (obj_id);


--
-- TOC entry 4997 (class 1259 OID 5316435)
-- Name: inmuebles02; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX inmuebles02 ON public.inm USING btree (parp);


--
-- TOC entry 4998 (class 1259 OID 5316436)
-- Name: inmuebles03; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX inmuebles03 ON public.inm USING btree (plano);


--
-- TOC entry 4999 (class 1259 OID 5316437)
-- Name: inmuebles04; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX inmuebles04 ON public.inm USING btree (manz);


--
-- TOC entry 5000 (class 1259 OID 5316438)
-- Name: inmuebles05; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX inmuebles05 ON public.inm USING btree (nc);


--
-- TOC entry 5006 (class 1259 OID 5316439)
-- Name: inmuebles_frentes_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX inmuebles_frentes_idx1 ON public.inm_frente USING btree (obj_id);


--
-- TOC entry 5011 (class 1259 OID 5316440)
-- Name: inmuebles_mejoras_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX inmuebles_mejoras_idx1 ON public.inm_mej USING btree (obj_id);


--
-- TOC entry 5026 (class 1259 OID 5316441)
-- Name: inmuebles_servidumbre_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX inmuebles_servidumbre_idx1 ON public.inm_restric USING btree (obj_id);


--
-- TOC entry 4711 (class 1259 OID 5316442)
-- Name: interes_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX interes_idx1 ON public.calc_interes USING btree (fchhasta);


--
-- TOC entry 5073 (class 1259 OID 5316450)
-- Name: item_01; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX item_01 ON public.item USING btree (trib_id);


--
-- TOC entry 4877 (class 1259 OID 5316451)
-- Name: ix1_debito_adhe; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix1_debito_adhe ON public.debito_adhe USING btree (obj_id);


--
-- TOC entry 5084 (class 1259 OID 5316452)
-- Name: judi_01; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX judi_01 ON public.judi USING btree (obj_id);


--
-- TOC entry 4821 (class 1259 OID 5316457)
-- Name: libredeuda_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX libredeuda_idx1 ON public.ctacte_libredeuda USING btree (obj_id, fchemi);


--
-- TOC entry 4716 (class 1259 OID 5316462)
-- Name: multas_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX multas_idx1 ON public.calc_multa USING btree (trib_id);


--
-- TOC entry 4717 (class 1259 OID 5316463)
-- Name: multas_idx2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX multas_idx2 ON public.calc_multa USING btree (tcalculo);


--
-- TOC entry 4718 (class 1259 OID 5316464)
-- Name: multas_idx3; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX multas_idx3 ON public.calc_multa USING btree (item_id);


--
-- TOC entry 4630 (class 1259 OID 5316465)
-- Name: objeto_idx0; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX objeto_idx0 ON public.objeto USING btree (num);


--
-- TOC entry 4631 (class 1259 OID 5316466)
-- Name: objeto_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX objeto_idx1 ON public.objeto USING btree (nombre);


--
-- TOC entry 4632 (class 1259 OID 5316467)
-- Name: objeto_idx2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX objeto_idx2 ON public.objeto USING btree (tobj);


--
-- TOC entry 4633 (class 1259 OID 5316468)
-- Name: objeto_idx3; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX objeto_idx3 ON public.objeto USING btree (tobj, nombre);


--
-- TOC entry 4634 (class 1259 OID 5316469)
-- Name: objeto_idx4; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX objeto_idx4 ON public.objeto USING btree (obj_id, nombre);


--
-- TOC entry 4635 (class 1259 OID 5316470)
-- Name: objeto_idx5; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX objeto_idx5 ON public.objeto USING btree (fchmod);


--
-- TOC entry 4636 (class 1259 OID 5316471)
-- Name: objeto_idx6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX objeto_idx6 ON public.objeto USING btree (distrib);


--
-- TOC entry 5122 (class 1259 OID 5316472)
-- Name: objeto_rubros_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX objeto_rubros_idx1 ON public.objeto_rubro USING btree (obj_id);


--
-- TOC entry 5112 (class 1259 OID 5316473)
-- Name: objetos_item_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX objetos_item_idx1 ON public.objeto_item USING btree (obj_id, subcta, trib_id, perdesde, perhasta);


--
-- TOC entry 5115 (class 1259 OID 5316474)
-- Name: objetos_misc_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX objetos_misc_idx1 ON public.objeto_misc USING btree (obj_id);


--
-- TOC entry 5141 (class 1259 OID 5316475)
-- Name: objetos_variables_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX objetos_variables_idx1 ON public.objeto_var USING btree (obj_id);


--
-- TOC entry 4968 (class 1259 OID 5316480)
-- Name: old_inmuebles_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX old_inmuebles_idx1 ON public.his_inm USING btree (obj_id);


--
-- TOC entry 4973 (class 1259 OID 5316481)
-- Name: old_inmuebles_mejoras_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX old_inmuebles_mejoras_idx1 ON public.his_inm_mej USING btree (obj_id);


--
-- TOC entry 4974 (class 1259 OID 5316482)
-- Name: old_inmuebles_mejoras_idx2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX old_inmuebles_mejoras_idx2 ON public.his_inm_mej USING btree (his_id);


--
-- TOC entry 5144 (class 1259 OID 5316483)
-- Name: osm_idx2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX osm_idx2 ON public.osm USING btree (ctaosm);


--
-- TOC entry 4654 (class 1259 OID 5316484)
-- Name: personas_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX personas_idx1 ON public.persona USING btree (ndoc);


--
-- TOC entry 4655 (class 1259 OID 5316485)
-- Name: personas_idx2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX personas_idx2 ON public.persona USING btree (cuit);


--
-- TOC entry 5183 (class 1259 OID 5316486)
-- Name: planes_01; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX planes_01 ON public.plan USING btree (obj_id);


--
-- TOC entry 5184 (class 1259 OID 5316487)
-- Name: planes_02; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX planes_02 ON public.plan USING btree (num);


--
-- TOC entry 5185 (class 1259 OID 5316488)
-- Name: planes_03; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX planes_03 ON public.plan USING btree (resp);


--
-- TOC entry 5198 (class 1259 OID 5316489)
-- Name: planes_periodos_idx2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX planes_periodos_idx2 ON public.plan_periodo USING btree (ctacte_id);


--
-- TOC entry 5223 (class 1259 OID 5316490)
-- Name: resol_tabla_dato_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX resol_tabla_dato_idx ON public.resol_tabla_dato USING btree (tabla_id, perdesde, perhasta, param1, param2, param3);


--
-- TOC entry 5224 (class 1259 OID 5316491)
-- Name: ret01; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ret01 ON public.ret USING btree (ag_rete, anio, mes);


--
-- TOC entry 5227 (class 1259 OID 5316492)
-- Name: ret_det01; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ret_det01 ON public.ret_det USING btree (obj_id);


--
-- TOC entry 5228 (class 1259 OID 5316493)
-- Name: ret_det02; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ret_det02 ON public.ret_det USING btree (retdj_id);


--
-- TOC entry 5229 (class 1259 OID 5316494)
-- Name: ret_det03; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ret_det03 ON public.ret_det USING btree (lugar);


--
-- TOC entry 5230 (class 1259 OID 5316495)
-- Name: ret_det_04; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ret_det_04 ON public.ret_det USING btree (ag_rete, numero);


--
-- TOC entry 5241 (class 1259 OID 5316496)
-- Name: rodado_aforo_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX rodado_aforo_idx ON public.rodado_aforo USING btree (marca, tipo, modelo);


--
-- TOC entry 5242 (class 1259 OID 5316497)
-- Name: rodado_aforo_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX rodado_aforo_idx1 ON public.rodado_aforo USING btree (marca_nom);


--
-- TOC entry 5243 (class 1259 OID 5316498)
-- Name: rodado_aforo_idx2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX rodado_aforo_idx2 ON public.rodado_aforo USING btree (tipo_nom);


--
-- TOC entry 5244 (class 1259 OID 5316499)
-- Name: rodado_aforo_idx3; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX rodado_aforo_idx3 ON public.rodado_aforo USING btree (modelo_nom);


--
-- TOC entry 5247 (class 1259 OID 5316500)
-- Name: rodado_aforo_val_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX rodado_aforo_val_idx ON public.rodado_aforo_val USING btree (aforo_id);


--
-- TOC entry 5390 (class 1259 OID 5316934)
-- Name: rubro_tnomen_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX rubro_tnomen_idx1 ON public.rubro_tnomen USING btree (nomen_id);


--
-- TOC entry 5062 (class 1259 OID 5486481)
-- Name: tinm_zonat_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX tinm_zonat_idx1 ON public.inm_tzonat USING btree (nombre);


--
-- TOC entry 5288 (class 1259 OID 5316502)
-- Name: trib_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX trib_idx ON public.trib USING btree (tobj);


--
-- TOC entry 5289 (class 1259 OID 5316503)
-- Name: tributo_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX tributo_idx1 ON public.trib USING btree (tipo);


--
-- TOC entry 5120 (class 1259 OID 5316504)
-- Name: vinculos_01; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX vinculos_01 ON public.objeto_persona USING btree (num);


--
-- TOC entry 5121 (class 1259 OID 5316505)
-- Name: vinculos_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX vinculos_idx1 ON public.objeto_persona USING btree (obj_id);


--
-- TOC entry 4627 (class 1259 OID 5316535)
-- Name: oficinas_idx3; Type: INDEX; Schema: sam; Owner: postgres
--

CREATE INDEX oficinas_idx3 ON sam.muni_oficina USING btree (nombre);


--
-- TOC entry 5372 (class 1259 OID 5316536)
-- Name: sam_auxiliares_idx1; Type: INDEX; Schema: sam; Owner: postgres
--

CREATE INDEX sam_auxiliares_idx1 ON sam.tabla_aux USING btree (mod_id);


--
-- TOC entry 5359 (class 1259 OID 5316537)
-- Name: sam_usuarios_acc_idx1; Type: INDEX; Schema: sam; Owner: postgres
--

CREATE INDEX sam_usuarios_acc_idx1 ON sam.sis_usuario_acc USING btree (usr_id, fchsalida);


--
-- TOC entry 5382 (class 1259 OID 5316540)
-- Name: ctacte_liq_rec_idx; Type: INDEX; Schema: temp; Owner: postgres
--

CREATE INDEX ctacte_liq_rec_idx ON temp.ctacte_liq_rec USING btree (liq_id);


--
-- TOC entry 5383 (class 1259 OID 5316541)
-- Name: ctacte_liq_rec_idx1; Type: INDEX; Schema: temp; Owner: postgres
--

CREATE INDEX ctacte_liq_rec_idx1 ON temp.ctacte_liq_rec USING btree (item_id);


--
-- TOC entry 5302 (class 1259 OID 5316542)
-- Name: emi_idx; Type: INDEX; Schema: temp; Owner: postgres
--

CREATE INDEX emi_idx ON temp.emi USING btree (ctacte_id);


--
-- TOC entry 5303 (class 1259 OID 5316543)
-- Name: emi_idx1; Type: INDEX; Schema: temp; Owner: postgres
--

CREATE INDEX emi_idx1 ON temp.emi USING btree (obj_id);


--
-- TOC entry 5304 (class 1259 OID 5316544)
-- Name: emi_idx2; Type: INDEX; Schema: temp; Owner: postgres
--

CREATE INDEX emi_idx2 ON temp.emi USING btree (usr_id);


--
-- TOC entry 5305 (class 1259 OID 5316545)
-- Name: emi_idx4; Type: INDEX; Schema: temp; Owner: postgres
--

CREATE INDEX emi_idx4 ON temp.emi USING btree (ctacte_id, usr_id, fila);


--
-- TOC entry 5306 (class 1259 OID 5316546)
-- Name: emi_idx5; Type: INDEX; Schema: temp; Owner: postgres
--

CREATE INDEX emi_idx5 ON temp.emi USING btree (usr_id, fila);


--
-- TOC entry 5379 (class 1259 OID 5316547)
-- Name: idx_ctacte_liq_manual; Type: INDEX; Schema: temp; Owner: postgres
--

CREATE INDEX idx_ctacte_liq_manual ON temp.ctacte_liq_manual USING btree (liq_id, item_id);




--
-- TOC entry 5398 (class 2606 OID 5316573)
-- Name: cuenta fk_tcta; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cuenta
    ADD CONSTRAINT fk_tcta FOREIGN KEY (tcta) REFERENCES public.ctacte_tcta(cod);


--
-- TOC entry 5400 (class 2606 OID 5316593)
-- Name: sis_grupo_proceso fk_sam_grupo_procesos_1; Type: FK CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.sis_grupo_proceso
    ADD CONSTRAINT fk_sam_grupo_procesos_1 FOREIGN KEY (gru_id) REFERENCES sam.sis_grupo(gru_id) ON DELETE CASCADE;


--
-- TOC entry 5399 (class 2606 OID 5316598)
-- Name: sis_grupo_proceso fk_sam_grupo_procesos_2; Type: FK CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.sis_grupo_proceso
    ADD CONSTRAINT fk_sam_grupo_procesos_2 FOREIGN KEY (pro_id) REFERENCES sam.sis_proceso(pro_id) ON DELETE CASCADE;


--
-- TOC entry 5401 (class 2606 OID 5316603)
-- Name: sis_modulo fk_sam_modulos_1; Type: FK CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.sis_modulo
    ADD CONSTRAINT fk_sam_modulos_1 FOREIGN KEY (sis_id) REFERENCES sam.sis_sistema(sis_id);


--
-- TOC entry 5402 (class 2606 OID 5316608)
-- Name: sis_proceso fk_sam_procesos_1; Type: FK CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.sis_proceso
    ADD CONSTRAINT fk_sam_procesos_1 FOREIGN KEY (mod_id) REFERENCES sam.sis_modulo(mod_id);


--
-- TOC entry 5405 (class 2606 OID 5316613)
-- Name: version_archivo fk_version_archivo; Type: FK CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.version_archivo
    ADD CONSTRAINT fk_version_archivo FOREIGN KEY (sis_id, version) REFERENCES sam.version(sis_id, version);


--
-- TOC entry 5403 (class 2606 OID 5316618)
-- Name: sis_usuario_proceso usuario_proceso_fk; Type: FK CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.sis_usuario_proceso
    ADD CONSTRAINT usuario_proceso_fk FOREIGN KEY (pro_id) REFERENCES sam.sis_proceso(pro_id) ON DELETE CASCADE;


--
-- TOC entry 5404 (class 2606 OID 5316623)
-- Name: version version_fk; Type: FK CONSTRAINT; Schema: sam; Owner: postgres
--

ALTER TABLE ONLY sam.version
    ADD CONSTRAINT version_fk FOREIGN KEY (sis_id) REFERENCES sam.sis_sistema(sis_id) ON DELETE RESTRICT;


--
-- TOC entry 5641 (class 0 OID 0)
-- Dependencies: 8
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- TOC entry 5642 (class 0 OID 0)
-- Dependencies: 9
-- Name: SCHEMA sam; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA sam FROM PUBLIC;
REVOKE ALL ON SCHEMA sam FROM postgres;
GRANT ALL ON SCHEMA sam TO postgres;
GRANT ALL ON SCHEMA sam TO webusr;


--
-- TOC entry 6237 (class 0 OID 0)
-- Dependencies: 234
-- Name: TABLE comer; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.comer FROM PUBLIC;
REVOKE ALL ON TABLE public.comer FROM postgres;
GRANT ALL ON TABLE public.comer TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.comer TO webusr;


--
-- TOC entry 6261 (class 0 OID 0)
-- Dependencies: 238
-- Name: TABLE comer_thab; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.comer_thab FROM PUBLIC;
REVOKE ALL ON TABLE public.comer_thab FROM postgres;
GRANT ALL ON TABLE public.comer_thab TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.comer_thab TO webusr;


--
-- TOC entry 6617 (class 0 OID 0)
-- Dependencies: 280
-- Name: TABLE debito_adhe; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.debito_adhe FROM PUBLIC;
REVOKE ALL ON TABLE public.debito_adhe FROM postgres;
GRANT ALL ON TABLE public.debito_adhe TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.debito_adhe TO webusr;


--
-- TOC entry 6920 (class 0 OID 0)
-- Dependencies: 317
-- Name: TABLE his_comer; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.his_comer FROM PUBLIC;
REVOKE ALL ON TABLE public.his_comer FROM postgres;
GRANT ALL ON TABLE public.his_comer TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.his_comer TO webusr;


--
-- TOC entry 7003 (class 0 OID 0)
-- Dependencies: 322
-- Name: TABLE his_inm; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.his_inm FROM PUBLIC;
REVOKE ALL ON TABLE public.his_inm FROM postgres;
GRANT ALL ON TABLE public.his_inm TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.his_inm TO webusr;


--
-- TOC entry 7085 (class 0 OID 0)
-- Dependencies: 329
-- Name: TABLE his_persona; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.his_persona FROM PUBLIC;
REVOKE ALL ON TABLE public.his_persona FROM postgres;
GRANT ALL ON TABLE public.his_persona TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.his_persona TO webusr;


--
-- TOC entry 7145 (class 0 OID 0)
-- Dependencies: 334
-- Name: TABLE his_plan; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.his_plan FROM PUBLIC;
REVOKE ALL ON TABLE public.his_plan FROM postgres;
GRANT ALL ON TABLE public.his_plan TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.his_plan TO webusr;


--
-- TOC entry 7147 (class 0 OID 0)
-- Dependencies: 336
-- Name: TABLE his_rodado; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.his_rodado FROM PUBLIC;
REVOKE ALL ON TABLE public.his_rodado FROM postgres;
GRANT ALL ON TABLE public.his_rodado TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.his_rodado TO webusr;


--
-- TOC entry 7197 (class 0 OID 0)
-- Dependencies: 337
-- Name: TABLE inm; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.inm FROM PUBLIC;
REVOKE ALL ON TABLE public.inm FROM postgres;
GRANT ALL ON TABLE public.inm TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.inm TO webusr;


--
-- TOC entry 7271 (class 0 OID 0)
-- Dependencies: 342
-- Name: TABLE inm_mej_tcat; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.inm_mej_tcat FROM PUBLIC;
REVOKE ALL ON TABLE public.inm_mej_tcat FROM postgres;
GRANT ALL ON TABLE public.inm_mej_tcat TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.inm_mej_tcat TO webusr;


--
-- TOC entry 7358 (class 0 OID 0)
-- Dependencies: 358
-- Name: TABLE inm_tserv; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.inm_tserv FROM PUBLIC;
REVOKE ALL ON TABLE public.inm_tserv FROM postgres;
GRANT ALL ON TABLE public.inm_tserv TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.inm_tserv TO webusr;


--
-- TOC entry 7715 (class 0 OID 0)
-- Dependencies: 399
-- Name: TABLE objeto_trib_cat; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.objeto_trib_cat FROM PUBLIC;
REVOKE ALL ON TABLE public.objeto_trib_cat FROM postgres;
GRANT ALL ON TABLE public.objeto_trib_cat TO postgres;
GRANT ALL ON TABLE public.objeto_trib_cat TO webusr;


--
-- TOC entry 7797 (class 0 OID 0)
-- Dependencies: 184
-- Name: TABLE persona; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.persona FROM PUBLIC;
REVOKE ALL ON TABLE public.persona FROM postgres;
GRANT ALL ON TABLE public.persona TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.persona TO webusr;


--
-- TOC entry 7830 (class 0 OID 0)
-- Dependencies: 412
-- Name: TABLE persona_tbajaib; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.persona_tbajaib FROM PUBLIC;
REVOKE ALL ON TABLE public.persona_tbajaib FROM postgres;
GRANT ALL ON TABLE public.persona_tbajaib TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.persona_tbajaib TO webusr;


--
-- TOC entry 7846 (class 0 OID 0)
-- Dependencies: 415
-- Name: TABLE persona_test_ib; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.persona_test_ib FROM PUBLIC;
REVOKE ALL ON TABLE public.persona_test_ib FROM postgres;
GRANT ALL ON TABLE public.persona_test_ib TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.persona_test_ib TO webusr;


--
-- TOC entry 8077 (class 0 OID 0)
-- Dependencies: 441
-- Name: TABLE ret; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.ret FROM PUBLIC;
REVOKE ALL ON TABLE public.ret FROM postgres;
GRANT ALL ON TABLE public.ret TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.ret TO webusr;


--
-- TOC entry 8191 (class 0 OID 0)
-- Dependencies: 455
-- Name: TABLE rodado_tform; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.rodado_tform FROM PUBLIC;
REVOKE ALL ON TABLE public.rodado_tform FROM postgres;
GRANT ALL ON TABLE public.rodado_tform TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.rodado_tform TO webusr;


--
-- TOC entry 8260 (class 0 OID 0)
-- Dependencies: 669
-- Name: TABLE rubro_tnomen; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.rubro_tnomen FROM PUBLIC;
REVOKE ALL ON TABLE public.rubro_tnomen FROM postgres;
GRANT ALL ON TABLE public.rubro_tnomen TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.rubro_tnomen TO webusr;


--
-- TOC entry 8284 (class 0 OID 0)
-- Dependencies: 505
-- Name: SEQUENCE seq_persona_ib; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON SEQUENCE public.seq_persona_ib FROM PUBLIC;
REVOKE ALL ON SEQUENCE public.seq_persona_ib FROM postgres;
GRANT ALL ON SEQUENCE public.seq_persona_ib TO postgres;
GRANT SELECT,UPDATE ON SEQUENCE public.seq_persona_ib TO webusr;


--
-- TOC entry 8399 (class 0 OID 0)
-- Dependencies: 520
-- Name: TABLE v_banco_cuenta; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_banco_cuenta FROM PUBLIC;
REVOKE ALL ON TABLE public.v_banco_cuenta FROM postgres;
GRANT ALL ON TABLE public.v_banco_cuenta TO postgres;
GRANT SELECT ON TABLE public.v_banco_cuenta TO webusr;


--
-- TOC entry 8400 (class 0 OID 0)
-- Dependencies: 686
-- Name: TABLE v_caja_opera_mdp; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_caja_opera_mdp FROM PUBLIC;
REVOKE ALL ON TABLE public.v_caja_opera_mdp FROM postgres;
GRANT ALL ON TABLE public.v_caja_opera_mdp TO postgres;
GRANT SELECT ON TABLE public.v_caja_opera_mdp TO webusr;


--
-- TOC entry 8401 (class 0 OID 0)
-- Dependencies: 526
-- Name: TABLE v_caja_ticket; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_caja_ticket FROM PUBLIC;
REVOKE ALL ON TABLE public.v_caja_ticket FROM postgres;
GRANT ALL ON TABLE public.v_caja_ticket TO postgres;
GRANT SELECT ON TABLE public.v_caja_ticket TO webusr;


--
-- TOC entry 8402 (class 0 OID 0)
-- Dependencies: 529
-- Name: TABLE v_caja_ticket_plan; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_caja_ticket_plan FROM PUBLIC;
REVOKE ALL ON TABLE public.v_caja_ticket_plan FROM postgres;
GRANT ALL ON TABLE public.v_caja_ticket_plan TO postgres;
GRANT SELECT ON TABLE public.v_caja_ticket_plan TO webusr;


--
-- TOC entry 8408 (class 0 OID 0)
-- Dependencies: 533
-- Name: TABLE v_domi; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_domi FROM PUBLIC;
REVOKE ALL ON TABLE public.v_domi FROM postgres;
GRANT ALL ON TABLE public.v_domi TO postgres;
GRANT SELECT ON TABLE public.v_domi TO webusr;


--
-- TOC entry 8409 (class 0 OID 0)
-- Dependencies: 534
-- Name: TABLE v_cem; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_cem FROM PUBLIC;
REVOKE ALL ON TABLE public.v_cem FROM postgres;
GRANT ALL ON TABLE public.v_cem TO postgres;
GRANT SELECT ON TABLE public.v_cem TO webusr;


--
-- TOC entry 8410 (class 0 OID 0)
-- Dependencies: 536
-- Name: TABLE v_cem_fall; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_cem_fall FROM PUBLIC;
REVOKE ALL ON TABLE public.v_cem_fall FROM postgres;
GRANT ALL ON TABLE public.v_cem_fall TO postgres;
GRANT SELECT ON TABLE public.v_cem_fall TO webusr;


--
-- TOC entry 8411 (class 0 OID 0)
-- Dependencies: 539
-- Name: TABLE v_cem_talq; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_cem_talq FROM PUBLIC;
REVOKE ALL ON TABLE public.v_cem_talq FROM postgres;
GRANT ALL ON TABLE public.v_cem_talq TO postgres;
GRANT SELECT ON TABLE public.v_cem_talq TO webusr;


--
-- TOC entry 8412 (class 0 OID 0)
-- Dependencies: 678
-- Name: TABLE v_comer; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_comer FROM PUBLIC;
REVOKE ALL ON TABLE public.v_comer FROM postgres;
GRANT ALL ON TABLE public.v_comer TO postgres;
GRANT ALL ON TABLE public.v_comer TO webusr;


--
-- TOC entry 8413 (class 0 OID 0)
-- Dependencies: 540
-- Name: TABLE v_comer_inm; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_comer_inm FROM PUBLIC;
REVOKE ALL ON TABLE public.v_comer_inm FROM postgres;
GRANT ALL ON TABLE public.v_comer_inm TO postgres;
GRANT SELECT ON TABLE public.v_comer_inm TO webusr;


--
-- TOC entry 8414 (class 0 OID 0)
-- Dependencies: 549
-- Name: TABLE v_ctacte_pagocta_print; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_ctacte_pagocta_print FROM PUBLIC;
REVOKE ALL ON TABLE public.v_ctacte_pagocta_print FROM postgres;
GRANT ALL ON TABLE public.v_ctacte_pagocta_print TO postgres;
GRANT SELECT ON TABLE public.v_ctacte_pagocta_print TO webusr;


--
-- TOC entry 8415 (class 0 OID 0)
-- Dependencies: 550
-- Name: TABLE v_debito_adhe; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_debito_adhe FROM PUBLIC;
REVOKE ALL ON TABLE public.v_debito_adhe FROM postgres;
GRANT ALL ON TABLE public.v_debito_adhe TO postgres;
GRANT SELECT ON TABLE public.v_debito_adhe TO webusr;


--
-- TOC entry 8416 (class 0 OID 0)
-- Dependencies: 684
-- Name: TABLE v_debito_entidad; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_debito_entidad FROM PUBLIC;
REVOKE ALL ON TABLE public.v_debito_entidad FROM postgres;
GRANT ALL ON TABLE public.v_debito_entidad TO postgres;
GRANT SELECT ON TABLE public.v_debito_entidad TO webusr;


--
-- TOC entry 8417 (class 0 OID 0)
-- Dependencies: 551
-- Name: TABLE v_debito_liq; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_debito_liq FROM PUBLIC;
REVOKE ALL ON TABLE public.v_debito_liq FROM postgres;
GRANT ALL ON TABLE public.v_debito_liq TO postgres;
GRANT SELECT ON TABLE public.v_debito_liq TO webusr;


--
-- TOC entry 8418 (class 0 OID 0)
-- Dependencies: 552
-- Name: TABLE v_dj; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_dj FROM PUBLIC;
REVOKE ALL ON TABLE public.v_dj FROM postgres;
GRANT ALL ON TABLE public.v_dj TO postgres;
GRANT SELECT ON TABLE public.v_dj TO webusr;


--
-- TOC entry 8419 (class 0 OID 0)
-- Dependencies: 677
-- Name: TABLE v_dj_base; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_dj_base FROM PUBLIC;
REVOKE ALL ON TABLE public.v_dj_base FROM postgres;
GRANT ALL ON TABLE public.v_dj_base TO postgres;
GRANT SELECT ON TABLE public.v_dj_base TO webusr;


--
-- TOC entry 8420 (class 0 OID 0)
-- Dependencies: 676
-- Name: TABLE v_dj_rubro; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_dj_rubro FROM PUBLIC;
REVOKE ALL ON TABLE public.v_dj_rubro FROM postgres;
GRANT ALL ON TABLE public.v_dj_rubro TO postgres;
GRANT SELECT ON TABLE public.v_dj_rubro TO webusr;


--
-- TOC entry 8421 (class 0 OID 0)
-- Dependencies: 554
-- Name: TABLE v_emision; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_emision FROM PUBLIC;
REVOKE ALL ON TABLE public.v_emision FROM postgres;
GRANT ALL ON TABLE public.v_emision TO postgres;
GRANT SELECT ON TABLE public.v_emision TO webusr;


--
-- TOC entry 8472 (class 0 OID 0)
-- Dependencies: 563
-- Name: TABLE v_emision_print; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_emision_print FROM PUBLIC;
REVOKE ALL ON TABLE public.v_emision_print FROM postgres;
GRANT ALL ON TABLE public.v_emision_print TO postgres;
GRANT SELECT ON TABLE public.v_emision_print TO webusr;


--
-- TOC entry 8473 (class 0 OID 0)
-- Dependencies: 564
-- Name: TABLE v_emision_print_faci; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_emision_print_faci FROM PUBLIC;
REVOKE ALL ON TABLE public.v_emision_print_faci FROM postgres;
GRANT ALL ON TABLE public.v_emision_print_faci TO postgres;
GRANT SELECT ON TABLE public.v_emision_print_faci TO webusr;


--
-- TOC entry 8474 (class 0 OID 0)
-- Dependencies: 565
-- Name: TABLE v_emision_print_sem; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_emision_print_sem FROM PUBLIC;
REVOKE ALL ON TABLE public.v_emision_print_sem FROM postgres;
GRANT ALL ON TABLE public.v_emision_print_sem TO postgres;
GRANT SELECT ON TABLE public.v_emision_print_sem TO webusr;


--
-- TOC entry 8476 (class 0 OID 0)
-- Dependencies: 567
-- Name: TABLE v_facilida; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_facilida FROM PUBLIC;
REVOKE ALL ON TABLE public.v_facilida FROM postgres;
GRANT ALL ON TABLE public.v_facilida TO postgres;
GRANT SELECT ON TABLE public.v_facilida TO webusr;


--
-- TOC entry 8477 (class 0 OID 0)
-- Dependencies: 569
-- Name: TABLE v_fiscaliza; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_fiscaliza FROM PUBLIC;
REVOKE ALL ON TABLE public.v_fiscaliza FROM postgres;
GRANT ALL ON TABLE public.v_fiscaliza TO postgres;
GRANT SELECT ON TABLE public.v_fiscaliza TO webusr;


--
-- TOC entry 8478 (class 0 OID 0)
-- Dependencies: 675
-- Name: TABLE v_fiscaliza_rubro; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_fiscaliza_rubro FROM PUBLIC;
REVOKE ALL ON TABLE public.v_fiscaliza_rubro FROM postgres;
GRANT ALL ON TABLE public.v_fiscaliza_rubro TO postgres;
GRANT SELECT ON TABLE public.v_fiscaliza_rubro TO webusr;


--
-- TOC entry 8479 (class 0 OID 0)
-- Dependencies: 570
-- Name: TABLE v_his_cem; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_his_cem FROM PUBLIC;
REVOKE ALL ON TABLE public.v_his_cem FROM postgres;
GRANT ALL ON TABLE public.v_his_cem TO postgres;
GRANT SELECT ON TABLE public.v_his_cem TO webusr;


--
-- TOC entry 8480 (class 0 OID 0)
-- Dependencies: 571
-- Name: TABLE v_his_comer; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_his_comer FROM PUBLIC;
REVOKE ALL ON TABLE public.v_his_comer FROM postgres;
GRANT ALL ON TABLE public.v_his_comer TO postgres;
GRANT SELECT ON TABLE public.v_his_comer TO webusr;


--
-- TOC entry 8481 (class 0 OID 0)
-- Dependencies: 682
-- Name: TABLE v_his_inm; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_his_inm FROM PUBLIC;
REVOKE ALL ON TABLE public.v_his_inm FROM postgres;
GRANT ALL ON TABLE public.v_his_inm TO postgres;
GRANT SELECT ON TABLE public.v_his_inm TO webusr;


--
-- TOC entry 8482 (class 0 OID 0)
-- Dependencies: 573
-- Name: TABLE v_his_persona; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_his_persona FROM PUBLIC;
REVOKE ALL ON TABLE public.v_his_persona FROM postgres;
GRANT ALL ON TABLE public.v_his_persona TO postgres;
GRANT SELECT ON TABLE public.v_his_persona TO webusr;


--
-- TOC entry 8483 (class 0 OID 0)
-- Dependencies: 574
-- Name: TABLE v_his_plan; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_his_plan FROM PUBLIC;
REVOKE ALL ON TABLE public.v_his_plan FROM postgres;
GRANT ALL ON TABLE public.v_his_plan TO postgres;
GRANT SELECT ON TABLE public.v_his_plan TO webusr;


--
-- TOC entry 8484 (class 0 OID 0)
-- Dependencies: 680
-- Name: TABLE v_inm; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_inm FROM PUBLIC;
REVOKE ALL ON TABLE public.v_inm FROM postgres;
GRANT ALL ON TABLE public.v_inm TO postgres;
GRANT SELECT ON TABLE public.v_inm TO webusr;


--
-- TOC entry 8485 (class 0 OID 0)
-- Dependencies: 683
-- Name: TABLE v_inm_aval; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_inm_aval FROM PUBLIC;
REVOKE ALL ON TABLE public.v_inm_aval FROM postgres;
GRANT ALL ON TABLE public.v_inm_aval TO postgres;
GRANT SELECT ON TABLE public.v_inm_aval TO webusr;


--
-- TOC entry 8486 (class 0 OID 0)
-- Dependencies: 576
-- Name: TABLE v_inm_frentista; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_inm_frentista FROM PUBLIC;
REVOKE ALL ON TABLE public.v_inm_frentista FROM postgres;
GRANT ALL ON TABLE public.v_inm_frentista TO postgres;
GRANT SELECT ON TABLE public.v_inm_frentista TO webusr;


--
-- TOC entry 8487 (class 0 OID 0)
-- Dependencies: 577
-- Name: TABLE v_inm_mej; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_inm_mej FROM PUBLIC;
REVOKE ALL ON TABLE public.v_inm_mej FROM postgres;
GRANT ALL ON TABLE public.v_inm_mej TO postgres;
GRANT SELECT ON TABLE public.v_inm_mej TO webusr;


--
-- TOC entry 8488 (class 0 OID 0)
-- Dependencies: 578
-- Name: TABLE v_inm_osm; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_inm_osm FROM PUBLIC;
REVOKE ALL ON TABLE public.v_inm_osm FROM postgres;
GRANT ALL ON TABLE public.v_inm_osm TO postgres;
GRANT SELECT ON TABLE public.v_inm_osm TO webusr;


--
-- TOC entry 8501 (class 0 OID 0)
-- Dependencies: 581
-- Name: TABLE usuarioweb; Type: ACL; Schema: sam; Owner: postgres
--

REVOKE ALL ON TABLE sam.usuarioweb FROM PUBLIC;
REVOKE ALL ON TABLE sam.usuarioweb FROM postgres;
GRANT ALL ON TABLE sam.usuarioweb TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE sam.usuarioweb TO webusr;


--
-- TOC entry 8502 (class 0 OID 0)
-- Dependencies: 681
-- Name: TABLE v_inm_vta; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_inm_vta FROM PUBLIC;
REVOKE ALL ON TABLE public.v_inm_vta FROM postgres;
GRANT ALL ON TABLE public.v_inm_vta TO postgres;
GRANT SELECT ON TABLE public.v_inm_vta TO webusr;


--
-- TOC entry 8504 (class 0 OID 0)
-- Dependencies: 685
-- Name: TABLE v_objeto_item; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_objeto_item FROM PUBLIC;
REVOKE ALL ON TABLE public.v_objeto_item FROM postgres;
GRANT ALL ON TABLE public.v_objeto_item TO postgres;
GRANT SELECT ON TABLE public.v_objeto_item TO webusr;


--
-- TOC entry 8506 (class 0 OID 0)
-- Dependencies: 591
-- Name: TABLE v_objeto_persona; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_objeto_persona FROM PUBLIC;
REVOKE ALL ON TABLE public.v_objeto_persona FROM postgres;
GRANT ALL ON TABLE public.v_objeto_persona TO postgres;
GRANT SELECT ON TABLE public.v_objeto_persona TO webusr;


--
-- TOC entry 8507 (class 0 OID 0)
-- Dependencies: 674
-- Name: TABLE v_objeto_rubro; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_objeto_rubro FROM PUBLIC;
REVOKE ALL ON TABLE public.v_objeto_rubro FROM postgres;
GRANT ALL ON TABLE public.v_objeto_rubro TO postgres;
GRANT SELECT ON TABLE public.v_objeto_rubro TO webusr;


--
-- TOC entry 8508 (class 0 OID 0)
-- Dependencies: 592
-- Name: TABLE v_objeto_tit; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_objeto_tit FROM PUBLIC;
REVOKE ALL ON TABLE public.v_objeto_tit FROM postgres;
GRANT ALL ON TABLE public.v_objeto_tit TO postgres;
GRANT SELECT ON TABLE public.v_objeto_tit TO webusr;


--
-- TOC entry 8509 (class 0 OID 0)
-- Dependencies: 594
-- Name: TABLE v_objeto_trib_cat; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_objeto_trib_cat FROM PUBLIC;
REVOKE ALL ON TABLE public.v_objeto_trib_cat FROM postgres;
GRANT ALL ON TABLE public.v_objeto_trib_cat TO postgres;
GRANT SELECT ON TABLE public.v_objeto_trib_cat TO webusr;


--
-- TOC entry 8510 (class 0 OID 0)
-- Dependencies: 596
-- Name: TABLE v_persona; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_persona FROM PUBLIC;
REVOKE ALL ON TABLE public.v_persona FROM postgres;
GRANT ALL ON TABLE public.v_persona TO postgres;
GRANT SELECT ON TABLE public.v_persona TO webusr;


--
-- TOC entry 8511 (class 0 OID 0)
-- Dependencies: 597
-- Name: TABLE v_plan; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_plan FROM PUBLIC;
REVOKE ALL ON TABLE public.v_plan FROM postgres;
GRANT ALL ON TABLE public.v_plan TO postgres;
GRANT SELECT ON TABLE public.v_plan TO webusr;


--
-- TOC entry 8512 (class 0 OID 0)
-- Dependencies: 599
-- Name: TABLE v_plan_cuota; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_plan_cuota FROM PUBLIC;
REVOKE ALL ON TABLE public.v_plan_cuota FROM postgres;
GRANT ALL ON TABLE public.v_plan_cuota TO postgres;
GRANT SELECT ON TABLE public.v_plan_cuota TO webusr;


--
-- TOC entry 8513 (class 0 OID 0)
-- Dependencies: 603
-- Name: TABLE v_plan_persona; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_plan_persona FROM PUBLIC;
REVOKE ALL ON TABLE public.v_plan_persona FROM postgres;
GRANT ALL ON TABLE public.v_plan_persona TO postgres;
GRANT SELECT ON TABLE public.v_plan_persona TO webusr;


--
-- TOC entry 8514 (class 0 OID 0)
-- Dependencies: 606
-- Name: TABLE v_resol; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_resol FROM PUBLIC;
REVOKE ALL ON TABLE public.v_resol FROM postgres;
GRANT ALL ON TABLE public.v_resol TO postgres;
GRANT SELECT ON TABLE public.v_resol TO webusr;


--
-- TOC entry 8515 (class 0 OID 0)
-- Dependencies: 607
-- Name: TABLE v_ret; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_ret FROM PUBLIC;
REVOKE ALL ON TABLE public.v_ret FROM postgres;
GRANT ALL ON TABLE public.v_ret TO postgres;
GRANT SELECT ON TABLE public.v_ret TO webusr;


--
-- TOC entry 8516 (class 0 OID 0)
-- Dependencies: 608
-- Name: TABLE v_ret_det; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_ret_det FROM PUBLIC;
REVOKE ALL ON TABLE public.v_ret_det FROM postgres;
GRANT ALL ON TABLE public.v_ret_det TO postgres;
GRANT SELECT ON TABLE public.v_ret_det TO webusr;


--
-- TOC entry 8517 (class 0 OID 0)
-- Dependencies: 609
-- Name: TABLE v_rodado; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_rodado FROM PUBLIC;
REVOKE ALL ON TABLE public.v_rodado FROM postgres;
GRANT ALL ON TABLE public.v_rodado TO postgres;
GRANT SELECT ON TABLE public.v_rodado TO webusr;


--
-- TOC entry 8518 (class 0 OID 0)
-- Dependencies: 673
-- Name: TABLE v_rubro; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_rubro FROM PUBLIC;
REVOKE ALL ON TABLE public.v_rubro FROM postgres;
GRANT ALL ON TABLE public.v_rubro TO postgres;
GRANT SELECT ON TABLE public.v_rubro TO webusr;


--
-- TOC entry 8519 (class 0 OID 0)
-- Dependencies: 672
-- Name: TABLE v_rubro_vigencia; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_rubro_vigencia FROM PUBLIC;
REVOKE ALL ON TABLE public.v_rubro_vigencia FROM postgres;
GRANT ALL ON TABLE public.v_rubro_vigencia TO postgres;
GRANT SELECT ON TABLE public.v_rubro_vigencia TO webusr;


--
-- TOC entry 8520 (class 0 OID 0)
-- Dependencies: 687
-- Name: TABLE v_trib; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.v_trib FROM PUBLIC;
REVOKE ALL ON TABLE public.v_trib FROM postgres;
GRANT ALL ON TABLE public.v_trib TO postgres;
GRANT SELECT ON TABLE public.v_trib TO webusr;


--
-- TOC entry 8596 (class 0 OID 0)
-- Dependencies: 670
-- Name: TABLE config_ddjj; Type: ACL; Schema: sam; Owner: postgres
--

REVOKE ALL ON TABLE sam.config_ddjj FROM PUBLIC;
REVOKE ALL ON TABLE sam.config_ddjj FROM postgres;
GRANT ALL ON TABLE sam.config_ddjj TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE sam.config_ddjj TO webusr;


--
-- TOC entry 8603 (class 0 OID 0)
-- Dependencies: 623
-- Name: TABLE config_fin_part; Type: ACL; Schema: sam; Owner: postgres
--

REVOKE ALL ON TABLE sam.config_fin_part FROM PUBLIC;
REVOKE ALL ON TABLE sam.config_fin_part FROM postgres;
GRANT ALL ON TABLE sam.config_fin_part TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE sam.config_fin_part TO webusr;


--
-- TOC entry 8643 (class 0 OID 0)
-- Dependencies: 626
-- Name: TABLE muni_datos; Type: ACL; Schema: sam; Owner: postgres
--

REVOKE ALL ON TABLE sam.muni_datos FROM PUBLIC;
REVOKE ALL ON TABLE sam.muni_datos FROM postgres;
GRANT ALL ON TABLE sam.muni_datos TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE sam.muni_datos TO webusr;


--
-- TOC entry 8722 (class 0 OID 0)
-- Dependencies: 631
-- Name: TABLE sis_clave_blanqueo; Type: ACL; Schema: sam; Owner: postgres
--

REVOKE ALL ON TABLE sam.sis_clave_blanqueo FROM PUBLIC;
REVOKE ALL ON TABLE sam.sis_clave_blanqueo FROM postgres;
GRANT ALL ON TABLE sam.sis_clave_blanqueo TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE sam.sis_clave_blanqueo TO webusr;


--
-- TOC entry 8814 (class 0 OID 0)
-- Dependencies: 653
-- Name: TABLE ag_rete; Type: ACL; Schema: temp; Owner: postgres
--

REVOKE ALL ON TABLE temp.ag_rete FROM PUBLIC;
REVOKE ALL ON TABLE temp.ag_rete FROM postgres;
GRANT ALL ON TABLE temp.ag_rete TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE temp.ag_rete TO webusr;


--
-- TOC entry 8815 (class 0 OID 0)
-- Dependencies: 654
-- Name: TABLE ag_rete_log; Type: ACL; Schema: temp; Owner: postgres
--

REVOKE ALL ON TABLE temp.ag_rete_log FROM PUBLIC;
REVOKE ALL ON TABLE temp.ag_rete_log FROM postgres;
GRANT ALL ON TABLE temp.ag_rete_log TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE temp.ag_rete_log TO webusr;


--
-- TOC entry 8816 (class 0 OID 0)
-- Dependencies: 655
-- Name: TABLE ag_rete_prev; Type: ACL; Schema: temp; Owner: postgres
--

REVOKE ALL ON TABLE temp.ag_rete_prev FROM PUBLIC;
REVOKE ALL ON TABLE temp.ag_rete_prev FROM postgres;
GRANT ALL ON TABLE temp.ag_rete_prev TO postgres;
GRANT ALL ON TABLE temp.ag_rete_prev TO webusr;

-- ******************************************************************************************************************************************************
-- ******************************************************************************************************************************************************
-- ******************************************************************************************************************************************************

--
-- Name: ascii_ansi(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.ascii_ansi(c text) RETURNS integer
    LANGUAGE plpgsql
    AS $$
declare
	n integer;

begin
	--------------------------------------------------------
	-- Devuelve el código ANSI de un caracter
	-- La función ascii sólo funciona para caracteres hasta 127
	-- USO: ascii_ansi('‰')
	-- RETORNA: integer
	--------------------------------------------------------
	n := ascii(c);

    If (n>128) Then

        -- Ojo: 160 y 173 son vacíos que reemplacé por espacio.
        n := case c when '€' then 128
        when '' then 129 when '‚' then 130 when 'ƒ' then 131 when '„' then 132 when '…' then 133 when '†' then 134
        when '‡' then 135 when 'ˆ' then 136 when '‰' then 137 when 'Š' then 138 when '‹' then 139 when 'Œ' then 140
        when '?' then 141 when 'Ž' then 142 when '?' then 143 when '?' then 144 when '‘' then 145 when '’' then 146
        when '“' then 147 when '”' then 148 when '•' then 149 when '–' then 150 when '—' then 151 when '˜' then 152
        when '™' then 153 when 'š' then 154 when '›' then 155 when 'œ' then 156 when '?' then 157 when 'ž' then 158
        when 'Ÿ' then 159 when ' ' then 160 when '¡' then 161 when '¢' then 162 when '£' then 163 when '¤' then 164
        when '¥' then 165 when '¦' then 166 when '§' then 167 when '¨' then 168 when '©' then 169 when 'ª' then 170
        when '«' then 171 when '¬' then 172 when ' ' then 173 when '®' then 174 when '¯' then 175 when '°' then 176
        when '±' then 177 when '²' then 178 when '³' then 179 when '´' then 180 when 'µ' then 181 when '¶' then 182
        when '·' then 183 when '¸' then 184 when '¹' then 185 when 'º' then 186 when '»' then 187 when '¼' then 188
        when '½' then 189 when '¾' then 190 when '¿' then 191 when 'À' then 192 when 'Á' then 193 when 'Â' then 194
        when 'Ã' then 195 when 'Ä' then 196 when 'Å' then 197 when 'Æ' then 198 when 'Ç' then 199 when 'È' then 200
        when 'É' then 201 when 'Ê' then 202 when 'Ë' then 203 when 'Ì' then 204 when 'Í' then 205 when 'Î' then 206
        when 'Ï' then 207 when 'Ð' then 208 when 'Ñ' then 209 when 'Ò' then 210 when 'Ó' then 211 when 'Ô' then 212
        when 'Õ' then 213 when 'Ö' then 214 when '×' then 215 when 'Ø' then 216 when 'Ù' then 217 when 'Ú' then 218
        when 'Û' then 219 when 'Ü' then 220 when 'Ý' then 221 when 'Þ' then 222 when 'ß' then 223 when 'à' then 224
        when 'á' then 225 when 'â' then 226 when 'ã' then 227 when 'ä' then 228 when 'å' then 229 when 'æ' then 230
        when 'ç' then 231 when 'è' then 232 when 'é' then 233 when 'ê' then 234 when 'ë' then 235 when 'ì' then 236
        when 'í' then 237 when 'î' then 238 when 'ï' then 239 when 'ð' then 240 when 'ñ' then 241 when 'ò' then 242
        when 'ó' then 243 when 'ô' then 244 when 'õ' then 245 when 'ö' then 246 when '÷' then 247 when 'ø' then 248
        when 'ù' then 249 when 'ú' then 250 when 'û' then 251 when 'ü' then 252 when 'ý' then 253 when 'þ' then 254
        Else 0 End;

    End If;

    Return n;

end
$$;


ALTER FUNCTION public.ascii_ansi(c text) OWNER TO postgres;

--
-- Name: chr_ansi(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.chr_ansi(n integer) RETURNS text
    LANGUAGE plpgsql
    AS $$
declare
	c text;
begin
	--------------------------------------------------------
	-- Convierte un número según la codificación ANSI
	-- La función chr sólo funciona para caracteres hasta 127
	-- USO: chr_ansi(137)
	-- RETORNA: Caracter
	--------------------------------------------------------
    If (n=0) Then
    	Raise Exception 'El caracter nulo no está permitido';
    ElseIf (n<128) Then
    	c := chr(n);
    Else
 
        -- Ojo: 160 y 173 son vacíos que reemplacé por espacio.
        c := case n when 128 then '€'
        when 129 then '' when 130 then '‚' when 131 then 'ƒ' when 132 then '„' when 133 then '…' when 134 then '†'
        when 135 then '‡' when 136 then 'ˆ' when 137 then '‰' when 138 then 'Š' when 139 then '‹' when 140 then 'Œ'
        when 141 then '?' when 142 then 'Ž' when 143 then '?' when 144 then '?' when 145 then '‘' when 146 then '’'
        when 147 then '“' when 148 then '”' when 149 then '•' when 150 then '–' when 151 then '—' when 152 then '˜'
        when 153 then '™' when 154 then 'š' when 155 then '›' when 156 then 'œ' when 157 then '?' when 158 then 'ž'
        when 159 then 'Ÿ' when 160 then ' ' when 161 then '¡' when 162 then '¢' when 163 then '£' when 164 then '¤'
        when 165 then '¥' when 166 then '¦' when 167 then '§' when 168 then '¨' when 169 then '©' when 170 then 'ª'
        when 171 then '«' when 172 then '¬' when 173 then ' ' when 174 then '®' when 175 then '¯' when 176 then '°'
        when 177 then '±' when 178 then '²' when 179 then '³' when 180 then '´' when 181 then 'µ' when 182 then '¶'
        when 183 then '·' when 184 then '¸' when 185 then '¹' when 186 then 'º' when 187 then '»' when 188 then '¼'
        when 189 then '½' when 190 then '¾' when 191 then '¿' when 192 then 'À' when 193 then 'Á' when 194 then 'Â'
        when 195 then 'Ã' when 196 then 'Ä' when 197 then 'Å' when 198 then 'Æ' when 199 then 'Ç' when 200 then 'È'
        when 201 then 'É' when 202 then 'Ê' when 203 then 'Ë' when 204 then 'Ì' when 205 then 'Í' when 206 then 'Î'
        when 207 then 'Ï' when 208 then 'Ð' when 209 then 'Ñ' when 210 then 'Ò' when 211 then 'Ó' when 212 then 'Ô'
        when 213 then 'Õ' when 214 then 'Ö' when 215 then '×' when 216 then 'Ø' when 217 then 'Ù' when 218 then 'Ú'
        when 219 then 'Û' when 220 then 'Ü' when 221 then 'Ý' when 222 then 'Þ' when 223 then 'ß' when 224 then 'à'
        when 225 then 'á' when 226 then 'â' when 227 then 'ã' when 228 then 'ä' when 229 then 'å' when 230 then 'æ'
        when 231 then 'ç' when 232 then 'è' when 233 then 'é' when 234 then 'ê' when 235 then 'ë' when 236 then 'ì'
        when 237 then 'í' when 238 then 'î' when 239 then 'ï' when 240 then 'ð' when 241 then 'ñ' when 242 then 'ò'
        when 243 then 'ó' when 244 then 'ô' when 245 then 'õ' when 246 then 'ö' when 247 then '÷' when 248 then 'ø'
        when 249 then 'ù' when 250 then 'ú' when 251 then 'û' when 252 then 'ü' when 253 then 'ý' when 254 then 'þ'
        Else ' ' End;

    End If;

    Return c;

end
$$;


ALTER FUNCTION public.chr_ansi(n integer) OWNER TO postgres;

--
-- Name: iif(boolean, anyelement, anyelement); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.iif(boolean, anyelement, anyelement) RETURNS anyelement
    LANGUAGE sql IMMUTABLE
    AS $_$ SELECT case $1 when true then $2 else $3 end $_$;


ALTER FUNCTION public.iif(boolean, anyelement, anyelement) OWNER TO postgres;

--
-- TOC entry 704 (class 1255 OID 5282569)
-- Name: isvaliddate(character, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.isvaliddate(character, text) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
    result BOOL;
BEGIN
    SELECT TO_CHAR(TO_DATE($1,$2),$2) = $1
    INTO result;
    RETURN result;
END;

$_$;


ALTER FUNCTION public.isvaliddate(character, text) OWNER TO postgres;

--
-- Name: max(numeric, numeric); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.max(numeric, numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $_$
BEGIN
	IF $1 > $2 THEN
    	RETURN $1;
    END IF;
    RETURN $2;
END;
$_$;


ALTER FUNCTION public.max(numeric, numeric) OWNER TO postgres;

--
-- Name: max3(numeric, numeric, numeric); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.max3(numeric, numeric, numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $_$
BEGIN
	IF $1 > $2 and $1 > $3 THEN
    	RETURN $1;
    ELSE
        IF $2 > $1 And $2 > $3 Then
        	RETURN $2;
        ELSE
            RETURN $3;
        END IF;    	    
    END IF;
END;
$_$;


ALTER FUNCTION public.max3(numeric, numeric, numeric) OWNER TO postgres;

--
-- Name: min(numeric, numeric); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.min(numeric, numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $_$
BEGIN
	IF $1 < $2 THEN
    	RETURN $1;
    END IF;
    RETURN $2;
END;
$_$;


ALTER FUNCTION public.min(numeric, numeric) OWNER TO postgres;

--
-- Name: cant(integer, integer, integer, character varying, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.cant(_trib_id integer, _anio integer, _cuota integer, _obj_id character varying, _subcta integer, _liq_id integer) RETURNS TABLE(item_id smallint, item_nom character varying, param1 numeric, param2 numeric, param3 numeric, param4 numeric, item_monto numeric)
    LANGUAGE plpgsql
    AS $$
DECLARE
	vitem_id smallint;
    ctacte_id integer;
    montototal numeric(12,2);
    tobj smallint;
    estobj varchar(1);
    ttrib smallint;
    funcion varchar;
    sql varchar;
    orden smallint;
BEGIN
    item_id = 0; item_nom=''; item_monto:=0;
    param1 = 0; param2 = 0; param3 = 0; param4 = 0; montototal:=0;

	-- 1 - Obtengo los datos principales

    -- a - Datos del Objeto
    Select Into tobj, estobj o.tobj, o.est From objeto o Where o.obj_id=_obj_id;

    -- b - Datos del Tributo
    Select Into ttrib t.tipo From trib t Where t.trib_id=_trib_id;

	-- 3 - Verificar si se trata de un Objeto Exento
	If (estobj = 'E') Then
		Select Into vitem_id min(i.item_id) From item i Where i.trib_id=_trib_id and i.tipo=1;
        Select Into item_nom i.nombre From item i Where i.item_id=vitem_id;
        montototal:=0;
        item_id:=vitem_id;
		Return Next;
	Else -- no es Exento
    	-- 4 - Recupero la lista de items según Tipo de Tributo

	    If (ttrib = 1) Then  -- Emision --> llamar función especifica según Resolución
		    Select Into funcion coalesce(funcion,'') From resol r Where r.trib_id=_trib_id
		      and r.perdesde<=_anio*100+_cuota and r.perhasta>=_anio*1000+_cuota;
        ElseIf (ttrib=2) Then -- Declarativo --> Error
        	RAISE EXCEPTION 'Los Tributos Declarativos no se Emiten';
        ElseIf (ttrib=0 or ttrib=3 or ttrib=4) Then -- Interno/Eventual/Periódico
  			funcion:='uf_emision_manual';
		ElseIf (ttrib=5) Then
            funcion:='uf_emision_itemxobjeto';
 		ElseIf (ttrib=6 or ttrib=7) Then
			RAISE EXCEPTION 'Los Sellados y Boletos no se Emiten';
        End If;

        If (funcion <> '') Then
          sql = 'Select item_id,item_nom,param1,param2,param3,param4,item_monto From sam.';
          sql = sql || funcion || '(' || _trib_id || ',' || _anio || ',' || _cuota || ',';
          sql = sql || chr(39) || _obj_id || chr(39) || ',' || _subcta || ',' || _liq_id || ')';
          vitem_id:=0;
          For vitem_id,item_nom,param1,param2,param3,param4,item_monto In Execute sql Loop
            montototal:=montototal+item_monto;
            item_id:=vitem_id;
            Return Next;
          End Loop;
        End If;

  		-- 6 - Incorporar Item de Fondo si está definido para el tributo
        vitem_id:=0; param1 = 0; param2 = 0; param3 = 0; param4 = 0;
        Select Into vitem_id,item_nom i.item_id,i.nombre From item i Where i.trib_id=_trib_id and i.tipo=7;
        If (vitem_id>0) Then
          item_monto:=sam.uf_item_calcular(vitem_id,_anio,_cuota,montototal, 0, 0, 0);
          If (item_monto <> 0 ) Then
          	  param1:=montototal;
              montototal:= montototal + item_monto;

              Select Into orden coalesce(max(m.orden),0)+1
                from temp.ctacte_liq_manual m Where m.liq_id=_liq_id;
              Delete From temp.ctacte_liq_manual m Where m.liq_id=_liq_id and m.item_id=vitem_id;
              Insert Into temp.ctacte_liq_manual Values (_liq_id,orden,vitem_id,
                param1,param2,param3,param4,item_monto);
			  item_id:=vitem_id;
              Return Next;
          End If;
        End If;

		-- 7 - Incorporar Retenciones si existen
/*
        Select Into vitem_id,item_monto s.item_id,s.saldo From sam.uf_rete_saldo(_obj_id,_trib_id) s;
        If (vitem_id>0 and item_monto>0) Then
          -- Verifico si la retencion supera el monto Total de Emision
          If (item_monto>montototal) Then item_monto:=montototal; End If;
	          Select Into item_nom i.nombre From item i Where i.item_id=vitem_id;
          	  item_monto:=-item_monto;
          	  param1:='';
              montototal:= montototal - item_monto;
              Return Next;
        End If;
*/
  		-- 8 - Incorporar Item de Redondeo si está definido para el tributo
        vitem_id:=0;
        Select Into vitem_id,item_nom i.item_id,i.nombre From item i Where i.trib_id=_trib_id and i.tipo=6;
        If (vitem_id>0) Then
          item_monto:=sam.uf_item_calcular(vitem_id,_anio,_cuota,montototal, 0, 0, 0);
          If (item_monto <> 0 ) Then
          	  param1:=montototal;
              montototal:= montototal + item_monto;

              Select Into orden coalesce(max(m.orden),0)+1
                from temp.ctacte_liq_manual m Where m.liq_id=_liq_id;
              Delete From temp.ctacte_liq_manual m Where m.liq_id=_liq_id and m.item_id=vitem_id;
              Insert Into temp.ctacte_liq_manual Values (_liq_id,orden,vitem_id,
                param1,param2,param3,param4,item_monto);
			  item_id:=vitem_id;
              Return Next;
          End If;
        End If;

  	End If; -- fin If Exento

End
$$;


ALTER FUNCTION sam.cant(_trib_id integer, _anio integer, _cuota integer, _obj_id character varying, _subcta integer, _liq_id integer) OWNER TO postgres;

--
-- TOC entry 709 (class 1255 OID 5282620)
-- Name: fin_tr_part(); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.fin_tr_part() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
Declare
    arrl smallint[9];
    vlargo smallint;
    vniv smallint;
    frt varchar(50);
    aux varchar(50);
Begin
    -- Leo de la configuración
    --raise notice 'anio = % - caracter = %',new.anio,new.caracter;

    For vniv, vlargo In Select c.niv,c.largo From sam.config_fin_part c
    where c.anio = new.anio and c.caracter=new.caracter order by c.niv Loop
        arrl[vniv] = vlargo;
    End Loop;

    frt = case when arrl[1]=0 then cast(new.niv1 as varchar) else lpad(cast(new.niv1 as varchar(5)),arrl[1],'0') end;
    If (new.niv2<>0 or new.niv3<>0) then frt=frt || '.' || case when arrl[2]=0 then cast(new.niv2 as varchar) else lpad(cast(new.niv2 as varchar(5)),arrl[2],'0') end; End If;
    If (new.niv3<>0 or new.niv4<>0) then frt=frt || '.' || case when arrl[3]=0 then cast(new.niv3 as varchar) else lpad(cast(new.niv3 as varchar(5)),arrl[3],'0') end; End If;
    If (new.niv4<>0 or new.niv5<>0) then frt=frt || '.' || case when arrl[4]=0 then cast(new.niv4 as varchar) else lpad(cast(new.niv4 as varchar(5)),arrl[4],'0') end; End If;
    If (new.niv5<>0 or new.niv6<>0) then frt=frt || '.' || case when arrl[5]=0 then cast(new.niv5 as varchar) else lpad(cast(new.niv5 as varchar(5)),arrl[5],'0') end; End If;
    If (new.niv6<>0 or new.niv7<>0) then frt=frt || '.' || case when arrl[6]=0 then cast(new.niv6 as varchar) else lpad(cast(new.niv6 as varchar(5)),arrl[6],'0') end; End If;
    If (new.niv7<>0 or new.niv8<>0) then frt=frt || '.' || case when arrl[7]=0 then cast(new.niv7 as varchar) else lpad(cast(new.niv7 as varchar(5)),arrl[7],'0') end; End If;
    If (new.niv8<>0 or new.niv9<>0) then frt=frt || '.' || case when arrl[8]=0 then cast(new.niv8 as varchar) else lpad(cast(new.niv8 as varchar(5)),arrl[8],'0') end; End If;
    If (new.niv9<>0) then frt=frt || '.' || case when arrl[9]=0 then cast(new.niv9 as varchar) else lpad(cast(new.niv9 as varchar(5)),arrl[9],'0') end; End If;

    aux = cast(new.niv1 as varchar);
    If (new.niv2<>0 or new.niv3<>0) then aux=aux || '.' || cast(new.niv2 as varchar); End If;
    If (new.niv3<>0 or new.niv4<>0) then aux=aux || '.' || cast(new.niv3 as varchar); End If;
    If (new.niv4<>0 or new.niv5<>0) then aux=aux || '.' || cast(new.niv4 as varchar); End If;
    If (new.niv5<>0 or new.niv6<>0) then aux=aux || '.' || cast(new.niv5 as varchar); End If;
    If (new.niv6<>0 or new.niv7<>0) then aux=aux || '.' || cast(new.niv6 as varchar); End If;
    If (new.niv7<>0 or new.niv8<>0) then aux=aux || '.' || cast(new.niv7 as varchar); End If;
    If (new.niv8<>0 or new.niv9<>0) then aux=aux || '.' || cast(new.niv8 as varchar); End If;
    If (new.niv9<>0) then aux=aux || '.' || cast(new.niv9 as varchar); End If;

    new.formato = frt;
    new.formatoaux = aux;
    --raise notice '% - %',new.formato,new.formatoaux;

	RETURN new;
End
$$;


ALTER FUNCTION sam.fin_tr_part() OWNER TO postgres;

--
-- TOC entry 712 (class 1255 OID 5282665)
-- Name: sit_barrios(character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.sit_barrios(_nombre character varying) RETURNS TABLE(cod smallint, nombre character varying)
    LANGUAGE plpgsql
    AS $$
begin
    -- Función que devuelve la lista de barrios que coinciden con los filtros.
    -- Recibe como parámetro el filtro con nombre.

    RETURN QUERY
	Select b.barr_id,b.nombre from domi_barrio b
    Where (_nombre='' OR upper(b.nombre) like '%' || upper(_nombre) || '%');

end
$$;


ALTER FUNCTION sam.sit_barrios(_nombre character varying) OWNER TO postgres;

--
-- TOC entry 713 (class 1255 OID 5282666)
-- Name: sit_calles(character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.sit_calles(_nombre character varying) RETURNS TABLE(cod smallint, nombre character varying)
    LANGUAGE plpgsql
    AS $$
begin
    -- Función que devuelve la lista de calles que coinciden con los filtros.
    -- Recibe como parámetro el filtro con nombre.

    RETURN QUERY
	Select c.calle_id,c.nombre from domi_calle c
    Where (_nombre='' OR upper(c.nombre) like '%' || upper(_nombre) || '%');

end
$$;


ALTER FUNCTION sam.sit_calles(_nombre character varying) OWNER TO postgres;

--
-- TOC entry 714 (class 1255 OID 5282667)
-- Name: sit_inm_avaluo(integer, numeric, numeric, numeric, numeric, numeric, integer, integer, integer, character varying, integer, integer, integer, integer, integer, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.sit_inm_avaluo(_obj_id integer, _supt numeric, _supm numeric, _avalt numeric, _avalm numeric, _frente numeric, _regimen integer, _es_esquina integer, _es_calleppal integer, _zonat character varying, _zonav integer, _zonaop integer, _agua integer, _cloaca integer, _gas integer, _alum integer, _pav integer, _vigencia integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
	vobj_id varchar(8);
    vperant integer;
    vCambioAvaluo boolean;
    resp varchar;
    existe boolean;
    ssql text;

begin
    -- Función que permite dar de baja un inmueble.
    -- Recibe como parámetro el código de objeto y el motivo de baja.

    vobj_id = 'I' || lpad(_obj_id::varchar,7,'0');
    vCambioAvaluo = FALSE;
	resp = 'OK';

	existe=EXISTS(select 1 from objeto o where o.obj_id=vobj_id);

    -- Valido
    -- ------
    If not existe Then
    	resp='ERROR: El inmueble no existe';
    ElseIf not _regimen in (1,2,3) then
    	resp='ERROR: Régimen inválido';
    ElseIf not exists(select 1 from inm_tzonat t where t.cod=_zonat) then
    	resp='ERROR: Zona Tributaria inválida';
    ElseIf _zonav<>0 and not exists(select 1 from inm_tzonav t where t.cod=_zonav) then
    	resp='ERROR: Zona Valuatoria inválida';
    ElseIf not exists(select 1 from domi_tpav t where t.cod=_pav) then
    	resp='ERROR: Tipo de Pavimento inválido';
	ElseIf _regimen=1 and (_supm>0 or _avalm>0) Then
    	resp='ERROR: Régimen Baldío con superficie/avalúo mejora';
	ElseIf _regimen=2 and (_supm=0 or _avalm=0) Then
    	resp='ERROR: Régimen Edificado sin superficie/avalúo mejora';
	End If;


    -- Grabo el inmueble y objeto
    -- --------------------------
    If resp='OK' Then
        -- Actualizo Inm y objeto
        Update Objeto Set vigencia=trunc(_vigencia/1000), fchmod=current_timestamp, usrmod=999
        Where obj_id=vobj_id;

        Update inm Set regimen=_regimen,
        supt=_supt, supm=_supm, avalt=_avalt, avalm=_avalm, frente=_frente,
        es_esquina=_es_esquina, es_calleppal=_es_calleppal,
        zonat=_zonat, zonav=_zonav, zonaop=_zonaop,
        agua=_agua, cloaca=_cloaca, gas=_gas, alum=_alum, pav=_pav
        Where obj_id=vobj_id;

        -- Verifico si hay cambios de Valuación
        Select into vperant coalesce(max(a.PerDesde),0) From Inm_Avaluo a Where a.Obj_Id=vobj_id;

        If exists(Select 1 From inm_avaluo a
        Where a.Obj_Id=vobj_id and a.PerDesde=vPerAnt
        and (_SupT<>a.SupT or _SupM<>a.SupM or _AvalT<>a.AvalT or _AvalM<>a.AvalM or _Regimen<>a.Regimen
        or _Frente<>a.Frente or _es_esquina<>a.es_esquina or _es_calleppal<>a.es_calleppal
        or _ZonaT<>a.ZonaT or _ZonaV <> a.ZonaV or _ZonaOP<>a.ZonaOP
        or _agua<>a.agua or _cloaca<>a.cloaca and _gas<>a.gas and _alum<>a.alum and _pav<>a.pav)) Then

            vCambioAvaluo = True;

        End If;

		-- Actualizo inm_avaluo
        If vcambioavaluo Then
            Perform sam.uf_inm_avaluo_perdesde(vobj_id, _vigencia);
        End If;

	End If;

	Return resp;

end
$$;


ALTER FUNCTION sam.sit_inm_avaluo(_obj_id integer, _supt numeric, _supm numeric, _avalt numeric, _avalm numeric, _frente numeric, _regimen integer, _es_esquina integer, _es_calleppal integer, _zonat character varying, _zonav integer, _zonaop integer, _agua integer, _cloaca integer, _gas integer, _alum integer, _pav integer, _vigencia integer) OWNER TO postgres;

--
-- TOC entry 715 (class 1255 OID 5282668)
-- Name: sit_inm_avaluo_masivo(integer, json); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.sit_inm_avaluo_masivo(_vigencia integer, _valuaciones json) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
    _val json;
    _val_obj_id integer;
    _val_supt numeric;
    _val_supm numeric;
    _val_avalt numeric;
    _val_avalm numeric;
    _val_regimen smallint;
	vobj_id varchar(8);
    vperant integer;
    vCambioAvaluo boolean;
    resp varchar;
    existe boolean;
    ssql text;

begin
    -- Función que permite dar de baja un inmueble.
    -- Recibe como parámetro el código de objeto y el motivo de baja.

    For _val in Select json_array_elements(_valuaciones) Loop
		_val_obj_id = json_extract_path_text(_val,'obj_id');
        _val_supt = json_extract_path_text(_val,'supt');
        _val_supm = json_extract_path_text(_val,'supm');
        _val_avalt = json_extract_path_text(_val,'avalt');
        _val_avalm = json_extract_path_text(_val,'avalm');
        _val_regimen = json_extract_path_text(_val,'regimen');


        vobj_id = 'I' || lpad(_val_obj_id::varchar,7,'0');
        vCambioAvaluo = FALSE;
        resp = 'OK';

        existe=EXISTS(select 1 from objeto o where o.obj_id=vobj_id);


        -- Valido
        -- ------
        If not existe Then
            resp='ERROR: El inmueble no existe';
        ElseIf not _val_regimen in (1,2,3) then
            resp='ERROR: Régimen inválido';
        ElseIf _val_regimen=1 and (_val_supm>0 or _val_avalm>0) Then
            resp='ERROR: Régimen Baldío con superficie/avalúo mejora';
        ElseIf _val_regimen=2 and (_val_supm=0 or _val_avalm=0) Then
            resp='ERROR: Régimen Edificado sin superficie/avalúo mejora';
        End If;


        -- Grabo el inmueble y objeto
        -- --------------------------
        If resp='OK' Then
            -- Actualizo Inm y objeto
            Update Objeto Set vigencia=trunc(_vigencia/1000), fchmod=current_timestamp, usrmod=999
            Where obj_id=vobj_id;

            Update inm Set regimen=_val_regimen,
            supt=_val_supt, supm=_val_supm, avalt=_val_supt, avalm=_val_supm
            Where obj_id=vobj_id;

            -- Verifico si hay cambios de Valuación
            Select into vperant coalesce(max(a.PerDesde),0) From Inm_Avaluo a Where a.Obj_Id=vobj_id;

            If exists(Select 1 From inm_avaluo a
            Where a.Obj_Id=vobj_id and a.PerDesde=vPerAnt
            and (_val_supt<>a.SupT or _val_supm<>a.SupM or _val_supt<>a.AvalT or _val_supm<>a.AvalM or _val_regimen<>a.Regimen)) Then

                vCambioAvaluo = True;

            End If;

            -- Actualizo inm_avaluo
            If vcambioavaluo Then
                Perform sam.uf_inm_avaluo_perdesde(vobj_id, _vigencia);
            End If;

        End If;

	End Loop;

	Return resp;

end
$$;


ALTER FUNCTION sam.sit_inm_avaluo_masivo(_vigencia integer, _valuaciones json) OWNER TO postgres;

--
-- TOC entry 716 (class 1255 OID 5282669)
-- Name: sit_inm_baja(integer, character varying, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.sit_inm_baja(_obj_id integer, _motivo character varying, _fchbaja date) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
	vobj_id varchar(8);
    resp varchar;
	perhasta integer;
    vctacte_id integer;
    vorden integer;

begin
    -- Función que permite dar de baja un inmueble.
    -- Recibe como parámetro el código de objeto y el motivo de baja.

    vobj_id = 'I' || lpad(_obj_id::varchar,7,'0');
	resp = sam.sit_inm_baja_pedido(_obj_id);

    -- Verifico que no tenga deuda:
    If resp='OK' then -- No existe deuda ni está de baja

        -- Verifico si existen liquidaciones posteriores a la fecha de baja y si está adherido al débito
        select into perhasta
        extract(year from current_date) * 1000 + max(cuota) from trib_venc v
        where v.trib_id = 21 and v.anio=extract(year from _fchbaja) and v.fchvenc1<_fchbaja;

        For vctacte_id IN Select ctacte_id From Ctacte
        Where trib_id=21 and obj_id=vobj_id and Est='D' and anio*1000+cuota > perhasta Loop

            Perform sam.uf_emision_borrar(vctacte_id,999,'B','Objeto de Baja con fecha anterior al período');

        End Loop;


        -- Si existen adhesiones al débito, las elimino
        Update debito_adhe set est= 'B' where obj_id=vObj_id;


		-- Genero la nueva acción (DESPUËS)
	    -- NuevaAccion(vObj_id As String, vEst As String, 2 as taccion,current_date, ....
        Select into vorden coalesce(max(orden),0)+1 from objeto_accion a Where a.obj_id=vobj_id;

        Insert Into objeto_accion
        Values (vObj_id,vorden,2,_fchbaja,null,null,'','','','','A',CURRENT_TIMESTAMP,9999);

        Update Objeto o
        Set est='B', fchbaja=_fchbaja, usrbaja=999, Obs= Obs || ' - ' || _motivo
        Where Obj_id=vObj_Id ;

		Perform sam.uf_inm_cambio(vObj_id,0,'B');

    End If;

	Return resp;

end
$$;


ALTER FUNCTION sam.sit_inm_baja(_obj_id integer, _motivo character varying, _fchbaja date) OWNER TO postgres;

--
-- TOC entry 718 (class 1255 OID 5282670)
-- Name: sit_inm_baja_pedido(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.sit_inm_baja_pedido(_obj_id integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
	vobj_id varchar(8);
    deuda smallint;
    resp varchar;
    trib_id smallint;
    perdesde integer;
    perhasta integer;
    prescrip smallint;
    est varchar(1);

begin
    -- Función que permite dar de baja un inmueble.
    -- Recibe como parámetro el código de objeto y el motivo de baja.

    vobj_id = 'I' || lpad(_obj_id::varchar,7,'0');
	resp = 'OK';

	-- Me fijo si existe
    If not Exists(select 1 from inm i where i.obj_id=vobj_id) Then

    	resp = 'ERROR: El Inmueble no existe';

    else

        -- Verifico la deuda
        select into trib_id,prescrip  min(t.trib_id),min(t.prescrip)
        from trib t where t.tobj=1 and t.tipo=1 and t.est='A';

        perdesde = extract(year from current_date) - prescrip * 1000;

        select into perhasta
        extract(year from current_date) * 1000 + max(v.cuota) from trib_venc v
        where v.trib_id = 21 and v.anio=extract(year from current_date) and v.fchvenc1<current_date;


        -- Verifico que no tenga deuda:
        -- 1. existe deuda / -1.Buen Pagador / 0.Pagos fuera de término
        deuda = sam.uf_ctacte_existedeuda(vobj_id,perdesde,perhasta);
        If (deuda = 1) then -- existe deuda
            resp='ERROR: Existe Deuda';
        Else
            Select into est o.est from objeto o where o.obj_id=vObj_id;

            If est='B' Then -- Ya fue dado de baja
                resp = 'ERROR: El inmueble ya fue dado de baja';
            End If;
        End If;
	End If;

	Return resp;

end
$$;


ALTER FUNCTION sam.sit_inm_baja_pedido(_obj_id integer) OWNER TO postgres;

--
-- TOC entry 719 (class 1255 OID 5282671)
-- Name: sit_inm_modifica(character varying, integer, character varying, character varying, character varying, character varying, character varying, integer, numeric, integer, integer, integer, integer, character varying, integer, character varying, character varying, integer, character varying, character varying, date, numeric, numeric, numeric, numeric, numeric, numeric, integer, integer, character varying, integer, integer, integer, integer, integer, integer, integer, integer, integer, character varying, integer, character varying, character varying, character varying, json, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.sit_inm_modifica(_accion character varying, _obj_id integer, _s1 character varying, _s2 character varying, _s3 character varying, _manz character varying, _parc character varying, _uf integer, _porcuf numeric, _parp integer, _parporigen integer, _plano integer, _anio_mensura integer, _urbsub character varying, _regimen integer, _tipo character varying, _titularidad character varying, _uso integer, _tmatric character varying, _matric character varying, _fchmatric date, _supt numeric, _supm numeric, _avalt numeric, _avalm numeric, _frente numeric, _fondo numeric, _es_esquina integer, _es_calleppal integer, _zonat character varying, _zonav integer, _zonaop integer, _agua integer, _cloaca integer, _gas integer, _alum integer, _pav integer, _barr_id integer, _calle_id integer, _calle_nom character varying, _puerta integer, _piso character varying, _dpto character varying, _det character varying, _titulares json, _vigencia integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
	vobj_id varchar(8);
    vObj_Dato varchar;
    vNC varchar;
    vnum varchar(8);
    vnombre varchar(50);
    vfchalta date;
    vperant integer;
    vCambioAvaluo boolean;
    _tit_tipo smallint;
    _tit_num varchar(8);
    _tit_porc numeric(7,4);
    _tit json;
    maxporc numeric(7,4);
    sumaporc numeric(7,4);
    resp varchar;
    existe boolean;
    ssql text;

begin
    -- Función que permite dar de baja un inmueble.
    -- Recibe como parámetro el código de objeto y el motivo de baja.

    vobj_id = 'I' || lpad(_obj_id::varchar,7,'0');
    vCambioAvaluo = FALSE;
	resp = 'OK';

	existe=EXISTS(select 1 from objeto o where o.obj_id=vobj_id);

    -- Valido
    -- ------
    If _accion='N' and existe Then
    	resp='ERROR: El inmueble  ya existe';
    ElseIf _accion='M' and not existe Then
    	resp='ERROR: El inmueble no existe';
    ElseIf not exists(select 1 from inm_turbsub t where t.cod=_urbsub) then
    	resp='ERROR: Tipo Urb-Sub inválido';
    ElseIf not _regimen in (1,2,3) then
    	resp='ERROR: Régimen inválido';
    ElseIf not exists(select 1 from inm_tipo t where t.cod=_tipo) then
    	resp='ERROR: Tipo de inmueble inválido';
    ElseIf not exists(select 1 from inm_ttitularidad t where t.cod=_titularidad) then
    	resp='ERROR: Titularidad inválida';
    ElseIf not exists(select 1 from inm_tmatric t where t.cod=_tmatric) then
    	resp='ERROR: Tipo de Matrícula inválido';
    ElseIf not exists(select 1 from inm_tzonat t where t.cod=_zonat) then
    	resp='ERROR: Zona Tributaria inválida';
    ElseIf _zonav<>0 and not exists(select 1 from inm_tzonav t where t.cod=_zonav) then
    	resp='ERROR: Zona Valuatoria inválida';
    ElseIf not exists(select 1 from domi_tpav t where t.cod=_pav) then
    	resp='ERROR: Tipo de Pavimento inválido';
	ElseIf _regimen=1 and (_supm>0 or _avalm>0) Then
    	resp='ERROR: Régimen Baldío con superficie/avalúo mejora';
	ElseIf _regimen=2 and (_supm=0 or _avalm=0) Then
    	resp='ERROR: Régimen Edificado sin superficie/avalúo mejora';
	--ElseIf _parp>0 and exists(select 1 from inm i where i.obj_id<>vobj_id and i.parp=_parp) Then
    --	resp='ERROR: La partida provincial ya existe';
	ElseIf exists(select 1 from inm i where i.obj_id<>vobj_id and i.nc=sam.uf_inm_armar_nc(_s1,_s2,_s3,_manz,_parc)) Then
    	resp='ERROR: La Nomenclatura ya existe';
	End If;


	-- Obtengo datos faltantes
	-- -----------------------
    vObj_Dato= sam.uf_inm_armar_nc_guiones(_s1,_s2,_s3,_manz,_parc);
	vNC = sam.uf_inm_armar_nc(_s1,_s2,_s3,_manz,_parc);
    vfchalta = current_date;
    vnum = '';


	-- GrabarContri
	-- ------------
    sumaporc = 0;
    maxporc = 0;
    maxporc = 0;
    For _tit in Select json_array_elements(_titulares) Loop
		_tit_num = json_extract_path_text(_tit,'num');
        _tit_tipo = json_extract_path_text(_tit,'tipo');
        _tit_porc = json_extract_path_text(_tit,'porc');

		If _tit_tipo in (1,4) Then
        	sumaporc = sumaporc + _tit_porc;

            If _tit_porc>maxporc Then
            	maxporc = _tit_porc;
                vnum = _tit_num;
            End If;
        End If;
	End Loop;

    -- controlo porcentajes totales
    If sumaPorc < 99 Or sumaPorc > 101 Then
        resp = 'Los porcentajes de titularidad son incorrectos.';
    Else

        --Borro todos los vinculos
        Delete From objeto_persona Where obj_id=vObj_id;

        For _tit in Select json_array_elements(_titulares) Loop
            _tit_num = json_extract_path_text(_tit,'num');
            _tit_tipo = json_extract_path_text(_tit,'tipo');
            _tit_porc = json_extract_path_text(_tit,'porc');

            Insert into objeto_persona values (vobj_id, _tit_num, 1, _tit_tipo, _tit_porc, 'A', current_timestamp, 999);
        End Loop;
    End If;

    Select into vnombre p.nombre from objeto p where p.obj_id=vnum;


    -- Grabo el inmueble y objeto
    -- --------------------------
    If resp='OK' Then
        if _accion='N' Then
        	-- Inserto inm y objeto
            Insert Into objeto Values (vobj_id, 1, vnum, vnombre, vobj_dato, 'A', 0, 0, '', '',
            trunc(_vigencia/1000), '',vfchalta,999,null,0,0,current_timestamp,999);

            Insert Into inm Values (vobj_id, vNC, _s1, _s2, _s3, _manz, _parc, _uf, _porcuf,
            _parp, _parporigen, _plano, _anio_mensura, '',
            _urbsub, _regimen, _tipo, _titularidad, _uso, _tmatric, _matric, _fchmatric,
            0, '', _supt, 0, _supm, _avalt, _avalm, _frente, _fondo,
            _es_esquina, _es_calleppal, _zonat, _zonav, _zonaop,
            _agua, _cloaca, _gas, _alum, _pav, 0.00, 0.00,
            _barr_id, null, '');

			-- inserto los domicilios
            Insert into domi values ('INM',vobj_id,0,660,9200,
            _calle_id,_calle_nom,_puerta,_det,_piso,_dpto,current_timestamp,999);

            Insert into domi values ('OBJ',vobj_id,0,660,9200,
            _calle_id,_calle_nom,_puerta,_det,_piso,_dpto,current_timestamp,999);

			vCambioAvaluo = True;

        Else
			-- Actualizo Inm y objeto
            Update Objeto Set NUM=vnum,Nombre=vnombre, obj_dato=vobj_dato,
            vigencia=trunc(_vigencia/1000), fchmod=current_timestamp, usrmod=999
            Where obj_id=vobj_id;

        	Update inm Set nc=vnc, s1=_s1, s2=_s2, s3=_s3, manz=_manz, parc=_parc, uf=_uf, porcuf=_porcuf,
            parp=_parp, parporigen=_parporigen, plano=_plano, anio_mensura=_anio_mensura,
            urbsub=_urbsub, regimen=_regimen, tinm=_tipo, titularidad=_titularidad, uso=_uso,
            tmatric=_tmatric, matric=_matric, fchmatric=_fchmatric,
            supt=_supt, supm=_supm, avalt=_avalt, avalm=_avalm, frente=_frente, fondo=_fondo,
            es_esquina=_es_esquina, es_calleppal=_es_calleppal,
            zonat=_zonat, zonav=_zonav, zonaop=_zonaop,
            agua=_agua, cloaca=_cloaca, gas=_gas, alum=_alum, pav=_pav, barr_id=_barr_id
            Where obj_id=vobj_id;

			-- Si cambia el domicilio ...
            If not exists(Select 1 From domi Where Torigen='INM' and obj_id=vObj_id) Then
                Insert into domi values ('INM',vobj_id,0,660,9200,
                _barr_id,_calle_id,_calle_nom,_puerta,_det,_piso,_dpto,current_timestamp,999);
            Else
                Update domi Set barr_id=_barr_id, calle_id=_calle_id,
                nomcalle=_calle_nom, puerta=_puerta, det=_det, piso=_piso, dpto=_dpto,
                fchmod=current_timestamp, usrmod=999
                Where TOrigen='INM' and obj_id=vobj_id;
            End If;


            -- Verifico si hay cambios de Valuación
            Select into vperant coalesce(max(a.PerDesde),0) From Inm_Avaluo a Where a.Obj_Id=vobj_id;

            If exists(Select 1 From inm_avaluo a
            Where a.Obj_Id=vobj_id and a.PerDesde=vPerAnt
            and (_SupT<>a.SupT or _SupM<>a.SupM or _AvalT<>a.AvalT or _AvalM<>a.AvalM or _Regimen<>a.Regimen
            or _Frente<>a.Frente or _es_esquina<>a.es_esquina or _es_calleppal<>a.es_calleppal
            or _ZonaT<>a.ZonaT or _ZonaV <> a.ZonaV or _ZonaOP<>a.ZonaOP
            or _agua<>a.agua or _cloaca<>a.cloaca and _gas<>a.gas and _alum<>a.alum and _pav<>a.pav)) Then

                vCambioAvaluo = True;

            End If;

        End If;

		-- Actualizo inm_avaluo
        If vcambioavaluo Then
            Perform sam.uf_inm_avaluo_perdesde(vobj_id, _vigencia);
        End If;

	End If;

	Return resp;

end
$$;


ALTER FUNCTION sam.sit_inm_modifica(_accion character varying, _obj_id integer, _s1 character varying, _s2 character varying, _s3 character varying, _manz character varying, _parc character varying, _uf integer, _porcuf numeric, _parp integer, _parporigen integer, _plano integer, _anio_mensura integer, _urbsub character varying, _regimen integer, _tipo character varying, _titularidad character varying, _uso integer, _tmatric character varying, _matric character varying, _fchmatric date, _supt numeric, _supm numeric, _avalt numeric, _avalm numeric, _frente numeric, _fondo numeric, _es_esquina integer, _es_calleppal integer, _zonat character varying, _zonav integer, _zonaop integer, _agua integer, _cloaca integer, _gas integer, _alum integer, _pav integer, _barr_id integer, _calle_id integer, _calle_nom character varying, _puerta integer, _piso character varying, _dpto character varying, _det character varying, _titulares json, _vigencia integer) OWNER TO postgres;

--
-- TOC entry 720 (class 1255 OID 5282673)
-- Name: sit_inm_revalua(integer, integer, numeric, numeric, numeric, numeric, numeric, numeric, integer, integer, character varying, integer, integer, integer, integer, integer, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.sit_inm_revalua(_obj_id integer, _regimen integer, _supt numeric, _supm numeric, _avalt numeric, _avalm numeric, _frente numeric, _fondo numeric, _es_esquina integer, _es_calleppal integer, _zonat character varying, _zonav integer, _zonaop integer, _agua integer, _cloaca integer, _gas integer, _alum integer, _pav integer, _vigencia integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
	vobj_id varchar(8);
    vObj_Dato varchar;
    vnum varchar(8);
    vnombre varchar(50);
    vfchalta date;
    vperant integer;
    vCambioAvaluo boolean;
    _tit_tipo smallint;
    _tit_num varchar(8);
    _tit_porc numeric(7,4);
    _tit json;
    maxporc numeric(7,4);
    sumaporc numeric(7,4);
    resp varchar;
    existe boolean;
    ssql text;

begin
    -- Función que permite dar de baja un inmueble.
    -- Recibe como parámetro el código de objeto y el motivo de baja.

    vobj_id = 'I' || lpad(_obj_id::varchar,7,'0');
    vCambioAvaluo = FALSE;
	resp = 'OK';

	existe=EXISTS(select 1 from objeto o where o.obj_id=vobj_id);

    -- Valido
    -- ------
    If not existe Then
    	resp='ERROR: El inmueble no existe';
    ElseIf not exists(select 1 from inm_tzonat t where t.cod=_zonat) then
    	resp='ERROR: Zona Tributaria inválida';
    ElseIf _zonav<>0 and not exists(select 1 from inm_tzonav t where t.cod=_zonav) then
    	resp='ERROR: Zona Valuatoria inválida';
    ElseIf not exists(select 1 from domi_tpav t where t.cod=_pav) then
    	resp='ERROR: Tipo de Pavimento inválido';
	ElseIf _regimen=1 and (_supm>0 or _avalm>0) Then
    	resp='ERROR: Régimen Baldío con superficie/avalúo mejora';
	ElseIf _regimen=2 and (_supm=0 or _avalm=0) Then
    	resp='ERROR: Régimen Edificado sin superficie/avalúo mejora';
	End If;


    -- Grabo el inmueble y objeto
    -- --------------------------
    If resp='OK' Then

        Update Objeto Set vigencia=trunc(_vigencia/1000), fchmod=current_timestamp, usrmod=999
        Where obj_id=vobj_id;

        Update inm Set regimen=_regimen,
        supt=_supt, supm=_supm, avalt=_avalt, avalm=_avalm, frente=_frente, fondo=_fondo,
        es_esquina=_es_esquina, es_calleppal=_es_calleppal,
        zonat=_zonat, zonav=_zonav, zonaop=_zonaop,
        agua=_agua, cloaca=_cloaca, gas=_gas, alum=_alum, pav=_pav
        Where obj_id=vobj_id;


        -- Verifico si hay cambios de Valuación
        Select into vperant coalesce(max(a.PerDesde),0) From Inm_Avaluo a Where a.Obj_Id=vobj_id;

        If exists(Select 1 From inm_avaluo a
        Where a.Obj_Id=vobj_id and a.PerDesde=vPerAnt
        and (_SupT<>a.SupT or _SupM<>a.SupM or _AvalT<>a.AvalT or _AvalM<>a.AvalM or _Regimen<>a.Regimen
        or _Frente<>a.Frente or _es_esquina<>a.es_esquina or _es_calleppal<>a.es_calleppal
        or _ZonaT<>a.ZonaT or _ZonaV <> a.ZonaV or _ZonaOP<>a.ZonaOP
        or _agua<>a.agua or _cloaca<>a.cloaca and _gas<>a.gas and _alum<>a.alum and _pav<>a.pav)) Then

            vCambioAvaluo = True;

        End If;

		-- Actualizo inm_avaluo
        If vcambioavaluo Then
            Perform sam.uf_inm_avaluo_perdesde(vobj_id, _vigencia);
        End If;

	End If;

	Return resp;

end
$$;


ALTER FUNCTION sam.sit_inm_revalua(_obj_id integer, _regimen integer, _supt numeric, _supm numeric, _avalt numeric, _avalm numeric, _frente numeric, _fondo numeric, _es_esquina integer, _es_calleppal integer, _zonat character varying, _zonav integer, _zonaop integer, _agua integer, _cloaca integer, _gas integer, _alum integer, _pav integer, _vigencia integer) OWNER TO postgres;

--
-- TOC entry 721 (class 1255 OID 5282674)
-- Name: sit_personas(character varying, integer, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.sit_personas(_nombre character varying, _doc integer, _cuit character varying) RETURNS TABLE(num character varying, nombre character varying, tdoc character varying, ndoc bigint, cuit character varying, domi text, tel character varying, cel character varying, mail character varying)
    LANGUAGE plpgsql
    AS $$
begin
    -- Función que devuelve la lista de personas que coinciden con los filtros.
    -- Recibe como parámetro tres filtros: nombre, doc y cuit.

    RETURN QUERY
	Select p.num,p.nombre,p.tdoc_nom,p.ndoc,p.cuit,p.dompos_dir,p.tel,p.cel,p.mail
    from v_persona p
    Where (_nombre='' OR upper(p.nombre) like '%' || upper(_nombre) || '%')
    AND (_doc=0 OR p.ndoc=_doc)
    AND (_cuit='' OR p.cuit=_cuit);

end
$$;


ALTER FUNCTION sam.sit_personas(_nombre character varying, _doc integer, _cuit character varying) OWNER TO postgres;

--
-- TOC entry 722 (class 1255 OID 5282675)
-- Name: sit_tipoinm(); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.sit_tipoinm() RETURNS TABLE(cod character varying, nombre character varying)
    LANGUAGE plpgsql
    AS $$
begin
    -- Función que devuelve la lista de zonas tributarias.

    RETURN QUERY
	Select t.cod,t.nombre from inm_tipo t;

end
$$;


ALTER FUNCTION sam.sit_tipoinm() OWNER TO postgres;

--
-- TOC entry 723 (class 1255 OID 5282676)
-- Name: sit_zonast(); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.sit_zonast() RETURNS TABLE(cod character varying, nombre character varying)
    LANGUAGE plpgsql
    AS $$
begin
    -- Función que devuelve la lista de zonas tributarias.

    RETURN QUERY
	Select z.cod,z.nombre from inm_tzonat z;

end
$$;


ALTER FUNCTION sam.sit_zonast() OWNER TO postgres;

--
-- TOC entry 724 (class 1255 OID 5282677)
-- Name: uf_banco_cbu_valida(character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_banco_cbu_valida(_cbu character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $_$
declare
	resp varchar;
    ent smallint;
    suc smallint;
    c SMALLINT[];
    suma1 smallint;
    suma2 smallint;
    dif1 smallint;
    dif2 smallint;
begin
	-- Devuelve información básica de una actividad ya sea central o de un proyecto
	resp := '';
    
    -- Verifico la longitud
    _cbu = trim(_cbu);
    if length(_cbu)<>22 Then
    	resp = 'Longitud del CBU incorrecta';
    ElseIf NOT textregexeq(_cbu,'^[[:digit:]]+(\.[[:digit:]]+)?$') Then
    	resp = 'El CBU contiene caracteres no numéricos';
    Else 
        ent := substr(_cbu,1,3)::smallint;
        suc := substr(_cbu,4,4)::smallint;

        -- Verifico Entidad y sucursal
        If Not EXISTS(select 1 from banco_entidad e where e.bco_ent=ent) Then
            resp = 'Código de Entidad Bancaria inexistente según registros';
        ElseIf Not EXISTS(select 1 from banco s where s.bco_ent=ent and s.bco_suc=suc) Then
            resp = 'Código de Sucursal Bancaria inexistente según registros';
        Else

        	-- Valido los Dígitos Validadores
        	c = regexp_split_to_array(_cbu, '');
            suma1 := c[1]*7 + c[2]*1 + c[3]*3 + c[4]*9 + c[5]*7 + c[6]*1 + c[7]*3;
            dif1 := 10 - (suma1-trunc(suma1::numeric/10)*10);
            dif1 := case dif1 when 10 then 0 else dif1 end;
            
            If dif1 <> c[8] Then 
            	resp := 'Dígito Verificador del primer bloque incorrecto';
            Else
            	suma2 := c[9]*3 + c[10]*9 + c[11]*7 + c[12]*1 + c[13]*3 + c[14]*9 + c[15]*7 + 
                         c[16]*1 + c[17]*3 + c[18]*9 + c[19]*7 + c[20]*1 + c[21]*3;
                dif2 := 10 - (suma2-trunc(suma2::numeric/10)*10);
                dif2 := case dif2 when 10 then 0 else dif2 end;
                
                If dif2 <> c[22] Then
                	resp := 'Dígito Verificador del segundo bloque incorrecto';
                End If;
            End If;
        
        End If;
	End If;
        
    
    Return resp;
     
End
$_$;


ALTER FUNCTION sam.uf_banco_cbu_valida(_cbu character varying) OWNER TO postgres;

--
-- TOC entry 967 (class 1255 OID 5282678)
-- Name: uf_caja(character varying, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja(_codbarra character varying, _externa integer) RETURNS TABLE(ctacte_id integer, trib_id smallint, trib_nom character varying, trib_tipo smallint, obj_id character varying, subcta smallint, anio integer, cuota smallint, faci_id integer, num character varying, fchvenc timestamp without time zone, monto numeric, anual smallint)
    LANGUAGE plpgsql
    AS $_$
declare
    ttrib smallint;
    trib_faci smallint;
    vest char(1);
    est_nom varchar(20);
    valdia smallint;
    vcant smallint;
    cuota_cons smallint;
    error varchar(50);
    pos smallint;
    verifdebito smallint;
    excep smallint;
    vtrib_id smallint;
    vobj_id varchar;
    vsubcta smallint;
    vanio integer;
    vcuota smallint;
    vctacte_id integer;
    vsemestre smallint;
    vvigencia date;
begin
    -- Procedimiento que recupera los datos de la cabecera de un ticket de caja

    -- Verifico que sea una expresión válida: todos dígitos ó F9999 ó C999-999
    If not textregexeq(_codbarra,'^([FfCcPpAa[:digit:]])+(\-[[:digit:]]+)?$') Then
        Raise Exception 'Formato inválido del código de barra';
    End If;

    faci_id:=0; anual := 0;  trib_tipo := 0; excep := 0; vSemestre= 0;

    -- Recupero la configuracion para debito
    Select Into verifdebito c.cajaverifdebito From sam.config c;

    If (length(_codbarra)=42) Then

        -- si es de 42 dígitos tengo que desarmar el código de barra
        Select Into trib_id, obj_id, subcta, anio, cuota
        b.trib_id, b.obj_id, b.subcta, b.anio, b.cuota
        From sam.uf_caja_codbarra_det(_codbarra) b;

        -- Si es trib_id=10 ==> Pago a Cuenta: no leo de ctacte
        If (trib_id=10) Then
            vanio = anio;
            Select Into trib_nom, trib_tipo, num, fchvenc, vest, ctacte_id -- anio-cuota de pagocta
            t.nombre_redu, t.tipo, o.num, p.fchlimite, p.est, coalesce(c.ctacte_id, 0)
            From ctacte_pagocta p
            Inner Join objeto o on p.obj_id=o.obj_id
            Inner Join trib t on p.trib_id = t.trib_id
            left join ctacte c on p.trib_id=c.trib_id and p.obj_id=c.obj_id and p.subcta=c.subcta and p.anio=c.anio and p.cuota=c.cuota
            Where p.pago_id=vanio;

        elseif (trib_id=2) then -- es Facilidad
            select into trib_faci,trib_nom,trib_tipo,num,fchvenc,vest,ctacte_id,faci_id
            f.trib_id,t.nombre_redu,t.tipo,o.num,f.fchvenc,f.est,0,f.faci_id
            from facilida f
            inner join objeto o on f.obj_id=o.obj_id
            inner join trib t on f.trib_id=t.trib_id
            where f.faci_id=anio;

        Else    --No es pago a cuenta ni facilidad

            -- Verifico si corresponde Pago Anual
            If (cuota=0 and not trib_id in (1,2)) Then
                vtrib_id = trib_id;
                vobj_id = obj_id;
                vsubcta = subcta;
                vanio = anio;

                -- Consultar si el período anual existe
                Select Into vcant coalesce(count(*),0) From ctacte c
                Where c.trib_id=vtrib_id and c.obj_id=vobj_id and c.subcta=vsubcta and c.anio=vanio and c.cuota=0;

                If (NOT FOUND or vcant=0) Then -- El periodo anual no existe
                    anual := 1;
                    -- si es cuota=0 ==> anual, tomo cuota=1
                    cuota_cons := case when cuota=0 and not trib_id in (1,2,12) then 1 else cuota end;
                Else
                    cuota_cons = 0; -- Como existe PerAnual, consulto directamente por anual
                End If;
            Else
                If (cuota in (61,62,63,64) and trib_id not in (1,3)) Then
                    cuota_cons := (cuota-60)*3-2;
                    anual:=6;
                    vsemestre:=1;
                Else
                    cuota_cons := cuota;
                End If;
            End If;

            vtrib_id = trib_id;
            vobj_id = obj_id;
            vsubcta = subcta;
            vanio = anio;
            Select Into ctacte_id, trib_nom, num, fchvenc, vest
            c.ctacte_id, t.nombre_redu, o.num, c.fchvenc, c.est
            From ctacte c
            Left Join objeto o on c.obj_id=o.obj_id
            Inner Join trib t on c.trib_id = t.trib_id
            Where c.trib_id=vtrib_id and c.obj_id=vobj_id and c.subcta=vsubcta and c.anio=vanio and c.cuota=cuota_cons;

            If (ctacte_id is null) Then
                Raise Exception 'Datos inexistentes';
            End If;
        End If;
    ElseIf upper(substr(_codbarra,1,2)) in ('FC','FB') Then -- Código de Barra Sist.Patacom

        Select Into ctacte_id, trib_id, trib_nom, trib_tipo, obj_id, subcta, anio, cuota, num, fchvenc, vest, ttrib
        c.ctacte_id, c.trib_id, t.nombre_redu, t.tipo, c.obj_id, c.subcta, c.anio, c.cuota, o.num, c.fchvenc, c.est, t.tipo
        From ctacte c
        left Join objeto o on c.obj_id = o.obj_id
        Inner Join trib t on c.trib_id = t.trib_id
        Where c.expe = substr(_codbarra,2,13);

        If not FOUND Then
            Raise Exception 'Código de barra incorrecto';
        End If;

    ElseIf upper(substr(_codbarra,1,1))='C' Then -- Código Especial para Higiene

        -- Si empieza con C, indica que es un comercio, de la forma C9999-AAAADD
        pos := position('-' in _codbarra);
        if (pos=0 or length(_codbarra)-pos<>6) Then
            Raise Exception 'Código incorrecto para comercio (Ejm: C9999-AAAADD)';
        End If;

        trib_id := 22;
        trib_tipo := 2;
        obj_id := 'C' || lpad(substr(_codbarra,2,pos-2),7,'0');
        subcta := 0;
        anio := cast(substr(_codbarra,pos+1,4) as integer);
        cuota := cast(substr(_codbarra,pos+5,2) as integer);

        vtrib_id = trib_id;
        vobj_id = obj_id;
        vsubcta = subcta;
        vanio = anio;
        vcuota = cuota;

        Select Into ctacte_id, trib_nom, num, fchvenc, vest
        c.ctacte_id, t.nombre_redu, o.num, c.fchvenc, c.est
        From ctacte c
        Inner Join objeto o on c.obj_id=o.obj_id
        Inner Join trib t on c.trib_id = t.trib_id
        Where c.trib_id=vtrib_id and c.obj_id=vobj_id and c.subcta=vsubcta and c.anio=vanio and c.cuota=vcuota;

        If (ctacte_id is null) Then
            Raise Exception 'Datos inexistentes';
        End If;

    ElseIf upper(substr(_codbarra,1,1))='F' Then -- Código Especial para Facilidades

        -- Si empieza con F/f, indica que es una facilidad F123 ó f123 ==> Indica el código de facilidad 123
        If textregexeq(substring(_codbarra,2,length(_codbarra)),'^[[:digit:]]+([[:digit:]]+)?$') Then

            anio := substring(_codbarra,2,length(_codbarra))::integer;
            trib_id := 2;
            cuota := 0;
            subcta := 0;

            Select into trib_faci,trib_nom,trib_tipo,num,fchvenc,vest,ctacte_id,faci_id,obj_id
            f.trib_id,t.nombre_redu,t.tipo,o.num,f.fchvenc,f.est,0,f.faci_id,f.obj_id
            from facilida f
            inner join objeto o on f.obj_id=o.obj_id
            inner join trib t on f.trib_id=t.trib_id
            where f.faci_id=anio;

        End If;

        If (ctacte_id is null) Then
            Raise Exception 'Datos inexistentes';
        End If;

    ElseIf upper(substr(_codbarra,1,1))='P' Then -- Código Especial para Pago a Cuenta

        -- Si empieza con P/p, indica que es un Pago a Cuenta P123 o p123 ==> Infica el codigo de pago_id = 123
        if textregexeq(substring(_codbarra,2,length(_codbarra)),'^[[:digit:]]+([[:digit:]]+)?$') Then

            anio := substring(_codbarra,2,length(_codbarra))::integer;
            vanio = anio;
            trib_id := 10;
            cuota := 0;
            subcta := 0;

            Select Into trib_nom, trib_tipo, obj_id, num, fchvenc, vest, ctacte_id -- anio-cuota de pagocta
            t.nombre_redu, t.tipo, p.obj_id, o.num, p.fchlimite, p.est, coalesce(c.ctacte_id, 0)
            From ctacte_pagocta p
            Inner Join objeto o on p.obj_id=o.obj_id
            Inner Join trib t on p.trib_id = t.trib_id
            left join ctacte c on p.trib_id=c.trib_id and p.obj_id=c.obj_id and p.subcta=c.subcta and p.anio=c.anio and p.cuota=c.cuota
            Where p.pago_id=vanio;

        End If;

        If (ctacte_id is null) Then
            Raise Exception 'Datos inexistentes';
        End If;

    ElseIf upper(substr(_codbarra,1,1))='A' Then -- Código Especial para Pago Anual

        -- Si empieza con A/a, indica que es un Pago Anual de la forma "A" + ctacte_id_cuota_1.
        if textregexeq(substring(_codbarra,2,length(_codbarra)),'^[[:digit:]]+([[:digit:]]+)?$') Then

            ctacte_id := substring(_codbarra,2,length(_codbarra))::integer;
            vctacte_id = ctacte_id;

            Select Into trib_id, trib_nom, trib_tipo, obj_id, subcta, anio, cuota, num, fchvenc, vest, ttrib
            c.trib_id, t.nombre_redu, t.tipo, c.obj_id, c.subcta, c.anio, 0, o.num, c.fchvenc, c.est, t.tipo
            From ctacte c
            left Join objeto o on c.obj_id = o.obj_id
            Inner Join trib t on c.trib_id = t.trib_id
            Where c.ctacte_id = vctacte_id;

            If not FOUND Then
                Raise Exception 'Código de barra incorrecto';
            End If;

            vtrib_id = trib_id;
            vobj_id = obj_id;
            vsubcta = subcta;
            vanio = anio;

	    -- Busco si están todos los Vencimientos correspondientes al año
	    select Into vcant iif(count(*)=r.cant_anio, 1, 0)
        From trib_venc v
	    left join trib t on v.trib_id=t.trib_id
	    left join resol r on t.trib_id=r.trib_id and vanio*1000+vcuota between r.perdesde and r.perhasta
	    where v.trib_id=vtrib_id and v.anio=vanio and v.cuota between 1 and r.cant_anio
	    group by cant_anio;

	    If (vcant=0) Then
	       Raise Exception 'Falta definir vencimientos para todos los períodos del año. No se podrá realizar el pago anual';
	    End if;

            -- Consultar si el período anual existe
            Select Into vcant coalesce(count(*),0) From ctacte c
            Where c.trib_id=vtrib_id and c.obj_id=vobj_id and c.subcta=vsubcta and c.anio=vanio and c.cuota=0;

            If (NOT FOUND or vcant=0) Then -- El periodo anual no existe
                anual := 1;
                -- si es cuota=0 ==> anual, tomo cuota=1
                cuota_cons := case when cuota=0 and not trib_id in (1,2,12) then 1 else cuota end;
            Else
                cuota_cons = 0; -- Como existe PerAnual, consulto directamente por anual
            End If;

        End If;

        If (ctacte_id is null) Then
            Raise Exception 'Datos inexistentes';
        End If;

    ElseIf upper(substr(_codbarra,1,2))='EX' Then -- Código Especial de datos inexistentes en SAM para Caja Externa
        Raise Exception 'Datos inexistentes';

    ElseIf (length(_codbarra)=16) Then  -- Cupon de Pago

        -- Recupero los datos del codigo de barras
        Select Into vtrib_id, vobj_id, vsubcta, vanio, vcuota, vvigencia
        c.trib_id, c.obj_id, 0, c.anio, c.cuota, c.vigenciahasta From sam.uf_caja_cuponpago_det(_codbarra) c;

	If (vvigencia < current_date) Then
	    Raise Exception 'Cupón de Pago Vencido';
	End If;
	
        -- Verifico los datos de la ctacte
        Select Into ctacte_id, trib_id, trib_nom, trib_tipo, obj_id, subcta, anio, cuota, num, fchvenc, vest, ttrib
        c.ctacte_id, c.trib_id, t.nombre_redu, t.tipo, c.obj_id, c.subcta, c.anio, c.cuota, o.num, c.fchvenc, c.est, t.tipo
        From ctacte c
        left Join objeto o on c.obj_id = o.obj_id
        Inner Join trib t on c.trib_id = t.trib_id
        Where c.trib_id=vtrib_id and c.obj_id=vobj_id and c.subcta=vsubcta and c.anio=vanio and c.cuota=vcuota;

        If not FOUND Then
            Raise Exception 'Cupón de Pago incorrecto';
        End If;

    ElseIf (length(_codbarra)>10) Then  --error, supera el dato integer para ser ctacte_id
        Raise Exception 'Datos inexistentes';

    Else
        -- si el codbarra es de 7 u 8 dígitos signIfica que se trata de ctacte_id
        ctacte_id := cast(_codbarra as integer);
        vctacte_id = ctacte_id;

        Select Into trib_id, trib_nom, trib_tipo, obj_id, subcta, anio, cuota, num, fchvenc, vest, ttrib
        c.trib_id, t.nombre_redu, t.tipo, c.obj_id, c.subcta, c.anio, c.cuota, o.num, c.fchvenc, c.est, t.tipo
        From ctacte c
        left Join objeto o on c.obj_id = o.obj_id
        Inner Join trib t on c.trib_id = t.trib_id
        Where c.ctacte_id = vctacte_id;

        If not FOUND Then
            Raise Exception 'Código de barra incorrecto';
        End If;
    End If;


    -- verifico que el estado sea correcto
    If (vest is null and not (cuota = 0 and trib_id<> 1 and trib_id<> 2)) Then
        Raise Exception 'Estado incorrecto';
    ElseIf (vest='') Then
        Raise Exception 'Emisión no aprobada';
    End If;

    If (_externa=0) Then -- and anual=0
        If (vest<>'D' and trib_id<>2) Then
            Select Into est_nom t.nombre From ctacte_test t Where t.cod = vest ;
            error := 'Estado incorrecto - ' || vest || ': ' || est_nom;
            Raise Exception '%',error;
        End If;
        if trib_id=2 then
            if (vest<>'1') then
                Select Into est_nom t.nombre From plan_test t Where t.cod::varchar = vest ;
                error := 'Estado incorrecto - ' || vest || ': ' || est_nom;
                Raise Exception '%',error;
            end if;
        end if;
    Else    --externa in (1,2)
        If (vest in ('X','C','J','B')) Then
            Select Into est_nom t.nombre From ctacte_test t Where t.cod = vest ;
            error := 'Estado incorrecto - ' || vest || ': ' || est_nom;
            Raise Exception '%',error;
        End If;
    End If;

    vtrib_id = trib_id;
    vobj_id = obj_id;
    vsubcta = subcta;
    vanio = anio;
    vcuota = cuota;

    -- Verifico segun config si debo controlar la adhesion a débito
    If (verifdebito = 2 and _externa = 0) Then -- es decir si existe adhesion a debito se envia una excepcion
        If (trib_id<> 1) Then
            Select Into vcant count(*) from debito_adhe d where d.trib_id=vtrib_id and d.obj_id=vobj_id
            and d.subcta=vsubcta and vanio * 100 + vcuota between d.perdesde and d.perhasta and d.est='A';
        Else -- Verifico si la forma de pago del convenio es por debito
            Select Into vcant count(*) from plan p where p.plan_id=vanio and p.tpago=3;
        End If;
        If (vcant > 0) Then
            -- Si la cuota no se encuentra vencida, no se permite cobrar por caja
            If (fchvenc > current_date) Then
                raise exception 'El Período/Convenio se encuentra adherido a Débito Automático';
            End If;
        End If;
    End If;

    -- si es un pago anual ...
    If cuota=0 and _externa = 0 and not trib_id in (1,2,10,12) Then
          -- Obtengo el venc anual que no esté vencido según fecha actual
        select Into fchvenc min(v.fchvencanual) from trib_venc v
        where v.trib_id=vtrib_id and v.anio=vanio and v.fchvencanual>=current_date;

        raise notice 'fchvenc: %',fchvenc;
        If (fchvenc is null) or (fchvenc<current_date) Then
            -- Verifico si tiene excepcion de recargo
            Select Into vcant count(*) From ctacte_excep c
            where c.trib_id=vtrib_id and c.obj_id=vobj_id and c.anio=vanio and c.cuota=0 and c.fchlimite>=current_date;
            
            if (vcant = 0) Then
                Raise Exception 'El pago anual se encuentra vencido o no se ha definido en el Sistema.';
            else
                excep = 1;    -- tiene excepción, tomo la fecha de vencimiento
                select Into fchvenc min(v.fchvencanual) from trib_venc v
                where v.trib_id=vtrib_id and v.anio=vanio;
            End If;
        End If;

        If (_externa = 0 and excep = 0) Then
            -- Busco períodos vencidos en el año
            select Into vcant count(*) from ctacte c
            where c.trib_id=vtrib_id and c.obj_id=vobj_id and c.anio=vanio
            and (c.est in ('F','C','J'))  --or ((c.est='D' and c.fchvenc < current_date)
            and (vcuota=0 and c.cuota <> 1);

            If (vcant>0) Then
                Raise Exception 'Existen períodos vencidos, en Convenio o en Facilidad. No se podrá realizar el pago anual';
            End if;
        End If;
    End If;

    -- si es un pago de un semestre/trimestre ...
    If vsemestre=1 and _externa = 0 and not trib_id in (1,2,10,12) Then

        -- Obtengo el venc anual que no esté vencido según fecha actual
        select Into fchvenc min(v.fchvenc1) from trib_venc v
        where v.trib_id=vtrib_id and v.anio=vanio and v.cuota=vcuota;

        If (fchvenc is null or fchvenc<current_date) Then
            -- Verifico si tiene excepcion de recargo
            Select Into vcant count(*) From ctacte_excep c
            where c.trib_id=vtrib_id and c.obj_id=vobj_id and c.anio=vanio and c.cuota=vcuota and c.fchlimite>=current_date;

            If (vcant = 0) Then
                Raise Exception 'El pago del semestre/trimestre está vencido o no ha sido definido en el sistema.';
            End If;
        End If;

        -- Busco si están todos los períodos correspondientes
        select Into vcant count(*) from ctacte c
        where c.trib_id=vtrib_id and c.obj_id=vobj_id and c.anio=vanio and c.est='D' and c.cuota between cuota_cons and cuota_cons+2;

        If (vcant<>3) Then
            Raise Exception 'Falta liquidar períodos o no están en deuda. No se podrá realizar el pago del trimestre o semestre';
        End if;

    End If;

    -- si es un pago a cuenta ...
    If (trib_id = 10 and fchvenc < current_date) Then
        Raise Exception 'El Pago a Cuenta se encuentra vencido';
    End If;

    -- si es una facilidad ...
    If trib_id = 2 Then
        If _externa = 0 and fchvenc < current_date Then
            Raise Exception 'La facilidad se encuentra vencida';
        End If;
        vanio = anio;
        If exists(Select 1 From facilida_periodo p inner join ctacte c on p.ctacte_id=c.ctacte_id
            Where p.faci_id = vanio and c.est='P') Then

            Raise Exception 'Algunos de los períodos incluídos en la facilidad se encuentra pago';
        End If;
    End If;

    -- si es convenio de pago ...
    If (trib_id = 1) Then
        -- si es cuota 900, verIfico que no esté vencida
        If (cuota>=900 and fchvenc < current_date) Then
            Raise Exception 'El adelantamiento de cuota se encuentra vencido. dar de baja';
        End If;

        -- verIfico si debe tener las cuotas al día
        Select Into valdia t.aldia
        From plan p Inner Join plan_config t on p.tplan=t.cod
        Where p.plan_id = anio ;

        If (valdia = 1) Then
            vanio = anio;
	    vcuota = cuota;	
            Select Into vcant count(*) From ctacte c
            Where c.trib_id=1 and c.anio=vanio and c.cuota < vcuota and c.est = 'D';

            If (vcant > 0) Then
                Raise Exception 'Convenio de pago sin cuotas al día';
            End If;
        End If;
    End If;

    monto := 0;

    if trib_id=2 then
        trib_id=trib_faci;
        anio=0;
        cuota=0;
    end if;

    Return Next ;
End
$_$;


ALTER FUNCTION sam.uf_caja(_codbarra character varying, _externa integer) OWNER TO postgres;

--
-- TOC entry 965 (class 1255 OID 5282680)
-- Name: uf_caja_anula(character varying, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_anula(_tipo character varying, _comprob integer, _usrsup integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    vsup1 smallint;
    vsup2 smallint;
    vsup3 smallint;
    vsup4 smallint;
    vfchaprob date;
    vopera integer;
    cant smallint;
begin

	-- Confirma la anulación pedida, tanto por ticket como por operación.
    -- Llama al procedimiento uf_caja_anula_ticket o uf_caja_anula_opera

	-- Verifico si ya se confirmó la anulación
    Select Into vfchaprob a.fchaprob From caja_anulado a Where a.tipo=_tipo and a.comprob=_comprob;
    If (not FOUND) Then
    	Raise Exception 'No se encontró registro del pedido de anulación';
    ElseIf (not vfchaprob is null) Then
    	Raise Exception 'La Anulación ya fue confirmada';
    End If;

    -- Verificar si el Supervisor tiene permiso para Anular la operación
    If (_tipo = 'T') Then	-- Por Ticket
        Select Into vsup1,vsup2,vsup3,vsup4 Distinct c.sup1,c.sup2,c.sup3,c.sup4
        From caja_anulado a Inner Join caja_ticket t On a.comprob=t.ticket
        Inner Join caja c On t.caja_id = c.caja_id
        Where a.tipo='T' and a.comprob=_comprob;
    Else 					-- Por Operación
        Select Into vsup1,vsup2,vsup3,vsup4 Distinct c.sup1,c.sup2,c.sup3,c.sup4
        From caja_anulado a Inner Join caja_ticket t On a.comprob=t.opera
        Inner Join caja c On t.caja_id = c.caja_id
        Where a.tipo='O' and a.comprob=_comprob;
    End If;

    If (vsup1 <> _usrsup and vsup2 <> _usrsup and vsup3 <> _usrsup and vsup4 <> _usrsup) Then
        Raise Exception 'El Supervisor no tiene permiso para Anular esa Caja.';
    End If;

	-- Si es por ticket, verifico si es único ACTIVO en la operación, en cuyo caso anulo la operación.
    If (_tipo = 'T') Then
        Select Into vopera t.opera From caja_ticket t Where t.ticket=_comprob;
        Select Into cant count(*) From caja_Ticket t Where t.opera=vopera and t.est='A';
    Else
    	vopera := _comprob;
    End If;

    If (_tipo = 'O' Or cant = 1) Then
        Perform sam.uf_caja_anula_opera(vopera,_usrsup);
    Else
        Perform sam.uf_caja_anula_ticket(_comprob,_usrsup);
    End If;

End
$$;


ALTER FUNCTION sam.uf_caja_anula(_tipo character varying, _comprob integer, _usrsup integer) OWNER TO postgres;

--
-- TOC entry 725 (class 1255 OID 5282681)
-- Name: uf_caja_anula_opera(integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_anula_opera(_opera integer, _usrsup integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    vctacte_id integer;
    ctacte_idper integer;
    vtrib_id smallint;
    vobj_id varchar(8);
    vsubcta smallint;
    vanio integer;
    vcuota smallint;
    vticket integer;
    cant smallint;
    vttrib smallint;
    est_plan smallint;
    cuotaper smallint;
    cantanio smallint;
    tcaja smallint;
    ctacte_idext integer;
    vfaci_id integer;
begin

    -- Este procedimiento anula un operacion de caja
    -- que agrupa uno o varios ticket

    -- Verifico si no se dio de baja algún ticket de la operación.
    Select Into cant count(*) From caja_ticket t Where t.opera = _opera and t.est='B';
    If (cant>0) Then
        Delete From caja_anulado a Where a.tipo = 'O' and a.comprob = _opera and a.fchaprob is null;
        --Raise Exception 'No se puede anular la operación, porque existen tickets ya anulados';
    End If;

    -- Actualizo el estado de los ticket y mdp
    Update caja_ticket t set est='B' Where t.opera = _opera;
    Update caja_opera o set est='B' Where o.opera = _opera;

	-- Recorro los tickets de la operación
    For vticket, vctacte_id, vtrib_id, vobj_id, vsubcta, vanio, vcuota, vfaci_id
    In Select t.ticket, t.ctacte_id, t.trib_id, t.obj_id, t.subcta, t.anio, t.cuota, t.faci_id
    From caja_ticket t Where t.opera = _opera Loop

        -- Obtengo el tipo de tributo (si es sellado o recibo ==> Sin CtaCte
        Select into vttrib t.tipo from trib t where t.trib_id=vtrib_id;

        If (vttrib<>6 and vttrib<>7) Then
	        -- Actualizo el detalle de la ctacte
    	    Update ctacte_det d set est = 'B' Where d.ctacte_id=vctacte_id and d.topera in (3,5) and d.comprob=vticket;

            If (vttrib=1 and vcuota=0 and vfaci_id = 0) Then -- Pago Anual, anulo el pago de todos los periodos del año
            	Select Into cantanio r.cant_anio From resol r
                Where r.trib_id = vtrib_id and vanio*1000+vcuota between r.perdesde and r.perhasta ;

		For cuotaper In 1..cantanio Loop
                  Select Into ctacte_idper coalesce(c.ctacte_id,0) From ctacte c
                  Where c.trib_id=vtrib_id and c.obj_id=vobj_id and c.subcta=vsubcta and c.anio=vanio and c.cuota=cuotaper;

		  Update ctacte_det d set est = 'B' Where d.ctacte_id=ctacte_idper and d.topera in (3,5) and d.comprob=vticket;

                  Perform sam.uf_ctacte_ajuste(ctacte_idper);
                End Loop;


        	-- Arreglo la ctacte.
	        ElseIf (vtrib_id = 1) then
            	Perform sam.uf_ctacte_ajuste(vctacte_id);

                -- Es un plan, verifico si se imputó
                Select Into est_plan p.est From plan p where p.plan_id=vanio;
                If (est_plan=5) Then
                	Perform sam.uf_plan_anula(vanio);
                End If;
            ElseIf (vfaci_id > 0) Then
            	-- Es una facilidad, debo anular la imputación
            	Update facilida f Set est=1, fchimputa=null, fchvenc=current_date
        		Where f.faci_id=vfaci_id;

            	 -- Actualizo el estado de los períodos de la Facilidad
    			For vctacte_id In Select p.ctacte_id From facilida_periodo p Where p.faci_id = vfaci_id Loop

                	Update ctacte_det d set est = 'B'
        			Where d.ctacte_id = vctacte_id and d.topera = 10 and d.comprob = vfaci_id;

        			Perform sam.uf_ctacte_ajuste(vctacte_id);

    			End Loop;
            ElseIf (vtrib_id = 10) Then
            	-- Es un pago a cuenta, debo anular la imputación
                Perform sam.uf_ctacte_pagocta_anula(vanio, vticket);
            Else
     	        Perform sam.uf_ctacte_ajuste(vctacte_id);
            End If;
		End If;

    End Loop;

	-- Verifico si la operacion se trata de un registro de caja externa,
    -- para lo cual hay que eliminar el registro en la ctacte
    Select into tcaja, ctacte_idext c.tipo, o.ctacte_id from caja_opera o
      inner join caja c on o.caja_id=c.caja_id Where o.opera = _opera;
	If (tcaja >= 2) Then
		-- elimino los datos de la ctacte, despues se puede volver a generar el comprobante
        Delete From ctacte_liq l Where l.ctacte_id = ctacte_idext;
        Delete From ctacte_det l Where l.ctacte_id = ctacte_idext;
        Delete From ctacte l Where l.ctacte_id = ctacte_idext;
	End If;

    -- marco el registro de anulación correspondiente
    Select Into cant count(*) From caja_ticket t Where t.opera = _opera;

    If (cant = 1) then  -- existe un unico ticket en la operacion
        -- se puede haber hecho la solicitud por operacion o por ticket (confirmo ambas)
        Update  caja_anulado a set sup = _usrsup, fchaprob = current_timestamp
        Where a.tipo = 'T' and a.comprob = vticket;
    End If;

    Update caja_anulado a set sup = _usrsup, fchaprob = current_timestamp
    Where a.tipo = 'O' and a.comprob = _opera;

End
$$;


ALTER FUNCTION sam.uf_caja_anula_opera(_opera integer, _usrsup integer) OWNER TO postgres;

--
-- TOC entry 726 (class 1255 OID 5282683)
-- Name: uf_caja_anula_opera_pedido(integer, integer, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_anula_opera_pedido(_opera integer, _cajero integer, _motivo character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
declare
    vusrcod smallint;
    vcaja_id smallint;
 	vfecha date;
    tipo smallint;
    vfchpedido date;
    vfchaprob date;
    cant smallint;
begin

	-- Realiza el pedido de anulación de una operación.
    -- Antes realiza las verificaciones correspondientes.

    -- Obtengo la info de la operación
    Select Into cant count(*) From caja_opera o where o.opera = _opera;
    If cant = 0 Then
    	Raise Exception 'No existe la Operación.';
    End If;

    Select Into vusrcod, vcaja_id, vfecha o.usrmod, o.caja_id, o.fecha
    From caja_opera o where o.opera = _opera;


	-- Verifico que el cajero sea el que hizo la operación
    If vusrcod <> _cajero Then
    	-- Verifico si el usuario es supervisor de la caja
        Select Into cant count(*) From caja c where c.caja_id=vcaja_id and (c.sup1=_cajero or c.sup2=_cajero or c.sup3=_cajero or c.sup4=_cajero);
		If (cant = 0) Then
        	Raise Exception 'El Cajero Actual no efectúo la Operación.';
        End If;
    End If;

	-- Verifico si no fue Anulado o Aprobado antes
    Select Into vfchpedido, vfchaprob  a.fchpedido, a.fchaprob
    From caja_anulado a Where a.tipo = 'O' and a.comprob = _opera;

    If FOUND Then
        If (not vfchaprob is null) Then
            Raise Exception 'La Anulación de la Operación ya fue Aprobada por el Supervisor';
        ElseIf (not vfchpedido is null) Then
            Raise Exception 'La Anulación de la Operación ya fue Solicitada por el Cajero';
        End If;
    End If;

	-- Verifico si no fue solicitada por algún ticket
    Select Into cant count(*)
    From caja_anulado a Left Join caja_ticket t on a.tipo='T' and a.comprob=t.ticket
    Where t.opera = _opera;

    If (cant>0) Then
        Raise Exception 'La Anulación ya fue Solicitada por Número de Ticket';
	End If;

	Select Into tipo c.tipo
    From caja c where c.caja_id = vcaja_id;

	If (tipo=1) Then
    	-- Verifico que la operación pertenezca a la caja abierta
		Select Into cant count(*) From caja_estado e Where e.caja_id = vcaja_id and e.fecha= vfecha and est=2;
 		If (cant=0) Then
 			Raise Exception 'La Operación pertenece a una caja que no está abierta.';
 		End If;
    End If;

	-- Ahora que está todo en orden hago el pedido
    Insert Into caja_anulado Values ('O',_opera,_cajero,current_timestamp,null,null,_motivo);


	Return TRUE;

End
$$;


ALTER FUNCTION sam.uf_caja_anula_opera_pedido(_opera integer, _cajero integer, _motivo character varying) OWNER TO postgres;

--
-- TOC entry 727 (class 1255 OID 5282684)
-- Name: uf_caja_anula_pendiente(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_anula_pendiente(_usrsup integer) RETURNS TABLE(tipo character varying, comprob integer, caja_id smallint, cajero character varying, fchpedido timestamp without time zone, monto numeric, motivo character varying)
    LANGUAGE plpgsql
    AS $$
Begin
	-- Confirma la anulación pedida, tanto por ticket como por operación.
    -- Llama al procedimiento uf_caja_anula_ticket o uf_caja_anula_opera

    Return Query
    Select (case a.Tipo when 'T' then 'Ticket' when 'O' then 'Operación' end)::varchar(10),
    	a.comprob, t.caja_id, u.nombre, a.fchpedido, sum(t.monto), a.motivo
    From caja_anulado a
    Left Join sam.sis_usuario u On a.cajero=u.usr_id
    Left Join caja_ticket t On t.est <> 'B' and 
	((a.tipo='T' and t.ticket=a.comprob) or (a.tipo='O' and t.opera=a.comprob)) 
    Left Join caja c On t.caja_id = c.caja_id
    Where (c.Sup1 = _usrsup Or c.Sup2 = _usrsup Or c.Sup3 = _usrsup Or c.Sup4 = _usrsup)
       and a.Sup is null
    Group by a.tipo, a.comprob, t.caja_id, u.nombre, a.fchpedido, a.motivo
    Order By a.fchpedido;

End
$$;


ALTER FUNCTION sam.uf_caja_anula_pendiente(_usrsup integer) OWNER TO postgres;

--
-- TOC entry 5647 (class 0 OID 0)
-- Dependencies: 727
-- Name: FUNCTION uf_caja_anula_pendiente(_usrsup integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_caja_anula_pendiente(_usrsup integer) IS 'Listado de Anulaciones pendientes del supervisor.';


--
-- TOC entry 728 (class 1255 OID 5282685)
-- Name: uf_caja_anula_rechaza(character varying, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_anula_rechaza(_tipo character varying, _comprob integer, _usrsup integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    cant smallint;
begin

	-- Rechaza el pedido de anulación de un ticket u operación

    -- Verificar si el Supervidor tiene permiso para Anular la operación
    If (_tipo = 'T') Then
        Select Into cant count(*) From caja_anulado a
        Inner Join caja_ticket t On a.Tipo = 'T' and a.comprob=t.ticket
        Inner Join caja c On t.caja_id = c.caja_id Where t.ticket = _comprob
        And (c.sup1 = _usrsup Or c.sup2 = _usrsup);
    Else
        Select Into cant count(*) From caja_anulado a
        Inner Join caja_ticket t On a.tipo = 'O' and a.comprob=t.opera
        Inner Join caja c On t.caja_id = c.caja_id Where t.opera = _comprob
        And (c.sup1 = _usrsup Or c.sup2 = _usrsup);
    End If;

    If cant = 0 Then
        Raise Exception 'El Supervisor no tiene permiso para Anular esa Caja';
    End If;

    Delete From caja_anulado a Where a.tipo = _tipo and a.comprob = _comprob;

End
$$;


ALTER FUNCTION sam.uf_caja_anula_rechaza(_tipo character varying, _comprob integer, _usrsup integer) OWNER TO postgres;

--
-- TOC entry 5648 (class 0 OID 0)
-- Dependencies: 728
-- Name: FUNCTION uf_caja_anula_rechaza(_tipo character varying, _comprob integer, _usrsup integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_caja_anula_rechaza(_tipo character varying, _comprob integer, _usrsup integer) IS 'Realiza la Apertura, Reapertura o Cierre de una Caja.';


--
-- TOC entry 964 (class 1255 OID 5282686)
-- Name: uf_caja_anula_ticket(integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_anula_ticket(_ticket integer, _usrsup integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    vctacte_id integer;
    ctacte_idper integer;
    montoanulado decimal(9,2);
    vtrib_id smallint;
    vobj_id varchar(8);
    vsubcta smallint;
    vanio integer;
    vcuota smallint;
    vopera integer;
    vmdp smallint;
    cant smallint;
    ttrib smallint;
    est_plan smallint;
    vorden integer;
    cuotaper smallint;
    cantanio smallint;
    vfaci_id integer;
    vcuotaini smallint;
    vcuotafin smallint;
begin

    -- Verifico si no se dio de baja algún ticket de la operación.
    Select Into cant count(*) From caja_ticket t Where t.ticket = _ticket and t.est='B';
    If (cant>0) Then
        Delete From caja_anulado a Where a.tipo = 'T' and a.comprob = _ticket and a.fchaprob is null;
        --Raise Exception 'No se puede anular el ticket porque ya fue anulado';
    End If;

    -- actualizo el estado del ticket
    Update caja_ticket t set est = 'B' Where t.ticket = _ticket;

    -- obtengo datos del ticket
    Select Into vctacte_id, montoanulado, vtrib_id, vobj_id, vsubcta, vanio, vcuota, vopera,vfaci_id
    t.ctacte_id, t.monto, t.trib_id, t.obj_id, t.subcta, t.anio, t.cuota, t.opera, t.faci_id
    From caja_ticket t Where t.ticket = _ticket;

    -- Obtengo el tipo de tributo (si es sellado o recibo ==> Sin CtaCte
    Select into ttrib t.tipo from trib t where t.trib_id=vtrib_id;

    -- Actualizo la cuenta corriente si corresponde
    If (ttrib<>6 and ttrib<>7) Then
        -- Actualizo el detalle de la ctacte
        Update ctacte_det d set est = 'B' Where d.ctacte_id=vctacte_id and d.topera = 3 and d.comprob = _ticket;

        If (ttrib=1 and vcuota=0 and vfaci_id = 0) Then -- Pago Anual, anulo el pago de todos los periodos del año
            Select Into cantanio r.cant_anio From resol r
            Where r.trib_id=vtrib_id and vanio*1000+vcuota between r.perdesde and r.perhasta;

            For cuotaper In 1..cantanio Loop
              Select Into ctacte_idper coalesce(c.ctacte_id,0) From ctacte c
              Where c.trib_id=vtrib_id and c.obj_id=vobj_id and c.subcta=vsubcta and c.anio=vanio and c.cuota=cuotaper;

              Update ctacte_det d set est = 'B' Where d.ctacte_id=ctacte_idper and d.topera in (3,5) and d.comprob=_ticket;

              Perform sam.uf_ctacte_ajuste(ctacte_idper);
            End Loop;

                Delete From ctacte_det c Where c.ctacte_id=vctacte_id;
                Delete From ctacte c Where c.ctacte_id=vctacte_id;

        ElseIf (vcuota = 61 or vcuota = 62) then -- si es un pago semestral
            	if (vcuota = 61) then
                	vcuotaini = 1;
                else
                	vcuotaini = 4;
                end if;
                vcuotafin = vcuotaini + 2;

                For cuotaper In vcuotaini..vcuotafin Loop
                  Select Into ctacte_idper coalesce(c.ctacte_id,0) From ctacte c
                  Where c.trib_id=vtrib_id and c.obj_id=vobj_id and c.subcta=vsubcta and c.anio=vanio and c.cuota=cuotaper;

                  Update ctacte_det d set est = 'B' Where d.ctacte_id=ctacte_idper and d.topera in (3,5) and d.comprob=vticket;

                  Perform sam.uf_ctacte_ajuste(ctacte_idper);
                End Loop;

        -- Arreglo la ctacte.
        ElseIf (vtrib_id = 1) then
            Perform sam.uf_ctacte_ajuste(vctacte_id);
            -- Es un plan, verifico si se imputó
            Select Into est_plan p.est From plan p where p.plan_id=vanio;
            If (est_plan=5) Then
                Perform sam.uf_plan_anula(vanio);
            End If;
        ElseIf (vfaci_id > 0) Then
            -- Es una facilidad, debo anular la imputación
            Update facilida f Set est=1, fchimputa=null, fchvenc=current_date
        	Where f.faci_id=vfaci_id;

             -- Actualizo el estado de los períodos de la Facilidad
    		For vctacte_id In Select p.ctacte_id From facilida_periodo p Where p.faci_id = vfaci_id Loop

                Update ctacte_det d set est = 'B'
        		Where d.ctacte_id = vctacte_id and d.topera = 10 and d.comprob = vfaci_id;

        		Perform sam.uf_ctacte_ajuste(vctacte_id);

    		End Loop;
        ElseIf (vtrib_id = 10) Then
            -- Es un pago a cuenta, debo anular la imputación
            Perform sam.uf_ctacte_pagocta_anula(vanio, _ticket);
        Else
            Perform sam.uf_ctacte_ajuste (vctacte_id);
        End If;
    End If;

	-- Obtengo el mdp de Efectivo, para actualizar caja_opera_mdp
    Select Into vmdp min(m.mdp) From caja_mdp m Where m.tipo='EF' and cotiza=1;

	-- Inserto el monto del ticket en negativo en mdp
	vorden := nextval('seq_caja_opera_mdp');

    Insert into caja_opera_mdp Values
    (vorden,vopera,vmdp,-montoanulado,1,-montoanulado,'',0,0,0,'',0,null,now(),_usrsup);

    -- marco el registro de anulación correspondiente
    Update caja_anulado a set sup = _usrsup, fchaprob = current_timestamp
    Where a.tipo = 'T' and a.comprob = _ticket;

    -- actualizo caja_opera
    Update caja_opera o set monto = monto -montoanulado
    Where o.opera = vopera;

end
$$;


ALTER FUNCTION sam.uf_caja_anula_ticket(_ticket integer, _usrsup integer) OWNER TO postgres;

--
-- TOC entry 729 (class 1255 OID 5282688)
-- Name: uf_caja_anula_ticket_pedido(integer, integer, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_anula_ticket_pedido(_ticket integer, _cajero integer, _motivo character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
declare
 vtrib_id smallint;
 vusrcod smallint;
 vopera integer;
 vcaja_id smallint;
 vfecha date;
 vfchpedido date;
 vfchaprob date;
 cant smallint;
begin

 -- Realiza el pedido de anulación de un ticket.
 -- Antes realiza las verificaciones correspondientes.

 -- Obtengo la info del ticket
 Select Into cant count(*) From caja_ticket t Where t.ticket = _ticket;
 If (cant=0) Then
 Raise Exception 'No existe el Ticket.';
 End If;

 Select Into vtrib_id, vusrcod, vopera, vcaja_id, vfecha
 t.trib_id,t.usrmod,t.opera,t.caja_id,t.fecha
 From caja_ticket t Where t.ticket = _ticket;

 -- Verificar que no sea un ticket de caja externa
 If (vtrib_id=6) Then
 Raise Exception 'Ticket de Caja Externa. Realice la Anulación por número de Operación.';
 End If;

 -- Verificar si el Cajero efectuó la operación
 If vusrcod <> _cajero Then
 Raise Exception 'El Cajero Actual no efectúo la Operación.';
 End If;

 -- Verificar si no fue Anulado o Aprobado antes
 Select Into vfchpedido, vfchaprob a.fchpedido, a.fchaprob
 From caja_anulado a Where a.Tipo = 'T' and a.Comprob = _Ticket;

 If FOUND Then
   If (not vfchaprob is null) Then
 	Raise Exception 'La Anulación del Ticket ya fue Aprobada por el Supervisor';
   ElseIf (not vfchpedido is null) Then
 	Raise Exception 'La Anulación del Ticket ya fue Solicitada por el Cajero';
   End If;
 End If;

 -- Verifico si el pedido se hizo por Operación
 Select Into vfchpedido, vfchaprob a.fchpedido, a.fchaprob
 From caja_anulado a Where a.tipo = 'O' and a.comprob = vopera;

 If FOUND Then
   If (not vfchaprob is null) Then
 	Raise Exception 'La Anulación está aprobada y fue Solicitada por Número de Operación';
   ElseIf (not vfchpedido is null) Then
 	Raise Exception 'La Anulación ya fue Solicitada por Número de Operación';
   End If;
 End If;

 -- Verifico que el ticket pertenezca a la caja abierta
 Select Into cant count(*) From caja_estado e Where e.caja_id = vcaja_id and e.fecha= vfecha and est=2;
 If (cant=0) Then
 	Raise Exception 'El ticket pertenece a una caja que no está abierta.';
 End If;

 -- Ahora que está todo en orden hago el pedido
 Insert Into caja_anulado Values ('T',_ticket,_cajero,current_timestamp,null,null,_motivo);

 Return TRUE;

End
$$;


ALTER FUNCTION sam.uf_caja_anula_ticket_pedido(_ticket integer, _cajero integer, _motivo character varying) OWNER TO postgres;

--
-- TOC entry 5649 (class 0 OID 0)
-- Dependencies: 729
-- Name: FUNCTION uf_caja_anula_ticket_pedido(_ticket integer, _cajero integer, _motivo character varying); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_caja_anula_ticket_pedido(_ticket integer, _cajero integer, _motivo character varying) IS 'Confirma la anulación pedida, tanto por ticket como por operación.';


--
-- TOC entry 730 (class 1255 OID 5282689)
-- Name: uf_caja_apertura(integer, date, integer, boolean, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_apertura(_caja_id integer, _fecha date, _cajero integer, _externa boolean, _accion character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    vtipo smallint;
    vusr_id smallint;
    est_teso varchar(1);
    est_caja smallint;
begin

	-- Realiza la apertura de la caja.
    -- accion: (A) Apertura - (R) Reapertura - (C) Cierre - (S) Sobrante


    Select Into vtipo, vusr_id, est_teso c.tipo, c.usr_id, t.est
    From caja c Inner Join caja_tesoreria t on c.teso_id=t.teso_id
    Where c.caja_id=_caja_id;

    -- Verificar tipo caja
    If (_accion<>'C' and _externa=FALSE and vtipo <> 1) then
        Raise Exception 'La caja es interna, no puede abrirse con este módulo.';
    ElseIf (_accion<>'C' and _externa=TRUE and vtipo = 1) then
        Raise Exception 'La caja es externa, no puede abrirse con este módulo.';
    End if;

    -- Verificar permiso del cajero
    If (vusr_id <> _cajero) Then
        Raise Exception 'El cajero no tiene permiso para operar esa caja.';
    end if;

    -- Verificar que la tesorería esté habilitada
    If (est_teso = 'B') Then
        Raise Exception 'La tesorería no se encuentra habilitada';
    End if;

    -- Verificar el estado de la caja
    Select Into est_caja e.est From caja_estado e Where e.caja_id=_caja_id and e.fecha=_fecha;
    If (not FOUND) Then
    	Raise Exception 'No se encontraron registros de apertura o cierre';
    ElseIf (_accion='A' and est_caja<>1) Then
        Raise Exception 'Para realizar la apertura, la caja debe estar habilitada por el supervisor, y no debe estar abierta por el cajero. Verifique estado.';
    ElseIf (_accion='R' and est_caja<>2) Then
        Raise Exception 'En la Raapertura, la caja debe estar abierta por el cajero. Verifique estado.';
    ElseIf (_accion='C' and est_caja<>2) Then
        Raise Exception 'Para realizar el cierre, la ceja debe estar abierta por el cajero. Verifique estado.';
    ElseIf (_accion='S' and est_caja<>0) Then
        Raise Exception 'Para realizar apertura sobrante, la ceja debe estar cerrada por el supervisor. Verifique estado.';
    End if;

    -- Actualizo el estado de la caja
    If (_accion='A') Then	-- Si es apertura, actualizo caja_estado
        Update caja_estado e set apecaj=_cajero,fchapecaj=current_timestamp,est=2
        where e.caja_id=_caja_id and e.fecha=_fecha;
	ElseIf (_accion='C') Then -- Si es cierre, verifico el tipo de caja
    	If (vtipo=1) Then
            Update caja_estado e set ciecaj=_cajero,fchciecaj=current_timestamp,est=3
            where e.caja_id=_caja_id and e.fecha=_fecha;
        Else -- Si es Externa, hago el cierre de supervisor
            Update caja_estado e set ciecaj=_cajero,fchciecaj=current_timestamp,est=0,
            ciesup=_cajero,fchciesup=current_timestamp
            where e.caja_id=_caja_id and e.fecha=_fecha;
        End If;
    End If;

End
$$;


ALTER FUNCTION sam.uf_caja_apertura(_caja_id integer, _fecha date, _cajero integer, _externa boolean, _accion character varying) OWNER TO postgres;


--
-- TOC entry 733 (class 1255 OID 5282692)
-- Name: uf_caja_cuponpago(integer, character varying, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_cuponpago(_trib_id integer, _obj_id character varying, _vigenciahasta date) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
    codbarra varchar(16);
    c smallint[];
    n smallint;
    x smallint;
    suma smallint;
    verif smallint;
begin
    -- Función que genera el Código de barra para el cupón de pago
    -- a utilizar en los tributos de tipo emisión (sin subcuenta)
    
    codbarra =  lpad(_trib_id::varchar,2,'0')
		|| lpad(substr(_obj_id,2,7)::varchar,7,'0') 
		|| '0'
		|| to_char(_vigenciahasta,'YYddd');

    -- Genero los dígitos de paridad
    c = regexp_split_to_array(codbarra, '');
    x := 1;
    suma := 0;
    For i IN 1..14 Loop
        suma := suma + c[i] * x;
        If x=9 Then
	    x := 3;
        Else
	    x := x + 2;
        End If;
    End Loop;

    verif := trunc(suma/2)::integer % 10;
    codbarra := codbarra || verif::text;
    
    Return codbarra;

end
$$;


ALTER FUNCTION sam.uf_caja_cuponpago(_trib_id integer, _obj_id character varying, _vigenciahasta date) OWNER TO postgres;

--
-- TOC entry 734 (class 1255 OID 5282693)
-- Name: uf_caja_cuponpago_det(character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_cuponpago_det(_codbarra character varying) RETURNS TABLE(trib_id smallint, obj_id character varying, anio integer, cuota smallint, vigenciahasta date)
    LANGUAGE plpgsql
    AS $$
declare
    vletra varchar(1);
    vtrib_id smallint;
    vobj_id varchar(8);
    vper integer;
begin
  -- Función que obtiene los componentes del código de barra

  -- Inicializo los datos
  trib_id=0;  obj_id='';  anio=0;  cuota=0;

  If (length(_codbarra)=16) Then
    trib_id := cast(substr(_codBarra,1,2) as smallint);
    obj_id := cast(substr(_codbarra,3,7) as varchar);
    vigenciahasta := to_date(substr(_codbarra,11,5),'YYddd');

    vtrib_id = trib_id;    
    
    Select into vletra  o.letra
      from trib t left join objeto_tipo o on t.tobj = o.Cod
      where t.trib_id = vtrib_id ;

    If (vletra is null) Then
          vletra :='_';
    End If;
		
    obj_id := vletra || obj_id;
    vobj_id = obj_id;
    
    -- Año y Cuota se recupera el mínimo período no vencido
    Select Into vper coalesce(min(c.anio*1000+c.cuota),0) From ctacte c Where c.trib_id=vtrib_id
       and c.obj_id=vobj_id and c.fchvenc>current_date and c.est='D';
    anio = truncate(vper/1000);
    cuota = vper - anio*1000;
    
  End If;

  Return Next;
end
$$;


ALTER FUNCTION sam.uf_caja_cuponpago_det(_codbarra character varying) OWNER TO postgres;

--
-- TOC entry 735 (class 1255 OID 5282694)
-- Name: uf_caja_deb_generar(integer, integer, integer, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_deb_generar(_caja_id integer, _trib_id integer, _anio integer, _mes integer, _usr_id integer, _periodo integer DEFAULT 0) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    vctacte_id integer;
    vadh_id integer;
    vplan_id integer;
    vobj_id varchar(8);
    vanio integer;
    vcuota integer;
    vfchvenc date;
	vmonto numeric(12,2);
	vdesc numeric(12,2);
BEGIN

  -- Recupero los datos de los períodos incluidos
  -- Adhesiones
  If (_trib_id <> 1 and _trib_id <> 3) Then
    if (_periodo=0) then
      For vctacte_id, vadh_id, vobj_id, vanio, vcuota, vfchvenc, vmonto
        In Select c.ctacte_id, a.adh_id, c.obj_id, c.anio, c.cuota, c.fchvenc, c.nominal + c.multa - c.nominalcub monto
          From ctacte c Inner Join debito_adhe a On c.trib_id = a.trib_id and c.obj_id = a.obj_id
            and c.subcta = a.subcta and c.anio*1000+c.cuota between a.perdesde and a.perhasta and a.est='A'
            left join debito_periodo p On c.ctacte_id = p.ctacte_id
          Where a.caja_id= _caja_id and c.trib_id= _trib_id
            and extract(year from c.fchvenc)= _anio
            and extract(month from c.fchvenc)= _mes
            and c.est='D' and p.ctacte_id is null
      Loop
          -- Determino descuento a aplicar por debito
          Select Into vdesc coalesce(sum(monto),0) from sam.uf_calc_desc_lista(_trib_id, vobj_id,
            vanio*1000+vcuota, vmonto, vfchvenc, 0, 1);

          Insert Into debito_periodo (ctacte_id, adh_id, plan_id, caja_id, anio, mes, monto, montodebito,
            fchdebito, obs, est, trechazo, rechazo, usrmod) Values (vctacte_id, vadh_id, 0, _caja_id,
            _anio, _mes, vmonto + vdesc, 0, null, '', 1, 0, '', _usr_id);

      End Loop;
    else
      For vctacte_id, vadh_id, vobj_id, vanio, vcuota, vfchvenc, vmonto
        In Select c.ctacte_id, a.adh_id, c.obj_id, c.anio, c.cuota, c.fchvenc, c.nominal + c.multa - c.nominalcub monto
          From ctacte c Inner Join debito_adhe a On c.trib_id = a.trib_id and c.obj_id = a.obj_id
            and c.subcta = a.subcta and c.anio*1000+c.cuota between a.perdesde and a.perhasta and a.est='A'
            left join debito_periodo p On c.ctacte_id = p.ctacte_id
          Where a.caja_id= _caja_id and c.trib_id= _trib_id
            and extract(year from c.fchvenc)*1000+extract(month from c.fchvenc) = _periodo
            and c.est='D' and p.ctacte_id is null
      Loop
          -- Determino descuento a aplicar por debito
          Select Into vdesc coalesce(sum(monto),0) from sam.uf_calc_desc_lista(_trib_id, vobj_id,
            vanio*1000+vcuota, vmonto, vfchvenc, 0, 1);

          Insert Into debito_periodo (ctacte_id, adh_id, plan_id, caja_id, anio, mes, monto, montodebito,
            fchdebito, obs, est, trechazo, rechazo, usrmod) Values (vctacte_id, vadh_id, 0, _caja_id,
            _anio, _mes, vmonto + vdesc, 0, null, '', 1, 0, '', _usr_id);

      End Loop;
    end if;
  End If;

  -- Convenios
  If (_trib_id = 1) Then
    --Previamente elimino de debito_periodo cuotas erroneas, donde no coincide el mes por corrimiento de vencimiento
	Perform sam.uf_caja_deb_verifplan(_caja_id, _anio, _mes);

    For vctacte_id, vplan_id, vmonto
	  In Select c.ctacte_id, p.plan_id, c.nominal + c.multa - c.nominalcub monto
		From plan p Inner Join ctacte c on c.trib_id=1 and c.anio=p.plan_id
		  left join debito_periodo dp On c.ctacte_id = dp.ctacte_id
		Where p.est=1 and p.caja_id= _caja_id
		  and extract(year from c.fchvenc)= _anio
 		  and extract(month from c.fchvenc)= _mes and c.est='D'
		  and dp.ctacte_id is null
		Group by c.ctacte_id, p.plan_id, c.nominal, c.multa, c.nominalcub
		Order By p.plan_id
	Loop
        Insert Into debito_periodo (ctacte_id, adh_id, plan_id, caja_id, anio, mes, monto, montodebito,
          fchdebito, obs, est, trechazo, rechazo, usrmod) Values (vctacte_id, 0, vplan_id, _caja_id,
          _anio, _mes, vmonto, 0 , null, '', 1, 0, '', _usr_id);

    End Loop;

  End If;


End
$$;


ALTER FUNCTION sam.uf_caja_deb_generar(_caja_id integer, _trib_id integer, _anio integer, _mes integer, _usr_id integer, _periodo integer) OWNER TO postgres;

--
-- TOC entry 736 (class 1255 OID 5282695)
-- Name: uf_caja_deb_montoactual(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_deb_montoactual(_adhe_id integer) RETURNS TABLE(peractual integer, monto numeric)
    LANGUAGE plpgsql
    AS $$
declare
    vtrib_id smallint;
    vobj_id varchar(8);
    cant_anio smallint;
    vfchvenc date;
    vdesc numeric(12,2);
    percta integer;
    cuotacons smallint;
begin
	peractual := 0;
	monto := 0;
    vdesc := 0;

    -- Recuperar Tributo de la adhesion
    Select Into vtrib_id, vobj_id  a.trib_id, a.obj_id From debito_adhe a Where a.adh_id=_adhe_id;

    -- Obtener Periodo Actual del Tributo
    Select Into cant_anio coalesce(r.cant_anio,12) From trib t Left join resol r
	On t.trib_id=r.trib_id and to_char(current_date,'YYYY0MM')::integer between r.perdesde and r.perhasta
	Where t.trib_id = vtrib_id;

    peractual = ceil(extract(month from current_date) / (12 / cant_anio));
    peractual = extract(year from current_date) * 1000 + peractual;

	-- Obtengo monto de la CtaCte
	Select Into monto, vfchvenc c.nominal + c.multa, c.fchvenc
    From ctacte c Where c.trib_id=vtrib_id and c.obj_id=vobj_id and c.anio*1000+c.cuota=peractual
    And c.est not in ('','B','X','E');

	If (NOT FOUND) Then
      -- determinar cuota para la consulta
      Select Into cuotacons coalesce(max(c.cuota),0) From ctacte c
      Where c.trib_id=vtrib_id and c.obj_id=vobj_id and c.anio=trunc(peractual/1000) and c.cuota<>0 And c.est not in ('','B','X','E');

	  If (cuotacons <> 0) Then
        Select Into monto, vfchvenc, percta c.nominal + c.multa, c.fchvenc, c.anio*1000+c.cuota
        From ctacte c Where c.trib_id=vtrib_id and c.obj_id=vobj_id and c.anio=trunc(peractual/1000) and c.cuota=cuotacons;

        peractual := trunc(peractual/1000)*1000+cuotacons;
      Else
      	monto:=0;
      End If;

    End If;
    -- Determino descuento a aplicar por débito
    select Into vdesc coalesce(sum(d.monto),0)
    From sam.uf_calc_desc_lista(vtrib_id, vobj_id, peractual, monto, vfchvenc,0,1) d;

    -- Recalculo Monto
    monto = monto + vdesc;

	Return Next;
end
$$;


ALTER FUNCTION sam.uf_caja_deb_montoactual(_adhe_id integer) OWNER TO postgres;

--
-- TOC entry 737 (class 1255 OID 5282696)
-- Name: uf_caja_deb_verifplan(integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_deb_verifplan(_caja_id integer, _anio integer, _mes integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN

	-- Cuotas con vencimiento en vMes y que están vinculadas con otro mes en debito_periodo
    Delete From debito_periodo where ctacte_id in
    (Select c.ctacte_id
      From plan p Inner Join ctacte c on c.trib_id=1 and c.anio=p.plan_id
      inner join debito_periodo dp On c.ctacte_id = dp.ctacte_id
      Where p.est=1 and p.caja_id = _Caja_id
      and extract(year from c.fchvenc)= _Anio
      and extract(month from c.fchvenc)= _Mes and c.est='D'
      and dp.mes <> _Mes Group by c.ctacte_id);

	-- Cuotas que no vencen en vMes y que están vinculadas con vMes en debito_periodo
    Delete from debito_periodo where ctacte_id in
    (select c.ctacte_id
      From plan p Inner Join ctacte c on c.trib_id=1 and c.anio=p.plan_id
      inner join debito_periodo dp On c.ctacte_id = dp.ctacte_id and dp.mes = _Mes
      Where p.est=1 and p.caja_id = _Caja_id
      and extract(year from c.fchvenc) = _Anio
      and extract(month from c.fchvenc) <> _Mes and c.est='D'
      Group by c.ctacte_id);

	-- Convenios con Estado No Vigente ó Forma de Pago distinto de Débito
    -- (por ejm se habia generado liq y luego se realizó decaimiento o se modificó la forma de pago)
    Delete from debito_periodo d Where d.caja_id=_Caja_id and d.anio=_Anio and d.mes=_Mes
      And d.plan_id>0 and d.plan_id not in (select p.plan_id From plan p Where p.caja_id = _Caja_id and p.est=1 and p.tpago=3);


END
$$;


ALTER FUNCTION sam.uf_caja_deb_verifplan(_caja_id integer, _anio integer, _mes integer) OWNER TO postgres;

--
-- TOC entry 951 (class 1255 OID 5282697)
-- Name: uf_caja_det(integer, date, date, integer, integer, integer, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_det(_ctacte_id integer, _fchvenc date, _fchcaja date, _anual integer DEFAULT 0, _externa integer DEFAULT 0, _pagocta integer DEFAULT 0, _faci integer DEFAULT 0, _redondeo integer DEFAULT 0, _caja_id integer DEFAULT 0) RETURNS TABLE(cta_id smallint, cta_nom character varying, tcta smallint, monto numeric)
    LANGUAGE plpgsql
    AS $$

declare
  ctarecgral smallint;
  ctaredongral smallint;
  ctarec smallint;
  montototal numeric(12,2);
  montomulta numeric(12,2);
  montodesc numeric(12,2);
  vtrib_id integer;
  vobj_id varchar(8);
  vanio integer;
  vcuota smallint;
  cuota_sem integer;
  anual_aux smallint;
  fchcons date;
  vfchpago date;
  vfchusar date;
  valorucm numeric(9,3);
  vucm numeric(12,2);
  ucm_usar smallint;
  vnominal numeric(12,2);
  pagocta_monto numeric(12,2);
  vnominalcub numeric(12,2);
  vcalc_rec smallint;
  vcta_id_rec smallint;
  vcta_id_desc smallint;
  vcta_id_redon smallint;
  vaccesor numeric(12,2);
  vcant_anio integer;
  excepmulta smallint;
  redondeo_porc numeric(5,2);
  cant smallint;
  anio_atras integer;       -- se utiliza para determinar si se utiliza la cta atrasada, sobre todo para convenios

  plantotal numeric(12,2);  -- monto total de deuda del plan: nominal+accesor+multa
  plannominal numeric(12,2);
  planaccesor numeric(12,2);
  plancapital numeric(12,2);
  planfinancia numeric(12,2);
  plansellado numeric(12,2);  -- monto de sellado
  planporc numeric(5,2);  -- porcentaje que representa la cuenta del monto total de deuda
  plancant smallint; -- cantidad de cuentas que intervienen en el plan
  tplan smallint;  -- código del tipo de plan
  tplan_sell smallint;  -- cuenta de sellado definido en la configuracion
  tplan_rec smallint;  -- cuenta de recargo definido en la configuracion
  descnominal numeric(12,2);
  descmulta numeric(12,2);
  descaccesor numeric(12,2);
  canttrib integer;
BEGIN
    -- Este procedimiento recupera el detalle de un Ticket a pagar,
    -- es utilizado por el módulo de Caja, efectúa el cálculo de descuentos e intereses

	-- Inicializo los datos
    montototal:= 0; montomulta:=0; pagocta_monto:=0;
    planaccesor:=0; tplan_rec:=0; vcant_anio:=0;
    anual_aux:= _anual; cant:=0;

    Select Into ctarecgral,ctaredongral,redondeo_porc c.ctarecargo,c.ctaredondeo,coalesce(c.porcredondeo,0)
    From sam.config c;

    -- Si es pagocta, en lugar de ctacte_id recibí pago_id
    If (_pagocta=1) Then
	-- Recupero el detalle del pagocta
        For cta_id, cta_nom, tcta, monto
        In Select p.cta_id, p.cta_nom, p.tcta, p.monto
        from v_ctacte_pagocta_det p where p.pago_id=_ctacte_id
        Loop
	    Return Next;
            montototal:= montototal + monto;
        End Loop;

    elseif (_faci=1) Then
       Select Into anio_atras, vtrib_id, vaccesor
       extract(year from f.fchalta),f.trib_id,f.accesor-f.quita
       From facilida f where f.faci_id=_ctacte_id;

       Select Into vcta_id_rec, vcta_id_desc t.cta_id_rec, t.cta_id_desc
       From trib t where t.trib_id=vtrib_id;
	If (vcta_id_rec = 0) then
	   vcta_id_rec = ctarecgral;
	End If;

       -- Recupero el detalle de la facilidad
       For cta_id,cta_nom,tcta,monto In
       Select case when anio_atras<extract(year from current_date) then ca.cta_id else ct.cta_id end,
        case when anio_atras<extract(year from current_date) then ca.nombre_redu else ct.nombre_redu end,
        ct.tcta, sum(case when _externa>=1 or anual_aux=1 then cd.debe else cd.debe - cd.haber end)
        from facilida_periodo f
        inner join ctacte_det cd on f.ctacte_id=cd.ctacte_id
        inner join cuenta ct on cd.cta_id=ct.cta_id
        inner join cuenta ca on ct.cta_id_atras=ca.cta_id
        where f.faci_id=_ctacte_id and cd.est='A'
        group by 1, 2, 3
       Loop
            Return Next;
            montototal:=montototal + monto;

       End loop;

        -- Calculo el interés s/NominalCub y FchCons
        If (vaccesor<>0) Then
            monto:= vaccesor;
            if (vaccesor > 0) then
		cta_id := vcta_id_rec;
		Select Into cta_nom c.nombre_redu From cuenta c Where c.cta_id=vcta_id_rec;
		tcta = 3;
	    else
		cta_id := vcta_id_desc;
		Select Into cta_nom c.nombre_redu From cuenta c Where c.cta_id=vcta_id_desc;
		tcta = 2;
	    end if;

            Return Next;
            montototal := montototal + monto;
        End If;

    Else -- No es pago a cuenta ni facilidad

        -- Recupero los datos de CtaCte
        Select Into vtrib_id, vobj_id, vanio, vcuota, vucm, vnominal, vnominalcub, ucm_usar
        c.trib_id, c.obj_id, c.anio, c.cuota, c.ucm, c.nominal, c.nominalcub, t.ucm
        From ctacte c Inner Join trib t on c.trib_id=t.trib_id
        Where c.ctacte_id = _ctacte_id;

        -- Recupero la Cuenta General de Recargo y el valor ucm según tributo
        If ucm_usar=2 Then
        	Select Into valorucm c.ucm2 From sam.config c;
        else
        	Select Into valorucm c.ucm1 From sam.config c;
        End If;

        -- Obtengo los parámetros del tributo
        Select Into vcalc_rec, vcta_id_rec, vcant_anio
        t.calc_rec, t.cta_id_rec, coalesce(r.cant_anio,12)
        from trib t left join resol r on t.trib_id=r.trib_id and vanio*1000+vcuota between r.perdesde and r.perhasta
        where t.trib_id = vtrib_id;

		-- Si es convenio y tiene un solo tributo, obtengo la cuenta de recargo del tributo
        -- asociado al convenio
        if vtrib_id = 1 then
       		select into canttrib count(distinct c.trib_id)
            from plan_periodo pp inner join ctacte c on pp.ctacte_id=c.ctacte_id
            where pp.plan_id = vanio;

            if canttrib = 1 then
            	Select into vcta_id_rec t.cta_id_rec from trib t
                Where t.trib_id in (select trib_id
	            from plan_periodo pp inner join ctacte c on pp.ctacte_id=c.ctacte_id
            	where pp.plan_id = vanio);
            End If;
        end if;
        
        if vcta_id_rec is null or vcta_id_rec = 0 then
        	vcta_id_rec = ctarecgral;
        end if;    

        -- Me Fijo si la caja calcula recargo
		If (vcalc_rec=1 and _caja_id>0) Then
        	Select Into vcalc_rec c.calc_rec from caja c where c.caja_id=caja_id;
		End If;

        -- Si es anual, pero el ctacte_id apunta a cuota=0
        -- ==> se generó período anual. No debo multiplicar monto por cantperiodos
        if _anual=1 and vcuota=0 Then
            anual_aux=0;
        ElseIf _anual=1 Then
            --nominal:=nominal * cant_anio;
        ElseIf _anual=6 Then	-- si es semestral multiplico por 3
        	vcant_anio=3;
        	vnominal:=vnominal * vcant_anio;
        End If;

        -- Me fijo si tiene Excepción de Multa
        Select Into excepmulta coalesce(count(*),0) From ctaCte_excep e
        Where e.ctacte_id=_ctacte_id and e.tipo=4 and e.fchlimite>=_fchcaja;
        If (excepmulta is null) Then excepmulta:= 0; End If;

        -- Si está vencido o es anual, me fijo si tiene Excepción de Recargo
        If (_fchcaja > _fchvenc or anual_aux=0) Then

          Select Into vfchusar e.fchusar
          From ctacte_excep e
          Where e.trib_id=vtrib_id and e.obj_id=vobj_id and e.anio=vanio and e.cuota=iif(anual_aux=0,vcuota,0::smallint)
          and e.tipo = 3 and e.fchlimite >= _fchcaja;
        End If;

        If (vfchusar is null ) Then
        	if (_externa = 1) Then
	        	vfchusar:= _fchvenc;
            else
	            vfchusar:= _fchcaja;
            End If;
        End If;

		-- Determino el anio_atras, para los casos de convenio tomando el año de la fecha de alta
        If (vtrib_id>3) Then
	        anio_atras := vanio;
        Else
        	if (vtrib_id=1) then Select into anio_atras extract(year from p.fchalta) from plan p where p.plan_id=vanio; End If;
        	if (vtrib_id=2) then Select into anio_atras extract(year from p.fchalta) from facilida p where p.faci_id=vanio; End If;
        End if;

        -- Recorro el detalle de la ctacte
        For cta_id, cta_nom, tcta, monto
        In Select case when anio_atras<extract(year from current_date) then ca.cta_id else c.cta_id end,
        case when anio_atras<extract(year from current_date) then ca.nombre_redu else c.nombre_redu end,
        c.tcta, sum(case when _externa>=1 or anual_aux=1 /*or ca.tcta=2*/ then debe else debe - haber end)
        from ctacte_det d inner join cuenta c on d.cta_id = c.cta_id
        inner join cuenta ca on c.cta_id_atras=ca.cta_id
        where d.ctacte_id = _ctacte_id and d.est = 'A'
        group by 1, 2, 3
        Loop
            -- Obtengo el Nominal
            If    (tcta<>4 Or (tcta=4 and excepmulta = 0))
              and (tcta<>3 or (tcta=3 and vtrib_id in (1,2,6))) Then  -- x excep de multa
                If (vucm>0 and vnominal=0) Then monto = round(monto * valorucm,2); End If;
                --If (tcta=2) Then monto := -monto; End If;
                monto:= round(monto * iif(anual_aux=0,1,vcant_anio),2);
                If (monto<>0) Then
                	Return Next;
                End If;

                montototal:= montototal + monto;
                if tcta=4 and vtrib_id<>1 Then
                	montomulta := montomulta + monto;
                End If;
            End If;
        End Loop;

        -- Calculo el Interés por mora
        If (_fchvenc < vfchusar and anual_aux=0 and vcalc_rec=1) Then
            -- Obtengo el último Pago y cargo FchCons
            Select Into vfchpago c.fchpago From ctacte c Where c.ctacte_id=_ctacte_id;

            If (vfchpago is null or vfchpago<=_fchvenc /*or nominalcub>0*/) Then
                fchcons:=_fchvenc;
            Else
                fchcons:=vfchpago;
            End If;

            -- Calculo el interés s/NominalCub y FchCons
            monto:= sam.uf_calc_accesor(vtrib_id,vobj_id,0,vanio*1000+vcuota,montototal-montomulta, 0, fchcons, vfchusar);

            If (monto>0) Then
                cta_id := vcta_id_rec;
                Select Into cta_nom c.nombre_redu From cuenta c Where c.cta_id=vcta_id_rec;
                tcta = 3;
                Return Next;
                montototal := montototal + monto;
            End If;
        End If;

        -- Si es pago anual, debo restar los pagos parciales realizados en las cuotas
        -- (por ahora no lo tengo en cuenta para caja externa)
        If (anual_aux=1 and _externa=0) Then
            For cta_id, cta_nom, tcta, monto
            In Select case when anio_atras<extract(year from current_date) then ca.cta_id else cu.cta_id end,
            case when anio_atras<extract(year from current_date) then ca.nombre_redu else cu.nombre_redu end,
            cu.tcta, sum(debe - haber)
            from ctacte c inner join ctacte_det d on c.ctacte_id=d.ctacte_id
            inner join cuenta cu on d.cta_id = cu.cta_id
            inner join cuenta ca on cu.cta_id_atras=ca.cta_id
            Where c.trib_id=vtrib_id and c.obj_id=vobj_id and c.anio=vanio and c.cuota>0
            and d.est='A' and d.haber>0 and d.topera in (3,4,5,7,8,10,11,16,17) and cu.tcta<>3
            group by 1, 2, 3 Loop

                montototal:= montototal + monto;
                Return Next;

            End Loop;
        End If;

	-- Obtengo monto por pago a Cuenta
        Select Into pagocta_monto coalesce(sum(d.haber),0) from ctacte_det d
        where d.ctacte_id = _ctacte_id and d.topera=17 and d.est = 'A';

        -- Me fijo si tiene Excepción de Descuento
        Select Into cant count(*) From ctacte_excep e
        Where e.trib_id=vtrib_id and e.obj_id=vobj_id and e.anio=vanio and e.cuota=iif(_anual=0,vcuota,0::smallint)
        and e.tipo = 2 and e.fchlimite >= _fchcaja;

        -- Verifico si corresponden descuentos
        If NOT FOUND or cant=0 then
	        --raise notice '_fchvenc: % - fchusar: % - anualaux: % - nominalcub: %',  _fchvenc, vfchusar, anual_aux, vnominalcub;
            If (_fchvenc>=vfchusar and vtrib_id<>1 and vtrib_id<>2) Then
                monto=0;
                If anual_aux=6 Then
                    cuota_sem=60+((vcuota+2)/3);
                End if;
                For cta_id, cta_nom, monto
                In Select case when anio_atras<extract(year from current_date) then ca.cta_id else cu.cta_id end,
                	case when anio_atras<extract(year from current_date) then ca.nombre_redu else cu.nombre_redu end, d.monto
                From sam.uf_calc_desc_lista(vtrib_id,vobj_id,vanio * 1000 + iif(anual_aux=0,vcuota,iif(anual_aux=6,cuota_sem,0)::smallint),
                --(nominal*iif(anual_aux=0,1,iif(anual_aux=6,3,cant_anio)))-nominalcub+pagocta_monto,fchusar,0,externa) d
                (vnominal*iif(anual_aux=0 or anual_aux=6,1,vcant_anio))-vnominalcub+pagocta_monto,vfchusar,0,_externa) d
                inner join cuenta cu on d.cta_id = cu.cta_id
            	inner join cuenta ca on cu.cta_id_atras=ca.cta_id
		Loop
                    If (monto <> 0) Then
			vcta_id_desc = cta_id;
			-- Verificar si ya se pagó con descuento previamente, la resto
			Select Into montodesc sum(d.haber) From ctacte_det d 
			  Where d.ctacte_id=_ctacte_id and d.cta_id=vcta_id_desc and d.est = 'A';
			
			If (montodesc is not null) Then
			   monto = monto - montodesc;
			End If;
			  
                        tcta:= 2;
                        Return Next;
                        montototal:= montototal + monto;
                    End If;
                End Loop;
            End If;
        End If;
	End If;

    -- Redondeo (tomar porc de SAM_Config)
	if (_redondeo=1) Then
	   -- Recupero la cuenta de redondeo asociada al tributo
       if vtrib_id = 1 then
       		select into canttrib count(distinct c.trib_id)
            from plan_periodo pp inner join ctacte c on pp.ctacte_id=c.ctacte_id
            where pp.plan_id = vanio;

            if canttrib = 1 then
            	Select into vcta_id_redon t.cta_id_redon from trib t
                Where t.trib_id in (select trib_id
	            from plan_periodo pp inner join ctacte c on pp.ctacte_id=c.ctacte_id
            	where pp.plan_id = vanio);
			Else
            	   Select into vcta_id_redon t.cta_id_redon from trib t Where t.trib_id = vtrib_id;
            End If;

       Elseif vtrib_id=2 Then
            Select into vcta_id_redon t.cta_id_redon from trib t
            Where t.trib_id in (select trib_id
            from facilida_periodo pp inner join ctacte c on pp.ctacte_id=c.ctacte_id
            where pp.faci_id = _ctacte_id);
       Else

		   Select into vcta_id_redon t.cta_id_redon from trib t Where t.trib_id = vtrib_id;
		End If;

	   -- Recupero los datos de la configuracion
           Select Into cta_id, redondeo_porc s.ctaredondeo, coalesce(s.porcredondeo ,0) From sam.config s;

           If (vcta_id_redon = 0) Then vcta_id_redon = cta_id; End If;
	   Select Into cta_nom, tcta c.Nombre_Redu, c.tcta From cuenta c Where c.cta_id = vcta_id_redon;

	   cta_id = vcta_id_redon;

           If (cta_id > 0) then
              If (redondeo_porc = 0) then redondeo_porc = 1; End If;
              Monto := (1 - redondeo_porc) - (montototal - trunc(montototal));
              --if (Monto < 0) then Monto := redondeo_porc + monto; End If;
              if (Monto > redondeo_porc / 2) then Monto := monto - redondeo_porc; End If;
              Return Next;
              montototal := montototal + monto;
           End If;
	End If;

End

$$;


ALTER FUNCTION sam.uf_caja_det(_ctacte_id integer, _fchvenc date, _fchcaja date, _anual integer, _externa integer, _pagocta integer, _faci integer, _redondeo integer, _caja_id integer) OWNER TO postgres;

--
-- TOC entry 738 (class 1255 OID 5282699)
-- Name: uf_caja_esta_anual(integer, integer, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_esta_anual(_teso_id integer, _anio integer, _fchhasta date) RETURNS TABLE(mes smallint, mes_nom character varying, monto numeric, acumulado numeric)
    LANGUAGE plpgsql
    AS $$
declare 
    vfchdesde date;
    vfecha date;
    vmonto numeric;
    vmes integer;
    vmes_nom varchar;
begin
 
	-- Determina los montos cobrados por mes, y va calculando el acumulado
    
    If (_anio <> EXTRACT(year from _fchhasta)) Then
    	Raise Exception 'El año no coincide con la fecha hasta.';
    End If;
    
    acumulado := 0;
    vfchdesde := to_date(_anio::varchar || '0101','YYYYMMDD');  
    mes = 0;
    monto = 0;
    mes_nom = '';
    
    for vmes, vmonto,vmes_nom
    In select EXTRACT(month from t.fecha), t.monto,
    case EXTRACT(month from t.fecha)
        when 1 then 'Enero' when 2 then 'Febrero' when 3 then 'Marzo'
        when 4 then 'Abril' when 5 then 'Mayo' when 6 then 'Junio'
        when 7 then 'Julio' when 8 then 'Agosto' when 9 then 'Septiembre'
        when 10 then 'Octubre' when 11 then 'Noviembre' when 12 then 'Diciembre' end
    From caja_ticket t inner join caja c on t.caja_id = c.caja_id
    Where t.fecha between vfchdesde and _fchhasta and c.teso_id = _teso_id and t.est='A'
    order by t.fecha Loop
		
    	if (mes = 0) then 
        	mes = vmes; 
            mes_nom = vmes_nom;
        end if;
        if (mes <> vmes) then
			Return Next;
            mes = vmes;
            monto = vmonto;
            mes_nom = vmes_nom;
        ELSE
        	monto = monto + vmonto;	  
        end if;
        acumulado := acumulado + monto;	
       
    End Loop;
	return next;
End
$$;


ALTER FUNCTION sam.uf_caja_esta_anual(_teso_id integer, _anio integer, _fchhasta date) OWNER TO postgres;

--
-- TOC entry 5650 (class 0 OID 0)
-- Dependencies: 738
-- Name: FUNCTION uf_caja_esta_anual(_teso_id integer, _anio integer, _fchhasta date); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_caja_esta_anual(_teso_id integer, _anio integer, _fchhasta date) IS 'Determina los montos cobrados por mes';


--
-- TOC entry 739 (class 1255 OID 5282700)
-- Name: uf_caja_esta_anual_cta(integer, integer, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_esta_anual_cta(_teso_id integer, _anio integer, _fchhasta date) RETURNS TABLE(cta_id smallint, cta_nom character varying, ene numeric, feb numeric, mar numeric, abr numeric, may numeric, jun numeric, jul numeric, ago numeric, sep numeric, oct numeric, nov numeric, dic numeric, total numeric)
    LANGUAGE plpgsql
    AS $$
declare
    vfchdesde date;
begin

	-- Determina los montos cobrados por mes y cuenta

    If (_anio <> EXTRACT(year from _fchhasta)) Then
    	Raise Exception 'El año no coincide con la fecha hasta.';
    End If;

    vfchdesde := to_date(_anio::varchar || '0101','YYYYMMDD');

    RETURN QUERY Select d.cta_id, cu.nombre_redu,
        sum(case when EXTRACT(month from t.fecha) = 1 then d.monto else 0 end),
        sum(case when EXTRACT(month from t.fecha) = 2 then d.monto else 0 end),
        sum(case when EXTRACT(month from t.fecha) = 3 then d.monto else 0 end),
        sum(case when EXTRACT(month from t.fecha) = 4 then d.monto else 0 end),
        sum(case when EXTRACT(month from t.fecha) = 5 then d.monto else 0 end),
        sum(case when EXTRACT(month from t.fecha) = 6 then d.monto else 0 end),
        sum(case when EXTRACT(month from t.fecha) = 7 then d.monto else 0 end),
        sum(case when EXTRACT(month from t.fecha) = 8 then d.monto else 0 end),
        sum(case when EXTRACT(month from t.fecha) = 9 then d.monto else 0 end),
        sum(case when EXTRACT(month from t.fecha) = 10 then d.monto else 0 end),
        sum(case when EXTRACT(month from t.fecha) = 11 then d.monto else 0 end),
        sum(case when EXTRACT(month from t.fecha) = 12 then d.monto else 0 end),
        sum(d.monto)
    From caja_ticket t
    Inner Join caja_ticket_det d on t.ticket = d.ticket
    Inner Join caja c on t.caja_id = c.caja_id
    Inner Join cuenta cu on d.cta_id = cu.cta_id
    Where  t.fecha between vfchdesde and _fchhasta and c.teso_id = _teso_id
    Group by d.cta_id, cu.nombre_redu
    Order by cu.nombre_redu;

End
$$;


ALTER FUNCTION sam.uf_caja_esta_anual_cta(_teso_id integer, _anio integer, _fchhasta date) OWNER TO postgres;

--
-- TOC entry 5651 (class 0 OID 0)
-- Dependencies: 739
-- Name: FUNCTION uf_caja_esta_anual_cta(_teso_id integer, _anio integer, _fchhasta date); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_caja_esta_anual_cta(_teso_id integer, _anio integer, _fchhasta date) IS 'Determina los montos cobrados por mes y por cuenta';


--
-- TOC entry 741 (class 1255 OID 5282701)
-- Name: uf_caja_esta_bco_cta(integer, date, date, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_esta_bco_cta(_teso_id integer, _fchdesde date, _fchhasta date, _efch integer) RETURNS TABLE(bco_ent smallint, nombre character varying, bcocta_id integer, titular character varying, monto numeric)
    LANGUAGE plpgsql
    AS $$
declare
    vbco_ent smallint;
    vnombre varchar(40);
    vbcocta_id integer;
    vtitular varchar(50);
    vopera integer;
    vmonto numeric(12,2);
    vopera_monto numeric(12,2);
    vbcocta_id_ant integer;

    ssql varchar;
begin

    -- Devuelve Montos a depositar por cuentas bancarias segun partidas presupuestarias
    vbcocta_id_ant = 0; monto = 0;

    if _efch = 1 then
    	ssql = 'Select e.bco_ent,e.nombre,b.bcocta_id,b.titular,sum(d.monto), t.opera, max(op.mont)';
        ssql = ssql || ' From Caja_Ticket t Inner Join caja a On t.caja_id=a.caja_id Inner Join Caja_ticket_Det d On t.ticket=d.ticket';
        ssql = ssql || ' Inner Join Cuenta c On d.cta_id = c.cta_id Inner Join fin.part p on c.part_id=p.part_id';
        ssql = ssql || ' Left Join fin.banco_cta b on p.bcocta_id=b.bcocta_id';
        ssql = ssql || ' Left Join banco_entidad e on case when b.cbu=' || chr(39) || chr(39) || ' then 0 else substr(b.cbu,1,3)::smallint end =e.bco_ent';
        ssql = ssql || ' Inner Join (Select distinct opera From caja_opera_mdp Where mdp in (1,3) ) mm on t.opera=mm.opera';
        ssql = ssql || ' Inner join (Select opera, sum(o.monto) mont from caja_opera_mdp o where o.mdp in (1,3) group by opera) op on t.opera=op.opera';
        ssql = ssql || ' Where t.Fecha between ' || chr(39) || _fchdesde || chr(39) || ' and ' || chr(39) || _fchhasta || chr(39) || ' and t.Est=' || chr(39) || 'A' || chr(39) || ' and a.teso_id = ' || _teso_id;
        ssql = ssql || ' Group By b.bcocta_id,e.bco_ent,e.nombre,b.bcocta_id,b.titular, t.opera Order By b.bcocta_id, t.opera';
    else
    	ssql = 'Select e.bco_ent,e.nombre,b.bcocta_id,b.titular,sum(d.monto),0,sum(d.monto)';
        ssql = ssql || ' From Caja_Ticket t Inner Join caja a On t.caja_id=a.caja_id ';
        ssql = ssql || ' Inner Join Caja_ticket_Det d On t.ticket=d.ticket Inner Join Cuenta c On d.cta_id = c.cta_id';
        ssql = ssql || ' Inner Join fin.part p on c.part_id=p.part_id Left Join fin.banco_cta b on p.bcocta_id=b.bcocta_id';
        ssql = ssql || ' Left Join banco_entidad e on case when b.cbu=' || chr(39) || chr(39) || ' then 0 else substr(b.cbu,1,3)::smallint end =e.bco_ent';
        ssql = ssql || ' Where t.Fecha between ' || chr(39) || _fchdesde || chr(39) || ' and ' || chr(39) || _fchhasta || chr(39) || ' and t.Est=' || chr(39) || 'A' || chr(39) || ' and a.teso_id = ' || _teso_id;
        ssql = ssql || ' Group By e.bco_ent,e.nombre,b.bcocta_id,b.titular, t.opera Order By e.bco_ent';
    end if;

    For vbco_ent, vnombre, vbcocta_id, vtitular, vmonto, vopera, vopera_monto
     In Execute ssql Loop
	If (vbcocta_id_ant = 0) Then vbcocta_id_ant = vbcocta_id; End If;

	If (vbcocta_id_ant = vbcocta_id) Then
	   -- Comparo con el monto de la operacion para medio de pago efectivo y cheque
	   If (vopera_monto < vmonto) Then
	      vmonto = vopera_monto;

	   End If;
	   -- acumulo monto de las cuentas
	   monto = monto + vmonto;
	Else
	   -- cuando cambia la cuenta bancaria, verifico y devuelvo datos
	   Return Next;
	   monto = 0;
	   If (vopera_monto < vmonto) Then
	      vmonto = vopera_monto;
	   End If;
	   -- acumulo monto de las cuentas
	   monto = monto + vmonto;
	End If;

	bco_ent = vbco_ent;
	nombre = vnombre;
	bcocta_id = vbcocta_id;
	titular = vtitular;
	vbcocta_id_ant = vbcocta_id;
    End Loop;

    -- Devuelvo los datos del ultimo
    Return Next;


End
$$;


ALTER FUNCTION sam.uf_caja_esta_bco_cta(_teso_id integer, _fchdesde date, _fchhasta date, _efch integer) OWNER TO postgres;

--
-- TOC entry 742 (class 1255 OID 5282702)
-- Name: uf_caja_esta_externa(date, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_esta_externa(_fchdesde date, _fchhasta date) RETURNS TABLE(obj_id character varying, obj_nom character varying, caja_id smallint, caja_nom character varying, fecha date, cant bigint, montocobrado numeric, comision numeric)
    LANGUAGE plpgsql
    AS $$
Begin

    -- Recupera montos cobrados por Tributo.
    RETURN QUERY
    select o.obj_id,o.nombre,c.caja_id,c.nombre,op.fecha,count(*),(t.monto),op.comision
    from caja_ticket t
    inner join caja_opera op on t.opera=op.opera
    inner join caja c on t.caja_id=c.caja_id
    inner join objeto o on c.ext_num=o.obj_id
    where t.est='A' and c.teso_id=0 and op.fecha between _fchdesde and _fchhasta
    group by o.obj_id,o.nombre,c.caja_id,c.nombre,op.fecha,t.monto, op.comision
    order by o.obj_id,op.fecha;

End
$$;


ALTER FUNCTION sam.uf_caja_esta_externa(_fchdesde date, _fchhasta date) OWNER TO postgres;

--
-- TOC entry 5652 (class 0 OID 0)
-- Dependencies: 742
-- Name: FUNCTION uf_caja_esta_externa(_fchdesde date, _fchhasta date); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_caja_esta_externa(_fchdesde date, _fchhasta date) IS 'Recupera montos cobrados por Agente de cobro externo y la comisión liquidada.';


--
-- TOC entry 966 (class 1255 OID 5486655)
-- Name: uf_caja_esta_item(integer, character varying, date, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_esta_item(_teso_id integer, _sitem character varying, _fchdesde date, _fchhasta date) RETURNS TABLE(orig character varying, fecha date, trib_id smallint, trib_nom character varying, item_id smallint, item_nom character varying, cant smallint, monto numeric)
    LANGUAGE plpgsql
    AS $_$
Begin
    -- Recupera montos cobrados por item por fecha, tanto de emisión, DJ, sellado ó boleto, convenio, facilidad
	RETURN QUERY EXECUTE
	-- 1-Emision/Eventuales/Pagos Anuales
        'Select '||chr(39)||'Emis/Event'||chr(39)||'::varchar,t.fecha, tr.trib_id, tr.nombre_redu, l.item_id, i.nombre, 0::smallint,
          sum( case when t.trib_id not in (1,2,3) and t.cuota=0 then l.monto * r.cant_anio else l.monto end)
        From caja c
        Left Join caja_ticket t on c.caja_id=t.caja_id
        Left Join ctacte_liq l on t.ctacte_id=l.ctacte_id
        Left Join item i on l.item_id=i.item_id
        Left Join trib tr on t.trib_id=tr.trib_id
        Left Join resol r on t.trib_id=r.trib_id and t.anio*1000+t.cuota between r.perdesde and r.perhasta        
        Where c.teso_id=$1 and t.est = '||chr(39)||'A'||chr(39)||'
        and t.fecha between $3 and $4 and (l.item_id in ('||$2||') or $2 is null)
        Group By t.fecha,tr.trib_id,tr.nombre_redu,l.item_id,i.nombre
    UNION
        -- 2-DDJJ
        Select '||chr(39)||'DDJJ'||chr(39)||'::varchar,t.fecha, tr.trib_id, tr.nombre_redu, l.item_id, i.nombre, 0::smallint, sum(l.monto)
        From caja c
        Left Join caja_ticket t on c.caja_id=t.caja_id
        Left Join ddjj e on t.trib_id=e.trib_id and t.obj_id=e.obj_id and t.anio=e.anio and t.cuota=e.cuota and e.est='||chr(39)||'A'||chr(39)||'
        Left Join ddjj_liq l on e.dj_id=l.dj_id
        Left Join item i on l.item_id=i.item_id
        Left Join trib tr on t.trib_id=tr.trib_id
        Where c.teso_id=$1 and t.est = '||chr(39)||'A'||chr(39)||'
        and t.fecha between $3 and $4 and (l.item_id in ('||$2||') or $2 is null)
        Group By t.fecha,tr.trib_id,tr.nombre_redu,l.item_id,i.nombre
    UNION
        -- 3-Sellado/Boleto
        Select '||chr(39)||'Sell/Bol'||chr(39)||'::varchar,t.fecha, tr.trib_id, tr.nombre_redu, b.item_id, i.nombre, sum(b.cant)::smallint, sum(b.monto)
        From caja c
        Left Join caja_ticket t on c.caja_id=t.caja_id
        Inner Join caja_ticket_item b on t.ticket = b.ticket
        Left Join item i on b.item_id=i.item_id
        Left Join trib tr on t.trib_id=tr.trib_id
        Where c.teso_id=$1 and t.est = '||chr(39)||'A'||chr(39)||'
        and t.fecha between $3 and $4 and (b.item_id in ('||$2||') or $2 is null)
        Group By t.fecha,tr.trib_id,tr.nombre_redu,b.item_id,i.nombre
    UNION
        -- 4-Convenio
	Select '||chr(39)||'Convenio'||chr(39)||'::varchar,t.fecha, i.trib_id, i.nombre_redu, i.item_id, i.nombre,count(*)::smallint,sum(d.monto)
	From caja c
	Left Join caja_ticket t on c.caja_id=t.caja_id
	inner join (select i.trib_id,tr.nombre_redu,pp.plan_id,ccl.item_id,i.cta_id,i.nombre,sum(ccl.monto) monto from plan_periodo pp 
		    inner Join ctacte_liq ccl on pp.ctacte_id=ccl.ctacte_id 
		    inner join item i on ccl.item_id=i.item_id 
		    Left Join trib tr on i.trib_id =tr.trib_id 
		    group by i.trib_id,tr.nombre_redu,pp.plan_id,ccl.item_id,i.cta_id,i.nombre) i
		    on t.anio=i.plan_id
	inner join caja_ticket_det d on t.ticket=d.ticket and i.cta_id=d.cta_id
        Where c.teso_id=$1 and t.est = '||chr(39)||'A'||chr(39)||'
        and t.fecha between $3 and $4 and (i.item_id in ('||$2||') or $2 is null)
	Group By t.fecha, i.trib_id,i.nombre_redu,i.item_id,i.nombre
    UNION
        -- 5-Facilidad
	Select '||chr(39)||'Facilidad'||chr(39)||'::varchar,t.fecha, i.trib_id, i.nombre_redu, i.item_id, i.nombre,count(*)::smallint,sum(i.monto)
	From caja c
	Left Join caja_ticket t on c.caja_id=t.caja_id
	inner join (select i.trib_id,tr.nombre_redu,pp.faci_id,ccl.item_id,i.cta_id,i.nombre,sum(ccl.monto) monto from facilida_periodo pp 
		    inner Join ctacte_liq ccl on pp.ctacte_id=ccl.ctacte_id 
		    inner join item i on ccl.item_id=i.item_id 
		    Left Join trib tr on i.trib_id =tr.trib_id 
		    group by i.trib_id,tr.nombre_redu,pp.faci_id,ccl.item_id,i.cta_id,i.nombre) i
		    on t.faci_id=i.faci_id
        Where c.teso_id=$1 and t.est = '||chr(39)||'A'||chr(39)||'
        and t.fecha between $3 and $4 and (i.item_id in ('||$2||') or $2 is null)
	Group By t.fecha, i.trib_id,i.nombre_redu,i.item_id,i.nombre 
    order by 2,1,5'
    USING _teso_id, _sitem, _fchdesde, _fchhasta;

End
$_$;


ALTER FUNCTION sam.uf_caja_esta_item(_teso_id integer, _sitem character varying, _fchdesde date, _fchhasta date) OWNER TO postgres;

--
-- TOC entry 5653 (class 0 OID 0)
-- Dependencies: 966
-- Name: FUNCTION uf_caja_esta_item(_teso_id integer, _sitem character varying, _fchdesde date, _fchhasta date); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_caja_esta_item(_teso_id integer, _sitem character varying, _fchdesde date, _fchhasta date) IS 'Recupera montos cobrados por item por fecha, tanto de emisión, DJ, sellado ó boleto.';


--
-- TOC entry 743 (class 1255 OID 5282705)
-- Name: uf_caja_esta_item_boleto(integer, integer, date, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_esta_item_boleto(_teso_id integer, _ntrib integer, _fchdesde date, _fchhasta date) RETURNS TABLE(trib_id smallint, trib_nom character varying, fecha date, item_id smallint, item_nom character varying, cant smallint, pu numeric, monto numeric)
    LANGUAGE plpgsql
    AS $$
begin

    -- Devuelve el total cobrado por Item para los tributos de tipo boleto o sellado.

    RETURN QUERY
    Select t.trib_id, tr.nombre_redu, t.fecha, b.item_id, i.nombre,
        sum(b.cant)::smallint, v.monto, sum(b.monto)
    From caja_ticket t
    Inner Join caja c on t.caja_id = c.caja_id
    Inner Join trib tr on t.trib_id=tr.trib_id
    Inner Join caja_ticket_item b on t.ticket = b.ticket
    Inner Join item i on b.item_id = i.item_id
    Inner Join item_vigencia v on i.item_id = v.item_id
        and t.anio * 1000 + t.cuota between v.perdesde and v.perhasta
    Where t.fecha between _fchdesde and _fchhasta
        and (t.trib_id = _ntrib or _ntrib=0)
        and t.est ='A'
        and c.teso_id=_teso_id
    Group by t.trib_id, tr.nombre_redu, t.fecha, b.item_id, i.nombre, v.monto
    Order by t.trib_id, t.fecha, i.nombre;

End
$$;


ALTER FUNCTION sam.uf_caja_esta_item_boleto(_teso_id integer, _ntrib integer, _fchdesde date, _fchhasta date) OWNER TO postgres;

--
-- TOC entry 5654 (class 0 OID 0)
-- Dependencies: 743
-- Name: FUNCTION uf_caja_esta_item_boleto(_teso_id integer, _ntrib integer, _fchdesde date, _fchhasta date); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_caja_esta_item_boleto(_teso_id integer, _ntrib integer, _fchdesde date, _fchhasta date) IS 'Devuelve el total cobrado por Item para los tributos de tipo boleto o sellado.';


--
-- TOC entry 746 (class 1255 OID 5282706)
-- Name: uf_caja_esta_item_boleto_col(integer, integer, date, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_esta_item_boleto_col(_teso_id integer, _trib_id integer, _fchdesde date, _fchhasta date) RETURNS TABLE(fecha date, item1 character varying, cant1 smallint, monto1 numeric, item2 character varying, cant2 smallint, monto2 numeric, item3 character varying, cant3 smallint, monto3 numeric, item4 character varying, cant4 smallint, monto4 numeric, item5 character varying, cant5 smallint, monto5 numeric, item6 character varying, cant6 smallint, monto6 numeric, item7 character varying, cant7 smallint, monto7 numeric, item8 character varying, cant8 smallint, monto8 numeric, canttotal smallint, montototal numeric)
    LANGUAGE plpgsql
    AS $$
declare
    vitem_id smallint;
    item_nom varchar(20);
    item_nom_ant varchar(20);
    cant smallint;
    vmonto decimal(12,2);
    fecha_aux date;
    fecha_ant date;
    periodo integer;

begin

    -- Devuelve el total cobrado por Item para un tributo de tipo boleto o sellado.
    -- Los totales por cuenta los tira organizados en columnas

    item_nom_ant := '';
    fecha_ant :='1990/01/01';
    periodo := EXTRACT(year from _fchdesde) * 1000 + EXTRACT(month from _fchdesde);

    -- cargo item1, ......
    cant := 0;

    For item_nom In Select substr(nombre,1,20)
    From item i Left Join item_vigencia v on i.item_id=v.item_id
    Where i.trib_id=_trib_id and periodo between v.perdesde and v.perhasta
    Order By nombre Loop

        cant := cant + 1;

        If (cant=1) Then item1 := item_nom;
        ElseIf (cant=2) Then item2 := item_nom;
        ElseIf (cant=3) Then item3 := item_nom;
        ElseIf (cant=4) Then item4 := item_nom;
        ElseIf (cant=5) Then item5 := item_nom;
        ElseIf (cant=6) Then item6 := item_nom;
        ElseIf (cant=7) Then item7 := item_nom;
        ElseIf (cant=8) Then item8 := item_nom;
        End If;

    End Loop;

    -- cargo el resto
    For fecha_aux, vitem_id, item_nom, cant, vmonto
    In Select c.fecha, b.item_id, substr(i.nombre,1,20), sum(b.cant), sum(b.monto)
    From caja_ticket c
    Inner Join caja_ticket_item b on c.ticket=b.ticket
    Inner Join caja ca on c.caja_id=ca.caja_id
    Inner Join item i on b.item_id=i.item_id
    Where c.trib_id=_trib_id and c.fecha between _fchdesde and _fchhasta
        and c.est ='A' and ca.teso_id=_teso_id
    Group By c.fecha, b.item_id, i.nombre
    Order By c.fecha, i.nombre Loop

        If (item_nom_ant='' or fecha_aux<>fecha_ant) Then
            If (item_nom_ant<>'') Then
                fecha := fecha_ant;
                canttotal := cant1+cant2+cant3+cant4+cant5+cant6+cant7+cant8;
                montototal := monto1+monto2+monto3+monto4+monto5+monto6+monto7+monto8;

                Return Next;
            End If;

            cant1:=0 ; cant2:=0 ; cant3:=0 ; cant4:=0 ;
            cant5:=0 ; cant6:=0 ; cant7:=0 ; cant8:=0 ;
            monto1:=0; monto2:=0; monto3:=0; monto4:=0;
            monto5:=0; monto6:=0; monto7:=0; monto8:=0;

            fecha_ant := fecha_aux;
            item_nom_ant := item_nom;
        End If;

        If (item_nom=item1) Then cant1:=cant; monto1:=vmonto;
        ElseIf (item_nom=item2) Then cant2:=cant; monto2:=vmonto;
        ElseIf (item_nom=item3) Then cant3:=cant; monto3:=vmonto;
        ElseIf (item_nom=item4) Then cant4:=cant; monto4:=vmonto;
        ElseIf (item_nom=item5) Then cant5:=cant; monto5:=vmonto;
        ElseIf (item_nom=item6) Then cant6:=cant; monto6:=vmonto;
        ElseIf (item_nom=item7) Then cant7:=cant; monto7:=vmonto;
        ElseIf (item_nom=item8) Then cant8:=cant; monto8:=vmonto;
        End If;

    End Loop;

    If (item_nom_ant<>'') Then
        fecha := fecha_ant;
        canttotal := cant1+cant2+cant3+cant4+cant5+cant6+cant7+cant8;
        montototal := monto1+monto2+monto3+monto4+monto5+monto6+monto7+monto8;

        Return Next;
    End If;

End
$$;


ALTER FUNCTION sam.uf_caja_esta_item_boleto_col(_teso_id integer, _trib_id integer, _fchdesde date, _fchhasta date) OWNER TO postgres;

--
-- TOC entry 5655 (class 0 OID 0)
-- Dependencies: 746
-- Name: FUNCTION uf_caja_esta_item_boleto_col(_teso_id integer, _trib_id integer, _fchdesde date, _fchhasta date); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_caja_esta_item_boleto_col(_teso_id integer, _trib_id integer, _fchdesde date, _fchhasta date) IS 'Devuelve el total cobrado por Item para un tributo de tipo boleto o sellado organizados en columnas';


--
-- TOC entry 750 (class 1255 OID 5282707)
-- Name: uf_caja_esta_presup(integer, integer, date, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_esta_presup(_teso_id integer, _padre integer, _fchdesde date, _fchhasta date) RETURNS TABLE(part_id integer, formato character varying, nivel smallint, cta_id smallint, nombre character varying, mes1 numeric, mes2 numeric, mes3 numeric, mes4 numeric, mes5 numeric, mes6 numeric, mes7 numeric, mes8 numeric, mes9 numeric, mes10 numeric, mes11 numeric, mes12 numeric, total numeric)
    LANGUAGE plpgsql
    AS $$
declare
    hijos smallint;
    nombrepadre varchar(100);
    nivelpadre smallint;
    formatopadre varchar(50);
    vanio smallint;
    mes smallint;
    monto decimal(12,2);
    cta_id_new smallint;
    nombre_new varchar(100);
    mes1_p decimal(12,2);
    mes2_p decimal(12,2);
    mes3_p decimal(12,2);
    mes4_p decimal(12,2);
    mes5_p decimal(12,2);
    mes6_p decimal(12,2);
    mes7_p decimal(12,2);
    mes8_p decimal(12,2);
    mes9_p decimal(12,2);
    mes10_p decimal(12,2);
    mes11_p decimal(12,2);
    mes12_p decimal(12,2);
    mes1_t decimal(12,2);
    mes2_t decimal(12,2);
    mes3_t decimal(12,2);
    mes4_t decimal(12,2);
    mes5_t decimal(12,2);
    mes6_t decimal(12,2);
    mes7_t decimal(12,2);
    mes8_t decimal(12,2);
    mes9_t decimal(12,2);
    mes10_t decimal(12,2);
    mes11_t decimal(12,2);
    mes12_t decimal(12,2);
    total_t decimal(12,2);

    part_aux integer;
begin

    -- objeto: generar la tabla con los ingresos clasIficados según plancuenta,
    -- agrupados por mes

    -- inicilizo los valores para el total general
    mes1_t := 0; mes2_t := 0; mes3_t := 0; mes4_t := 0; mes5_t := 0; mes6_t := 0;
    mes7_t := 0; mes8_t := 0; mes9_t := 0; mes10_t := 0; mes11_t := 0; mes12_t := 0;

	-- obtengo el anio
    vanio = EXTRACT(year from _fchdesde);
    
    if _padre <> 0 then
	    select into _padre p.part_id from fin.part p where p.anio=vanio and p.nropart=_padre;	
    end if;

	-- Recorro Partidas
    For part_id, formato, nivel, nombre, hijos
    In Select p.nropart,p.formato,p.nivel,p.nombre,coalesce(min(p2.part_id),0)
    From fin.part p left join fin.part p2 on p.part_id=p2.padre
    Where p.anio=vanio and p.caracter=1 and p.padre=_padre
    Group By p.nropart,p.formato,p.nivel,p.nombre Loop

        nombrepadre := nombre;
        formatopadre := formato;
        nivelpadre := nivel;
        part_aux := part_id;

        If (hijos = 0) Then
            -- si no tiene hijos, obtengo el total por cada cuenta de ingreso
            cta_id := 0;
            mes1 := 0; mes2 := 0; mes3 := 0; mes4 := 0; mes5 := 0; mes6 := 0;
            mes7 := 0; mes8 := 0; mes9 := 0; mes10 := 0; mes11 := 0; mes12 := 0;
            mes1_p := 0; mes2_p := 0; mes3_p := 0; mes4_p := 0; mes5_p := 0; mes6_p := 0;
            mes7_p := 0; mes8_p := 0; mes9_p := 0; mes10_p := 0; mes11_p := 0; mes12_p := 0;

            For cta_id_new, nombre_new, mes, monto
            In Select d.cta_id, cu.nombre, extract(month From t.fecha), sum(d.monto)
            From caja_ticket t
            Inner Join caja_ticket_det d on t.ticket=d.ticket
            Inner Join cuenta cu on d.cta_id=cu.cta_id
            Inner Join caja ca on t.caja_id=ca.caja_id
            Where t.fecha between _fchdesde and _fchhasta
            and t.est='A' and cu.part_id = part_aux and not cu.nombre is null
            and ca.teso_id=_teso_id
            Group By d.cta_id, cu.nombre, extract(month From t.fecha)
            Order By d.cta_id, extract(month From t.fecha) Loop

                If (cta_id<>cta_id_new and cta_id<>0) Then
                    nombre := lpad('',nivel*2,' ') || cast(cta_id as varchar(5)) || ' - ' || nombre;
                    total := mes1+mes2+mes3+mes4+mes5+mes6+mes7+mes8+mes9+mes10+mes11+mes12;
                    If (total<>0) Then
                    	Return Next;
                    End If;

                    mes1_p := mes1_p + mes1;
                    mes2_p := mes2_p + mes2;
                    mes3_p := mes3_p + mes3;
                    mes4_p := mes4_p + mes4;
                    mes5_p := mes5_p + mes5;
                    mes6_p := mes6_p + mes6;
                    mes7_p := mes7_p + mes7;
                    mes8_p := mes8_p + mes8;
                    mes9_p := mes9_p + mes9;
                    mes10_p := mes10_p + mes10;
                    mes11_p := mes11_p + mes11;
                    mes12_p := mes12_p + mes12;

                    mes1:=0; mes2:=0; mes3:=0; mes4:=0; mes5:=0; mes6:=0;
                    mes7:=0; mes8:=0; mes9:=0; mes10:=0; mes11:=0; mes12:=0;
                End If;

                cta_id := cta_id_new;
                nombre := nombre_new;

                If (mes=1) Then mes1:=monto;
                ElseIf (mes=2) Then mes2:=monto;
                ElseIf (mes=3) Then mes3:=monto;
                ElseIf (mes=4) Then mes4:=monto;
                ElseIf (mes=5) Then mes5:=monto;
                ElseIf (mes=6) Then mes6:=monto;
                ElseIf (mes=7) Then mes7:=monto;
                ElseIf (mes=8) Then mes8:=monto;
                ElseIf (mes=9) Then mes9:=monto;
                ElseIf (mes=10) Then mes10:=monto;
                ElseIf (mes=11) Then mes11:=monto;
                ElseIf (mes=12) Then mes12:=monto;
                End If;

            End Loop;

            -- inserto el último hijo
            nombre := lpad('',nivel*2,' ') || cast(cta_id as varchar(5)) || ' - ' || nombre;
            total := mes1+mes2+mes3+mes4+mes5+mes6+mes7+mes8+mes9+mes10+mes11+mes12;

            If (total<>0) Then
                Return Next;
            End If;

            -- inserto el padre
            nombre := lpad('',(nivel-1)*2,' ') || nombrepadre;
            cta_id := 0;
            mes1 := mes1_p + mes1;
            mes2 := mes2_p + mes2;
            mes3 := mes3_p + mes3;
            mes4 := mes4_p + mes4;
            mes5 := mes5_p + mes5;
            mes6 := mes6_p + mes6;
            mes7 := mes7_p + mes7;
            mes8 := mes8_p + mes8;
            mes9 := mes9_p + mes9;
            mes10 := mes10_p + mes10;
            mes11 := mes11_p + mes11;
            mes12 := mes12_p + mes12;
            total := mes1+mes2+mes3+mes4+mes5+mes6+mes7+mes8+mes9+mes10+mes11+mes12;

            If (total<>0) Then
                Return Next;
            End If;

            If (nivel = 1) Then
                -- acumulo para obtener el total general
                mes1_t := mes1_t + mes1;
                mes2_t := mes2_t + mes2;
                mes3_t := mes3_t + mes3;
                mes4_t := mes4_t + mes4;
                mes5_t := mes5_t + mes5;
                mes6_t := mes6_t + mes6;
                mes7_t := mes7_t + mes7;
                mes8_t := mes8_t + mes8;
                mes9_t := mes9_t + mes9;
                mes10_t := mes10_t + mes10;
                mes11_t := mes11_t + mes11;
                mes12_t := mes12_t + mes12;
            End If;

        else

            -- si tiene hijos, uso recursividad
            mes1_p:=0; mes2_p:=0; mes3_p:=0; mes4_p:=0; mes5_p:=0; mes6_p:=0;
            mes7_p:=0; mes8_p:=0; mes9_p:=0; mes10_p:=0; mes11_p:=0; mes12_p:=0;

            part_aux := part_id;

            For part_id,formato,nivel,nombre,cta_id,
                mes1,mes2,mes3,mes4,mes5,mes6,
                mes7,mes8,mes9,mes10,mes11,mes12,total
            In Select p.part_id,p.formato,p.nivel,p.nombre,p.cta_id,
                p.mes1,p.mes2,p.mes3,p.mes4,p.mes5,p.mes6,
                p.mes7,p.mes8,p.mes9,p.mes10,p.mes11,p.mes12,p.total
            From sam.uf_caja_esta_presup(_teso_id, part_aux, _fchdesde, _fchhasta) p Loop

                Return Next;

                If (nivelpadre+1=nivel and cta_id=0) Then
                    mes1_p := mes1_p + mes1;
                    mes2_p := mes2_p + mes2;
                    mes3_p := mes3_p + mes3;
                    mes4_p := mes4_p + mes4;
                    mes5_p := mes5_p + mes5;
                    mes6_p := mes6_p + mes6;
                    mes7_p := mes7_p + mes7;
                    mes8_p := mes8_p + mes8;
                    mes9_p := mes9_p + mes9;
                    mes10_p := mes10_p + mes10;
                    mes11_p := mes11_p + mes11;
                    mes12_p := mes12_p + mes12;
                End If;
            End Loop;

            nivel := nivelpadre;
            nombre := lpad('',(nivel-1)*2,' ') || nombrepadre;
            formato := formatopadre;
            cta_id := 0;
            mes1 := mes1_p; mes2:=mes2_p; mes3:=mes3_p;
            mes4 := mes4_p; mes5:=mes5_p; mes6:=mes6_p;
            mes7 := mes7_p; mes8:=mes8_p; mes9:=mes9_p;
            mes10 := mes10_p; mes11:=mes11_p; mes12:=mes12_p;
            total := mes1+mes2+mes3+mes4+mes5+mes6+mes7+mes8+mes9+mes10+mes11+mes12;

            If (total<>0) Then
            	part_id := part_aux;
                Return Next;
            End If;

            If (nivel = 1) Then
              -- acumulo para obtener el total general
              mes1_t := mes1_t + mes1;
              mes2_t := mes2_t + mes2;
              mes3_t := mes3_t + mes3;
              mes4_t := mes4_t + mes4;
              mes5_t := mes5_t + mes5;
              mes6_t := mes6_t + mes6;
              mes7_t := mes7_t + mes7;
              mes8_t := mes8_t + mes8;
              mes9_t := mes9_t + mes9;
              mes10_t := mes10_t + mes10;
              mes11_t := mes11_t + mes11;
              mes12_t := mes12_t + mes12;
            End If;

        End If;

    End Loop;

    -- resumen general
    part_id := 0;
    formato := '';
    nivel := 0;
    cta_id := 0;
    nombre := 'total';
    mes1 := mes1_t; mes2 := mes2_t; mes3 := mes3_t;
    mes4 := mes4_t; mes5 := mes5_t; mes6 := mes6_t;
    mes7 := mes7_t; mes8 := mes8_t; mes9 := mes9_t;
    mes10 := mes10_t; mes11 := mes11_t; mes12 := mes12_t;
    total := mes1 + mes2 + mes3 + mes4 + mes5 + mes6 + mes7 + mes8 + mes9 + mes10 + mes11 + mes12;

    If (total > 0) Then
         Return Next;
    End If;

End
$$;


ALTER FUNCTION sam.uf_caja_esta_presup(_teso_id integer, _padre integer, _fchdesde date, _fchhasta date) OWNER TO postgres;

--
-- TOC entry 5656 (class 0 OID 0)
-- Dependencies: 750
-- Name: FUNCTION uf_caja_esta_presup(_teso_id integer, _padre integer, _fchdesde date, _fchhasta date); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_caja_esta_presup(_teso_id integer, _padre integer, _fchdesde date, _fchhasta date) IS 'Recupera los montos cobrados por día del mes y por cuenta presupuestaria';


--
-- TOC entry 955 (class 1255 OID 5282709)
-- Name: uf_caja_esta_presup_caja(integer, integer, date, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_esta_presup_caja(_caja_id integer, _padre integer, _fchdesde date, _fchhasta date) RETURNS TABLE(part_id integer, formato character varying, nivel smallint, cta_id smallint, nombre character varying, mes1 numeric, mes2 numeric, mes3 numeric, mes4 numeric, mes5 numeric, mes6 numeric, mes7 numeric, mes8 numeric, mes9 numeric, mes10 numeric, mes11 numeric, mes12 numeric, total numeric)
    LANGUAGE plpgsql
    AS $$
declare
    hijos smallint;
    nombrepadre varchar(100);
    nivelpadre smallint;
    formatopadre varchar(50);
    vanio smallint;
    mes smallint;
    monto decimal(12,2);
    cta_id_new smallint;
    nombre_new varchar(100);
    mes1_p decimal(12,2);
    mes2_p decimal(12,2);
    mes3_p decimal(12,2);
    mes4_p decimal(12,2);
    mes5_p decimal(12,2);
    mes6_p decimal(12,2);
    mes7_p decimal(12,2);
    mes8_p decimal(12,2);
    mes9_p decimal(12,2);
    mes10_p decimal(12,2);
    mes11_p decimal(12,2);
    mes12_p decimal(12,2);
    mes1_t decimal(12,2);
    mes2_t decimal(12,2);
    mes3_t decimal(12,2);
    mes4_t decimal(12,2);
    mes5_t decimal(12,2);
    mes6_t decimal(12,2);
    mes7_t decimal(12,2);
    mes8_t decimal(12,2);
    mes9_t decimal(12,2);
    mes10_t decimal(12,2);
    mes11_t decimal(12,2);
    mes12_t decimal(12,2);
    total_t decimal(12,2);

    part_aux integer;
begin

    -- objeto: generar la tabla con los ingresos clasIficados según plancuenta,
    -- agrupados por mes

    -- inicilizo los valores para el total general
    mes1_t := 0; mes2_t := 0; mes3_t := 0; mes4_t := 0; mes5_t := 0; mes6_t := 0;
    mes7_t := 0; mes8_t := 0; mes9_t := 0; mes10_t := 0; mes11_t := 0; mes12_t := 0;

	-- obtengo el anio
    vanio = EXTRACT(year from _fchdesde);

	-- obtengo el codigo de partida padre para el año
    -- debido a que cuando se vuelve a llamar se pasa el nropart en vez del part_id
    -- el nropart es igual para todos los años, el part_id es unico
	if _padre <> 0 then
	    select into _padre p.part_id from fin.part p where p.anio=vanio and p.nropart=_padre;	
    end if;     

	-- Recorro Partidas
    For part_id, formato, nivel, nombre, hijos
    In Select p.nropart,p.formato,p.nivel,p.nombre,coalesce(min(p2.part_id),0)
    From fin.part p left join fin.part p2 on p.part_id=p2.padre
    Where p.anio=vanio and p.caracter=1 and p.padre=_padre
    Group By p.nropart,p.formato,p.nivel,p.nombre Loop

        nombrepadre := nombre;
        formatopadre := formato;
        nivelpadre := nivel;
        part_aux := part_id;

        If (hijos = 0) Then
            -- si no tiene hijos, obtengo el total por cada cuenta de ingreso
            cta_id := 0;
            mes1 := 0; mes2 := 0; mes3 := 0; mes4 := 0; mes5 := 0; mes6 := 0;
            mes7 := 0; mes8 := 0; mes9 := 0; mes10 := 0; mes11 := 0; mes12 := 0;
            mes1_p := 0; mes2_p := 0; mes3_p := 0; mes4_p := 0; mes5_p := 0; mes6_p := 0;
            mes7_p := 0; mes8_p := 0; mes9_p := 0; mes10_p := 0; mes11_p := 0; mes12_p := 0;

            For cta_id_new, nombre_new, mes, monto
            In Select d.cta_id, cu.nombre, extract(month From t.fecha), sum(d.monto)
            From caja_ticket t
            Inner Join caja_ticket_det d on t.ticket=d.ticket
            Inner Join cuenta cu on d.cta_id=cu.cta_id
            Inner Join caja ca on t.caja_id=ca.caja_id
            Where t.fecha between _fchdesde and _fchhasta
            and t.est='A' and cu.part_id = part_aux and not cu.nombre is null
            and ca.caja_id=_caja_id
            Group By d.cta_id, cu.nombre, extract(month From t.fecha)
            Order By d.cta_id, extract(month From t.fecha) Loop

                If (cta_id<>cta_id_new and cta_id<>0) Then
                    nombre := lpad('',nivel*2,' ') || cast(cta_id as varchar(5)) || ' - ' || nombre;
                    total := mes1+mes2+mes3+mes4+mes5+mes6+mes7+mes8+mes9+mes10+mes11+mes12;
                    If (total<>0) Then
                    	Return Next;
                    End If;

                    mes1_p := mes1_p + mes1;
                    mes2_p := mes2_p + mes2;
                    mes3_p := mes3_p + mes3;
                    mes4_p := mes4_p + mes4;
                    mes5_p := mes5_p + mes5;
                    mes6_p := mes6_p + mes6;
                    mes7_p := mes7_p + mes7;
                    mes8_p := mes8_p + mes8;
                    mes9_p := mes9_p + mes9;
                    mes10_p := mes10_p + mes10;
                    mes11_p := mes11_p + mes11;
                    mes12_p := mes12_p + mes12;

                    mes1:=0; mes2:=0; mes3:=0; mes4:=0; mes5:=0; mes6:=0;
                    mes7:=0; mes8:=0; mes9:=0; mes10:=0; mes11:=0; mes12:=0;
                End If;

                cta_id := cta_id_new;
                nombre := nombre_new;

                If (mes=1) Then mes1:=monto;
                ElseIf (mes=2) Then mes2:=monto;
                ElseIf (mes=3) Then mes3:=monto;
                ElseIf (mes=4) Then mes4:=monto;
                ElseIf (mes=5) Then mes5:=monto;
                ElseIf (mes=6) Then mes6:=monto;
                ElseIf (mes=7) Then mes7:=monto;
                ElseIf (mes=8) Then mes8:=monto;
                ElseIf (mes=9) Then mes9:=monto;
                ElseIf (mes=10) Then mes10:=monto;
                ElseIf (mes=11) Then mes11:=monto;
                ElseIf (mes=12) Then mes12:=monto;
                End If;

            End Loop;

            -- inserto el último hijo
            nombre := lpad('',nivel*2,' ') || cast(cta_id as varchar(5)) || ' - ' || nombre;
            total := mes1+mes2+mes3+mes4+mes5+mes6+mes7+mes8+mes9+mes10+mes11+mes12;

            If (total<>0) Then
                Return Next;
            End If;

            -- inserto el padre
            nombre := lpad('',(nivel-1)*2,' ') || nombrepadre;
            cta_id := 0;
            mes1 := mes1_p + mes1;
            mes2 := mes2_p + mes2;
            mes3 := mes3_p + mes3;
            mes4 := mes4_p + mes4;
            mes5 := mes5_p + mes5;
            mes6 := mes6_p + mes6;
            mes7 := mes7_p + mes7;
            mes8 := mes8_p + mes8;
            mes9 := mes9_p + mes9;
            mes10 := mes10_p + mes10;
            mes11 := mes11_p + mes11;
            mes12 := mes12_p + mes12;
            total := mes1+mes2+mes3+mes4+mes5+mes6+mes7+mes8+mes9+mes10+mes11+mes12;

            If (total<>0) Then
                Return Next;
            End If;

            If (nivel = 1) Then
                -- acumulo para obtener el total general
                mes1_t := mes1_t + mes1;
                mes2_t := mes2_t + mes2;
                mes3_t := mes3_t + mes3;
                mes4_t := mes4_t + mes4;
                mes5_t := mes5_t + mes5;
                mes6_t := mes6_t + mes6;
                mes7_t := mes7_t + mes7;
                mes8_t := mes8_t + mes8;
                mes9_t := mes9_t + mes9;
                mes10_t := mes10_t + mes10;
                mes11_t := mes11_t + mes11;
                mes12_t := mes12_t + mes12;
            End If;

        else

            -- si tiene hijos, uso recursividad
            mes1_p:=0; mes2_p:=0; mes3_p:=0; mes4_p:=0; mes5_p:=0; mes6_p:=0;
            mes7_p:=0; mes8_p:=0; mes9_p:=0; mes10_p:=0; mes11_p:=0; mes12_p:=0;

            part_aux := part_id;

            For part_id,formato,nivel,nombre,cta_id,
                mes1,mes2,mes3,mes4,mes5,mes6,
                mes7,mes8,mes9,mes10,mes11,mes12,total
            In Select p.part_id,p.formato,p.nivel,p.nombre,p.cta_id,
                p.mes1,p.mes2,p.mes3,p.mes4,p.mes5,p.mes6,
                p.mes7,p.mes8,p.mes9,p.mes10,p.mes11,p.mes12,p.total
            From sam.uf_caja_esta_presup_caja(_caja_id, part_aux, _fchdesde, _fchhasta) p Loop

                Return Next;

                If (nivelpadre+1=nivel and cta_id=0) Then
                    mes1_p := mes1_p + mes1;
                    mes2_p := mes2_p + mes2;
                    mes3_p := mes3_p + mes3;
                    mes4_p := mes4_p + mes4;
                    mes5_p := mes5_p + mes5;
                    mes6_p := mes6_p + mes6;
                    mes7_p := mes7_p + mes7;
                    mes8_p := mes8_p + mes8;
                    mes9_p := mes9_p + mes9;
                    mes10_p := mes10_p + mes10;
                    mes11_p := mes11_p + mes11;
                    mes12_p := mes12_p + mes12;
                End If;
            End Loop;

            nivel := nivelpadre;
            nombre := lpad('',(nivel-1)*2,' ') || nombrepadre;
            formato := formatopadre;
            cta_id := 0;
            mes1 := mes1_p; mes2:=mes2_p; mes3:=mes3_p;
            mes4 := mes4_p; mes5:=mes5_p; mes6:=mes6_p;
            mes7 := mes7_p; mes8:=mes8_p; mes9:=mes9_p;
            mes10 := mes10_p; mes11:=mes11_p; mes12:=mes12_p;
            total := mes1+mes2+mes3+mes4+mes5+mes6+mes7+mes8+mes9+mes10+mes11+mes12;

            If (total<>0) Then
            	part_id := part_aux;
                Return Next;
            End If;

            If (nivel = 1) Then
              -- acumulo para obtener el total general
              mes1_t := mes1_t + mes1;
              mes2_t := mes2_t + mes2;
              mes3_t := mes3_t + mes3;
              mes4_t := mes4_t + mes4;
              mes5_t := mes5_t + mes5;
              mes6_t := mes6_t + mes6;
              mes7_t := mes7_t + mes7;
              mes8_t := mes8_t + mes8;
              mes9_t := mes9_t + mes9;
              mes10_t := mes10_t + mes10;
              mes11_t := mes11_t + mes11;
              mes12_t := mes12_t + mes12;
            End If;

        End If;

    End Loop;

    -- resumen general
    part_id := 0;
    formato := '';
    nivel := 0;
    cta_id := 0;
    nombre := 'total';
    mes1 := mes1_t; mes2 := mes2_t; mes3 := mes3_t;
    mes4 := mes4_t; mes5 := mes5_t; mes6 := mes6_t;
    mes7 := mes7_t; mes8 := mes8_t; mes9 := mes9_t;
    mes10 := mes10_t; mes11 := mes11_t; mes12 := mes12_t;
    total := mes1 + mes2 + mes3 + mes4 + mes5 + mes6 + mes7 + mes8 + mes9 + mes10 + mes11 + mes12;

    If (total > 0) Then
         Return Next;
    End If;

End
$$;


ALTER FUNCTION sam.uf_caja_esta_presup_caja(_caja_id integer, _padre integer, _fchdesde date, _fchhasta date) OWNER TO postgres;

--
-- TOC entry 747 (class 1255 OID 5282711)
-- Name: uf_caja_esta_presup_dia(integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_esta_presup_dia(_teso_id integer, _anio integer, _mes integer) RETURNS TABLE(part_id integer, formato character varying, nivel smallint, cta_id smallint, nombre character varying, dia numeric[], total numeric)
    LANGUAGE plpgsql
    AS $$
declare
	i smallint;
    fecha date;
    cant_dias smallint;
begin
	cant_dias := case when _mes in (1,3,5,7,8,10,12) then 31
    				  when _mes in (4,6,9,11) then 30
                      when _anio % 4 = 0 then 29 else 28 End;

    For i IN 1 .. 31 Loop
    	dia[i] := 0;
    End Loop;

	For i IN 1 .. cant_dias Loop
        fecha := to_date(_anio::text || lpad(_mes::text,2,'0') || lpad(i::text,2,'0'),'YYYYMMDD');

    	For part_id,formato,nivel,cta_id,nombre,total
        In Select p.part_id,p.formato,p.nivel,p.cta_id,p.nombre,p.total
        From sam.uf_caja_esta_presup(_teso_id,0,fecha,fecha) p Loop
        	dia[i] := total;
            Return Next;
        End Loop;

        dia[i] := 0;
	End Loop;

End
$$;


ALTER FUNCTION sam.uf_caja_esta_presup_dia(_teso_id integer, _anio integer, _mes integer) OWNER TO postgres;

--
-- TOC entry 748 (class 1255 OID 5282712)
-- Name: uf_caja_esta_trib(integer, integer, date, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_esta_trib(_teso_id integer, _caja_id integer, _fchdesde date, _fchhasta date) RETURNS TABLE(trib_id smallint, trib_nom character varying, cant integer, monto numeric)
    LANGUAGE plpgsql
    AS $$
Begin

    -- Recupera montos cobrados por Tributo.
    RETURN QUERY
        -- sin Facilidades
        select t.trib_id, r.nombre, count(*)::integer, sum(t.monto)
        from caja_ticket t
        inner join trib r on t.trib_id = r.trib_id
        inner join caja c on t.caja_id = c.caja_id
        where t.fecha between _fchdesde and _fchhasta and t.est='A' and t.faci_id = 0
        and (c.teso_id = _teso_id or _teso_id = 0)
        and (t.caja_id = _caja_id or _caja_id = 0)
        group by t.trib_id, r.nombre
    UNION
        -- Tomo sólo las Facilidades
        select f.trib_id, r.nombre, count(*)::integer, sum(t.monto)
        from caja_ticket t
        inner join caja c on t.caja_id = c.caja_id
        inner join facilida f on t.faci_id=f.faci_id
        --inner join facilida_periodo f on t.anio = f.faci_id
        --inner join ctacte cc on f.ctacte_id = cc.ctacte_id
        inner join trib r on f.trib_id = r.trib_id
        where t.fecha between _fchdesde and _fchhasta and t.est='A' and t.faci_id <> 0
        and (c.teso_id = _teso_id or _teso_id = 0)
        and (t.caja_id = _caja_id or _caja_id = 0)
        group by f.trib_id, r.nombre
    Order By 1;

End
$$;


ALTER FUNCTION sam.uf_caja_esta_trib(_teso_id integer, _caja_id integer, _fchdesde date, _fchhasta date) OWNER TO postgres;

--
-- TOC entry 5657 (class 0 OID 0)
-- Dependencies: 748
-- Name: FUNCTION uf_caja_esta_trib(_teso_id integer, _caja_id integer, _fchdesde date, _fchhasta date); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_caja_esta_trib(_teso_id integer, _caja_id integer, _fchdesde date, _fchhasta date) IS 'Recupera montos cobrados por Tributo.';


--
-- TOC entry 749 (class 1255 OID 5282713)
-- Name: uf_caja_esta_trib_det(integer, integer, date, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_esta_trib_det(_teso_id integer, _trib_id integer, _fchdesde date, _fchhasta date) RETURNS TABLE(opera integer, ticket integer, fecha date, trib_id smallint, trib_nom character varying, obj_id character varying, obj_nom character varying, anio integer, cuota smallint, monto numeric, est character, num character varying, num_nom character varying)
    LANGUAGE plpgsql
    AS $$
Begin

    -- Recupera montos cobrados por Tributo Detallado.
    RETURN QUERY
        -- sin Facilidades
        select t.opera, t.ticket, t.fecha, t.trib_id, r.nombre, t.obj_id, o.nombre, t.anio, t.cuota, t.monto, t.est,t.num,ot.nombre
        from caja_ticket t
        inner join caja a on t.caja_id=a.caja_id
        inner join trib r on t.trib_id = r.trib_id
        Left Join objeto o On t.obj_id = o.obj_id
        inner join objeto ot on t.num=ot.obj_id
        where t.fecha between _fchdesde and _fchhasta and t.est='A' and t.trib_id <> 2
        and a.teso_id = _teso_id
        and (t.trib_id = _trib_id or _trib_id = 0)
    UNION
        -- Tomo sólo las Facilidades
        select t.opera, t.ticket, t.fecha, cc.trib_id, r.nombre, cc.obj_id, o.nombre, cc.anio, cc.cuota, f.nominal + f.accesor + f.multa, t.est,t.num,ot.nombre
        from caja_ticket t
        inner join caja a on t.caja_id=a.caja_id
        inner join facilida_periodo f on t.anio = f.faci_id
        inner join ctacte cc on f.ctacte_id = cc.ctacte_id
        inner join trib r on cc.trib_id = r.trib_id
        Left Join objeto o On cc.obj_id = o.obj_id
        inner join objeto ot on t.num=ot.obj_id
        where t.fecha between _fchdesde and _fchhasta and t.est='A' and t.trib_id = 2
        and a.teso_id = _teso_id
        and (cc.trib_id = _trib_id or _trib_id = 0)
    Order By 1;

End
$$;


ALTER FUNCTION sam.uf_caja_esta_trib_det(_teso_id integer, _trib_id integer, _fchdesde date, _fchhasta date) OWNER TO postgres;

--
-- TOC entry 744 (class 1255 OID 5282714)
-- Name: uf_caja_esta_trib_fecha(integer, date, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_esta_trib_fecha(_caja_id integer, _fchdesde date, _fchhasta date) RETURNS TABLE(fecha date, s character varying[])
    LANGUAGE plpgsql
    AS $$
declare
	fchaux date;
	nombre varchar(15);
    cant smallint;
    monto decimal(12,2);
    hallado boolean;
    cant_col smallint;
    i smallint;
    tit varchar(15)[20];
    mon decimal(12,2)[20];
Begin

	-- Inicializo variables
	fecha := '1900/01/01';
    cant_col := 0;
    For i IN 1..20 LOOP
        tit[i] := '';
    End Loop;


	FOR fchaux, nombre, cant, monto
    In Select c.fecha, c.nombre_redu, sum(c.xcant), sum(c.xmonto)
    From
        (-- sin Facilidades
        select t.fecha, r.nombre_redu, count(*)::integer xcant, sum(t.monto) xmonto
        from caja_ticket t inner join trib r on t.trib_id = r.trib_id
        where t.fecha between _fchdesde and _fchhasta and t.caja_id=_caja_id and t.est='A' and t.faci_id =0
        group by t.fecha, r.nombre_redu
    	UNION
        -- Tomo sólo las Facilidades
        select t.fecha, r.nombre_redu, count(*)::integer xcant, sum(t.monto) xmonto
        from caja_ticket t
        inner join facilida f on t.faci_id=f.faci_id
        inner join trib r on f.trib_id = r.trib_id
        where t.fecha between _fchdesde and _fchhasta and t.caja_id=_caja_id and t.est='A' and t.faci_id<>0
        group by t.fecha, r.nombre_redu) c
    Group By c.fecha, c.nombre_redu
    Order by c.fecha, c.nombre_redu Loop

    	if fchaux<>fecha Then
        	-- Si cambió la fecha y no es el primer registro ==> Salida
        	if fecha<>'1900/01/01'::date Then
            	-- Cargo las variables de salida
                For i IN 1..20 LOOP
    	            s[i] := trim(to_char(mon[i],'999G999G999D99'));
	            End Loop;
                Return Next;
            End If;

			fecha:=fchaux;
            For i IN 1..20 LOOP
                mon[i] := 0;
            End Loop;
        end If;

    	hallado := false;

        -- Acumulo en la columna correspondiente
        For i IN 1..20 LOOP
	        if tit[i]=nombre Then
            	mon[i] := mon[i] + monto;
                hallado := true
                exit;
            End If;
        End Loop;

		-- Si no lo encontré la columna, genero una nueva columna
		if hallado=false Then
        	cant_col := cant_col + 1;
            tit[cant_col] := nombre;
            mon[cant_col] := monto;
        End If;

    End Loop;

	-- Si hay registros generados, inserto última fila
    if cant_col>0 Then
        For i IN 1..20 LOOP
            s[i] := trim(to_char(mon[i],'999G999G999.99'));
        End Loop;
        Return Next;

        -- Inserto los títulos (hay que ordenar por fecha)
        fecha :=  '1900/01/01';
        For i IN 1..20 LOOP
            s[i] := tit[i];
        End Loop;
        Return Next;
    End If;



End
$$;


ALTER FUNCTION sam.uf_caja_esta_trib_fecha(_caja_id integer, _fchdesde date, _fchhasta date) OWNER TO postgres;

--
-- TOC entry 745 (class 1255 OID 5282715)
-- Name: uf_caja_opera_acepta(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_opera_acepta(_opera integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    vtrib_id smallint;
    ttrib smallint;
    vctacte_id integer;
    vcaja_id smallint;
    vfchcaja date;
    vticket integer;
    vanio integer;
    vcuota smallint;
    vucm smallint;
	vusrcod smallint;
    cant smallint;
    tcaja smallint;
    topera smallint;
    vfaci_id integer;
    vsemestre smallint;
    vest varchar;
    _obj_id varchar;
    _cuota smallint;
    _ctacte_id integer;
    _ctacte_id_1 integer;
    ixcuo integer;
begin

	-- Acepta una operación de Caja.
    -- Recorre los tickets, actualiza ctacte y realiza acciones especiales

    For vticket, vctacte_id, vcaja_id, vfchcaja, vtrib_id, ttrib, vanio, vcuota, vucm, vfaci_id, vusrcod
    In Select c.ticket, c.ctacte_id, c.caja_id, c.fecha, c.trib_id, t.tipo, c.anio, c.cuota, t.ucm, c.faci_id, c.usrmod
    From caja_ticket c Inner Join Trib t on c.trib_id=t.trib_id
    where c.opera=_opera Loop

		-- Si es un pago a cuenta, debo ver si existe ctacte_id y actualizar ctacte_pagocta
        -- Lo tengo que hacer antes de insertar el detalle, para caso que no exista ctacte.
        If vtrib_id = 10 Then
        	vctacte_id := sam.uf_ctacte_pagocta_imputa(vanio,vctacte_id,vfchcaja,vusrcod);
        End If;

    	-- Si el tributo no es Sellado o Boleto, actualizo la CtaCte y CteCte_Det
    	If (ttrib<>6 and ttrib<>7) Then
            If (vtrib_id=10) Then
            	topera:= 17;
            Else
                Select Into tcaja c.tipo From caja c Where c.caja_id=vcaja_id;
                If (tcaja in (3,4,5)) Then
                	topera := 5;
                Else
                	topera := 3;
                End If;
			End If;

 			vSemestre= 0;
            If (vcuota in (61,62,63,64)) Then
            	Select Into vSemestre coalesce(count(*),0) from ctacte_sem s where s.ctacte_id= vctacte_id;
            End If;

            -- Para pago semestral o por trimestre
            If (vSemestre>0) then
            	-- guardo en _cuota la cuota inicial
            	_cuota := ((vcuota-60)* 3)-2;
                select into _obj_id c.obj_id from ctacte c where c.ctacte_id=vctacte_id;

                For ixcuo In _cuota.._cuota+2 Loop
                	Select Into _ctacte_id, vest c.ctacte_id, c.est from ctacte c
                	where c.trib_id=vtrib_id and c.obj_id=_obj_id and c.anio=vanio and c.cuota=ixcuo;

                    --Recupero ctacte_id de la cuota 1
                    Select Into _ctacte_id_1 c.ctacte_id from ctacte c
                    Where c.trib_id=vtrib_id and c.obj_id=_obj_id and c.anio=vanio and c.cuota=1;

                    -- Si no existe el periodo en la ctacte, lo genero en base a la cuota 1
                    If (_ctacte_id is null Or vest='B') Then
                      If (_ctacte_id is null) Then
                    	Insert into ctacte select nextval('seq_ctacte_id'::regclass),c.trib_id,c.tobj,c.obj_id,
                          c.subcta,c.anio,ixcuo,c.ucm,c.nominal,0,c.multa,'D',current_timestamp,v.fchvenc2,null,0,
                          c.montovenc1,c.montovenc2,0,c.texto_id,'','',current_timestamp,vusrcod
                        From ctacte c
                        Inner Join trib_venc v on v.trib_id=c.trib_id and v.anio=c.anio and v.cuota=ixcuo
                        Where c.ctacte_id=_ctacte_id_1;

                        Select Into _ctacte_id c.ctacte_id from ctacte c
                		Where c.trib_id=vtrib_id and c.obj_id=_obj_id and c.anio=vanio and c.cuota=ixcuo;
                      End If;

                      Insert Into ctacte_det select _ctacte_id,d.topera,d.comprob,d.cta_id,d.debe,d.haber,d.fecha,'A',current_timestamp,vusrcod
                        From ctacte_det d Where d.ctacte_id = _ctacte_id_1 and d.topera=1 and d.est='A';

                      Insert Into ctacte_liq select _ctacte_id,l.orden,l.item_id,l.param1,l.param2,l.param3,l.param4,l.monto
                        From ctacte_liq l Where l.ctacte_id = _ctacte_id_1;

                    End If;

                    Insert Into ctacte_det
                		Select _ctacte_id,topera,t.ticket,d.cta_id,
		            	case when c.tcta in (2,3) and (vtrib_id<> 6) then (d.monto/3) else 0 end as debe,
        	         	(d.monto/3) as haber,
            			t.fecha, 'A', t.fchmod,t.usrmod
            			From caja_ticket t inner join caja_ticket_det d on t.ticket=d.ticket
            			Inner Join cuenta c on d.cta_id=c.cta_id
            			Where t.ticket=vticket;

            		-- Actualizo el UCM si corresponde
            		If (vucm > 0) Then
                		Perform sam.uf_ctacte_ucm(_ctacte_id);
            		End If;

            		-- Ejecuto el Procedimiento para Corregir la CtaCte
            		Perform sam.uf_ctacte_ajuste(_ctacte_id);

            		-- Actualizo el Nro de la Caja en la CtaCte
            		Update CtaCte c Set Caja_Id = vcaja_id Where c.CtaCte_Id = _ctacte_id;
                End Loop;

            ElseIf (vcuota= 0 and vtrib_id <> 1 and vtrib_id <> 3 and vtrib_id <> 10 and vtrib_id <> 12 and vtrib_id <> 7 and vfaci_id = 0) Then
              	-- Para el pago anual obtengo la cantidad de cuotas en el año
                Select Into _cuota r.cant_anio From resol r
                where r.trib_id=vtrib_id and vanio*1000+vcuota BETWEEN r.perdesde and r.perhasta;

                Select into _obj_id c.obj_id from ctacte c where c.ctacte_id=vctacte_id;

                For ixcuo In 1.._cuota Loop
                	Select Into _ctacte_id, vest c.ctacte_id, c.est from ctacte c
                	where c.trib_id=vtrib_id and c.obj_id=_obj_id and c.anio=vanio and c.cuota=ixcuo;

                    --Recupero ctacte_id de la cuota 1
                    Select Into _ctacte_id_1 c.ctacte_id from ctacte c
                    Where c.trib_id=vtrib_id and c.obj_id=_obj_id and c.anio=vanio and c.cuota=1;

					raise notice '%-%',_ctacte_id_1,ixcuo;

                    -- Si no existe el periodo en la ctacte, lo genero en base a la cuota 1
                    If (_ctacte_id is null Or vest='B') Then
                      If (_ctacte_id is null) Then
                    	Insert into ctacte select nextval('seq_ctacte_id'::regclass),c.trib_id,c.tobj,c.obj_id,
                          c.subcta,c.anio,ixcuo,c.ucm,c.nominal,0,c.multa,'D',current_timestamp,v.fchvenc2,null,0,
                          c.montovenc1,c.montovenc2,0,c.texto_id,'','',current_timestamp,vusrcod
                        From ctacte c
                        Inner Join trib_venc v on v.trib_id=c.trib_id and v.anio=c.anio and v.cuota=ixcuo
                        Where c.ctacte_id=_ctacte_id_1;

                        Select Into _ctacte_id c.ctacte_id from ctacte c
                		Where c.trib_id=vtrib_id and c.obj_id=_obj_id and c.anio=vanio and c.cuota=ixcuo;
                      End If;

                      Insert Into ctacte_det select _ctacte_id,d.topera,d.comprob,d.cta_id,d.debe,d.haber,d.fecha,'A',current_timestamp,vusrcod
                      From ctacte_det d Where d.ctacte_id = _ctacte_id_1 and d.topera=1 and d.est='A';

                      Insert Into ctacte_liq select _ctacte_id,l.orden,l.item_id,l.param1,l.param2,l.param3,l.param4,l.monto
                      From ctacte_liq l Where l.ctacte_id = _ctacte_id_1;
                    End If;

                    Insert Into ctacte_det
                		Select _ctacte_id,topera,t.ticket,d.cta_id,
		            	case when c.tcta in (2,3) and (vtrib_id<> 6) then (d.monto/_cuota) else 0 end as debe,
        	         	(d.monto/_cuota) as haber,
            			t.fecha, 'A', t.fchmod,t.usrmod
            			From caja_ticket t inner join caja_ticket_det d on t.ticket=d.ticket
            			Inner Join cuenta c on d.cta_id=c.cta_id
            			Where t.ticket=vticket;

            		-- Actualizo el UCM si corresponde
            		If (vucm > 0) Then
                		Perform sam.uf_ctacte_ucm(_ctacte_id);
            		End If;

            		-- Ejecuto el Procedimiento para Corregir la CtaCte
            		Perform sam.uf_ctacte_ajuste(_ctacte_id);

            		-- Actualizo el Nro de la Caja en la CtaCte
            		Update CtaCte c Set Caja_Id = vcaja_id Where c.CtaCte_Id = _ctacte_id;
                end loop;

            ElseIf (vctacte_id > 0) Then
            	-- Inserto la operación de Pago en CtaCte
            	Insert Into CtaCte_Det
            	Select vctacte_id,topera,t.ticket,d.cta_id,
            	case when c.tcta in (2,3) and trib_id<> 6 then d.monto else 0 end as debe, d.monto as haber,
            	t.fecha, 'A', t.fchmod,t.usrmod
            	From caja_ticket t inner join caja_ticket_det d on t.ticket=d.ticket
            	Inner Join cuenta c on d.cta_id=c.cta_id
            	Where t.ticket=vticket;

            	-- Actualizo el UCM si corresponde
            	If (vucm > 0) Then
                	Perform sam.uf_ctacte_ucm(vctacte_id);
            	End If;

            	-- Ejecuto el Procedimiento para Corregir la CtaCte
            	Perform sam.uf_ctacte_ajuste(vctacte_id);

            	-- Actualizo el Nro de la Caja en la CtaCte
            	Update CtaCte c Set Caja_Id = vcaja_id Where c.CtaCte_Id = vctacte_id;
		 	End If;
        End If;

		-- Si es un recibo
        If vtrib_id = 12 Then


        -- Si es un Convenio, efectúo la Imputación si corresponde
        ElseIf vtrib_id = 1 Then
            -- verifico si se pagaron todas las cuotas
            Select Into Cant count(*) from CtaCte t where t.trib_id=1 and t.anio=vanio and t.est='D';

            If cant = 0 Then
                Perform sam.uf_plan_imputa(vanio,vusrcod);
            End If;

		-- Si es una Facilidad, efectúo la Imputación
        ElseIf vfaci_id <> 0 Then
            Perform sam.uf_facilida_imputar(vfaci_id,vusrCod,vcaja_id);

        End If;

    End Loop;

End
$$;


ALTER FUNCTION sam.uf_caja_opera_acepta(_opera integer) OWNER TO postgres;

--
-- TOC entry 751 (class 1255 OID 5282717)
-- Name: uf_caja_pagoold(integer, character varying, integer, integer, integer, date, bigint, character varying, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_pagoold(_trib_id integer, _obj_id character varying, _subcta integer, _anio integer, _cuota integer, _fchpago date, _comprob bigint, _obs character varying, _usr_id integer, _reg_audit integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	vctacte_id integer;
	vfchvenc date;
    vest varchar(1);
	vtcta smallint;
	vcta_id smallint;
	vmonto decimal(12,2);
	montototal decimal(12,2);
    cant smallint;
BEGIN
    Select into vctacte_id, vfchvenc, vest c.ctacte_id, c.fchvenc, c.est From ctacte c
    where c.trib_id=_trib_id and c.obj_id=_obj_id and c.subcta=_subcta and c.anio=_anio and c.cuota=_cuota;

	If (NOT FOUND) Then
    	raise exception 'El Período no existe en la CtaCte';
	End If;

	If (vest<>'D') Then
    	raise exception 'Estado incorrecto, no se encuentra en Deuda';
    End If;

    For vtcta, vcta_id, vmonto In Select c.tcta, c.cta_id, sum(c.monto)
    from sam.uf_caja_det(vctacte_id, vfchvenc, _fchpago,0,0) c
	Group By c.tcta, c.cta_id
	Order By cta_id Loop
        If (vtcta=3) Then
        	Select Into cant count(*) From ctacte_det c where c.ctacte_id=vctacte_id and c.topera=1 and c.cta_id=vcta_id;
            If (cant>0) Then -- Si el interes ya se encuentra liquidado, grabo sólo en el haber
              Insert Into ctacte_det Values
                (vctacte_id, 3, _comprob, vcta_id, 0, vmonto, _fchpago, 'A', current_timestamp, _usr_id);
			Else
              Insert Into ctacte_det Values
                (vctacte_id, 3, _comprob, vcta_id, vmonto, vmonto, _fchpago, 'A', current_timestamp, _usr_id);
            End If;
        Else
            Insert Into ctacte_det Values
            (vctacte_id, 3, _comprob, vcta_id, 0, vmonto, _fchpago, 'A', current_timestamp, _usr_id);
		End If;
        montototal = montototal + vmonto;
    End Loop;

    perform sam.uf_ctacte_ajuste(vctacte_id);

    -- Actualizo el numero de la caja
    update ctacte c set caja_id = -3 where c.ctacte_id = vctacte_id;

    If _trib_id = 1 Then
    	-- verifico si se pagaron todas las cuotas para imputar el convenio
        Select Into Cant count(*) from CtaCte t where t.trib_id=1 and t.anio=_anio and t.est='D';

        If cant = 0 Then
        	Perform sam.uf_plan_imputa(_anio,_usr_id);
        End If;
    End If;

    -- Registro el pago para las auditorías
    If (_reg_audit = 1) Then
      Insert Into caja_pagoold Values (nextval('seq_caja_pagoold'::regclass),_obj_id,_trib_id,
        _anio, _cuota, _fchpago, _comprob,_obs, current_timestamp, _usr_id);
	End If;
End
$$;


ALTER FUNCTION sam.uf_caja_pagoold(_trib_id integer, _obj_id character varying, _subcta integer, _anio integer, _cuota integer, _fchpago date, _comprob bigint, _obs character varying, _usr_id integer, _reg_audit integer) OWNER TO postgres;

--
-- TOC entry 752 (class 1255 OID 5282718)
-- Name: uf_caja_ticket_ajuste(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_caja_ticket_ajuste(_ticket integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    vfecha date;
    vest varchar(1);
    vfchmod date;
    vusrmod smallint;
    vplan_id integer;
    vcuota smallint;
    vctacte_id integer;
    vcapital numeric(12,2);
    vfinancia numeric(12,2);
    monto_ticket numeric(12,2);

    vnominal numeric(12,2);
    vaccesor numeric(12,2);
    vmulta numeric(12,2);
    vanticipo numeric(12,2);
    vsellado numeric(12,2);
    capital_ins numeric(12,2);


    descnominal numeric(12,2);
    descmulta numeric(12,2);
    planporc numeric;
    accesor_cuota numeric(12,2);

    cant smallint;
    vtplan smallint;
    vtcta smallint;

    -- Retorno
    vcta_id smallint;
    vcta_monto numeric(12,2);

Begin

    For vfecha,vest,vfchmod,vusrmod,vplan_id,vcuota,vctacte_id,vcapital,vfinancia,monto_ticket
    in select t.fecha,t.est,t.fchmod,t.usrmod,pc.plan_id,t.cuota,t.ctacte_id,pc.capital,pc.financia,t.monto
    from caja_ticket t inner join plan_cuota pc on t.ctacte_id=pc.ctacte_id
    where t.trib_id=1 and t.ticket = _ticket
    loop

        --Borro el detalle del ticket y del pago de ctacte
        Delete From caja_ticket_det d where d.ticket=_ticket;
        --Delete From ctacte_det d where d.ctacte_id=ctacte_id and topera=3 and comprob=ticket;

        Select into vsellado,vanticipo,vtplan,descnominal,descmulta
        p.sellado,p.anticipo,p.tplan,p.descnominal,p.descmulta
        from plan p where p.plan_id=vplan_id;

        --Inserto el interés de la cuota si corresponde
        If monto_ticket>vcapital+vfinancia+vsellado Then
            vcta_id:=53;
            vcta_monto:=monto_ticket-(vcapital+vfinancia+vsellado);

            insert into caja_ticket_det values (_ticket,vcta_id,vcta_monto);
            --insert into ctacte_det values (ctacte_id,3,ticket,cta_id,cta_monto,cta_monto,fecha,est,fchmod,usrmod);
        End If;


		-- Me fijo si hay registros en plan_periodo
		Select Into cant count(*) from plan_periodo pp where pp.plan_id=vplan_id;

        if cant = 0 Then	-- No hay períodos ==> uso la cuenta de atrasada ???

			raise notice 'No hay plan_periodo %',vplan_id ;

            vcta_id=32;
            vcta_monto:=vcapital-accesor_cuota;
            insert into caja_ticket_det values (_ticket,vcta_id,vcta_monto);
            --insert into ctacte_det values (ctacte_id,3,ticket,cta_id,0,cta_monto,fecha,est,fchmod,usrmod);

        Else

        	raise notice 'Hay plan_periodo %',vplan_id ;

            --Obtengo el total de accesor, nominal y multa
            Select into vaccesor,vnominal,vmulta
            sum(pp.accesor),sum(pp.nominal),sum(pp.multa)
            from plan_periodo pp where pp.plan_id=vplan_id;

            --Determino el accesorio de la cuota
            capital_ins:=0;
            planporc := vcapital / (vaccesor+vnominal+vmulta);

            If vaccesor>0 Then
                vcta_id=111; -- 111 en la cuenta de recargo general

                accesor_cuota := round(planporc * vaccesor,2);
                capital_ins:=capital_ins+accesor_cuota;

                insert into caja_ticket_det values (_ticket,vcta_id,accesor_cuota);
            End If;

            -- Recupero todas las cuentas que intervienen segun los periodos incluidos
            For vcta_id, vtcta, vcta_monto
            In Select case when cc.anio<extract(year from current_date) then c.cta_id_atras else d.cta_id end,
            c.tcta, sum(d.debe)
            from ctacte_det d inner join cuenta c on d.cta_id = c.cta_id
            left join cuenta ca on c.cta_id_atras=ca.cta_id
            inner join plan_periodo pp on d.ctacte_id=pp.ctacte_id
            inner join ctacte cc on pp.ctacte_id=cc.ctacte_id
            where pp.plan_id = vplan_id and d.est = 'A' and c.tcta in (1,2,4)
            group by 1, 2 order by 1 desc
            Loop

                if (not vplan_id between 8278 and 11239) Then
                	If (vtcta=4 and descmulta>0) then -- aplico quita
                    	vcta_monto = vcta_monto * (1-descmulta/100);
               		Elseif (descnominal>0) then
                    	vcta_monto = vcta_monto * (1-descnominal/100);
                	End If;
                End If;

                vcta_monto := round(planporc * vcta_monto,2);
                capital_ins:=capital_ins+vcta_monto;

                insert into caja_ticket_det values (_ticket,vcta_id,vcta_monto);

            End Loop;

            -- en la ultima cuenta ajusto la diferencia
            update caja_ticket_det d set monto = d.monto + (vcapital - capital_ins)
            where d.ticket=_ticket and d.cta_id=vcta_id;

        End If;

        -- Inserto el monto correspondiente a financia
        If (vfinancia > 0) Then
            vcta_id=102;
            vcta_monto:=financia;
            insert into caja_ticket_det values (_ticket,vcta_id,vcta_monto);
        End If;

        -- Inserto el sellado si corresponde
        If vsellado>0 and ((vanticipo>0 and vcuota=0) or (vanticipo=0 and vcuota=1)) Then
            vcta_id=21;
            vcta_monto:=vsellado;
            insert into caja_ticket_det values (_ticket,vcta_id,vcta_monto);
        End If;

    End Loop;

End
$$;


ALTER FUNCTION sam.uf_caja_ticket_ajuste(_ticket integer) OWNER TO postgres;

--
-- TOC entry 753 (class 1255 OID 5282720)
-- Name: uf_calc_accesor(integer, character varying, integer, integer, numeric, numeric, date, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_calc_accesor(_trib_id integer, _obj_id character varying, _subcta integer, _periodo integer, _nominal numeric, _nominalcub numeric, _fchvenc date, _fchpago date) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
declare
    fchvenc_usar date;
    fchpago_usar date;
	calc_rec smallint;
	accesor decimal(9,2);
    tipo smallint;
    cant smallint;
BEGIN
	-- función que devuelve el monto por accesorios, llama a las funciones
	-- de cálculo de interes ó descuento según las fechas de pago y vencimiento
	tipo := 0;
    accesor := 0;

	If (_fchpago > _fchvenc) Then
      -- me fijo si tiene excepción de recargo
      Select Into fchpago_usar, tipo e.fchusar, e.tipo From ctacte_excep e
      where e.trib_id=_trib_id and e.obj_id=_obj_id and e.subcta=_subcta
      and e.anio*1000+e.cuota=_periodo and e.tipo=3 and e.fchlimite>=_fchpago;

      fchpago_usar := case when fchpago_usar is null then _fchpago else fchpago_usar end;
    Else
      fchpago_usar := _fchpago;
	End If;

	-- Corro la fecha al primer día habil
	fchvenc_usar := sam.uf_calc_diahabil(_fchvenc);

	If (_trib_id not in (1,2,3) and substr(cast(_periodo as varchar(8)),5,3) = '000') Then
		-- si es pago anual no se calculan los accesorios
		accesor = 0;
	Else
		-- me fijo si corresponde interes o descuento
		If (fchpago_usar > fchvenc_usar) Then
			-- me fijo si se calculo interés al tributo
			Select Into calc_rec t.calc_rec From trib t where t.trib_id=_trib_id;

			If (calc_rec=1) Then
				accesor := sam.uf_calc_interes(_trib_id,_periodo,_nominal-_nominalcub, fchvenc_usar, fchpago_usar);
                --accesor := sam.uf_calc_interes(nominal-nominalcub, fchvenc_usar, fchpago_usar);
            End If;
		Else
	        Select Into cant count(*) From ctacte_excep e
            where e.trib_id=_trib_id and e.obj_id=_obj_id
            and e.subcta=_subcta and e.anio*1000+e.cuota=_periodo and e.tipo=2;

        	If (cant=0) Then
				accesor := sam.uf_calc_desc(_trib_id, _obj_id, _periodo, _nominal-_nominalcub, fchpago_usar);
            Else
            	accesor := 0;
            End If;
        End If;
	End If;

    Return coalesce(accesor,0);
End
$$;


ALTER FUNCTION sam.uf_calc_accesor(_trib_id integer, _obj_id character varying, _subcta integer, _periodo integer, _nominal numeric, _nominalcub numeric, _fchvenc date, _fchpago date) OWNER TO postgres;

--
-- TOC entry 950 (class 1255 OID 5317073)
-- Name: uf_calc_act(integer, numeric, date, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_calc_act(_trib_id integer, _nominal numeric, _fchvenc date, _fchpago date) RETURNS TABLE(cta_id smallint, cta_nom character varying, tcta smallint, monto numeric)
    LANGUAGE plpgsql
    AS $$
declare
    vcalc_act smallint;
    vcta_id smallint;
    vindini numeric(5,3);
    vindfin numeric(5,3);
    vindice numeric(5,3);
begin
    -- Función que devuelve el monto de actualización de una deuda dada,
    -- junto con la cuenta a imputar, según el tributo.

    vindice = 0;

    -- Obtengo los datos del tributo
    Select into vcalc_act, cta_id t.calc_act, t.cta_id_act From trib t Where t.trib_id=_trib_id;

    If vcalc_act<>0 Then

        -- Si no esta definida la cuenta de actualizaci'on, tomo la cuenta general
        If cta_id=0 Then
            Select into cta_id c.cta_id_act From sam.config c;
        End If;

        -- Obtengo los índices
        Select into vindini coalesce(a.indice,0) From calc_act a Where _fchvenc between a.fchdesde and a.fchhasta;
        Select into vindfin coalesce(a.indice,0) From calc_act a Where _fchpago between a.fchdesde and a.fchhasta;
        vindice = vindfin - vindini;

        -- Realizo el calculo si el 'indice es mayor a 0
        If coalesce(vindice,0) > 0 Then
            monto = _nominal * (vindice/100);
            vcta_id = cta_id;
            Select into cta_nom,tcta c.nombre,c.tcta From cuenta c Where c.cta_id=vcta_id;

            Return Next;
        End If;

    End If;

end
$$;


ALTER FUNCTION sam.uf_calc_act(_trib_id integer, _nominal numeric, _fchvenc date, _fchpago date) OWNER TO postgres;

--
-- TOC entry 5658 (class 0 OID 0)
-- Dependencies: 950
-- Name: FUNCTION uf_calc_act(_trib_id integer, _nominal numeric, _fchvenc date, _fchpago date); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_calc_act(_trib_id integer, _nominal numeric, _fchvenc date, _fchpago date) IS 'Función que devuelve el monto de actualización de una deuda dada.

Parámetros:
	trib_id numeric: Tributo.
	nominal numeric: Monto inicial.
	venc date: Fecha de vencimiento.
	fchpago date: Fecha de pago.';


--
-- TOC entry 946 (class 1255 OID 5317070)
-- Name: uf_calc_act_control(); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_calc_act_control() RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare vfchdesde date;
		vfchhasta date;
		fchhastaant date;
BEGIN
    fchhastaant := null;

    For  vfchdesde, vfchhasta In Select i.fchdesde, i.fchhasta
    From calc_act i order by i.fchdesde, i.fchhasta Loop

        if not fchhastaant is null then
        	if vfchdesde <= fchhastaant then
            	return 'Existe superposición de fechas';
            elseif vfchdesde > fchhastaant+1 then
            	return 'Existen huecos en los rangos de fecha';
            end if;
        end if;

        fchhastaant := vfchhasta;

	End Loop;
    return 'OK';
END
$$;


ALTER FUNCTION sam.uf_calc_act_control() OWNER TO postgres;

--
-- TOC entry 754 (class 1255 OID 5282721)
-- Name: uf_calc_desc(integer, character varying, integer, numeric, date, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_calc_desc(_trib_id integer, _obj_id character varying, _periodo integer, _nominal numeric, _fchpago date, _perhasta integer DEFAULT 0) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
declare
	vdesc decimal(9,2);
BEGIN
    Select Into vdesc sum(d.monto) from sam.uf_calc_desc_lista(_trib_id,_obj_id,_periodo,_nominal,_fchpago,_perhasta) d;
    vdesc := coalesce(vdesc,0);

    Return vdesc;
END
$$;


ALTER FUNCTION sam.uf_calc_desc(_trib_id integer, _obj_id character varying, _periodo integer, _nominal numeric, _fchpago date, _perhasta integer) OWNER TO postgres;

--
-- TOC entry 957 (class 1255 OID 5282722)
-- Name: uf_calc_desc_lista(integer, character varying, integer, numeric, date, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_calc_desc_lista(_trib_id integer, _obj_id character varying, _periodo integer, _nominal numeric, _fchpago date, _perhasta integer DEFAULT 0, _externa integer DEFAULT 0) RETURNS TABLE(cta_id smallint, detalle character varying, monto numeric)
    LANGUAGE plpgsql
    AS $$
declare
	vanio smallint;
	vcuota smallint;
	vanual smallint;
	vitem smallint;
	vitem_desc smallint;
	vitem_desc_monto decimal(12,2);
	cant_anio smallint;
	vctacte_id integer;
	vdj_id integer;
	cant_exen smallint;
	aplicavenc smallint;
	verificadeuda smallint;
	existedeuda smallint;
	verificadebito smallint;
	objetodeuda smallint := -2;
	verificaexen smallint;
	desc1 numeric(12,2);
	desc2 numeric(12,2);
	vmontodesde numeric(12,2);
	vcta_id smallint;
	vdescitem numeric(12,2);
	desde integer;
	hasta integer;
	cant smallint;
	fchvenc1 date;
	fchvenc2 date;
	prescrip smallint;
	aplicadesc boolean;
BEGIN
    -- Función que devuelve el monto del descuento a aplicar

    --  vanio := iif(_trib_id=1 ,0, substr(_periodo::varchar,1,4)::integer);
    --  vcuota := iif(_trib_id =1 ,0,substr(_periodo::varchar,5,3)::integer);
    if (_trib_id = 1 or length(_periodo::varchar) < 7) then
        vanio := 0;
        vcuota := 0;
    else
        vanio := substr(_periodo::varchar,1,4)::integer;
        vcuota := substr(_periodo::varchar,5,3)::integer;
    end if;
    vanual := iif(not _trib_id in (1,2) and vcuota=0,1,0);
    monto := 0;

    /*
    -- Se calcula Descuento por Caja, solo si no tiene eximision aprobada
    Select Into cant_exen count(*) From exen e Inner Join exen_tipo t On e.texen_id=t.texen_id
    Inner Join item i On t.item_id=i.item_id
    Where i.trib_id=_trib_id and e.obj_id=_obj_id and perdesde between e.perdesde and e.perhasta and e.est='A';

    If (cant_exen = 0) Then
    */
    For desc1, desc2, aplicavenc, verificadeuda, existedeuda, verificadebito, verificaexen, cta_id, detalle,vitem, vmontodesde
    In Select d.desc1, d.desc2, d.aplicavenc, d.verificadeuda, d.existedeuda, d.verificadebito, d.verificaexen,
    c.cta_id, c.nombre_redu, coalesce(d.item_id,0), d.montodesde
    From calc_desc d Left Join cuenta c ON d.cta_id = c.cta_id
    Where d.trib_id =_trib_id and d.anual=vanual
    and (d.aplicavenc=1 or _fchpago between d.pagodesde and d.pagohasta)
    and _periodo between d.perdesde and d.perhasta
    and _nominal between d.montodesde and d.montohasta Loop

        aplicadesc := true;

        -- Verifico si permite eximision
        If (verificaexen=1) then
            -- Se calcula Descuento por Caja, solo si no tiene eximision aprobada
            Select Into cant_exen count(*) From exen e Inner Join exen_tipo t On e.texen_id=t.texen_id
            Inner Join item i On t.item_id=i.item_id
            Where i.trib_id=_trib_id and e.obj_id=_obj_id and _periodo between e.perdesde and e.perhasta and e.est='A';

            If (cant_exen > 0) Then
                aplicadesc := false;
            End If;
        End If;

        -- Veo si tengo que leer los vencimientos
        if (aplicadesc and aplicavenc=1) then
            Select Into fchvenc1, fchvenc2  v.fchvenc1, v.fchvenc2
            From sam.uf_trib_venc(_trib_id, vanio, vcuota) v;
        End If;

        -- Veo si verifico deuda
        If (aplicadesc and verificadeuda = 1) then
            if (objetodeuda = -2) then
                -- busco la prescripcion
                Select Into prescrip t.prescrip from trib t where t.trib_id=_trib_id;

                -- busco minimo periodo
                Select into desde  Min(v.anio*1000+01) From trib_venc v
                Where v.trib_id =_trib_id and v.fchvenc1 >= _fchpago - cast(cast(prescrip-1 as varchar(2)) || ' year' as interval);

                -- busco maximo periodo
                If _perhasta = 0 Then
                    select into hasta Max(v.Anio*1000+v.Cuota)
                    From trib_venc v
                    where v.trib_id =_trib_id And v.fchvenc2 <= _fchpago;

                    if (hasta = 2018001) then hasta = hasta - 1; end if;
                Else
                    hasta := _perhasta;
                End If;

                -- verifico si existe deuda
                objetodeuda := sam.uf_ctacte_existedeuda(_obj_id,desde,hasta,_periodo);

            End If;

            -- Si "tiene deuda" o "si tiene plan pero se exige ser buen pagador"
            If (objetodeuda=1 or (objetodeuda=0 and existedeuda=-1)) Then
                aplicadesc := false;
            End If;
        End If;

        -- Determino si el descuento se aplica solo por debito
        If (verificadebito=1) Then
            If (_externa=0 or _externa=2) Then
                aplicadesc := false;
            End If;
        Else
            If (_externa=1) Then
                aplicadesc := false;
            End If;
        End If;

        -- Si corresponde aplicar el descuento, determino el porc.
        if (aplicadesc) Then
            if vitem <> 0 then
                select into vctacte_id c.ctacte_id from ctacte c 
                where c.trib_id=_trib_id and c.obj_id=_obj_id
                and c.anio*1000+c.cuota=_periodo;

                if (_trib_id=23) then
                    select into vdj_id d.dj_id from ddjj d where d.ctacte_id=vctacte_id and est='A';
                    select into _nominal l.monto from ddjj_liq l where l.dj_id=vdj_id and l.item_id=vitem;
                else
                    select into _nominal l.monto from ctacte_liq l where l.ctacte_id=vctacte_id and l.item_id=vitem;
                end if;
                /*            
                select into vctacte_id c.ctacte_id from ctacte c where c.trib_id=_trib_id and c.obj_id=_obj_id
                and c.anio=substring(_periodo::text,0,5)::integer and c.cuota=1;
                */
               		
                Select Into cant_anio r.cant_anio From resol r 
                Where r.trib_id=_trib_id and vanio*1000+vcuota between r.perdesde and r.perhasta;

                /*
                vitem_desc_monto = 0;
                for vitem_desc in select oi.item_id from objeto_item oi inner join item i on oi.item_id=i.item_id
                where oi.obj_id=_obj_id and i.tipo=3
                and substring(_periodo::text,0,5)::integer * 1000 + 1 BETWEEN oi.perdesde and oi.perhasta loop
                vitem_desc_monto := vitem_desc_monto + sam.uf_item_calcular(vitem_desc,substring(_periodo::text,0,5)::integer,1,_nominal, 0, 0, 0);
                end loop;
                _nominal := (_nominal + vitem_desc_monto) * cant_anio;
                */
            end if;

            if (aplicavenc=1) Then
                if (_fchpago<= fchvenc1 or verificadebito=1) then
                    monto := round(_nominal * desc1/100,2);
                Elseif (_fchpago <= fchvenc2) then
                    monto := round(_nominal * desc2/100,2);
                End If;
            Else
                monto := round(_nominal * desc1/100,2);
            End If;

	    -- Verifico si el monto a partir del cual se aplica el descuento
	    If (vmontodesde > 1) then
	       If (_nominal - monto < vmontodesde) then
	           monto = _nominal - vmontodesde;
	       End If;
	    End If;

            If (monto>0) Then
                -- Ajuste Chany 07/02/2018
                -- verificar si ya se pagó antes con descuento (pagos, compensaciones, pago a cuenta o rectificativa)
                If (vitem <> 0) then
                   vcta_id = cta_id;
                   Select into vdescitem d.haber From ctacte_det d
                   Where d.ctacte_id=vctacte_id and d.cta_id=vcta_id and d.est='A';
		   vdescitem = coalesce(vdescitem,0);

		   -- al monto de descuento calculado le resto la bonificación aplicada previamente.
		   If (vdescitem <> 0) then 
		      monto = monto + vdescitem;
		   End If;
		End If; 
                monto := monto * -1;
                If (monto <> 0) then
                   Return Next;
                End If;
            End If;
        End If;

    End Loop;

    --  End If;  -- fin if verificar si existe eximision

END
$$;


ALTER FUNCTION sam.uf_calc_desc_lista(_trib_id integer, _obj_id character varying, _periodo integer, _nominal numeric, _fchpago date, _perhasta integer, _externa integer) OWNER TO postgres;

--
-- TOC entry 755 (class 1255 OID 5282724)
-- Name: uf_calc_diahabil(date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_calc_diahabil(_fecha date) RETURNS date
    LANGUAGE plpgsql
    AS $$
declare
	fecha_nueva date;
BEGIN
	fecha_nueva = _fecha;

	-- Corro la fecha si es Fin de semana o feriado
	While (EXTRACT(dow from fecha_nueva) in (0,6) or Exists(Select * From calc_feriado f Where f.fecha=fecha_nueva)) loop
   		--0: Domingo / 6: Sábado
        fecha_nueva := fecha_nueva + 1;
	end loop;

    -- Devuelvo el resultado final
    return fecha_nueva;
END
$$;


ALTER FUNCTION sam.uf_calc_diahabil(_fecha date) OWNER TO postgres;

--
-- TOC entry 756 (class 1255 OID 5282725)
-- Name: uf_calc_finmes(date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_calc_finmes(_fecha date) RETURNS date
    LANGUAGE plpgsql
    AS $$
BEGIN
	-- Devuelvo el resultado final
    return (date_trunc('month', _fecha) + interval '1 month') - interval '1 day';
END
$$;


ALTER FUNCTION sam.uf_calc_finmes(_fecha date) OWNER TO postgres;

--
-- TOC entry 757 (class 1255 OID 5282726)
-- Name: uf_calc_interes(numeric, date, date, numeric); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_calc_interes(_nominal numeric, _fchvenc date, _fchpago date, _tasa_trib numeric DEFAULT 0) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
declare
    montointeres decimal(12,2);
    sumainteres decimal(12,4);
	indice decimal(12,4);
	indiceant decimal(12,4);
	dia smallint;
    cant smallint;
	fchdesde date;
	fchhasta date;
	interesmin decimal(9,2);
begin
    -- Función que devuelve el monto de intereses a aplicar, por mora
	sumainteres := 0;
	indiceant := 0;
	dia := 0;
    cant := 0;

   	If (_fchpago <= _fchvenc or _nominal =0) then
   		montointeres = 0;
	else
	  If (_tasa_trib = 0) Then
		For fchdesde, fchhasta, indice in Select i.fchdesde, i.fchhasta, i.indice
        from calc_interes i
        where (_fchvenc >= i.fchdesde and _fchvenc <= i.fchhasta)
         or (_fchvenc < i.fchdesde and _fchpago > i.fchhasta)
         or (_fchpago >= i.fchdesde and _fchpago <= i.fchhasta)
        
        order by i.fchdesde,i.fchhasta,i.indice Loop
            cant := cant + 1;
            If cant>1 Then
                Dia=1;
            end if;
            indiceant := indice;

           	if (_fchpago <= fchhasta) then
               	if (_fchvenc >= fchdesde) then
                	sumainteres := sumainteres + (indice * cast(_fchpago - _fchvenc + dia as decimal(9,4)) /3000);
               	else
                   	sumainteres := sumainteres + (indice * cast(_fchpago - fchdesde + dia as decimal(9,4)) /3000);
               	end if;
           	elseIf (_fchvenc >= fchdesde) then
            	sumainteres := sumainteres + (indice * cast(fchhasta - _fchvenc + dia as decimal(9,4)) / 3000);
    		else
            	sumainteres := sumainteres + (indice * cast(fchhasta - fchdesde + dia as decimal(9,4)) / 3000);
			end if;
            --raise notice 'sumainteres: %', sumainteres;
        End loop;

      Else
		sumainteres := (_tasa_trib * cast(_fchpago - _fchvenc + dia as decimal(9,4)) /3000);
      End If;

	    montointeres := _nominal * sumainteres;

    	Select into interesmin c.interes_min From sam.config c;

    	if (montointeres<interesmin) then
        	montointeres := interesmin;
        end if;
    end if;

    -- Devuelvo el resultado final
    return montointeres;
end
$$;


ALTER FUNCTION sam.uf_calc_interes(_nominal numeric, _fchvenc date, _fchpago date, _tasa_trib numeric) OWNER TO postgres;

--
-- TOC entry 759 (class 1255 OID 5282727)
-- Name: uf_calc_interes(integer, integer, numeric, date, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_calc_interes(_trib_id integer, _periodo integer, _nominal numeric, _fchvenc date, _fchpago date) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
declare
    vanio smallint;
	vcuota smallint;
    montointeres decimal(12,2);
	rec_venc2 decimal(12,4);
    trib_tasa numeric(5,3);
	venc2 date;
begin
    -- Función que devuelve el monto de intereses a aplicar, por mora.
    -- Recibe el trib_id para determinar el recargo al segundo venc si corresponde.
    If (_trib_id <> 1 and _trib_id <> 2 and _trib_id <> 3) Then
    	vanio := substr(_periodo::varchar,1,4);
  		vcuota := substr(_periodo::varchar,5,3);
	End if;
    
    select into rec_venc2, trib_tasa t.rec_venc2, t.calc_rec_tasa From trib t where t.trib_id=_trib_id;

    Select Into venc2  v.fchvenc2 From trib_venc v
    Where v.trib_id=_trib_id and v.anio=vanio and v.cuota=vcuota;

    If (rec_venc2=0) Then
    	if (trib_tasa = 0) Then         
    		montointeres := sam.uf_calc_interes(_nominal,_fchvenc,_fchpago);
        Else
	        montointeres := sam.uf_calc_interes(_nominal,_fchvenc,_fchpago, trib_tasa);
        End If;
    ElseIf (_fchpago>_fchvenc) Then
    	If (rec_venc2=-1) Then
        	-- Calculo el recargo al 2° vencimiento según diferencia entre venc1 y venc2
        	montointeres := sam.uf_calc_interes(_nominal,_fchvenc,venc2);
        Else
        	-- Calculo el recargo al 2° vencimiento según porcentaje fijo
        	montointeres := _nominal * rec_venc2;
        End If;

        If (trib_tasa = 0) Then         
            montointeres := montointeres + sam.uf_calc_interes(_nominal,venc2,_fchpago);
        Else
            montointeres := montointeres + sam.uf_calc_interes(_nominal,venc2,_fchpago, trib_tasa);            
        End If;            
    End If;

    -- Devuelvo el resultado final
    return montointeres;
end
$$;


ALTER FUNCTION sam.uf_calc_interes(_trib_id integer, _periodo integer, _nominal numeric, _fchvenc date, _fchpago date) OWNER TO postgres;

--
-- TOC entry 5659 (class 0 OID 0)
-- Dependencies: 759
-- Name: FUNCTION uf_calc_interes(_trib_id integer, _periodo integer, _nominal numeric, _fchvenc date, _fchpago date); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_calc_interes(_trib_id integer, _periodo integer, _nominal numeric, _fchvenc date, _fchpago date) IS 'Función que devuelve el monto de intereses por mora a aplicar.

Parámetros:
	trib_id numeric: Tributo.
	nominal numeric: Monto inicial.
	venc date: Fecha de vencimiento.
	fchpago date: Fecha de pago.';


--
-- TOC entry 760 (class 1255 OID 5282728)
-- Name: uf_calc_interes_control(); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_calc_interes_control() RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare vfchdesde date;
		vfchhasta date;
		fchhastaant date;
BEGIN
    fchhastaant := null;

    For  vfchdesde, vfchhasta In Select i.fchdesde, i.fchhasta
    From calc_interes i order by i.fchdesde, i.fchhasta Loop

        if not fchhastaant is null then
        	if vfchdesde <= fchhastaant then
            	return 'Existe superposición de fechas';
            elseif vfchdesde > fchhastaant+1 then
            	return 'Existen huecos en los rangos de fecha';
            end if;
        end if;

        fchhastaant := vfchhasta;

	End Loop;
    return 'OK';
END
$$;


ALTER FUNCTION sam.uf_calc_interes_control() OWNER TO postgres;

--
-- TOC entry 761 (class 1255 OID 5282729)
-- Name: uf_calc_interes_hasta(numeric, date, numeric); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_calc_interes_hasta(_nominal numeric, _fchdesde date, _interes numeric) RETURNS date
    LANGUAGE plpgsql
    AS $$
declare auxinteres decimal(12,4);
		vfchhasta date;
BEGIN
    auxinteres := 0;
    vfchhasta := _fchdesde;

    While (auxinteres < _interes) Loop
        vfchhasta := vfchhasta + 1;
        Select Into auxinteres sam.uf_calc_interes(_nominal, _fchdesde, vfchhasta);
    End Loop;

    Return vfchhasta;
END
$$;


ALTER FUNCTION sam.uf_calc_interes_hasta(_nominal numeric, _fchdesde date, _interes numeric) OWNER TO postgres;

--
-- TOC entry 762 (class 1255 OID 5282730)
-- Name: uf_calc_mm_control(); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_calc_mm_control() RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare vfchdesde date;
		vfchhasta date;
		fchhastaant date;
BEGIN
    fchhastaant := null;

    For  vfchdesde, vfchhasta In Select i.fchdesde, i.fchhasta
    From calc_mm i order by i.fchdesde, i.fchhasta Loop

        if not fchhastaant is null then
        	if vfchdesde <= fchhastaant then
            	return 'Existe superposición de fechas';
            elseif vfchdesde > fchhastaant+1 then
            	return 'Existen huecos en los rangos de fecha';
            end if;
        end if;

        fchhastaant := vfchhasta;

	End Loop;
    return 'OK';
END
$$;


ALTER FUNCTION sam.uf_calc_mm_control() OWNER TO postgres;

--
-- TOC entry 763 (class 1255 OID 5282731)
-- Name: uf_calc_multa(integer, character varying, integer, numeric, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_calc_multa(_trib_id integer, _obj_id character varying, _periodo integer, _monto numeric, _fchpresenta date) RETURNS TABLE(item_id smallint, detalle character varying, multa numeric)
    LANGUAGE plpgsql
    AS $$
declare
	finmes smallint;
	finmes_fch date;
	diasvenc smallint;
	diasvenc_real smallint;
	quita decimal(9,2);
	tcalculo smallint;
	valor decimal(9,2);
	alicuota decimal(9,2);
    vtipo smallint;
	montodesde decimal(9,2);
	fchvenc date;
	minimo decimal(9,2);
	fijo decimal(9,2);
	tcalculorubro smallint;
	tminimorubro smallint;
	valormaximo decimal(9,2);
	anio smallint;
	cuota smallint;
    tobj smallint;
    vtliq varchar(2);
BEGIN
    multa = 0;
	anio = trunc(_periodo/1000);
	cuota = _periodo-anio*1000;
    vtipo = 0;

    Select Into tobj t.tobj from trib t where t.trib_id=_trib_id;

	-- Para Comercio, verifico segun tipo de objeto
    if (tobj=2) then
    	Select Into vtipo c.tipo from comer c where c.obj_id=_obj_id;
    ElseIf (tobj=3) Then
    	Select Into vtliq p.tipoliq from persona p where p.obj_id=_obj_id;
        if vtliq <> 'LO' Then 
        	vtipo=99;
        End If;
    end if;

	For tcalculo, valor, alicuota, vtipo, finmes, diasvenc, quita, montodesde, item_id, detalle, valormaximo
	In Select m.tcalculo, m.valor, m.alicuota, m.tipo, m.finmes, m.diasvenc, m.quita, m.montodesde, m.item_id, i.nombre, m.valormaximo
	From calc_multa m
	left join item i on m.item_id = i.item_id
	Where m.trib_id =_trib_id
	and _periodo between m.perdesde and m.perhasta
	and _monto between m.montodesde and m.montohasta
    and (m.tipo=vtipo) Loop
		
        multa = case when tcalculo=1 Then valor
			when tcalculo=3 Then _monto * alicuota
			when tcalculo=4 Then _monto * alicuota
			when tcalculo=5 Then valor + (valor-montodesde) * alicuota
			End;

		If (tcalculo = 2) Then -- mínimo mayor
			Select Into minimo, fijo, tcalculorubro, tminimorubro
            	max(case
				when v.tcalculo=0 Then g.minimo
				when v.tminimo=3 Then fijo * c.cant
				when v.tminimo=5 and temporada='b' and zona=1 Then v.minimo
				when v.tminimo=5 and temporada='b' and zona=2 Then v.minimo * (v.fijo / 100)
				when v.tminimo=5 and temporada='a' Then v.minalta
				when v.tminimo=6 and temporada='b' and zona=1 Then v.minimo * c.cant
				when v.tminimo=6 and temporada='b' and zona=2 Then v.minimo * (v.fijo / 100) * c.cant
				when v.tminimo=6 and temporada='a' Then v.minalta * case when c.cant > v.canthasta then v.canthasta else c.cant end
				when v.tminimo=7 and zona=1 Then v.minimo
				when v.tminimo=7 and zona=2 Then v.minimo * (v.fijo / 100)
				when v.tminimo=8 and zona=1 Then v.minimo * c.cant
				when v.tminimo=8 and zona=2 Then v.minimo * (v.fijo / 100) * c.cant
				else v.minimo End),
			max(case when v.tcalculo = 7 Then 0 else fijo End),
			max(v.tcalculo),
			max(v.tminimo)
			From objeto_rubro c
				left join comer_suc s on c.obj_id=s.obj_id and c.subcta=s.subcta
				left join rubro_vigencia v on c.rubro_id = v.rubro_id
				left join rubro_temporada t on t.cuota = cuota
				left join rubro_general g on g.trib_id = 2 and v.tcalculo = 0
				and g.perdesde <=_periodo and (g.perhasta >=_periodo or g.perhasta = 999999)
			Where c.obj_id=_obj_id and _periodo between c.perdesde and c.perhasta and c.est = 'A'
				and v.perdesde <=_periodo and (v.perhasta >=_periodo or v.perhasta = 999999);

			If (tminimorubro in (5,6)) Then
				multa := minimo;
			Else
				multa := case when minimo > fijo Then minimo else fijo End;
            End If;

			If (tcalculorubro in (6,7) and multa < 15) Then
					multa = 15;
			End If;
		End If;

		If (tcalculo = 4 and multa < valor) Then
			multa := valor;
		End If;

		-- descuento por presentacion pasados x dias de la fecha de vencimiento
        raise notice 'quita: %',quita;
		If (quita > 0) Then
			Select Into fchvenc v.fchvenc1 From sam.uf_trib_venc(_trib_id, anio, cuota) v;
	        --raise notice 'fchvenc: %',fchvenc;
            --raise notice 'fchpresenta: %',_fchpresenta;
			If (_fchpresenta > fchvenc) Then
	            If (finmes=0 and diasvenc=0) Then
	                multa := multa - multa * (quita / 100);
				ElsIf (finmes>0) Then
					finmes_fch := sam.uf_calc_finmes(fchvenc);
					If (_fchpresenta < finmes_fch) Then
						multa := multa - multa * (quita / 100);
					End If;
				Else
					diasvenc_real :=_fchpresenta - fchvenc;
					If (diasvenc_real <= diasvenc) Then
						multa := multa - multa * (quita / 100);
					End If;
				End If;
			End If;
		End If;

		-- verIfico que no se exeda del maximo
        If (valormaximo > 0) Then
			If (multa > valormaximo) Then
				multa := valormaximo;
			End If;
        End If;
	If (multa <> 0) Then
	    Return Next;
	End If;
    End Loop;
END;
$$;


ALTER FUNCTION sam.uf_calc_multa(_trib_id integer, _obj_id character varying, _periodo integer, _monto numeric, _fchpresenta date) OWNER TO postgres;

--
-- TOC entry 764 (class 1255 OID 5282733)
-- Name: uf_cem_armar_nc(character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_cem_armar_nc(_tipo character varying, _cuadro_id character varying, _cuerpo_id character varying, _fila character varying, _nume character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
	nc varchar(25);
	nombre varchar(10);
	largo smallint:=0;
	l_cuadro smallint:= 0;
	l_cuerpo smallint:= 0;
	L_fila smallint:= 0;
	l_nume smallint:= 0;
BEGIN
	-- Recupero el largo de cada campo de la configuracion de nc
    -- El caracter de relleno siempre es '0'
	For nombre,largo In Select campo,max_largo
      From sam.config_cem_nc Where aplica=true Loop
		If nombre='cuadro_id' Then l_cuadro:=largo; End If;
		If nombre='cuerpo_id' Then l_cuerpo:=largo; End If;
		If nombre='fila' Then l_fila:=largo; End If;
		If nombre='nume' Then l_nume:=largo; End If;
	End Loop;

	nc:= lpad(ltrim(_cuadro_id),l_cuadro,'0')
		|| lpad(ltrim(_cuerpo_id),l_cuerpo,'0')
		|| lpad(ltrim(_fila),l_fila,'0')
		|| lpad(ltrim(_nume),l_nume,'0');

	return nc;
END
$$;


ALTER FUNCTION sam.uf_cem_armar_nc(_tipo character varying, _cuadro_id character varying, _cuerpo_id character varying, _fila character varying, _nume character varying) OWNER TO postgres;

--
-- TOC entry 765 (class 1255 OID 5282734)
-- Name: uf_cem_armar_nc(character varying, character varying, character varying, integer, integer, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_cem_armar_nc(_tipo character varying, _cuadro_id character varying, _cuerpo_id character varying, _fila integer, _nume integer, _bis character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
	nc varchar(25);
	nombre varchar(10);
	largo smallint:=0;
	l_cuadro smallint:= 0;
	l_cuerpo smallint:= 0;
	L_fila smallint:= 0;
	l_nume smallint:= 0;
BEGIN
	-- Recupero el largo de cada campo de la configuracion de nc
    -- El caracter de relleno siempre es '0'
	For nombre,largo In Select campo,max_largo
      From sam.config_cem_nc Where aplica=true Loop
		If nombre='cuadro_id' Then l_cuadro:=largo; End If;
		If nombre='cuerpo_id' Then l_cuerpo:=largo; End If;
		If nombre='fila' Then l_fila:=largo; End If;
		If nombre='nume' Then l_nume:=largo; End If;
	End Loop;

	nc:= lpad(ltrim(_cuadro_id),l_cuadro,'0')
		|| lpad(ltrim(_cuerpo_id),l_cuerpo,'0')
		|| lpad(ltrim(_fila::text),l_fila,'0')
		|| lpad(ltrim(_nume::text),l_nume,'0')
        || _bis;

	return nc;
END
$$;


ALTER FUNCTION sam.uf_cem_armar_nc(_tipo character varying, _cuadro_id character varying, _cuerpo_id character varying, _fila integer, _nume integer, _bis character varying) OWNER TO postgres;

--
-- TOC entry 766 (class 1255 OID 5282735)
-- Name: uf_cem_armar_nc_guiones(character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_cem_armar_nc_guiones(_tipo character varying, _cuadro_id character varying, _cuerpo_id character varying, _fila character varying, _nume character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
	nc varchar(25);
	nombre varchar(10);
	largo smallint:=0;
	l_cuadro smallint:= 0;
	l_cuerpo smallint:= 0;
	l_fila smallint:= 0;
	l_nume smallint:= 0;
BEGIN
	-- Recupero el largo de cada campo de la configuracion de nc
    -- El caracter de relleno siempre es '0'
	For nombre,largo In Select campo,max_largo
      From sam.config_cem_nc Where aplica=true Loop
		If nombre='cuadro_id' Then l_cuadro:=largo; End If;
		If nombre='cuerpo_id' Then l_cuerpo:=largo; End If;
		If nombre='fila' Then l_fila:=largo; End If;
		If nombre='nume' Then l_nume:=largo; End If;
	End Loop;

	nc:= _tipo || '-' || case when l_cuadro>0 then ltrim(_cuadro_id) else '' end
		|| case when l_cuerpo>0 then '-'||ltrim(_cuerpo_id) else '' end
		|| case when l_fila>0 then '-'||ltrim(_fila) else '' end
		|| case when l_nume>0 then '-'||_nume else '' end;

	return nc;
END
$$;


ALTER FUNCTION sam.uf_cem_armar_nc_guiones(_tipo character varying, _cuadro_id character varying, _cuerpo_id character varying, _fila character varying, _nume character varying) OWNER TO postgres;

--
-- TOC entry 758 (class 1255 OID 5282736)
-- Name: uf_cem_armar_nc_guiones(character varying, character varying, character varying, integer, integer, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_cem_armar_nc_guiones(_tipo character varying, _cuadro_id character varying, _cuerpo_id character varying, _fila integer, _nume integer, _bis character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
	nc varchar(25);
	nombre varchar(10);
	largo smallint:=0;
	l_cuadro smallint:= 0;
	l_cuerpo smallint:= 0;
	l_fila smallint:= 0;
	l_nume smallint:= 0;
BEGIN
	-- Recupero el largo de cada campo de la configuracion de nc
    -- El caracter de relleno siempre es '0'
	For nombre,largo In Select campo,max_largo
      From sam.config_cem_nc Where aplica=true Loop
		If nombre='cuadro_id' Then l_cuadro:=largo; End If;
		If nombre='cuerpo_id' Then l_cuerpo:=largo; End If;
		If nombre='fila' Then l_fila:=largo; End If;
		If nombre='nume' Then l_nume:=largo; End If;
	End Loop;

	nc:= _tipo || '-' || case when l_cuadro>0 then ltrim(_cuadro_id) else '' end
		|| case when l_cuerpo>0 then '-'||ltrim(_cuerpo_id) else '' end
		|| case when l_fila>0 then '-'||ltrim(_fila) else '' end
		|| case when l_nume>0 then '-'||_nume else '' end
        || _bis;

	return nc;
END
$$;


ALTER FUNCTION sam.uf_cem_armar_nc_guiones(_tipo character varying, _cuadro_id character varying, _cuerpo_id character varying, _fila integer, _nume integer, _bis character varying) OWNER TO postgres;

--
-- TOC entry 767 (class 1255 OID 5282737)
-- Name: uf_cem_trasctacte(character varying, character varying, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_cem_trasctacte(_origen character varying, _destino character varying, _desde integer, _hasta integer, _usr integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	cant smallint;
    vctacte_id integer;
BEGIN
  -- DEF: Procedimiento que mueve la cuenta corriente de una cuenta de
  -- cementerio a otra

  -- Verifico si se puede efectuar la operacion
  Select into cant count(c.*) 
  From Ctacte c 
  Where c.tobj=4 and c.obj_id=_origen and c.anio*1000+c.cuota between _desde and _hasta;
  
  if (cant>0) then
  	Select into cant count(c.*) 
  	From Ctacte c 
  	Where c.tobj=4 and c.obj_id=_destino and c.anio*1000+c.cuota between _desde and _hasta;

  	if (cant = 0) then
    	-- Obtengo los datos de la Ctacte
    	For vctacte_id in Select c.ctacte_id From CtaCte c
        	Where c.trib_id in(25,26) and c.obj_id=_origen and c.anio*1000+c.cuota between _desde and _hasta
		loop

        	-- Inserto los datos en el destino
        	Update Ctacte Set obj_id=_destino
        	Where ctacte_Id = vctacte_id;
  		End loop;
  	Else
    	raise EXCEPTION  'Existen Periodos en Cta.Cte. Destino';
  	End if;
  Else
    raise EXCEPTION  'No Existen Periodos en Cta.Cte. Origen';
  End If;	
END;
$$;


ALTER FUNCTION sam.uf_cem_trasctacte(_origen character varying, _destino character varying, _desde integer, _hasta integer, _usr integer) OWNER TO postgres;


--
-- TOC entry 770 (class 1255 OID 5282740)
-- Name: uf_code2of5(character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_code2of5(_tcstring character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
	lcStart text;
    lcStop text;
    lcRet text;
    lcCheck text;
    lcCar text;
    lnLong smallint;
    lnCount smallint;
    lnAux smallint;
    lnI smallint;
    lnSum smallint;
    lnAsc smallint;
begin
	--------------------------------------------------------
    -- Convierte un string para ser impreso con
    -- fuente True Type "PF Interleaved 2 of 5"
    -- ó "PF Interleaved 2 of 5 Wide"
    -- ó "PF Interleaved 2 of 5 Text"
    -- Solo caracteres numéricos
    -- USO: Select sam.uf_code2of5('1234567890')
    -- RETORNA: Caracter
    --------------------------------------------------------
    lcStart := CHR(40);
    lcStop := CHR(41);
    lcRet := TRIM(_tcString);

    --- Genero dígito de control
    lnLong := LENGTH(lcRet);
    lnSum := 0;
    lnCount := 1;

    FOR lnI IN REVERSE lnLong..1 Loop
		lnSum := lnSum + cast(SUBSTR(lcRet,lnI,1) as smallint) * IIF((lnCount % 2) = 0,1,3);
        lnCount := lnCount + 1;
    End Loop;
    lnAux := lnSum % 10;
    lcRet := lcRet || TRIM(cast(IIF(lnAux = 0,0,10 - lnAux) as varchar));
    lnLong := LENGTH(lcRet);

    --- La longitud debe ser par
    IF lnLong % 2 <> 0 Then
        lcRet := '0' || lcRet;
        lnLong := LENGTH(lcRet);
    End If;

    --- Convierto los pares a caracteres
    lcCar := '';
    lnI := 1;
    WHILE lnI<lnLong Loop
	    IF cast(SUBSTR(lcRet,lnI,2) as smallint) < 50 Then
	        lcCar := lcCar || CHR(cast(SUBSTR(lcRet,lnI,2) as smallint) + 48);
        ELSE
    	    lcCar := lcCar || CHR(cast(SUBSTR(lcRet,lnI,2) as smallint) + 142);
        End If;
        lnI := lnI + 2;
    End Loop;

    --- Armo código
    lcRet := lcStart || lcCar || lcStop;

    Return lcRet;

end
$$;


ALTER FUNCTION sam.uf_code2of5(_tcstring character varying) OWNER TO postgres;

--
-- TOC entry 5662 (class 0 OID 0)
-- Dependencies: 770
-- Name: FUNCTION uf_code2of5(_tcstring character varying); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_code2of5(_tcstring character varying) IS 'Función que genera transforma el Código de barra al formato Interlead 2 of 5';


--
-- TOC entry 771 (class 1255 OID 5282741)
-- Name: uf_comer_djanual_gen(integer, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_comer_djanual_gen(_trib_id integer, _anio integer, _sindj integer, _usr_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
	plan_id integer;
    ctacte_id integer;
    itembasico integer;
    itemsellado integer;
    valormetro numeric;
    cuadra_id smallint;
    l_ncm smallint;
BEGIN
	-- Procedimiento que genera automáticamente la DDJJ anual de los comercios
    -- que tengan la DDJJ.

	-- Si se genera incluso si ya fue cargado debo borrar lo existente
    Delete from comer_ddjj_anual a
    Where a.anio=_anio and a.obj_id in 
    (select d.obj_id from ddjj d where d.trib_id=_trib_id and d.anio=_anio and d.est='A');


	Insert into comer_ddjj_anual
    select d.obj_id,_anio,current_date,sum(d.base),1,current_timestamp,_usr_id
	from ddjj d where d.trib_id=_trib_id and d.anio=_anio and d.est='A'
	group by d.obj_id;

END
$$;


ALTER FUNCTION sam.uf_comer_djanual_gen(_trib_id integer, _anio integer, _sindj integer, _usr_id integer) OWNER TO postgres;

--
-- TOC entry 5663 (class 0 OID 0)
-- Dependencies: 771
-- Name: FUNCTION uf_comer_djanual_gen(_trib_id integer, _anio integer, _sindj integer, _usr_id integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_comer_djanual_gen(_trib_id integer, _anio integer, _sindj integer, _usr_id integer) IS 'Genera las DJ Anual a partir de las DJ Mensuales presentadas';


--
-- TOC entry 948 (class 1255 OID 5282742)
-- Name: uf_comp_aplicar(character varying, integer, numeric, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_comp_aplicar(_obj_id character varying, _ctacte_id integer, _montorete numeric, _actctacte integer, _usr_id integer, _reteaplic integer DEFAULT 0) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
  vcomp_id integer;
  saldo numeric(12,2);
  vmonto numeric(12,2);
  vmonto_aplic numeric(12,2);
  vest char(1);
  monto_nominal numeric(12,2);
  vtrib_id smallint;
  vfchvenc date;
  tipo smallint;
  vfchconsolida date;
  cant smallint;
  vcta_id smallint;
  vtcta smallint;
  vnominal numeric (12,2);
  vmulta numeric (12,2);
  monto numeric (12,2);
  vaplic_aux numeric (12,2);
  vnominal_acum numeric (12,2);
  vnum varchar(8);
  vanual smallint;

  vctacte_id integer;
  vobj_id varchar(8);
  vanio integer;
  vcuota smallint;
  vcuotahasta smallint;
BEGIN
	vmonto:=_montorete; vmonto_aplic:= 0; vest:= 'D';

	Select Into vnum o.num From objeto o Where o.obj_id=_obj_id;

    For vcomp_id, saldo, tipo, vfchconsolida In
    Select r.comp_id, r.monto-r.monto_aplic, r.tipo, cast(r.fchconsolida as date)
    From comp r Where (r.obj_dest=_obj_id or (r.aplic_num=1 and r.obj_dest=vnum)
      or (r.aplic_num=1 and r.obj_dest in (select o.obj_id from objeto o where o.num=vnum)))
      and r.est = 'D' and ((_reteaplic = 0 and r.comp_id > 0) Or (_reteaplic > 0 and r.comp_id=_reteaplic))
    Order By r.comp_id
     Loop
        If (saldo > vmonto) Then
            vmonto_aplic = vmonto;
            vest = 'D';
        Else
            vmonto_aplic = saldo;
            vest = 'A';
        End If;

        If (vmonto_aplic > 0) Then
            -- Actualizo Rete
            Update comp r Set monto_aplic = monto_aplic + vmonto_aplic,
                est=vest, fchaplic = current_date
            Where r.comp_id = vcomp_id;

            -- Actualizo CtaCte, _actctacte=6 para trimestre o semestre y _actctacte=12 para anual
            If (_actctacte=1 or _actctacte=6 or _actctacte=12) Then
	            vaplic_aux := 0;  vnominal_acum := 0; vanual=0;

            	-- recupero los montos de nominal, multa y otros datos de ctacte
    			Select Into vtrib_id, vobj_id, vanio, vcuota, vnominal, vmulta, vfchvenc
                c.trib_id, c.obj_id, c.anio, c.cuota, c.nominal-c.nominalcub, c.multa, c.fchvenc
    			From ctacte c Where c.ctacte_id = _ctacte_id;

				If _actctacte= 6 Then -- se trata de un pago de trimestre/semestre
                	vanual= 6;
                    vnominal= vnominal*3;
                    vcuotahasta= vcuota+2;
                ElseIf _actctacte= 12 Then-- se trata de un pago anual
                	Select Into vcuotahasta r.cant_anio From resol r
                	where r.trib_id=vtrib_id and vanio*1000+vcuota between r.perdesde and r.perhasta;

                    vanual=1;
                    vnominal= vnominal*vcuotahasta;
                Else
                	vcuotahasta= vcuota;
                End If;

      			For vcta_id, vtcta, monto In
        			Select c.cta_id, c.tcta, c.monto
        			From sam.uf_caja_det(_ctacte_id, vfchvenc, vfchconsolida, vanual) c
                    Order by c.tcta desc, c.cta_id desc
                Loop
                    If vAnual = 6 Then
                    	monto = monto/3;
                    ElseIf vAnual = 1 Then
               			monto = monto/vcuotahasta;
                    End If;

                	-- Hago otro bucle para los incluir los casos de trimestre/semeste
                	For vctacte_id In
                    	select c.ctacte_id from ctacte c
                		where c.trib_id=vtrib_id and c.obj_id=vobj_id and c.anio=vanio
                    	and c.cuota BETWEEN vcuota and vcuotahasta
 					Loop
                      -- Si el monto es superior, tomo el total del monto a aplicar
                      If (monto > vmonto_aplic) Then
                      	monto = vmonto_aplic;
                      End If;

                      -- M U L T A
                      If (vtcta = 4 and vmonto_aplic > 0) Then
                        -- inserto la liquidacion de la multa en menos si hubo quita
                        If (monto > vmulta) Then
                          vmonto_aplic = vmonto_aplic - (vmulta - monto);
                          Insert Into ctacte_det values (
                            vctacte_id, 16, vcomp_id, vcta_id, vmulta - monto, 0,
                            current_date, 'A', current_timestamp, _usr_id);

                        End If;
                        -- inserto la imputación de la multa
                        If (monto >= vmulta and vmulta>0) Then
                          If (vmulta > vmonto_aplic) then vmulta = vmonto_aplic; End If;
                          vmonto_aplic = vmonto_aplic - vmulta;

                          Insert Into ctacte_det values (
                            vctacte_id, 16, vcomp_id, vcta_id, 0, vmulta, current_date,
                            'A', current_timestamp, _usr_id);
                        End If;
                      End If;

                      -- A C C E S O R I O S
                      If (vtcta in (2,3) and vmonto_aplic > 0) Then
                        vmonto_aplic = vmonto_aplic - monto;
                        -- Verificar si el destino es facilidad, insertar solo en el haber
                        If (vtrib_id = 2) Then
                          Insert Into ctacte_det values (
                            vctacte_id, 16, vcomp_id, vcta_id, 0, monto,
                            current_date, 'A', current_timestamp, _usr_id);
                        Else
                          Insert Into ctacte_det values (
                            vctacte_id, 16, vcomp_id, vcta_id, monto, monto,
                            current_date, 'A', current_timestamp, _usr_id);
                        End If;
                      End If;

                      -- N O M I N A L
                      If (vtcta = 1 and vmonto_aplic > 0) Then
                          If (vaplic_aux = 0) Then vaplic_aux = vmonto_aplic; End If;
                          If (vaplic_aux >= vnominal) Then -- Se cubre todo el nominal
                            monto_nominal = monto;
                          Else -- No se cubre todo el nominal tengo que insertar en forma proporcional
                            monto_nominal = vaplic_aux * (monto*100/vnominal) / 100;
                          End If;

                          If (monto_nominal > vmonto_aplic) then monto_nominal = vmonto_aplic; End If;
                          vnominal_acum = vnominal_acum + monto_nominal;

                          If monto_nominal <> 0 then
                              vmonto_aplic = vmonto_aplic - monto_nominal;

                              Insert Into ctacte_det values (
                                vctacte_id, 16, vcomp_id, vcta_id, 0, monto_nominal, current_date,
                                'A', current_timestamp, _usr_id);
                          End If;
                      End If;
                      vmonto:= vmonto - vmonto_aplic;

                	End Loop;
        		End Loop;

                -- Si no se cubrió todo el nominal, ajusto la diferencia en la ultima cuenta
                If (vaplic_aux < vnominal and vtcta=1) Then
                	Update ctacte_det d set haber = haber + (vaplic_aux - vnominal_acum)
                    Where d.ctacte_id=vctacte_id and d.topera=16 and d.comprob=vcomp_id and d.cta_id=vcta_id;
                End If;

                -- obtengo el monto compensado en cada período
                For vctacte_id, monto In
                    select c.ctacte_id, sum(d.haber) from ctacte c
                    left join ctacte_det d on c.ctacte_id= d.ctacte_id
                	where c.trib_id=vtrib_id and c.obj_id=vobj_id and c.anio=vanio
                    and c.cuota BETWEEN vcuota and vcuotahasta and d.topera=16 and d.est= 'A'
                    and d.comprob= vcomp_id
                    group by c.ctacte_id
 				Loop
                	-- Inserto en Detalle y actualizo ctacte
            		Insert Into comp_aplic
            		Values (vcomp_id, current_timestamp, vctacte_id, monto);

                    Update ctacte c Set obs=coalesce(obs,'') || '/Compensa:' || vcomp_id || '/'
            		Where c.ctacte_id = vctacte_id;

                    -- Ejecuto el procedimiento para actualizar la CtaCte
                	Perform sam.uf_ctacte_ajuste(vctacte_id);
                End Loop;

				-- Ejecuto el procedimiento para actualizar la CtaCte
                Perform sam.uf_ctacte_ajuste(vctacte_id);
            End If;
        End If;

    End Loop;

End
$$;


ALTER FUNCTION sam.uf_comp_aplicar(_obj_id character varying, _ctacte_id integer, _montorete numeric, _actctacte integer, _usr_id integer, _reteaplic integer) OWNER TO postgres;

--
-- TOC entry 772 (class 1255 OID 5282744)
-- Name: uf_comp_aplicar_anula(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_comp_aplicar_anula(_ctacte_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
  vcomp_id integer;
  vmonto_aplic numeric(12,2);
  vitem_id smallint;
  vtrib_id smallint;
  trib_tipo smallint;
  vdj_id integer;
  vmonto numeric(12,2);
BEGIN
    For vcomp_id, vmonto_aplic In Select r.comp_id, r.monto_aplic
    From comp_aplic r Where r.ctacte_id=_ctacte_id
    Order By r.comp_id Loop

        -- Elimino la Aplicación de la retención/compensa
        Delete From comp_aplic r Where r.comp_id=vcomp_id and r.ctacte_id=_ctacte_id;

        -- Actualizo los datos de la Retencion/Compensa
        Update comp r Set monto_aplic=monto_aplic-vmonto_aplic, fchaplic=null,
        est='D', fchmod=current_timestamp Where r.comp_id=vcomp_id;

       -- Actualizo la ctacte
       Select Into vtrib_id,vitem_id i.trib_id,i.item_id From ctacte c Left Join item i On c.trib_id=i.trib_id
       Where c.ctacte_id=_ctacte_id and i.tipo=8;

	   Select Into trib_tipo t.tipo From trib t Where t.trib_id=vtrib_id;
       If (trib_tipo = 2) Then -- Declarativo
         Select Into vdj_id d.dj_id From ddjj d Where d.ctacte_id=_ctacte_id and d.est='A';
         Select Into vmonto l.monto From ddjj_liq l Where l.dj_id=vdj_id and l.item_id=vitem_id;
         If (vmonto=vmonto_aplic) Then
           Delete From ddjj_liq l Where l.dj_id=vdj_id and l.item_id=vitem_id;
         Else
           Update ddjj_liq l Set monto=monto+vmonto_aplic Where l.dj_id=vdj_id and l.item_id=vitem_id;
         End If;
	   Else
         Select Into vmonto l.monto From ctacte_liq l Where l.ctacte_id=_ctacte_id and l.orden=0 and l.item_id=vitem_id;
         If (vmonto=vmonto_aplic) Then
           Delete From ctacte_liq l Where l.ctacte_id=_ctacte_id and l.orden=0 and l.item_id=vitem_id;
         Else
           Update ctacte_liq l Set monto=monto+vmonto_aplic Where l.ctacte_id=_ctacte_id and l.orden=0 and l.item_id=vitem_id;
         End If;
       End If;

       Delete From ctacte_det d where d.ctacte_id=_ctacte_id and d.topera=16 and d.comprob=vcomp_id;
       Perform sam.uf_ctacte_ajuste (_ctacte_id);
    End Loop;

End
$$;


ALTER FUNCTION sam.uf_comp_aplicar_anula(_ctacte_id integer) OWNER TO postgres;

--
-- TOC entry 5664 (class 0 OID 0)
-- Dependencies: 772
-- Name: FUNCTION uf_comp_aplicar_anula(_ctacte_id integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_comp_aplicar_anula(_ctacte_id integer) IS 'Anula la aplicación de una Compensación en un período de la Cta.Cte.
Parámetros:
  ctacte_id integer: Identificador de la Cta. Cte.';


--
-- TOC entry 773 (class 1255 OID 5282745)
-- Name: uf_comp_aplicar_anula(integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_comp_aplicar_anula(_comp_id integer, _ctacte_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
  vmonto_aplic numeric(12,2);
  vitem_id smallint;
  vtrib_id smallint;
  trib_tipo smallint;
  vdj_id integer;
  vmonto numeric(12,2);
BEGIN
    For vmonto_aplic In Select r.monto_aplic
    From comp_aplic r Where  r.comp_id=_comp_id and r.ctacte_id=_ctacte_id
    Loop

        -- Elimino la Aplicación de la retención/compensa
        Delete From comp_aplic r Where r.comp_id=_comp_id and r.ctacte_id=_ctacte_id;

        -- Actualizo los datos de la Retencion/Compensa
        Update comp r Set monto_aplic=monto_aplic-vmonto_aplic, fchaplic=null,
        est='D', fchmod=current_timestamp Where r.comp_id=_comp_id;

       -- Actualizo la ctacte
       Select Into vtrib_id,vitem_id i.trib_id,i.item_id From ctacte c Left Join item i On c.trib_id=i.trib_id
       Where c.ctacte_id=_ctacte_id and i.tipo=8;

	   Select Into trib_tipo t.tipo From trib t Where t.trib_id=vtrib_id;
       If (trib_tipo = 2) Then -- Declarativo
         Select Into vdj_id d.dj_id From ddjj d Where d.ctacte_id=_ctacte_id and d.est='A';
         Select Into vmonto l.monto From ddjj_liq l Where l.dj_id=vdj_id and l.item_id=vitem_id;
         If (vmonto=vmonto_aplic) Then
           Delete From ddjj_liq l Where l.dj_id=vdj_id and l.item_id=vitem_id;
         Else
           Update ddjj_liq l Set monto=monto+vmonto_aplic Where l.dj_id=vdj_id and l.item_id=vitem_id;
         End If;
	   Else
         Select Into vmonto l.monto From ctacte_liq l Where l.ctacte_id=_ctacte_id and l.orden=0 and l.item_id=vitem_id;
         If (vmonto=vmonto_aplic) Then
           Delete From ctacte_liq l Where l.ctacte_id=_ctacte_id and l.orden=0 and l.item_id=vitem_id;
         Else
           Update ctacte_liq l Set monto=monto+vmonto_aplic Where l.ctacte_id=_ctacte_id and l.orden=0 and l.item_id=vitem_id;
         End If;
       End If;

       Delete From ctacte_det d where d.ctacte_id=_ctacte_id and d.topera=16 and d.comprob=_comp_id;
       Perform sam.uf_ctacte_ajuste (_ctacte_id);
    End Loop;

End
$$;


ALTER FUNCTION sam.uf_comp_aplicar_anula(_comp_id integer, _ctacte_id integer) OWNER TO postgres;

--
-- TOC entry 5665 (class 0 OID 0)
-- Dependencies: 773
-- Name: FUNCTION uf_comp_aplicar_anula(_comp_id integer, _ctacte_id integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_comp_aplicar_anula(_comp_id integer, _ctacte_id integer) IS 'Anula la aplicación de una Compensación en un período de la Cta.Cte.
Parámetros:
  comp_id integer: Identificador de la compensación
  ctacte_id integer: Identificador de la Cta. Cte.';


--
-- TOC entry 774 (class 1255 OID 5282746)
-- Name: uf_comp_borrar(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_comp_borrar(_comp_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
  vctacte_id integer;
  vitem_id smallint;
BEGIN
    -- Periodos con Saldos
    -- -------------------
    For vctacte_id In Select r.ctacte_id From comp_saldo r
      Where r.comp_id = _comp_id Order By ctacte_id Loop

       -- Elimino la retención
       Update comp_saldo s Set saldo_cub=0 Where s.comp_Id=_comp_id and s.ctacte_id=vctacte_id;

       -- Actualizo la CtaCte
       Select  Into vitem_id coalesce(i.item_id,0) From ctacte c
       Inner Join item i On c.trib_id=i.trib_id
       Where c.ctacte_id=vctacte_id and i.tipo=8;

       Update ctacte_det d Set est='B' Where d.ctacte_id=vctacte_id and topera=12;

       Perform sam.uf_ctacte_ajuste (vctacte_id);
    End Loop;

    -- Periodos de Destino
    -- -------------------
    For vctacte_id In Select r.ctacte_id
    From comp_aplic r Where r.comp_id=_comp_id Loop

       -- Actualizo la ctacte
       Select  Into vitem_id coalesce(i.item_id,0) From ctacte c
       Inner Join item i On c.trib_id=i.trib_id
       Where c.ctacte_id=vctacte_id and i.tipo=8;

       Update ctacte_det d Set est='B' Where d.ctacte_id=vctacte_id and topera=16;

       Perform sam.uf_ctacte_ajuste (vctacte_id);
    End Loop;

    -- Actualizo Rete
    Update comp r Set monto_aplic=0, fchaplic = null, est='B',
      fchbaja = current_timestamp Where r.comp_id=_comp_id;

End
$$;


ALTER FUNCTION sam.uf_comp_borrar(_comp_id integer) OWNER TO postgres;

--
-- TOC entry 5666 (class 0 OID 0)
-- Dependencies: 774
-- Name: FUNCTION uf_comp_borrar(_comp_id integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_comp_borrar(_comp_id integer) IS 'Elimina un Compensación
Parámetros:
  comp_id integer: Identificador de la Compensación.
';


--
-- TOC entry 775 (class 1255 OID 5282747)
-- Name: uf_comp_saldo(integer, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_comp_saldo(_trib_id integer, _obj_id character varying) RETURNS TABLE(saldo numeric)
    LANGUAGE plpgsql
    AS $$
DECLARE
  vtobj smallint;
  vnum varchar(8);
BEGIN
    -- Devuelve el Saldo de Retención o Compensación
    Select Into vnum o.num From objeto o Where o.obj_id=_obj_id;

    Select Into saldo coalesce(sum(r.monto-r.monto_aplic),0)
    From comp r Where (r.obj_ori=_obj_id or (r.aplic_num=1 and r.obj_dest=vnum)
      or (r.aplic_num=1 and r.obj_ori in (select o.obj_id from objeto o where o.num=vnum)))
      and r.est='D' And (_trib_id=0 or _trib_id=r.trib_ori or r.trib_ori is null or r.trib_ori=0);


	Return next;

End
$$;


ALTER FUNCTION sam.uf_comp_saldo(_trib_id integer, _obj_id character varying) OWNER TO postgres;

--
-- TOC entry 776 (class 1255 OID 5282748)
-- Name: uf_comp_saldos_ajuste(integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_comp_saldos_ajuste(_comp_id integer, _usr_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
 tipo smallint;
 vctacte_id integer;
 saldo numeric(12,2);
 monto numeric (12,2);
 vtcta smallint;
 vcta_id smallint;
 trib_ori smallint;
 vfaci_id integer;
BEGIN
 vcta_id= 0;

	 -- Datos de la Compensacion
	 Select Into tipo, trib_ori r.tipo, r.trib_ori From comp r Where r.comp_id=_comp_id;

	 -- Recupero los períodos del origen
	 For vctacte_id, saldo In Select s.ctacte_id, s.saldo
	 From comp_saldo s Where s.comp_id = _comp_id
	 Loop
		 Delete From ctacte_det d Where d.ctacte_id=vctacte_id
			 and d.topera=12 and d.comprob=_comp_id;

		 For vtcta, vcta_id, monto
		 In Select c.tcta, c.cta_id, sum(case when c.tcta in (2,3) then d.haber else d.haber - d.debe end)
		 From ctacte_det d inner join cuenta c on d.cta_id = c.cta_id
		 Where d.ctacte_id = vctacte_id and d.est = 'A' and d.topera in (3,5,7,10,16,17)
           and ((tipo=3 and c.tcta not in (2,3)) or tipo=4)
		 Group by c.tcta, c.cta_id
		 Order by c.tcta desc, c.cta_id desc
		 Loop
			 If (saldo <> 0) Then
				 If (saldo < monto) Then monto = saldo; End If; -- No se cubre todo el monto

				 If (vtcta in (2,3)) Then
					 If (trib_ori = 2) Then
						 Insert Into ctacte_det Values (vctacte_id, 12, _comp_id, vcta_id,
						 0 , -monto, current_date, 'A', current_timestamp, _usr_id);
					 Else
						 Insert Into ctacte_det Values (vctacte_id, 12, _comp_id, vcta_id,
						 -monto , -monto, current_date, 'A', current_timestamp, _usr_id);
					 End If;
				 Else
					 Insert Into ctacte_det Values (vctacte_id, 12, _comp_id, vcta_id,
					 0, -monto, current_date, 'A', current_timestamp, _usr_id);
				 End If;
				 saldo = saldo - monto;
			 End If;
		 End Loop;

		 Perform sam.uf_ctacte_ajuste(vctacte_id);

		 If (trib_ori = 2) Then
			 -- Es una facilidad, debo anular la imputación
			 select into vfaci_id c.anio From ctacte c where c.ctacte_id= vctacte_id;

			 Perform sam.uf_facilida_anular(vfaci_id);
		 End if;
	 End Loop;
End
$$;


ALTER FUNCTION sam.uf_comp_saldos_ajuste(_comp_id integer, _usr_id integer) OWNER TO postgres;

--
-- TOC entry 5667 (class 0 OID 0)
-- Dependencies: 776
-- Name: FUNCTION uf_comp_saldos_ajuste(_comp_id integer, _usr_id integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_comp_saldos_ajuste(_comp_id integer, _usr_id integer) IS 'Actualiza la Cta.Cte. para los períodos con saldos o pagos de la Compensación.
Parámetros:
  comp_id integer: Identificador de la Compensación.
  usr_id integer: Código de usuario.
';


--
-- TOC entry 777 (class 1255 OID 5282749)
-- Name: uf_ctacte_ajuste(integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_ajuste(_ctacte_id integer, _usr_id integer DEFAULT 100) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	nom numeric(12,2);
	nomcub numeric(12,2);
	multasaldo numeric(12,2);
	estcta char(1);
	estcc char(1);
	fchpagomax timestamp;
	nommax numeric(12,2); /* Se usa para determinar si no esta exento */
	vtrib_id smallint;
	vttrib smallint;
	vcaja smallint;
	vanio integer;
    vcuota smallint;
    venc1 date;
    venc2 date;
	haydeb smallint;
	haycomp smallint;
	hayrec smallint;
	saldorec numeric(12,2);
	rec_venc2 numeric(12,4);
	monto2 numeric(12,2);
BEGIN
    -- Procedimiento que actualiza la CtaCte en función de CtaCte_Det

    Select Into nom, nomCub, multasaldo, fchpagomax, nommax, haydeb, haycomp, hayrec
	    sum(Case When c.tcta=1 or cc.trib_id=6 Then d.debe Else 0 End),
        sum(Case When c.tcta=1 or cc.trib_id=6 Then d.haber /*When tcta=2 then debe */ Else 0 End),
        sum(Case When c.tcta=4 and cc.trib_id<>6 Then d.debe - d.haber Else 0 End),
        max(Case When d.topera in (3,5,7,8,10,16,17) and d.haber>0 Then d.fecha Else null End), 
        coalesce(max(Case When c.tcta=1 Then d.debe Else 0 End),0),
        sum(case When d.topera=5 then 1 else 0 end),
        sum(case When d.topera=16 then 1 else 0 end),
        sum(case When d.topera not in (3,5,7,8,10,16,17) and c.tcta=3 and d.haber=0 and d.debe>0 then 1 else 0 end)
    From ctacte_det d inner join cuenta c on d.cta_id=c.cta_id
    inner join ctacte cc on d.ctacte_id=cc.ctacte_id
    Where d.ctacte_id = _ctacte_id and d.est = 'A';
--    Group By c.tcta Order by c.tcta; -- cambio chany 27/03/2012

    -- Obtengo Caja, tributo y tipo de tributo
    Select Into vcaja, vtrib_id, vanio, vcuota c.caja_id, c.trib_id, c.anio, c.cuota
    From ctacte c Where c.ctacte_Id=_ctacte_id;

    Select Into vttrib,rec_venc2 t.tipo,t.rec_venc2 From trib t Where t.trib_id=vtrib_id;

	-- Verifico si se pagaron los recargos liquidados
    If (vtrib_id=2) Then
      Select Into saldorec sum(d.debe)-sum(d.haber)
      From ctacte_det d Inner Join cuenta c on d.cta_id=c.cta_id
      Where d.ctacte_id=_ctacte_id and c.tcta=3 and d.est='A';
      If (hayrec>0 and saldorec=0) Then hayrec=0; End If;
    Else
    	hayrec=0;
    End If;

    If (haydeb > 0 and vcaja=0) Then vcaja=-1; End If;
    If (haycomp > 0 and vcaja=0) Then vcaja=-2; End If;
    If (vcaja<0 and haydeb=0 and haycomp=0) Then vcaja=0; End If;
    If (fchpagomax is null) Then vcaja=0; End If;

    If (nom is null) Then
        nom = 0;
        estcc='X';
    Else
        estcc = ' ';
	End If;

    If (nomcub is null) Then nomcub = 0; End If;
    If (multasaldo is null) Then multasaldo = 0; End If;

    If (nomcub >= nom And multasaldo <= 0 and hayrec=0) Then
        If (nom > 0) Then
            estcta = 'P';
        Else
            If (estCC='X') Then
                estcta = 'X';
            Else
            	If (nom<0 and vttrib in (3,4)) Then
                	estcta = 'D';
                Else
	                estcta = 'E';
                End If;
            End If;
        End If;
    Else
        estcta = 'D';
    End If;

    -- Verifico si se aplica recargo al 2do vencimiento
    -- (ES REALMENTE NECESARIO?? NO SE RESUELVE EN uf_emision ?? -Gabriel-)
    If (rec_venc2 > 0) Then
        monto2 := nom * (1+rec_venc2);
    ElseIf (rec_venc2 = -1) Then
    	select Into venc1,venc2 v.fchvenc1,v.fchvenc2 From trib_venc v
        where v.trib_id=vtrib_id and v.anio=vanio and v.cuota=vcuota;

        monto2 := nom + sam.uf_calc_interes(nom,venc1,venc2);
    Else
    	monto2 := nom;
    End If;
    raise notice 'monto2 ajuste: %',monto2;

	-- Actualizo excepto montovenc1 (montovenc1=nom,)
    Update ctacte c Set nominal=nom,  montovenc2=monto2,
    nominalcub=nomcub, multa=multasaldo,
    est=estcta, fchpago=fchpagomax, caja_id=vcaja,
    fchmod=current_timestamp, usrmod= case when _usr_id<>100 then _usr_id else usrmod end
    Where c.ctacte_id=_ctacte_id;

End
$$;


ALTER FUNCTION sam.uf_ctacte_ajuste(_ctacte_id integer, _usr_id integer) OWNER TO postgres;

--
-- TOC entry 778 (class 1255 OID 5282751)
-- Name: uf_ctacte_ajuste_borrar(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_ajuste_borrar(_aju_id integer) RETURNS TABLE(cta_id smallint, cta_nom character varying, tcta smallint, monto numeric)
    LANGUAGE plpgsql
    AS $$
declare
  vctacte_id integer;
BEGIN
    Select Into vctacte_id a.ctacte_id From ctacte_ajuste a
    Where a.aju_id = _aju_id;

    Delete From ctacte_ajuste a Where a.aju_id = _aju_id;

    -- Arreglo Origen
    If (vctacte_id is not null) Then
        Delete From ctacte_det d Where d.ctacte_id = vctacte_id
        and d.topera = 11 and d.comprob=_aju_id;

        Perform sam.uf_ctacte_ajuste(vctacte_id);
    End If;

End
$$;


ALTER FUNCTION sam.uf_ctacte_ajuste_borrar(_aju_id integer) OWNER TO postgres;

--
-- TOC entry 779 (class 1255 OID 5282752)
-- Name: uf_ctacte_anual(integer, integer, date, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_anual(_ctacte_id integer, _usr_id integer, _fchcaja date, _caja_id integer, _ticket integer DEFAULT 0) RETURNS integer
    LANGUAGE plpgsql
    AS $$
declare
  vtrib_id smallint;
  vobj_id varchar(8);
  vsubcta smallint;
  vanio integer;
  vcuota smallint;
  vmonto numeric(12,2);
  vfchemi date;
  vfchvenc date;
  vtobj smallint;
  ctacte_id_anual integer;
  vcomprob bigint;
  vcta_id smallint;
  porcdesc decimal(9,2);
  cantanio smallint;
  vorden smallint;
BEGIN
    -- DEF: Procedimiento que genera la CtaCte para la Emisión Anual
    -- según los datos del Período

    -- Obtengo los datos de la Emisión
    Select Into vtrib_id, vobj_id, vsubcta, vanio, vcuota, vmonto, vfchemi
    c.trib_id, c.obj_id, c.subcta, c.anio,c.cuota, c.nominal, c.fchemi
    From ctacte c Where c.ctacte_id=_ctacte_id;

    Select Into vfchvenc v.fchvencanual
    From trib_venc v Where v.trib_id=vtrib_id and v.anio=vanio and v.cuota=vcuota;

    Select Into cantanio f.cant_anio From resol r
    Where r.trib_id=vtrib_id and vanio*1000+vcuota between r.perdesde and r.perhasta;

    Select Into vtobj o.tobj From objeto o Where o.obj_id = vobj_id;

    -- Verifico si existe el período en la CtaCte - Obtengo el Id de la CtaCte
    Select Into ctacte_id_anual coalesce(c.ctacte_id,0)
    From CtaCte c
    Where c.trib_id=vtrib_id and c.obj_id=vobj_id and c.SubCta=vSubCta and c.anio=vanio and c.cuota=0;

    If (ctacte_id_anual > 0) then
      If (ctacte_id_anual <> _ctacte_id) Then
        -- Elimino la emisión y los errores previos
    	execute sam.uf_emision_borrar(ctacte_id_anual,_usr_id,'R');
        update ctacte c set est='D' Where c.ctacte_id=ctacte_id_anual;
      End If;
    Else
        -- Si no existe, Inserto los datos en la CtaCte
        ctacte_id_anual:=nextval('seq_ctacte_id'::regclass);

        Insert Into ctacte Values (ctacte_id_anual, vtrib_id, vtobj, vobj_id, vsubcta,
        vanio, 0, 0, vmonto, 0, 0, 'D', _fchcaja, vfchvenc, null, _caja_id, vmonto*cantanio, vmonto*cantanio, 0,
        0, '', 'Pago Anual', current_timestamp, _usr_id);
    End If;

    If (ctacte_id_anual <> _ctacte_id) Then
      -- Genero los registros para la liquidacion
      Insert Into ctacte_liq
      Select ctacte_id_anual, d.orden, d.item_id, d.param1, d.param2, d.param3, d.param4, d.monto*CantAnio
      From ctacte_liq d Where d.ctacte_id = _ctacte_id;

      -- Genero los registros en la CtaCte_Det
      Insert Into ctacte_det
      Select ctacte_id_anual, d.topera, d.ctacte_id, d.cta_id, d.debe*CantAnio, 0, fchcaja, 'A', current_timestamp, _usr_id
      From ctacte_det d Where d.ctacte_id = _ctacte_id and d.topera=1 and d.est='A';

      -- Genero los pagos previos como pagos parciales
      Insert Into ctacte_det
      Select ctacte_id_anual, d.topera, d.comprob, d.cta_id, d.debe, d.haber, d.fecha, 'A', d.fchmod, d.usrmod
      From ctacte c inner join ctacte_det d on c.ctacte_id=d.ctacte_id
      Where c.trib_id=vtrib_id and c.obj_id=vobj_id and c.SubCta=vSubCta and c.anio=vanio and cuota<>0
      and d.est='A' and d.haber>0 and d.topera in (3,4,5,7,8,10,11,16);

      -- Doy de Baja los períodos del Año en CtaCte
      Update CtaCte c Set Est='B'
      Where c.trib_id=vtrib_id and c.obj_id=vobj_id and c.SubCta=vSubCta and c.anio=vanio and c.cuota<>0;
	End If;

	perform sam.uf_ctacte_ajuste(ctacte_id_anual);

	-- Retorno el ctacte_id generado
    Return ctacte_id_anual;
End
$$;


ALTER FUNCTION sam.uf_ctacte_anual(_ctacte_id integer, _usr_id integer, _fchcaja date, _caja_id integer, _ticket integer) OWNER TO postgres;

--
-- TOC entry 780 (class 1255 OID 5282753)
-- Name: uf_ctacte_anual_saldo(integer, character varying, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_anual_saldo(_trib_id integer, _obj_id character varying, _fecha date) RETURNS TABLE(anio smallint, cuota smallint, nominal numeric, multa numeric, accesor numeric, saldo numeric, fchvenc date)
    LANGUAGE plpgsql
    AS $$
declare
  cant smallint;
  pagado numeric (12,2);
  perdesde integer;
  perhasta integer;
  vanio integer;
BEGIN
    -- Función que devuelve saldo a pagar en el año,
    -- incluyendo recargo por mora en períodos vencidos.

    anio := EXTRACT(year from fecha);
    vanio := anio;

    -- Verificaciones previas
    --a. No debe existir período anual
    --b. No debe estar vencido el pago anual

    -- Obtengo los períodos vencidos del año
    Select into perdesde,perhasta
    min(v.anio*100+v.cuota),max(v.anio*1000+v.cuota)
    from trib_venc v where v.trib_id=_trib_id and v.anio=vanio and v.fchvenc2<fecha;

    -- Obtengo la cantidad de períodos del año no vencidos
    Select Into Cant count(*)
    from trib_venc v where v.trib_id=_trib_id and v.anio=vanio and v.fchvenc2>=fecha;

    -- Me fijo si hay períodos pagos no vencidos ==> Pagado
    Select Into pagado coalesce(sum(c.nominal),0)
    from ctacte c where c.trib_id=21 and c.obj_id=_obj_id and c.anio=vanio
    and c.fchvenc>=fecha and c.est='P';

    -- Obtengo la deuda de períodos vencidos (incluyen los accesorios)
    For cuota,nominal,accesor,multa,saldo,fchvenc
    In Select c.cuota,c.nominal,c.accesor,c.multa,c.saldo,c.fchvenc
    from sam.uf_ctacte_tributo(_trib_id,0,_obj_id,0,fecha,perdesde,perhasta) c Loop
		Return Next;
    End Loop;

	-- Devuelvo el saldo del año
    cuota := 0;
    nominal := nominal * cant - pagado;
    multa := 0;
    accesor := sam.uf_calc_desc(_trib_id,_obj_id,anio*1000,nominal,fecha,anio*1000);
    saldo := nominal + accesor;
    fchvenc := fecha;
    Return Next;


END
$$;


ALTER FUNCTION sam.uf_ctacte_anual_saldo(_trib_id integer, _obj_id character varying, _fecha date) OWNER TO postgres;

--
-- TOC entry 5668 (class 0 OID 0)
-- Dependencies: 780
-- Name: FUNCTION uf_ctacte_anual_saldo(_trib_id integer, _obj_id character varying, _fecha date); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_ctacte_anual_saldo(_trib_id integer, _obj_id character varying, _fecha date) IS 'Permite determinar el saldo del pago anual, considerando el cálculo de recargo por mora por los períodos vencidos.';


--
-- TOC entry 786 (class 1255 OID 5282754)
-- Name: 
(character varying, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_banderas(_obj_id character varying, _perdesde integer, _perhasta integer) RETURNS TABLE(misc smallint, superp smallint, emi smallint, conv smallint, faci smallint, inti smallint, judic smallint, djfalta smallint, fisc smallint, djoficio smallint, exerec smallint, compensa smallint, condona smallint, debito smallint, exim smallint, amparo smallint)
    LANGUAGE plpgsql
    AS $$
DECLARE
    pend smallint;
    pag smallint;
    alta smallint;
    dec smallint;
    tobj smallint;
    debitoplan smallint;
BEGIN
    -- Obtengo el Tipo de Objeto
    Select Into tobj o.tobj From objeto o Where o.obj_id=_obj_id;

    If (tobj <> 3) Then
      Select Into misc case when count(*)>0 then 1 else 0 end From objeto_misc m Where m.obj_id=_obj_id;
      Select Into pend,pag,dec
          sum(case when p.est = 1 then 1 else 0 end),
          sum(case when p.est in (4,5) then 1 else 0 end),
          sum(case when p.est = 3 then 1 else 0 end)
          From plan p Where p.obj_id=_obj_id Group By p.obj_id;
      conv:= case when pend>0 then 1 when dec>0 then 2 when pag>0 then 3 else 0 end;
      Select Into superp case when count(*)>0 then 1 else 0 end From inm i Where i.obj_id=_obj_id and objeto_superp<>'';
      Select Into emi case when count(*)>0 then 1 else 0 end From ctacte c Where c.obj_id=_obj_id and c.est='';
      Select Into faci case when count(*)>0 then 1 else 0 end From facilida f Where f.obj_id=_obj_id and f.est=1;
      inti:= 0; 
      Select Into pend,pag
          sum(case when j.est not in ('B','P') then 1 else 0 end),
          sum(case when j.est in ('P') then 1 else 0 end)
          From judi j Where j.obj_id=_obj_id and j.est<>'B' Group By j.obj_id;
      judic:= case when pend>0 then 1 when pag>0 then 2 else 0 end;
      If (judic = 0) Then
          Select Into judic case when count(*)>0 then 1 else 0 end From ctacte c
          Where c.obj_id=_obj_id and c.est='J';
      End If;
      If (judic = 0) Then
          Select Into judic case when count(*)>0 then 1 else 0 end From plan p
          Left Join plan_periodo pp On p.plan_id=pp.plan_id
          Where p.obj_id=_obj_id and pp.estant='J';
      End If;
      Select Into djfalta case when count(*)>0 then 1 else 0 end From ctacte c inner join trib t on c.trib_id=t.trib_id Where c.obj_id=_obj_id and t.tipo=2 and c.est='X';
      Select Into fisc case when count(*)>0 then 1 else 0 end From fiscaliza f Where f.obj_id=_obj_id and f.est<>0 and f.est<>1;
      Select Into djoficio case when count(*)>0 then 1 else 0 end From ddjj d Where d.obj_id=_obj_id and d.tipo=2 and est='A';
      Select Into exerec case when count(*)>0 then 1 else 0 end From ctacte_excep c Where c.obj_id=_obj_id and c.anio*1000+c.cuota between _perdesde and _perhasta;
      Select Into compensa case when count(*)>0 then 1 else 0 end From comp r Where r.obj_ori=_obj_id and r.est='D';
      Select Into condona case when count(*)>0 then 1 else 0 end From ctacte_cambioest c Where c.obj_id=_obj_id and c.tipo=2 and c.est_dest='O';
	  Select Into debito case when count(*)>0 then 1 else 0 end From debito_adhe d Where d.obj_id=_obj_id and d.est='A';
	  Select Into debitoplan case when count(*)>0 then 1 else 0 end From plan d Where d.obj_id=_obj_id and d.est=1 and d.tpago=3;
      debito := debito + debitoplan;
      If (debito>1) Then debito=1; End If;
	  exim = 0; --Select Into exim case when count(*)>0 then 1 else 0 end From exen e Where e.obj_id=_obj_id and e.est in ('A','P','R');
	  amparo = 0;
    Else
    -- Si se trata de una Persona, recupero las banderas según los objetos
	  Select Into misc case when count(*)>0 then 1 else 0 end From objeto_misc o
          Where (o.obj_id in (Select op.obj_id from objeto_persona op Where op.num=_obj_id and op.est='A')) or o.obj_id=_obj_id;
      Select Into pend,pag,dec
          sum(case when o.est = 1 then 1 else 0 end),
          sum(case when o.est in (4,5) then 1 else 0 end),
          sum(case when o.est = 3 then 1 else 0 end) From plan o
          Where o.obj_id in (Select op.obj_id from objeto_persona op
          	Where op.num=_obj_id and op.est='A') or o.obj_id =_obj_id
          Group By o.num;
      conv:= case when dec>0 then 2 when pend>0 then 1 when pag>0 then 3 else 0 end;
      Select Into superp case when count(*)>0 then 1 else 0 end From inm o
        Where o.obj_id in (Select op.obj_id from objeto_persona op Where op.num=_obj_id and op.est='A') and o.objeto_superp<>'';
      Select Into emi case when count(*)>0 then 1 else 0 end From ctacte o
        Where o.obj_id in (Select op.obj_id from objeto_persona op Where op.num=_obj_id and op.est='A') and o.est='';
      Select Into faci case when count(*)>0 then 1 else 0 end From facilida o
        Where (o.obj_id in (Select op.obj_id from objeto_persona op Where op.num=_obj_id and op.est='A') or o.obj_id =_obj_id) and o.est=1;
      inti:= 0;  -- case when alta>0 then 3 when pend>0 then 1 when pag>0 then 2 else 0 end;
      Select Into pend,pag
          sum(case when o.est not in ('B','P') then 1 else 0 end),
          sum(case when o.est in ('P') then 1 else 0 end) From judi o
          Where o.obj_id in (Select op.obj_id from objeto_persona op Where op.num=_obj_id and op.est='A') Group By o.obj_id;
      judic:= case when pend>0 then 1 when pag>0 then 2 else 0 end;
      If (judic = 0) Then
          Select Into judic case when count(*)>0 then 1 else 0 end From ctacte o
          Where o.obj_id in (Select op.obj_id from objeto_persona op Where op.num=_obj_id and op.est='A') and o.est='J';
      End If;
      If (judic = 0) Then
          Select Into judic case when count(*)>0 then 1 else 0 end From plan o
          Left Join plan_periodo pp On o.plan_id=pp.plan_id
          Where o.obj_id in (Select op.obj_id from objeto_persona op Where op.num=_obj_id and op.est='A') and pp.estant='J';
      End If;
      Select Into djfalta case when count(*)>0 then 1 else 0 end From ctacte o inner join trib t on o.trib_id=t.trib_id
        Where o.obj_id in (Select op.obj_id from objeto_persona op Where op.num=_obj_id and op.est='A') and t.tipo=2 and o.est='X';
      Select Into fisc case when count(*)>0 then 1 else 0 end From fiscaliza o
        Where o.obj_id in (Select op.obj_id from objeto_persona op Where op.num=_obj_id and op.est='A') and o.est<>0 and o.est<>1;
      Select Into djoficio case when count(*)>0 then 1 else 0 end From ddjj o
        Where o.obj_id in (Select op.obj_id from objeto_persona op Where op.num=_obj_id and op.est='A') and o.tipo=2 and o.est='A';
      Select Into exerec case when count(*)>0 then 1 else 0 end From ctacte_excep o
        Where o.obj_id in (Select op.obj_id from objeto_persona op Where op.num=_obj_id and op.est='A')
        and o.anio*100+o.cuota between _perdesde and _perhasta;
      Select Into compensa case when count(*)>0 then 1 else 0 end From comp o
        Where (o.obj_dest in (Select op.obj_id from objeto_persona op Where op.num=_obj_id and op.est='A') or o.obj_dest=_obj_id) and o.est='D';
      Select Into condona case when count(*)>0 then 1 else 0 end From ctacte_cambioest o
        Where o.obj_id in (Select op.obj_id from objeto_persona op Where op.num=_obj_id and op.est='A') and o.tipo=2 and o.est_dest='O';

      Select Into debito case when count(*)>0 then 1 else 0 end From debito_adhe d
        Where d.obj_id in (Select op.obj_id from objeto_persona op Where op.num=_obj_id and op.est='A');
	  Select Into debitoplan case when count(*)>0 then 1 else 0 end From plan d
        Where d.obj_id in (Select op.obj_id from objeto_persona op Where op.num=_obj_id and op.est='A') and d.est=1 and d.tpago=3;
      debito := debito + debitoplan;
      exim = 0;
      --Select Into exim case when count(*)>0 then 1 else 0 end From exen e
      --  Where e.obj_id in (Select op.obj_id from objeto_persona op Where op.num=_obj_id and op.est='A' and e.est in ('A','P','R'));
      amparo = 0;
    End If;

    Return Next;

End
$$;


ALTER FUNCTION sam.uf_ctacte_banderas(_obj_id character varying, _perdesde integer, _perhasta integer) OWNER TO postgres;

--
-- TOC entry 781 (class 1255 OID 5282756)
-- Name: uf_ctacte_condona(integer, character varying, integer, integer, integer, integer, integer, character varying, character varying, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_condona(_trib_id integer, _obj_id character varying, _subcta integer, _aniodesde integer, _cuotadesde integer, _aniohasta integer, _cuotahasta integer, _expe character varying, _obs character varying, _usr_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
  vctacte_id integer;
  vobj_id varchar(8);
  cant smallint;
  vcambio_id integer;
  vperdesde integer;
  vperhasta integer;
  ssql varchar(5000);
BEGIN
    -- Genera períodos en estado O (Condonado) en la Cta Cte

    -- Inicializo
    cant= 0;
    vobj_id:=_obj_id;

    -- Si es plan o mejoras obtengo el Objeto
    If (vobj_id = '') Then
    	If (_trib_id=1) Then
        	Select Into vobj_id p.obj_id From plan p Where p.plan_id=_aniodesde;
        End If;
    End If;

    vperdesde= _aniodesde*1000+_cuotadesde;
    vperhasta= _aniohasta*1000+_cuotahasta;

    -- Verifico estado de los periodos
    If (vobj_id <> '') Then
	Select Into cant count(*) From ctacte c
	Where c.trib_id=_trib_id and c.obj_id=vobj_id and c.subcta= _subcta
	and c.anio*1000+c.cuota between vperdesde and vperhasta
	and c.est not in ('P','O','J','C','T');
    End If;

    If (cant = 0) Then
        RAISE EXCEPTION 'No hay Períodos para Condonar';
    End If;

    For vctacte_id In Select c.ctacte_id From ctacte c Where c.trib_id=_trib_id
    	and c.obj_id=vobj_id and (c.anio*1000+c.cuota between vperdesde and vperhasta)
        and c.est not in ('P','O','J','C') Loop
        
        -- Actualizo en la CtaCte
        Update ctacte c set est = 'O', expe=_expe, obs=obs || '/' || _obs,
            fchmod=current_timestamp, usrmod=_usr_id
            Where c.ctacte_id = vctacte_id;
        /* Se elimino la linea con: nominalcub=nominal (Chany - 09/12/2015)*/
    End Loop;

	vcambio_id:=nextval('seq_ctacte_cambio_est'::regclass);

    -- Inserto en CtaCte_CambioEst
    Insert into ctacte_cambioest Values (vcambio_id,2,_trib_id,vobj_id,_subcta,
      vperdesde,vperhasta,'D','O',_expe,_obs,current_timestamp,_usr_id);

End
$$;


ALTER FUNCTION sam.uf_ctacte_condona(_trib_id integer, _obj_id character varying, _subcta integer, _aniodesde integer, _cuotadesde integer, _aniohasta integer, _cuotahasta integer, _expe character varying, _obs character varying, _usr_id integer) OWNER TO postgres;

--
-- TOC entry 782 (class 1255 OID 5282757)
-- Name: uf_ctacte_condona_borrar(integer, character varying, integer, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_condona_borrar(_trib_id integer, _obj_id character varying, _subcta integer, _perdesde integer, _perhasta integer, _usr_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
  vctacte_id integer;
  vcambio_id smallint;  
BEGIN
    For vctacte_id In Select c.ctacte_id From ctacte c Where c.trib_id=_trib_id
        and c.obj_id = _obj_id and c.subcta = _subcta
        and (c.anio*1000+c.cuota between _perdesde and _perhasta)
        and c.est = 'O' Loop
        
        -- Actualizo la CtaCte
        Update ctacte c set est = 'D', fchmod=current_timestamp, usrmod=_usr_id
        Where c.ctacte_id = vctacte_id;
    End Loop;

	-- Elimino en CtaCte_CambioEst
    Delete from ctacte_cambioest ce where ce.tipo=3 and ce.perdesde=_perdesde 
    and ce.perhasta=_perhasta and ce.obj_id=_obj_id and ce.trib_id=_trib_id;
	
    -- Inserto en CtaCte_CambioEst
    vcambio_id:=nextval('seq_ctacte_cambio_est'::regclass);

    Insert Into ctacte_cambioest Values (vcambio_id,2,_trib_id,_obj_id,_subcta,
      _perdesde,_perhasta,'O','D','','',current_timestamp,_usr_id);

End
$$;


ALTER FUNCTION sam.uf_ctacte_condona_borrar(_trib_id integer, _obj_id character varying, _subcta integer, _perdesde integer, _perhasta integer, _usr_id integer) OWNER TO postgres;

--
-- TOC entry 5669 (class 0 OID 0)
-- Dependencies: 782
-- Name: FUNCTION uf_ctacte_condona_borrar(_trib_id integer, _obj_id character varying, _subcta integer, _perdesde integer, _perhasta integer, _usr_id integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_ctacte_condona_borrar(_trib_id integer, _obj_id character varying, _subcta integer, _perdesde integer, _perhasta integer, _usr_id integer) IS 'Anula la condonación de períodos de la Cuenta Corriente.
Parámetros:
  trib_id integer: código de tributo.
  obj_id varchar: código del objeto.
  subcta integer: número de SubCuenta.
  perdesde integer: Período Desde (aaaacc)
  perhasta integer: Período Hasta.
  usr_id integer: Identificación del usuario.';


--
-- TOC entry 783 (class 1255 OID 5282758)
-- Name: uf_ctacte_det(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_det(_ctacte_id integer) RETURNS TABLE(fecha date, topera smallint, operacion character varying, cta_id smallint, cta_nom character varying, comprob bigint, debe numeric, haber numeric, saldo numeric, est character, modif character varying)
    LANGUAGE sql
    AS $_$
   	Select c.fecha, c.topera,o.nombre, c.cta_id, cu.nombre_redu, c.comprob,
    	c.debe, c.haber, c.debe - c.haber, c.est,
	    (u.nombre::text || ' - '::text) || to_char(c.fchmod, 'DD/MM/YYYY'::text)
    From ctacte_det c
	    inner join ctacte_topera o on c.topera = o.cod
    	inner join cuenta cu on c.cta_id = cu.cta_id
	    inner join sam.sis_usuario u on c.usrmod = u.usr_id
    Where c.ctacte_id = $1;
$_$;


ALTER FUNCTION sam.uf_ctacte_det(_ctacte_id integer) OWNER TO postgres;

--
-- TOC entry 5670 (class 0 OID 0)
-- Dependencies: 783
-- Name: FUNCTION uf_ctacte_det(_ctacte_id integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_ctacte_det(_ctacte_id integer) IS 'Recupera el detalle de la CtaCte de un período

Parámetros:
	ctacte_id: Identificqador de la CtaCte.
';


--
-- TOC entry 784 (class 1255 OID 5282759)
-- Name: uf_ctacte_det_agrupa(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_det_agrupa(_ctacte_id integer) RETURNS TABLE(fecha date, topera smallint, operacion character varying, comprob bigint, debe numeric, haber numeric, saldo numeric, est character, modif character varying)
    LANGUAGE sql
    AS $_$
  	Select c.fecha, c.topera,o.nombre, c.comprob,
    	sum(c.debe), sum(c.haber), sum(c.debe - c.haber), c.est,
	    (u.nombre::text || ' - '::text) || to_char(c.fchmod, 'DD/MM/YYYY'::text) modif
    From ctacte_det c
	    inner join ctacte_topera o on c.topera = o.cod
    	inner join cuenta cu on c.cta_id = cu.cta_id
	    inner join sam.sis_usuario u on c.usrmod = u.usr_id
    Where c.ctacte_id = $1
    Group by c.fecha, c.topera, o.nombre, c.comprob, c.est, modif;
$_$;


ALTER FUNCTION sam.uf_ctacte_det_agrupa(_ctacte_id integer) OWNER TO postgres;

--
-- TOC entry 785 (class 1255 OID 5282760)
-- Name: uf_ctacte_djfaltantes(integer, character varying, integer, integer, date, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_djfaltantes(_trib_id integer, _obj_id character varying, _anio integer, _cuota integer, _fecha date, _usr_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
  vdjfaltantes smallint;
  dia varchar(3);
  cant smallint;
  vobj_id varchar(8);
  vsubcta smallint;
  vtrib_usa_subcta smallint;
  vtrib_princ smallint;
  vtobj smallint;
  vtobjprinc smallint;
  vtobjaux smallint;
  vfchini date;
  vperm_tipos varchar;
  vperm_tliqs varchar;
  sql varchar;
BEGIN
    -- Genera períodos en estado X en la Cta Cte

    -- Inicializo
    vobj_id:= '';
    vsubcta = 0;
    Cant:= 0;

    Select into vtobj, vtrib_usa_subcta, vtrib_princ t.tobj, t.uso_subcta, t.dj_tribprinc from trib t where t.trib_id=_trib_id;
    -- Si el tributo principal es diferente al código del tributo y no es 0, recupero el tipo de objeto de él
    If (vtrib_princ  > 0 and vtrib_princ <> _trib_id) Then
        Select into vtobjprinc t.tobj from trib t where t.trib_id = vtrib_princ;
    Else
        vtobjprinc = 0;
    End If;

    -- Obtengo parametro de config que define como se genera la liquidacion en la ctacte
    -- 0. Monto=0 / 1. Multa solamente / 2. Multa y Minimo
    Select Into vdjfaltantes c.djfaltantes From sam.config c;


    -- Obtengo la configuración de ddjj
    Select Into vperm_tipos, vperm_tliqs
    d.perm_tipos, 'LO'||case cm_dj when 1 then ',CM' else '' end||case cm_dj when 1 then ',AI' else '' end
    From sam.config_ddjj d where d.trib_id=_trib_id;


    -- Determino la Fecha inicial de Habilitación
    If (_cuota in (1,3,5,7,8,10,12)) Then dia:='31'; End If;
    If (_cuota in (4,6,9,11)) Then dia:='30'; End If;
    If (_cuota in (2)) Then dia:='28'; End If;
    vfchini = (_anio::varchar || '/' || lpad(_cuota::varchar,2,'0') || '/' || dia)::timestamp;

    if _obj_id='' Then  -- Para todos los objetos

        -- Genero la lista de objetos y los recorro
        For vobj_id, vsubcta In
        Select distinct o.obj_id, 0 From objeto o
/*3*/   Left join persona p On o.tobj=vtobj and o.obj_id=p.obj_id
/*2*/   Left join objeto oc On oc.tobj=2 and o.obj_id=oc.num 
/*2*/   Left join comer co On o.tobj=vtobj and oc.obj_id=co.obj_id
        Left join objeto_trib ot on o.obj_id=ot.obj_id and ot.trib_id=_trib_id and ot.est='A' and _anio*1000+_cuota between ot.perdesde and ot.perhasta
/*2*/   Left Join objeto_accion a On co.obj_id=a.obj_id and a.taccion=23
        Left join ctacte c On c.trib_id=_trib_id and c.obj_id=o.obj_id and c.anio=_anio and c.cuota=_cuota
        Left join ddjj d On d.trib_id=_trib_id and d.obj_id=o.obj_id and d.anio=_anio and d.cuota=_cuota
/*3*/   Where o.tobj=vtobj and (o.tobj=2 or (o.tobj=3 and p.est_ib='A' and strpos(vperm_tliqs,p.tipoliq)>0))
        and (o.est='A' or (o.Est='B' and o.fchbaja > vfchini))
        and (c.ctacte_id is null or c.est='B')
        and (d.dj_id is null or d.est='B')
/*2*/   and (o.tobj in (2,3) and ((vperm_tipos='') or (vperm_tipos<>'' and oc.est='A' and vperm_tipos like '%'||co.tipo::text||'%')))
/*2*/   and (co.fchhab is null or a.obj_id is not null or co.fchhab<=vfchini)
        Order By o.obj_id Desc Loop
	    	
            If vtrib_usa_subcta = 0 Then
                vsubcta= 0;
            End If;

            -- Verifico si tiene rubros
            If exists(Select 1 from sam.uf_objeto_rubro(_trib_id,vobj_id,0,0,_anio,_cuota)) Then
                -- Llamo al procedimiento que actualiza la CtaCte propiamente dicha
                perform sam.uf_ctacte_djfaltantes_cta(_trib_id, vobj_id, vsubcta, _anio, _cuota, _fecha, _usr_id, vdjfaltantes);
                cant = cant +1;
            End If;

        End Loop;

    Else    -- obj_id<>'' => Ejecutar para un obj_id

        -- Verifico que el Objeto este Activo
        If exists(Select 1 From objeto o Where o.tobj in (2,3) and o.est <> 'A' and o.obj_id = _obj_id) Then
            RAISE EXCEPTION 'Error en el estado del Objeto. No se puede generar Faltante';
        End If;


        -- Verifico si corresponde al Tipo de Liquidación
        If (vtobj = 3) Then
	     Select into cant count(*) From persona p Where p.obj_id=_obj_id and strpos(vperm_tliqs,p.tipoliq)=0;
             If (cant > 0) Then
                RAISE EXCEPTION 'Error, el Tipo de Liquidación no está obligado a DJ. No se puede generar Faltante';
             End If;
        End If;


         -- Verifico la Fecha de Habilitación y si corresponde al tipo de comercio
        If (vtobj = 2) Then
             If exists(Select 1 From comer c Where c.obj_id=_obj_id and not (c.fchhab is null or c.fchhab > vfchhabini)) Then
                RAISE EXCEPTION 'Error Fecha Habilitación. No se puede generar Faltante';
             ElseIf exists(Select 1 From comer c Where c.obj_id=_obj_id and vperm_tipos<>'' and not vperm_tipos like p.tipo) Then
                RAISE EXCEPTION 'Error, el Tipo de Comercio no está oobligado a DJ. No se puede generar Faltante';
             End If;
        End If;


        -- Verifico que no exista en CtaCte
        If (Select 1 From ctacte c Where c.trib_id=_trib_id and c.obj_id=_obj_id and c.subcta=vsubcta and c.anio=_anio and c.cuota=_cuota and c.est<>'B') Then
            RAISE EXCEPTION 'El período ya existe en CtaCte. No se puede generar Faltante';
        End If;


        -- Verifico que no exista en DDJJ
        If (Select 1 From ddjj d Where d.trib_id=_trib_id and d.obj_id=_obj_id and d.subcta=vsubcta and d.anio=_anio and d.cuota=_cuota and d.est='A') Then
            RAISE EXCEPTION 'La DJ ya existe para el período. No se puede generar Faltante';
        End If;


        -- Verifico si tiene rubros para tipo de objeto comercio y que sea Regimen General
        If not exists(Select 1 from sam.uf_objeto_rubro(_trib_id,_obj_id,0,0,_anio,_cuota)) Then
            RAISE EXCEPTION 'No se encontraron rubros asociados al objeto';
        End If;


        -- Llamo al procedimiento que actualiza la CtaCte propiamente dicha
        perform sam.uf_ctacte_djfaltantes_cta(_trib_id, _obj_id, vsubcta, _anio, _cuota, _fecha, _usr_id, vdjfaltantes);

    End If;
    raise notice 'cant: %', cant;	
End
$$;


ALTER FUNCTION sam.uf_ctacte_djfaltantes(_trib_id integer, _obj_id character varying, _anio integer, _cuota integer, _fecha date, _usr_id integer) OWNER TO postgres;

--
-- TOC entry 787 (class 1255 OID 5282762)
-- Name: uf_ctacte_djfaltantes_cta(integer, character varying, integer, integer, integer, date, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_djfaltantes_cta(_trib_id integer, _obj_id character varying, _subcta integer, _anio integer, _cuota integer, _fecha date, _usr_id integer, _djfaltantes integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
  -- Variables del Comercio
  tipoliq varchar;
  cm smallint;
  pi smallint;
  ai smallint;
  vtobj smallint;
  -- Variables de Rubros
  vrubro_id integer;
  cant integer;
  vdjrub_id integer;
  alicuota numeric(12,2);
  minimo numeric(12,2);
  monto numeric(12,2);

  vctacte_id integer;
  vitem_id smallint;
  vitem_monto numeric(12,2);
  vfchvenc date;
BEGIN
    -- Genera períodos en estado X en la Cta Cte. Proc que actualiza la CtaCte

    -- Obtengo el tipo de Objeto
	Select into vtobj o.tobj From Objeto o Where o.Obj_id=_obj_id;

    -- Datos del Vencimiento
    Select Into vfchvenc coalesce(v.fchvenc2,v.fchvenc1) From trib_venc v Where v.trib_id=_trib_id
    and v.anio=_anio and v.cuota=_cuota;

    -- Genero el Identificador para la CtaCte e inserto
    vctacte_id:=nextval('seq_ctacte_id'::regclass);

    Insert Into ctacte Values (vctacte_id, _trib_id, vtobj, _obj_id, _subcta,
    _anio, _cuota, 0, 0, 0, 0, 'X', current_timestamp, vfchvenc, null, 0, 0, 0, 0,
    0, '', '', current_timestamp, _usr_id);

    -- Verifico si se genera liquidacion en funcion de la configuracion

    -- ------------------------------------------------
    -- djfaltantes=2. Con Liquidacion de Multa y Minimo
    -- ------------------------------------------------
    If (_djfaltantes = 2) Then
    	-- 0. Obtengo datos necesarios del Comercio
        If vtobj= 2 Then
			Select Into pi, tipoliq  c.pi, c.tipoliq From v_comer_suc c Where c.obj_id=_obj_id;
        Else
        	Select Into pi, tipoliq  c.pi, c.tipoliq From v_comer_suc c Where c.obj_id_ib=_obj_id;
        End If;

		cm = iif (tipoliq= 'CM',1,0);
        ai = iif (tipoliq= 'AI',1,0);
    	-- 1. Obtengo los Rubros del Comercio
		vdjrub_id:=nextval('temp.seq_ddjj_rubros'::regclass);
    	For vrubro_id, cant In Select cr.rubro_id, cr.cant From sam.uf_objeto_rubro(_trib_id, _obj_id, _subcta,0, _anio, _cuota) cr
        Loop
        	-- 2. Calculo el Monto para cada Rubro
        	Select Into alicuota, minimo, monto  dr.alicuota, dr.minimo, dr.monto
              From sam.uf_dj_calcular_rubro(vrubro_id, _anio, _cuota, 0, cant, pi, cm, ai) dr;

			-- 3. Inserto en la Tabla Temporal de Rubros
			Insert Into temp.ddjj_rubros Values (vdjrub_id, vrubro_id, 0, cant, minimo, alicuota, monto);
        End Loop;

		-- 4. Llamo a la función para calcular la DJ (solo se calcula, no se graba DJ de Oficio)
		For vitem_id, vitem_monto In Select dj.item_id, dj.item_monto
          From sam.uf_dj_calcular(_trib_id, _obj_id, 0, _anio, _cuota, 0, _fecha, vdjrub_id) dj
        Loop
            If (vitem_monto <> 0) Then
                Insert Into ctacte_liq Values(vctacte_id,1,vitem_id,'','','','',vitem_monto);
            End If;
        End Loop;
        Delete From temp.ddjj_rubros r where r.djrub_id = vdjrub_id;
    End If;

    -- -------------------------------------------------
    -- djfaltantes=1. Con Liquidacion de Multa solamente
    -- -------------------------------------------------
    If (_djfaltantes = 1) Then
      For vitem_id, vitem_monto In Select m.item_id, m.multa
        From sam.uf_calc_multa(_trib_id, _obj_id, _anio*1000+_cuota, 0, current_date) m
      Loop
          If (vitem_monto <> 0) Then
              Insert Into ctacte_liq Values(vctacte_id,1,vitem_id,'','','','',vitem_monto);
          End If;
      End Loop;
    End If;

    -- --------------------------------------
    -- djfaltantes in (1,2). Actualizo CtaCte
    -- --------------------------------------
    If (_djfaltantes in (1,2)) Then
      Insert Into ctacte_det
        Select vctacte_id, 2, 0, i.cta_id, sum(l.monto), 0, current_date, 'A', current_timestamp, _usr_id
        From ctacte_liq l Inner Join Item i On l.item_id = i.item_id
        Where l.ctacte_id = vctacte_id
        Group By i.tipo, l.ctacte_id, i.cta_id;

      Perform sam.uf_ctacte_ajuste(vctacte_id);
    End If;

End
$$;


ALTER FUNCTION sam.uf_ctacte_djfaltantes_cta(_trib_id integer, _obj_id character varying, _subcta integer, _anio integer, _cuota integer, _fecha date, _usr_id integer, _djfaltantes integer) OWNER TO postgres;

--
-- TOC entry 788 (class 1255 OID 5282763)
-- Name: uf_ctacte_est_deuda(integer, character varying, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_est_deuda(_trib_id integer, _obj_id character varying, _subcta integer) RETURNS TABLE(anio smallint, detalle character varying, monto numeric, accesor numeric, multa numeric, total numeric)
    LANGUAGE plpgsql
    AS $$
DECLARE
	--tpago smallint;
    vanio smallint;
	cuota smallint;
	nominal numeric(12,2);
	nominalcub numeric(12,2);
	montomulta numeric(9,2);
	est char(1);
	fchvenc timestamp;
	fchpago timestamp;
	anio_ant smallint;
	cuota_ant smallint;
	interes numeric(9,2);
	fchcons date;
BEGIN
    --Select Into tpago t.tpago From trib t Where t.trib_id=_trib_id;
    anio_ant = 0;  cuota_ant = 0;
    monto = 0;   accesor = 0;   multa = 0;
    detalle = '                                    ';

    For vanio, cuota, nominal, nominalCub, montomulta, est, fchvenc, fchpago
    	In Select c.anio, c.cuota, c.nominal, c.nominalcub, c.multa, c.est, c.fchvenc, c.fchpago
        From ctacte c Where c.trib_id=_trib_id and c.obj_id=_obj_id and c.subcta=_subcta
        and c.anio>=extract(year from current_date)-5 and c.est not in ('','B') and c.fchvenc<current_date
        Order By c.anio, c.cuota Loop

        If (anio_ant = 0) Then
            -- Agrego espacios si faltan años
            anio_ant = extract(year from current_date)-5;
            While (anio_ant < vanio) Loop
                anio:= anio_ant;
                detalle = '                                    ';
                monto = 0;
                accesor = 0;
                multa = 0;
                total = 0;
                Return Next;
                anio_ant:= anio_ant + 1;
            End Loop;

            anio_ant = vanio;
            cuota_ant = cuota;
        ElseIf (vanio <> anio_ant) Then
            -- Cuando el año cambia, devuelvo el resumen anual e inicializo los datos
            anio:= anio_ant;
            total = monto + accesor + multa;
            If (total < 0) Then total = 0; End If;
            Return Next;
            anio_ant:= vanio;
            monto = 0;
            accesor = 0;
            multa = 0;
            detalle = '                                    ';
        End If;

        -- Acumulo los valores
        If (est in ('D','J')) Then
            If (fchpago is null or fchpago<=fchvenc) Then
                fchcons=fchvenc;
            Else
            	fchcons=fchpago;
            End If;

            interes:=sam.uf_calc_accesor(_trib_id,_obj_id,_subcta,anio*1000+cuota,nominal,nominalcub,fchcons,current_date);
        Else
            interes = 0;
		End If;

        -- Acumulo si no esta pago
        If (not est IN ('C','E','N','F','R','O')) Then
            monto = monto + nominal - nominalcub;
            accesor = accesor + interes;
            multa = multa + montomulta;
        End If;

        If (cuota=0) Then detalle =  'Pago Anual  '; End If;

        If (cuota=1) Then detalle = est || '  ' || substr(detalle,4,33); End If;

        If (cuota between 2 and 11) Then
            detalle = substr(detalle,1,(cuota-1)*3) || est || '  ' || substr(detalle,cuota*3+1,(12-cuota)*3);
        End If;

        If (cuota=12) Then detalle = substr(detalle,1,33) || est || '  '; End If;

        cuota_ant = cuota;
    End Loop;

    -- Devuelvo los datos del último año
    anio:= anio_ant;
    total = monto + accesor + multa;
    If (total < 0) Then total = 0; End If;
    Return Next;

End
$$;


ALTER FUNCTION sam.uf_ctacte_est_deuda(_trib_id integer, _obj_id character varying, _subcta integer) OWNER TO postgres;

--
-- TOC entry 789 (class 1255 OID 5282764)
-- Name: uf_ctacte_est_deuda_masiva(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_est_deuda_masiva(_trib_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	sql varchar;
    ttrib smallint;
    vtobj smallint;
    vobj_id varchar(8);
    vsubcta smallint;
    vanio smallint;
    vcuota smallint;
    i integer;
BEGIN
    -- Genero la información actualizada
	-- Verificar el tipo de tributo
	Select into ttrib, vtobj t.tipo, t.tobj from trib t where t.trib_id=_trib_id;
    if (ttrib<>1 and ttrib<>5) then
    	raise exception 'La función sólo es válida para tributos de tipo Emisión o Item x Objeto';
    end if;

    vanio = EXTRACT(year from current_date);
    vcuota = EXTRACT(month from current_date);

	-- Borro lo que haya para ese tributo antes que nada
    Delete From temp.ctacte_est_deuda e Where e.trib_id=_trib_id;

	--1. Selecciono los objetos
    If (_trib_id = 13) Then --para OSM tengo que usar un Join a OSM y a Inmuebles
      sql = 'Select distinct o.obj_id, coalesce(s.subcta,0) subcta From objeto o
      		Left join osm s On o.obj_id=s.obj_id Left Join inm i On o.obj_id=i.obj_id
      		And i.serv>0 And (i.tinm<>9 or (i.tinm=9 and Not (s.ctaosm=' || chr(39) || chr(39) ||' or s.ctaosm is null))) ';
    Elseif (_trib_id=22) Then --para TSH RPC tomo los objetos de comer_rpc
      sql = 'Select distinct o.obj_id, 0 subcta From objeto o
	      	Inner join comer_rpc r On o.obj_id=r.obj_id and ' || (vanio*1000+vcuota)::varchar || ' between perdesde and perhasta
            Inner Join comer i On o.obj_id=i.obj_id and i.rpc=1 ';
    Elseif (_trib_id=70) Then --para Rodados filtro segun rangos de valuacion
      sql = 'Select distinct o.obj_id, 0 subcta From objeto o
		    Inner join rodado r on o.obj_id=r.obj_id
		    Inner Join rodado_val v On v.anioval='||vanio||' and v.anio=r.anio and v.tipo=r.tipo ';
    Else
      sql = 'Select distinct o.obj_id, 0 subcta From objeto o ';
    End If;


    --2. Verifico en función del Tipo de Tributo y si es de Item x Objeto
    --para Item x Objeto hay que recuperar solo los objetos q tengan ese tipo de Item (4)
    If (ttrib = 5) Then
      sql = sql || 'Inner Join objeto_item oi On o.obj_id=oi.obj_id
      		Inner Join item i On oi.item=i.cod and i.tipo=4 and i.trib_id='||_trib_id||
        	' and '||vanio*1000+vcuota||' between oi.perdesde and oi.perhasta ';
    End If;

	-- 3. Agrego la condición de objetos activos
    sql = sql || ' where o.est=' || chr(39) || 'A' || chr(39);
	--sql = sql || ' limit 20';

    -- Ahora actualizo el estado
	i := 0;
    For vobj_id, vsubcta IN Execute sql Loop
    	i = i + 1;

	    Insert Into temp.ctacte_est_deuda
        Select _trib_id, vobj_id, vsubcta, e.anio, e.detalle, e.monto, e.accesor, e.multa, e.total, current_date
        From sam.uf_ctacte_est_deuda(_trib_id, vobj_id, vsubcta) e;

    End Loop;
    raise info 'Total de estados de deuda generado: %',i;

End
$$;


ALTER FUNCTION sam.uf_ctacte_est_deuda_masiva(_trib_id integer) OWNER TO postgres;

--
-- TOC entry 956 (class 1255 OID 5282765)
-- Name: uf_ctacte_excep(integer, integer, character varying, integer, integer, integer, integer, date, date, character varying, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_excep(_trib_id integer, _xnum integer, _obj_id character varying, _tipo integer, _xanio integer, _anio integer, _cuota integer, _fchusar date, _fchlimite date, _expe character varying, _obs character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
    vctacte_id integer;
    vest char(1);
    cant smallint;
    sql varchar;
    sinctacte smallint;
    vttrib smallint;
BEGIN
	-- Genera una Excepción de Multa/Recargo/Descuento

    sinctacte = 0;
    
	-- Validaciones Previas
    If _xnum=1 and substring(_obj_id,1,1)<>'P' Then
    	Raise Exception 'Si es una excepción por NUM debe ingresar un obj_id de persona';

	ElseIf _tipo not in (2,3,4) Then
    	Raise Exception 'El tipo ingresado es incorrecto';

	ElseIf _xanio=1 and _cuota>0 Then
    	Raise Exception 'Si es por año, cuota debe ser 0';

    ElseIf _xnum=0 and _xanio=0 Then
    	Select Into vctacte_id,vest c.ctacte_id,c.est From ctacte c
        where c.trib_id=_trib_id and c.obj_id=_obj_id and c.anio=_anio and c.cuota=_cuota;

        If coalesce(vest,'') not in ('D','E','') Then
            Raise Exception 'El Período no se encuentra en Deuda';
        ElseIf Exists(Select 1 from ctacte_excep e Where e.ctacte_id=vctacte_id and e.tipo=_tipo) Then
        	Raise Exception 'La excepción para ese período ya fue cargada';
        End If;

        If (vctacte_id is null) Then
            -- Verifico si es período anual
            If _cuota=0 Then
                sinctacte = 1;
            Else
                -- Verifico si tipo de tributo es declarativo (2) doy de alta sin enlace con ctacte
                Select Into vttrib t.tipo from trib t where t.trib_id = _trib_id;
                If (vttrib = 2) Then 
                    sinctacte = 1;
                End If;
            End If;
        End If;
    End If;

 
    -- Inserto la/las excepcion/es (sólo si no está cargada)
    If (sinctacte = 1) Then
       Insert into ctacte_excep Values (nextval('seq_ctacte_excep'), 0, _trib_id, _obj_id, 0, _anio, _cuota, 
          _tipo, _fchusar, _fchlimite, _expe, _obs, current_timestamp, 100);
    Else 
       Insert into ctacte_excep
	  select nextval('seq_ctacte_excep'),c.ctacte_id,c.trib_id,c.obj_id,c.subcta,c.anio,c.cuota,_tipo,
       case when _fchusar is null then c.fchvenc else _fchusar end,
       _fchlimite,_expe,_obs,current_timestamp,100
       from ctacte c inner join objeto o on c.obj_id=o.obj_id
       where trib_id=_trib_id and c.anio=_anio
        and ((_xnum=0 and c.obj_id=_obj_id) or (_xnum<>0 and o.num=_obj_id))
        and ((_xanio=0 and c.cuota=_cuota) or (_xanio<>0))
        and c.ctacte_id not in (select e.ctacte_id From ctacte_excep e where e.tipo=_tipo);
    End If;

	-- Resultado
    GET DIAGNOSTICS cant = ROW_COUNT;
    Return cant;

END;
$$;


ALTER FUNCTION sam.uf_ctacte_excep(_trib_id integer, _xnum integer, _obj_id character varying, _tipo integer, _xanio integer, _anio integer, _cuota integer, _fchusar date, _fchlimite date, _expe character varying, _obs character varying) OWNER TO postgres;

--
-- TOC entry 5671 (class 0 OID 0)
-- Dependencies: 956
-- Name: FUNCTION uf_ctacte_excep(_trib_id integer, _xnum integer, _obj_id character varying, _tipo integer, _xanio integer, _anio integer, _cuota integer, _fchusar date, _fchlimite date, _expe character varying, _obs character varying); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_ctacte_excep(_trib_id integer, _xnum integer, _obj_id character varying, _tipo integer, _xanio integer, _anio integer, _cuota integer, _fchusar date, _fchlimite date, _expe character varying, _obs character varying) IS 'Genera períodos con Excepción de Recargo o Multa.';


--
-- TOC entry 952 (class 1255 OID 5486523)
-- Name: uf_ctacte_existedeuda(character varying, integer, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_existedeuda(_obj_id character varying, _perdesde integer, _perhasta integer, _percons integer DEFAULT 0, _trib_id integer DEFAULT 0) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
declare
	auxest char(1);
	auxfchvenc date;
	auxfchpago date;
	canttotal smallint;
	cantaldia smallint;
	cantpagado smallint;
	cantdeuda smallint;
	tobj smallint;
	deudaper smallint;
    obj_rela varchar(8);
    deuda smallint;
BEGIN
    canttotal := 0;
    cantaldia := 0;
    cantpagado := 0;
    cantdeuda := 0;

    Select Into tobj o.tobj From objeto o Where o.obj_id = _obj_id;

    For auxest, auxfchvenc, auxfchpago
    In Select c.est, c.fchvenc, c.fchpago From ctacte c
	Where c.obj_id = _obj_id and c.anio*1000+c.cuota between _perdesde and _perhasta and c.anio*1000+c.cuota<>_percons and c.est<>'B' and c.fchvenc<current_date
	and (_trib_id = 0 or c.trib_id=_trib_id)
	UNION
	Select c.est, c.fchvenc, c.fchpago
	From ctacte c inner join plan p on c.anio=p.plan_id
	Where _trib_id in (0,1) and c.trib_id=1 and c.obj_id = _obj_id and p.est=1 and c.est<>'B' and c.fchvenc<current_date
    LOOP
    --Select c.est, c.fchvenc, c.fchpago From ctacte c
    --Where c.obj_id = obj_id and c.anio*100+c.cuota between perdesde and perhasta
    --and c.est<>'B' Loop

        canttotal = canttotal + 1;

        If (auxest not in ('P','O','C','T','E')) then  -- pago, condona, convenio, prescripto, exento
            cantdeuda = cantdeuda + 1;
        ElseIf (auxfchpago <= auxfchvenc) then
        	cantaldia = cantaldia + 1;
        Else
        	cantpagado = cantpagado + 1;
        End If;

    End Loop;

    If (cantdeuda > 0) then -- existe deuda
        deuda = 1;
    ElseIf (canttotal = cantaldia) then -- buen pagador
        deuda = -1;
    Else
    	deuda = 0; -- pagado fuera termino
    End If;


    -- si se trata de una persona, recupero la deuda de otros objetos
    If (tobj = 3 and deuda <> 1) then
        For obj_rela In Select distinct p.obj_id from objeto o 
          inner join objeto_persona p on o.obj_id=p.obj_id
          where p.num=_obj_id and o.est<>'B' and p.est='A'
          order by p.obj_id Loop

            deudaper := sam.uf_ctacte_existedeuda(obj_rela, _perdesde, _perhasta);

            If (deudaper > deuda) then
            	deuda = deudaper;
            End If;

        End Loop;
    end If;

    Return deuda;
END
$$;


ALTER FUNCTION sam.uf_ctacte_existedeuda(_obj_id character varying, _perdesde integer, _perhasta integer, _percons integer, _trib_id integer) OWNER TO postgres;

--
-- TOC entry 791 (class 1255 OID 5282767)
-- Name: uf_ctacte_objeto(character varying, date, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_objeto(_obj_id character varying, _fecha date, _perdesde integer, _perhasta integer) RETURNS TABLE(ctacte_id integer, trib_id integer, trib_nom character varying, obj_id character varying, subcta integer, anio integer, cuota smallint, est character, nominal numeric, nominalcub numeric, multa numeric, accesor numeric, saldo numeric, pagado numeric, fchemi date, fchvenc date, fchpago date, caja_id smallint)
    LANGUAGE plpgsql
    AS $$
DECLARE
	vtobj smallint;
    vplan_id integer;
    vtrib_id smallint;
    vsubcta smallint;
BEGIN
    obj_id:= _obj_id;

    For vtrib_id, trib_nom, vsubcta, vplan_id
    In Select c.trib_id, t.nombre_redu, c.subcta, case when c.trib_id in (1,2,3) then c.anio else 0 end
    From ctacte c Inner Join trib t on c.trib_id=t.trib_id
    Where c.obj_id=_obj_id and
    ((c.trib_id not in (1,2,3) and c.anio*1000+c.cuota between _perdesde and _perhasta and c.est<>'')
    -- Recupero los datos de Convenios Vigentes
    Or (c.trib_id=1 and c.anio In (Select p.plan_Id From plan p)) --  Where Est=1
    -- Recupero los datos de Facilidades Vigentes
    Or (c.trib_id=2 and c.anio In (Select f.faci_Id From facilida f Where f.est=1))
    )
    Group by c.trib_id, t.nombre_redu, c.subcta, 4
    Order By c.trib_id, 4
    Loop
    	trib_id := vtrib_id;
        subcta := vsubcta;
    	-- Para tributos 1,2,3 se carga la variable plan_id con el nro de conv/faci/contr.mej
    	-- Llamo a la funcion uf_ctacte_tributo para recuperar el detalle de la deuda por tributo
        For ctacte_id, anio, cuota, est, nominal, nominalcub,
            multa, accesor, saldo, pagado, fchemi, fchvenc, fchpago, caja_id
          In Select c.ctacte_id, c.anio, c.cuota, c.est, c.nominal, c.nominalcub,
            c.multa, c.accesor, c.saldo, c.pagado, c.fchemi, c.fchvenc, c.fchpago, c.caja_id
          From sam.uf_ctacte_tributo(vtrib_id, vplan_id, _obj_id, vsubcta, _fecha, _perdesde, _perhasta) c
          Order By c.anio, c.cuota
        Loop
            Return Next;
        End Loop;
    End Loop;

    -- Obtengo el Tipo de Objeto
    Select Into vtobj o.tobj From objeto o Where o.obj_id=_obj_id;

    -- Si se trata de una Persona, recupero la deuda de objetos vinculados
    If (vtobj = 3) Then
    	For obj_id In Select op.obj_id From objeto_persona op
        	Where op.num=_obj_id and op.obj_id<>_obj_id and op.est='A' order by op.obj_id
		Loop
		    For ctacte_id, trib_id, trib_nom, subcta, anio, cuota, est, nominal, nominalcub,
        		multa, accesor, saldo, pagado, fchemi, fchvenc, fchpago, caja_id
		    In Select c.ctacte_id, c.trib_id, c.trib_nom, c.subcta, c.anio, c.cuota, c.est, c.nominal,
		    	c.nominalcub, c.multa, c.accesor, c.saldo, c.pagado, c.fchemi, c.fchvenc, c.fchpago, c.caja_id
            From sam.uf_ctacte_objeto(obj_id, _fecha, _perdesde, _perhasta) c
            Order By c.obj_id, c.anio, c.cuota
			Loop
            	Return Next;
            End Loop;
        End Loop;
    End If;

End
$$;


ALTER FUNCTION sam.uf_ctacte_objeto(_obj_id character varying, _fecha date, _perdesde integer, _perhasta integer) OWNER TO postgres;

--
-- TOC entry 792 (class 1255 OID 5282768)
-- Name: uf_ctacte_pagocta_anula(integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_pagocta_anula(_pago_id integer, _ticket integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    vctacte_id integer;
	cant smallint;
    vobj_id varchar(8);
    vtobj smallint;
    vsubcta integer;
    vanio integer;
    vcuota smallint;
    vfchvenc date;
    vobs varchar(250);

BEGIN

	-- Recupero ctacte_id
	Select Into vctacte_id coalesce(c.ctacte_id,0) From ctacte_pagocta p inner join ctacte c
    On p.trib_id=c.trib_id and p.obj_id=c.obj_id and p.subcta=c.subcta
    and p.anio=c.anio and p.cuota=c.cuota Where p.pago_id = _pago_id;

    If vctacte_id > 0 Then
        -- Elimino el detalle de la operacion pago a cuenta
        Delete From ctacte_det d Where d.ctacte_id=vctacte_id
	        and d.topera=17 and d.comprob=_ticket;

		Select Into cant count(*) From ctacte_det d Where d.ctacte_id=vctacte_id;

        If (cant=0) Then
			-- Elimino la ctacte
            Update ctacte c Set est='B' Where c.ctacte_id=vctacte_id;
        Else
        	Perform sam.uf_ctacte_ajuste(vctacte_id);
		End If;
    End If;

    -- Actualizo el pagocta
    update ctacte_pagocta p set est='D',fchpago=null
    where p.pago_id=_pago_id;


End
$$;


ALTER FUNCTION sam.uf_ctacte_pagocta_anula(_pago_id integer, _ticket integer) OWNER TO postgres;

--
-- TOC entry 793 (class 1255 OID 5282769)
-- Name: uf_ctacte_pagocta_imputa(integer, integer, date, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_pagocta_imputa(_pago_id integer, _ctacte_id integer, _fchcaja date, _usr_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
declare
    ctacte_id_new integer;
	vtrib_id smallint;
    vobj_id varchar(8);
    vtobj smallint;
    vsubcta integer;
    vanio integer;
    vcuota smallint;
    vfchvenc date;
    vobs varchar(250);

BEGIN
	ctacte_id_new := _ctacte_id;

    If _ctacte_id = 0 Then
        -- Genero el ctacte_id (si es 0)
        ctacte_id_new:=nextval('seq_ctacte_id'::regclass);

        -- obtengo los datos del pagocta
        select into vtrib_id,vanio,vcuota,vobj_id,vtobj,vsubcta,vobs
        p.trib_id,p.anio,p.cuota,p.obj_id,o.tobj,p.subcta, p.obs
        from ctacte_pagocta p inner join objeto o on p.obj_id=o.obj_id
        where p.pago_id=_pago_id;

        vfchvenc := fchvenc1 from sam.uf_trib_venc(vtrib_id,vanio,vcuota);

		-- Inserto en la ctacte
        Insert Into ctacte values
        (ctacte_id_new, vtrib_id, vtobj, vobj_id, vsubcta,
        vanio, vcuota, 0, 0, 0, 0, 'X', current_timestamp, vfchvenc, null, 0, 0, 0, 0,
        0, _pago_id::text, vobs, current_timestamp, _usr_id);

    --else
    	--ctacte_id_new := ctacte_id;
    End If;

    -- Actualizo el pagocta
    update ctacte_pagocta p set est='P',fchpago=_fchcaja
    where p.pago_id=_pago_id;

	-- Retorno
	Return ctacte_id_new;

End
$$;


ALTER FUNCTION sam.uf_ctacte_pagocta_imputa(_pago_id integer, _ctacte_id integer, _fchcaja date, _usr_id integer) OWNER TO postgres;

--
-- TOC entry 5672 (class 0 OID 0)
-- Dependencies: 793
-- Name: FUNCTION uf_ctacte_pagocta_imputa(_pago_id integer, _ctacte_id integer, _fchcaja date, _usr_id integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_ctacte_pagocta_imputa(_pago_id integer, _ctacte_id integer, _fchcaja date, _usr_id integer) IS 'Función que efectúa la Imputación de un Pago a Cuenta luego del Pago del mismo.

Parámetros:
  pago_id integer: Código del pagocta.
  ctacte_id: del período afectado si existe, sino es cero.
  fchcaja: fecha de la caja, para actualizar la fecha de pago
  usr_id integer: Código del usuario que realizó la operación (generalmente Cajero)
';


--
-- TOC entry 794 (class 1255 OID 5282770)
-- Name: uf_ctacte_pagoparcial(integer, numeric); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_pagoparcial(_ctacte_id integer, _monto_pagar numeric) RETURNS TABLE(cta_id smallint, cta_nom character varying, monto numeric)
    LANGUAGE plpgsql
    AS $$
declare
	i smallint;
    vcant smallint;
    vmonto_liq decimal(12,2);
    vmonto_cub decimal(12,2);

BEGIN
	i := 0; vmonto_cub := 0;

	-- Recupero total liquidado
	Select into vcant,vmonto_liq count(*), sum(debe-haber)
    from ctacte_det d
    where d.ctacte_id=_ctacte_id and topera in (1,2,6,9,15) and d.est='A';

    -- Recorro el detalle
	For cta_id,cta_nom,monto
    In Select d.cta_id,c.nombre,d.debe-d.haber
    from ctacte_det d inner join cuenta c on d.cta_id=c.cta_id
    where d.ctacte_id=_ctacte_id and topera in (1,2,6,9,15) and d.est='A'
    order by c.tcta desc, d.cta_id asc Loop

        i := i + 1;

        If i=vcant Then	-- último registro
        	monto := _monto_pagar - vmonto_cub;
        Else
        	monto := ((_monto_pagar * monto) / vmonto_liq)::decimal(12,2);
            vmonto_cub := vmonto_cub + monto;
        End If;

        Return Next;

    End Loop;

End
$$;


ALTER FUNCTION sam.uf_ctacte_pagoparcial(_ctacte_id integer, _monto_pagar numeric) OWNER TO postgres;

--
-- TOC entry 795 (class 1255 OID 5282771)
-- Name: uf_ctacte_pagoparcial(integer, numeric, date, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_pagoparcial(_ctacte_id integer, _monto_pagar numeric, _fchvenc date, _fchcaja date) RETURNS TABLE(cta_id smallint, cta_nom character varying, tcta smallint, monto numeric)
    LANGUAGE plpgsql
    AS $$
declare
	i smallint;
    vcant smallint;
    vmonto_liq decimal(12,2);
    vmonto_cub decimal(12,2);
    vmonto_cub_recmul decimal(12,2);
BEGIN
	i:=0; vmonto_cub:=0; vmonto_cub_recmul:=0;

	-- Recupero total liquidado
	Select into vcant,vmonto_liq count(*),sum(d.monto)
    from sam.uf_caja_det(_ctacte_id,_fchvenc,_fchcaja) d;

    -- Recorro el detalle
	For cta_id,cta_nom,tcta,monto
    In Select d.cta_id,d.cta_nom,d.tcta,d.monto
    from sam.uf_caja_det(_ctacte_id,_fchvenc,_fchcaja) d
    order by d.tcta desc,d.cta_id asc Loop

        i := i + 1;

        if _monto_pagar>vmonto_cub then
            If i=vcant Then	-- último registro

                monto := _monto_pagar - vmonto_cub;
            Else
                If tcta in (3,4) Then
                    If _monto_pagar-vmonto_cub<monto Then
                        monto=_monto_pagar-vmonto_cub;
                        vmonto_cub=_monto_pagar;
                    Else
                        vmonto_cub := vmonto_cub + monto;
                    End If;
                    vmonto_cub_recmul := vmonto_cub_recmul + vmonto_cub;
                Else
                    monto := (((_monto_pagar-vmonto_cub_recmul) * monto) / (vmonto_liq-vmonto_cub_recmul))::decimal(12,2);
                    if monto>_monto_pagar then
                    	monto:= _monto_pagar;
                    end if;
                    vmonto_cub := vmonto_cub + monto;
                End If;
            End If;

            Return Next;
		End If;

    End Loop;

End
$$;


ALTER FUNCTION sam.uf_ctacte_pagoparcial(_ctacte_id integer, _monto_pagar numeric, _fchvenc date, _fchcaja date) OWNER TO postgres;

--
-- TOC entry 796 (class 1255 OID 5282772)
-- Name: uf_ctacte_plan(integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_plan(_trib_id integer, _plan_id integer) RETURNS TABLE(trib_id smallint, obj_id character varying, anio character varying, detalle character varying, monto numeric, accesor numeric, multa numeric, total numeric)
    LANGUAGE plpgsql
    AS $$
DECLARE
  vanio integer;
  vanio_ant integer;
  vcuota smallint;
  vmes smallint;
  vmes_ant smallint;
  vnominal decimal(9,2);
  vnominalcub decimal(9,2);
  vmulta decimal(9,2);
  vest char(1);
  vfchvenc timestamp;
  vfchpago timestamp;
  vfchcons date;
  vinteres decimal(9,2);
BEGIN
    -- Función que devuelve un cursor conteniendo el resumen del estado de la CtaCte
    -- de un Plan de Pago. Se utiliza para generar el resumen en las Chequeras.
    -- Recupera solamente las Cuotas con Deuda Vencidas

    trib_id:= _trib_id;
    monto:= 0;      accesor:= 0;   multa:= 0;  total:= 0;
    anio:= '';      detalle:= '';
    vanio_ant:= 0;  vmes_ant:= 0;

    -- Recupero el Objeto
    If (_trib_id = 1) then
        Select Into obj_id p.obj_id From plan p Where p.plan_id=_plan_id;
    End If;

    For vcuota, vnominal, vnominalcub, vmulta, vest, vfchvenc, vfchpago
	    In Select c.cuota, c.nominal, c.nominalcub, c.multa, c.est, c.fchvenc, c.fchpago
        From ctacte c Where c.trib_id=_trib_id and c.anio=_plan_id
        And c.est='D' and c.fchvenc < current_date
        Order By c.anio, c.cuota

    Loop
        -- Inicializo el Año
        If (vanio_ant = 0) Then vanio_ant = extract(year from vfchvenc); End If;
        vanio:= extract(year from vfchvenc);
        vmes:= extract(month from vfchvenc);

        If (vanio <> vanio_ant) Then
            -- Cuando el año cambia, devuelvo el resumen anual e inicializo los datos
            anio:= vanio_ant;
            total:= monto + accesor + multa;
            return next;
            vanio_ant:= vanio;
            monto:= 0;
            accesor:= 0;
            multa:= 0;
            detalle:= '';
        End If;

        -- Acumulo los valores
        If (vest = 'D') Then
            If (vfchpago is null or vfchpago<=vfchvenc) Then
                vfchcons:=vfchvenc;
            Else
            	vfchcons:=vfchpago;
            End If;
            vinteres:=sam.uf_calc_accesor(trib_id,obj_id,0,vanio*1000+vcuota,vnominal,vnominalcub,vfchcons,current_date);
        Else
            vinteres:= 0;
        End If;
        monto:= monto + vnominal - vnominalcub;
        accesor:= accesor + vinteres;
        multa:= multa + vmulta;
        -- Agrego espacios si falta algún período en el año
/*        While (vmes > vmes_ant + 1) Loop
			vmes_ant:= vmes_ant + 1;
			detalle:= detalle || '   ';
        End Loop;
*/
        detalle:= detalle || lpad(cast(vcuota as varchar(2)),2,' ') || ' ';
        vmes_ant = vmes;
    End Loop;
    -- Devuelvo los datos del último año
    anio = vanio_ant;
    total = monto + accesor + multa;

    --raise notice '%',detalle;

    Return next;

End
$$;


ALTER FUNCTION sam.uf_ctacte_plan(_trib_id integer, _plan_id integer) OWNER TO postgres;

--
-- TOC entry 797 (class 1255 OID 5282773)
-- Name: uf_ctacte_posibles_x(character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_posibles_x(_obj_id character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
	vobj_id varchar(8);
    permin integer;
    permax integer;
Begin
	permax = 2016006;

	For vobj_id In
    Select o.obj_id from objeto o inner join comer c on o.obj_id=c.obj_id
	where (o.obj_id=_obj_id or _obj_id='') and o.est<>'B' and c.tipoliq='LO' Loop

    	Select into permin min(c.anio*1000+c.cuota)
        from ctacte c where c.trib_id=23 and c.obj_id=vobj_id and anio>=2011;

        if permin<permax then

        	insert into temp.ctacte_posible_x
            Select vobj_id,v.anio,v.cuota
            from trib_venc v left join ctacte c
            on c.trib_id=v.trib_id and c.anio=v.anio and c.cuota=v.cuota and c.obj_id=vobj_id
            Where v.trib_id=23 and v.anio*1000+v.cuota between permin and permax and c.ctacte_id is null;

            Insert Into ctacte
            Select nextval('seq_ctacte_id'::regclass), 23, 2, _obj_id, 0,
            v.anio, v.cuota, 0, 0, 0, 0, 'X', current_timestamp, v.fchvenc1, null, 0, 0, 0, 0,
            0, 'g', '', current_timestamp, 100
            from trib_venc v left join ctacte c
            on c.trib_id=v.trib_id and c.anio=v.anio and c.cuota=v.cuota and c.obj_id=vobj_id
            Where c.trib_id=23 and v.anio*1000+v.cuota between permin and permax and c.ctacte_id is null;

        End If;

	End Loop;
End
$$;


ALTER FUNCTION sam.uf_ctacte_posibles_x(_obj_id character varying) OWNER TO postgres;

--
-- TOC entry 798 (class 1255 OID 5282774)
-- Name: uf_ctacte_prescriptos(character, integer, character varying, integer, integer, integer, integer, character varying, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_prescriptos(_accion character, _trib_id integer, _obj_id character varying, _subcta integer, _perdesde integer, _perhasta integer, _usr_id integer, _expe character varying, _obs character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
  estado char(1);
  vctacte_id integer;
  vcambio_id integer;
  vobj_id varchar(8);
  per_plandecaido boolean;
  cant smallint;
  sql text;
BEGIN
    -- Genera períodos en estado T (Prescriptos) en la Cta Cte
    -- o desmarca esos períodos dejándolos en estado D

	Select Into per_plandecaido c.per_plan_decaido From sam.config c;

    If (_accion = 'T' or _accion = 'D') then
        estado = case when _accion='T' then 'D' else 'T' end;

        If (_obj_id = '') Then
        	sql = 'Select c.ctacte_id,c.obj_id From ctacte c left join plan_periodo p on c.ctacte_id= p.ctacte_id
                Where c.trib_id='|| _trib_id || ' and c.anio*1000+c.cuota between  ' || _perdesde || ' and ' || _perhasta ||'
                and c.est='||  chr(39) || estado || chr(39);
                If (per_plandecaido = true) Then sql = sql || ' and p.ctacte_id is null '; End If;
            sql = sql || 'Order By c.obj_id DESC';

            For vctacte_id,vobj_id In Execute sql
            Loop
                  -- Actualizo la CtaCte
                  Update ctacte c set est=_accion, expe=case when expe='' then _expe else expe || '-' || _expe end,
                      obs=_obs, fchmod=current_timestamp, usrmod=_usr_id
                  Where c.ctacte_id=vctacte_id;

                  vcambio_id:=nextval('seq_ctacte_cambio_est'::regclass);

                  -- Inserto en CtaCte_CambioEst - Tipo=1 - Prescrito (ctacte_cambioest_tipo)
                  Insert into ctacte_cambioest Values (vcambio_id,1,_trib_id,vobj_id,_subcta,
                    _perdesde,_perhasta,estado,_accion,_expe,_obs,current_timestamp,_usr_id);

            End Loop;
        Else
            For vctacte_id In Select c.ctacte_id From ctacte c
            	Where c.trib_id=_trib_id
                and c.obj_id=_obj_id and c.subcta=_subcta
                and (c.anio*1000+c.cuota between _perdesde and _perhasta)
                and c.est=estado
            Loop
                -- Actualizo la CtaCte
                Update ctacte c set est=_accion, expe=_expe, obs=_obs,
                fchmod=current_timestamp, usrmod=_usr_id
                Where c.ctacte_id=vctacte_id;

				vcambio_id:=nextval('seq_ctacte_cambio_est'::regclass);

                -- Inserto en CtaCte_CambioEst - Tipo=1 - Prescrito (ctacte_cambioest_tipo)
                Insert into ctacte_cambioest Values (vcambio_id,1,_trib_id,_obj_id,_subcta,
                  _perdesde,_perhasta,estado,_accion,_expe,_obs,current_timestamp,_usr_id);
            End Loop;
		End If;
    Else
        raise exception 'Estado Incorrecto';
	End If;
End
$$;


ALTER FUNCTION sam.uf_ctacte_prescriptos(_accion character, _trib_id integer, _obj_id character varying, _subcta integer, _perdesde integer, _perhasta integer, _usr_id integer, _expe character varying, _obs character varying) OWNER TO postgres;

--
-- TOC entry 799 (class 1255 OID 5282775)
-- Name: uf_ctacte_resumen(character varying, date, integer, integer, character); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_resumen(_obj_id character varying, _fecha date, _perdesde integer, _perhasta integer, _estado character) RETURNS TABLE(tobj_nom character varying, obj_id character varying, subcta smallint, trib_id smallint, trib_nom character varying, saldo numeric, plan_id integer, judi smallint, falt_dj smallint, conv smallint, vplanant character varying, saldo_n numeric, obj_dato character varying, obj_est character)
    LANGUAGE plpgsql
    AS $$
DECLARE
	vobj_id varchar(8);
    vsubcta smallint;
	tobj smallint;
	vtrib_id smallint;
	vtrib_nom varchar(15);
	anio integer;
	vsaldo decimal(12,2);
	vsaldo_neg decimal(9,2);
	est char(1);
	obj_id_ant varchar(8);
	subcta_ant smallint;
	trib_id_ant smallint;
	trib_nom_ant varchar(15);
	anio_ant integer;
	sql varchar(500);
BEGIN
    trib_id_ant = 0; trib_nom_ant = ''; anio_ant = 0; obj_id_ant = ''; subcta_ant=0;
    judi = 0; falt_dj = 0; conv = 0; vplanant='';
    obj_id = vobj_id; saldo = 0; saldo_n = 0; obj_est='';

    sql = 'Select o.obj_id, o.subcta, o.trib_id, o.trib_nom, o.anio,
    case when o.est in ('
    || chr(39) ||'D'|| chr(39) || ','|| chr(39) ||'J' || chr(39) || ','
    || chr(39) ||'X'|| chr(39) || ','|| chr(39) ||'S' || chr(39) ||
    ') then o.saldo else 0 end, case when o.saldo < 0 then o.saldo else 0 end, o.est From sam.uf_ctacte_objeto('
    || chr(39) || _obj_id || chr(39) || ','
    || chr(39) || _fecha ||chr(39) ||',' || _perdesde || ',' || _perhasta ||') o ';
    If (_estado = 'V') Then
        sql = sql ||  'Where o.est in ('|| chr(39) || 'D' || chr(39) || ','
        || chr(39) || 'X'|| chr(39) || ',' || chr(39) || 'J'|| chr(39)
        || ') and o.fchvenc <= ' || chr(39) || _fecha || chr(39) || ' ';
	End If;
    sql = sql || 'Order By o.obj_id, o.subcta, o.trib_id, o.anio';

	For vobj_id, vsubcta, vtrib_id, vtrib_nom, anio, vsaldo, vsaldo_neg, est
    In Execute sql
    Loop
        If (obj_id_ant = '') Then
            obj_id_ant = vobj_id;
            subcta_ant = vsubcta;
            trib_id_ant = vtrib_id;
            trib_nom_ant = vtrib_nom;
            anio_ant = anio;
        End If;

        -- Cuando el Tributo o Convenio cambia, devuelvo el resumen e inicializo los datos
        If (vobj_id <> obj_id_ant or vtrib_id <> trib_id_ant or vsubcta<>subcta_ant or
           (vtrib_id in (1,2,3) and anio <> anio_ant)) Then

            -- Recupero Tipo de Objeto y descripción
            Select Into tobj,tobj_nom,obj_dato,obj_est o.tobj,t.nombre,coalesce(o.obj_dato,''),coalesce(o.est,'')
            From objeto o
            Inner Join objeto_tipo t On o.tobj=t.cod Where o.obj_id=obj_id_ant;

            -- Recupero la descripcion del Tributo
            trib_id:= trib_id_ant;
            trib_nom:= trib_nom_ant;

            -- Si es Convenio, recupero el N° en el parametro de salida
            If (trib_id_ant in (1,2,3)) Then
                plan_id = anio_ant;
            Else
                plan_id = 0;
            End If;

            -- Si es Tributo = THI, verifico si tiene DJ faltantes
            /*If (trib_id = trib_dj) Then
                Select Into falt_dj coalesce(count(*),0) From ctacte c
                Where c.trib_id=trib_dj and c.obj_id=obj_id and c.est='X';
			End If;*/
            obj_id:= obj_id_ant;
            subcta:= subcta_ant;
            Return Next;
            obj_id_ant = vobj_id;
            subcta_ant = vsubcta;
            trib_id_ant = vtrib_id;
            trib_nom_ant = vtrib_nom;
            anio_ant = anio;
            plan_id = 0;
            saldo = 0;
            saldo_n = 0;
            judi = 0;
            conv = 0;
        End If;

        saldo = saldo + vsaldo;
        saldo_n = saldo_n + vsaldo_neg;
        If (est='J') Then judi = judi + 1; End If;
        If (est='C') Then conv = conv + 1; End If;
	End Loop;

	-- Devuelvo los datos del último registro

    -- Recupero Tipo de Objeto y descripción
    Select Into tobj,tobj_nom,obj_dato,obj_est o.tobj,t.nombre,o.obj_dato,o.est
    From objeto o
    Inner Join objeto_tipo t On o.tobj=t.cod Where o.obj_id=obj_id_ant;

    obj_dato = coalesce(obj_dato,'');
    obj_est = coalesce(obj_est,'');

    -- Recupero la descripcion del Tributo
    trib_id:= trib_id_ant;
    trib_nom:= trib_nom_ant;

    -- Si es Convenio, recupero el N° en el parametro de salida
    If (trib_id_ant in (1,2,3)) Then
        plan_id = anio_ant;
    Else
        plan_id = 0;
    End If;

    -- Si es Tributo = THI, verifico si tiene DJ faltantes
    /*If (trib_id = trib_dj) Then
        Select Into falt_dj coalesce(count(*),0) From ctacte c
        Where c.trib_id=trib_dj and c.obj_id=obj_id and c.est='X';
    End If;*/
    obj_id:= obj_id_ant;
    subcta:= subcta_ant;

    Return Next;

End
$$;


ALTER FUNCTION sam.uf_ctacte_resumen(_obj_id character varying, _fecha date, _perdesde integer, _perhasta integer, _estado character) OWNER TO postgres;

--
-- TOC entry 800 (class 1255 OID 5282777)
-- Name: uf_ctacte_saldo(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_saldo(_ctacte_id integer) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
declare
	vtrib_id smallint;
	vobj_id varchar(8);
	vsubcta smallint;
	vanio integer;
	vcuota smallint;
	vest char(1);
	vnominal numeric(12,2);
	vnominalcub numeric(12,2);
	vmulta numeric(12,2);
	vaccesor numeric(12,2);
	vfchvenc date;
	vfchpago date;
	vfchcons date;
    vsaldo numeric(12,2);
BEGIN
    Select Into vtrib_id, vobj_id, vsubcta, vanio, vcuota, vest,
    	vnominal, vnominalcub, vmulta, vfchvenc, vfchpago
    	c.trib_id, c.obj_id, c.subcta, c.anio, c.cuota, c.est,
    	c.nominal, c.nominalcub, c.multa, c.fchvenc, c.fchpago
    From ctacte c Where c.ctacte_id=_ctacte_id;

    If (vest <> 'P' and vest <> 'O') Then
        If (vfchpago is null or vfchpago<=vfchvenc) Then
            vfchcons=vfchvenc;
        Else
        	vfchcons=vfchpago;
		End If;

        vaccesor:= sam.uf_calc_accesor(vtrib_id,vobj_id,vsubcta,
        	vanio*1000+vcuota,vnominal,vnominalcub,vfchcons, current_date);
    Else
    	vaccesor = 0;
    End If;

    vsaldo = vnominal - vnominalcub + vmulta + vaccesor;
    Return vsaldo;

End
$$;


ALTER FUNCTION sam.uf_ctacte_saldo(_ctacte_id integer) OWNER TO postgres;

--
-- TOC entry 945 (class 1255 OID 5282778)
-- Name: uf_ctacte_tributo(integer, integer, character varying, integer, date, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_tributo(_trib_id integer, _plan_id integer, _obj_id character varying, _subcta integer, _fecha date, _perdesde integer, _perhasta integer) RETURNS TABLE(ctacte_id integer, anio integer, cuota smallint, est character, nominal numeric, nominalcub numeric, multa numeric, accesor numeric, saldo numeric, pagado numeric, fchemi date, fchvenc date, fchpago date, caja_id smallint, expe character varying, obs character varying, baja character varying)
    LANGUAGE plpgsql
    AS $_$
DECLARE
	valorucm numeric(9,3);
	ucm numeric(12,2);
    ucm_usar smallint;
	vaccesor numeric(12,2);
    pagocta numeric;
	fchcons date;
    vctacte_id integer;
BEGIN
    -- Obtengo el ValorUCM de acuerdo al tributo
    Select into ucm_usar t.ucm from trib t where t.trib_id=_trib_id;
    if ucm_usar = 0 Then
    	ucm := 0;
    elsif ucm_usar = 1 Then
    	Select Into valorucm c.ucm1 From sam.config c;
    elsif ucm_usar = 2 Then
    	Select Into valorucm c.ucm2 From sam.config c;
    elsif ucm_usar = 3 Then  -- Segun el valor de modulo actual
    	Select Into valorucm mm.valor From calc_mm mm Where current_date between mm.fchdesde and mm.fchhasta;
  	valorucm := coalesce(valorucm,1);		
    End If;

	For vctacte_id, anio, cuota, est, nominal, nominalcub,
       multa, fchemi, fchvenc, fchpago, caja_id, ucm, pagado, expe, obs
    In Select c.ctacte_id, c.anio, c.cuota, c.est, c.nominal, c.nominalcub,
  	c.multa, c.fchemi, c.fchvenc, c.fchpago, c.caja_id,
    c.ucm, sum(case when d.topera in (3,4,5,7,8,10,12,16,17) then haber else 0 end),
    c.expe, c.obs
    From ctacte c inner join trib t on c.trib_id=t.trib_id
	    left join ctacte_det d on c.ctacte_id = d.ctacte_id and d.est='A'
    Where c.trib_id=_trib_id and c.obj_id=_obj_id and c.subcta=_subcta and c.est<>'' and
	    ((c.trib_id not in (1,2,3) and c.anio*1000+c.cuota between _perdesde and _perhasta) or
    	(c.trib_id in (1,2,3) and c.anio=_plan_id))
    Group by c.ctacte_id, c.anio, c.cuota, c.est, c.nominal, c.nominalcub,
     	c.multa, c.fchemi, c.fchvenc, c.fchpago, c.caja_id, c.ucm, c.expe, c.obs
	Loop
    	ctacte_id = vctacte_id;
        baja = '';

        -- Si está en Deuda y es UCM, lo transformo en $
        If (est in ('D','T') and ucm>0 and nominal=0) Then
           nominal = ucm * valorucm;
        End If;

		accesor:=0; pagocta:=0;

        If (est not in ('E','P','F','C','O','B')) Then
          If (fchpago is null or fchpago<=fchvenc /*or nominalcub>0*/) Then
              fchcons=fchvenc;
          Else
          	  fchcons=fchpago;
          End If;
          If (_trib_id <> 2) Then -- No es Facilidad
            If est='D' and nominalcub>0 then
                -- Obtengo monto por pago a Cuenta
                Select Into pagocta coalesce(sum(d.haber),0) from ctacte_det d
                where d.ctacte_id = vctacte_id and d.topera=17 and d.est = 'A';
			End If;

			accesor:= sam.uf_calc_accesor(_trib_id,_obj_id,_subcta,anio*1000+cuota,nominal+case when fchcons>=_fecha then pagocta else 0 end,nominalcub, fchcons, _fecha);

            -- si hay descuento, debo restar los descuentos pagos
            If (accesor < 0) Then
            	vaccesor =0;
            	select Into vaccesor coalesce(sum(d.debe),0)
                from ctacte_det d inner join cuenta ca on d.cta_id=ca.cta_id where d.ctacte_id=vctacte_id and d.est='A' and ca.tcta=2;
				If (vaccesor <> 0) Then accesor = accesor - vaccesor; End If;
            End If;
          End If;
        End If;
        If (est in ('C','T','F','O','J','B')) Then
          saldo = 0;
        Else
          saldo = nominal - nominalcub + multa + accesor;
		End If;
        If (est = 'P' and nominalcub = 0) Then
          saldo = 0;
        End If;

        -- Verifico si fue dado de baja o reliquidado
        Select Into baja b.tipo From ctacte_baja b Where b.ctacte_id=vctacte_id
        	and b.orden=(Select max(b.orden) From ctacte_baja b Where b.ctacte_id=vctacte_id);
        If (baja is null) Then baja = ''; End If;

        Return Next;
    End Loop;

End
$_$;


ALTER FUNCTION sam.uf_ctacte_tributo(_trib_id integer, _plan_id integer, _obj_id character varying, _subcta integer, _fecha date, _perdesde integer, _perhasta integer) OWNER TO postgres;

--
-- TOC entry 790 (class 1255 OID 5282780)
-- Name: uf_ctacte_ucm(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_ucm(_ctacte_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    nominal_act decimal(12,2);
    vucm decimal(12,2);
    ucm_usar smallint;
    valorucm decimal(9,3);
begin

    -- verifico si está en ucm
    Select Into vucm, nominal_act, ucm_usar
    c.ucm, c.nominal, t.ucm
    From ctacte c Inner Join trib t on c.trib_id=t.trib_id
    Where c.ctacte_id=_ctacte_id;

    If (vucm>0 and nominal_act=0) Then
        -- obtengo el valorucm
        If ucm_usar=2 Then
        	Select Into valorucm c.ucm2 From sam.config c;
        else
        	Select Into valorucm c.ucm1 From sam.config c;
        End If;

        Update ctacte_det d set debe=debe*valorucm Where d.ctacte_id=_ctacte_id and d.topera=1 and est='A';
        Update ctacte c set nominal=vucm*valorucm Where c.ctacte_id=_ctacte_id;
    End If;
End
$$;


ALTER FUNCTION sam.uf_ctacte_ucm(_ctacte_id integer) OWNER TO postgres;

--
-- TOC entry 802 (class 1255 OID 5282781)
-- Name: uf_ctacte_ucm_anula(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_ucm_anula(_ctacte_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    vtrib_id smallint;
    isucm smallint;
    nominal_act decimal(12,2);
    vucm decimal(12,2);
    valorucm decimal(9,3);
begin

    -- verIfico si está en ucm
    Select Into vucm, vtrib_id, nominal_act c.ucm, c.trib_id, c.nominal From ctacte c Where c.ctacte_id=_ctacte_id;

    -- obtengo el valorucm
    Select Into isucm ucm From trib Where trib_id = vtrib_id ;

    If (isucm = 1) Then
        Select Into valorucm ucm From sam.config ;

        If (nominal_act>0 and vucm>0) Then
            Update ctacte_det d set debe=debe/valorucm Where d.ctacte_id=_ctacte_id and d.topera=1;
            Update ctacte c set nominal=0 Where c.ctacte_id=_ctacte_id;
        End If;
    End If;
End
$$;


ALTER FUNCTION sam.uf_ctacte_ucm_anula(_ctacte_id integer) OWNER TO postgres;

--
-- TOC entry 5673 (class 0 OID 0)
-- Dependencies: 802
-- Name: FUNCTION uf_ctacte_ucm_anula(_ctacte_id integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_ctacte_ucm_anula(_ctacte_id integer) IS 'Actualiza un período de la cta.cte quitando el valor de UCM';


--
-- TOC entry 803 (class 1255 OID 5282782)
-- Name: uf_ctacte_ultimopago(character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ctacte_ultimopago(_obj_id character varying) RETURNS TABLE(trib_id integer, trib_nom character varying, anio integer, cuota integer, pago_desc character varying)
    LANGUAGE plpgsql
    AS $$
DECLARE
	vperiodo INTEGER;
    vtrib_id integer;
BEGIN
	For vtrib_id,trib_nom,vperiodo
    	in select c.trib_id,t.nombre,max(c.anio * 1000 + c.cuota)
    	from ctacte c
        inner join trib t on c.trib_id=t.trib_id
    	where c.obj_id=_obj_id and c.est='P'
	    group by c.trib_id,t.nombre
    loop
    	trib_id = vtrib_id;

    	select into anio,cuota,pago_desc
        	t.anio,t.cuota,
            'Ticket: ' || t.ticket || ' - Operación: ' || t.opera || ' - Caja: ' || t.caja_nom
            || ' - Tesorería: ' || t.teso_nom || ' - Fecha: ' || to_char(t.fecha,'dd/mm/yyyy') || ' - Hora: ' || t.hora
        	from v_caja_ticket t
            where t.obj_id=_obj_id and t.trib_id=vtrib_id
            	and t.anio * 1000 + t.cuota = vperiodo;

        return next;

    end loop;
END;
$$;


ALTER FUNCTION sam.uf_ctacte_ultimopago(_obj_id character varying) OWNER TO postgres;

--
-- TOC entry 804 (class 1255 OID 5282783)
-- Name: uf_cuit_valida(character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_cuit_valida(_cuit character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $_$
declare
    vresp varchar;
    vbase varchar;
    vtotal integer;
    vix smallint;
begin
      -- Verifica si un CUIT/CUIL es válido (parámetro _cuit sin guiones)
      vresp = '';
    
    -- Verifico la longitud y demás
    If (length(_cuit)<>11) Then
    	vresp = 'Longitud del CUIT/CUIL incorrecta';
    ElseIf NOT textregexeq(_cuit,'^[[:digit:]]+(\.[[:digit:]]+)?$') Then
    	vresp = 'El CUIT/CUIL contiene caracteres no numéricos';
    Else 
      vbase = '54327654321';
      vtotal = 0;
      For vix in 1..11 Loop
        vtotal = vtotal + substr(_cuit,vix,1)::integer*substr(vbase,vix,1)::integer;
      End Loop;
      If (vtotal%11 <> 0) Then 
	  vresp = 'CUIT/CUIL Incorrecto.'	;
      End If;
    End If;        
    
    Return vresp;
     
End
$_$;


ALTER FUNCTION sam.uf_cuit_valida(_cuit character varying) OWNER TO postgres;

--
-- TOC entry 805 (class 1255 OID 5282784)
-- Name: uf_db_campo_long(text, text); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_db_campo_long(tabla text, campo text) RETURNS character varying
    LANGUAGE plpgsql
    AS $_$
Declare
  tipo varchar;
BEGIN

  Select Into tipo format_type(pg_attribute.atttypid, pg_attribute.atttypmod) FROM pg_attribute
  WHERE attrelid = $1::regclass
  AND attname = $2;

  If (tipo like '%numeric(%' or tipo like '%decimal(%') Then
	Return substr(tipo,position('(' in tipo)+1,
	position(',' in tipo)-position('(' in tipo)-1);
  Else
	Return atttypmod-4 FROM pg_attribute
	WHERE attrelid = $1::regclass
	AND attname = $2;
  End If;
END
$_$;


ALTER FUNCTION sam.uf_db_campo_long(tabla text, campo text) OWNER TO postgres;

--
-- TOC entry 806 (class 1255 OID 5282785)
-- Name: uf_db_campo_type(text, text); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_db_campo_type(tabla text, campo text) RETURNS character varying
    LANGUAGE plpgsql
    AS $_$
BEGIN
  Return format_type(pg_attribute.atttypid, pg_attribute.atttypmod) FROM pg_attribute
  WHERE attrelid = $1::regclass
  AND attname = $2;
END
$_$;


ALTER FUNCTION sam.uf_db_campo_type(tabla text, campo text) OWNER TO postgres;

--
-- TOC entry 807 (class 1255 OID 5282786)
-- Name: uf_db_tabla(text); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_db_tabla(_tabla text) RETURNS TABLE(nombre name, tipo text, pk character varying, nonull character varying, defecto unknown, obs unknown)
    LANGUAGE sql
    AS $_$
    select pg_attribute.attname nombre, format_type(pg_attribute.atttypid, pg_attribute.atttypmod) tipo,
    case when pg_index.indisprimary then '*' else '' end Pk,case pg_attribute.attnotnull when true then 'Si' else 'No' end NoNull,
    ' ' defecto, ' ' descr
    from pg_attribute
    inner join pg_class on pg_attribute.attrelid=pg_class.oid and pg_attribute.attstattarget=-1
    left join pg_index on indrelid = pg_class.oid AND
      pg_attribute.attnum = any(pg_index.indkey) AND indisprimary
    where pg_class.oid=$1::regclass
    order by pg_attribute.attnum
$_$;


ALTER FUNCTION sam.uf_db_tabla(_tabla text) OWNER TO postgres;

--
-- TOC entry 808 (class 1255 OID 5282787)
-- Name: uf_dj_anticipos(integer, character varying, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_dj_anticipos(_trib_id integer, _obj_id character varying, _fiscaliza integer, _anio integer) RETURNS TABLE(cuota smallint, base numeric, monto numeric)
    LANGUAGE plpgsql
    AS $$
BEGIN
    For cuota, base, monto In Select d.cuota, d.base, d.monto From ddjj d
        Where d.trib_id =_trib_id and d.obj_id =_obj_id and d.fiscaliza = _fiscaliza
        and d.anio =_anio and d.est = 'A' and d.cuota<>12 Order By d.cuota, d.orden Loop

        Return next;
    End Loop;
End;
$$;


ALTER FUNCTION sam.uf_dj_anticipos(_trib_id integer, _obj_id character varying, _fiscaliza integer, _anio integer) OWNER TO postgres;

--
-- TOC entry 810 (class 1255 OID 5282788)
-- Name: uf_dj_aprobar(integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_dj_aprobar(_dj_id integer, _usr_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
declare
	ctcte_id integer;
    ccEst varchar(1);
    ccNominal numeric(12,2);
    ccDesc numeric(12,2);
    ccCtaDesc smallint;
    ccPorcDesc numeric(12,2);
    ccNominalNew numeric(12,2);
    ccDescNew numeric(12,2);
    ccCtaNom smallint;
    ccTOpera smallint;
	cant smallint;
	vtrib_id smallint;
	vobj_id varchar(8);
	vsubcta smallint;
	vanio integer;
	vcuota smallint;
	vtipo smallint;
	emi date;
	venc date;
	fiscaliza smallint;
    montoreten numeric(12,2);
    reteitem smallint;
    pag_id integer;
    montopago numeric (12,2);
    fchpago date;
    montoaux numeric(12,2);
    ctaaux smallint;
BEGIN
    -- DEF: Procedimiento que genera la CtaCte según los datos de la DDJJ
    -- chany 17/04/2014 - Ajuste por Rectificativas en menos:
    -- ccEst: Estado anterior de la CtaCte
    -- ccNominal: Nominal anterior de la CtaCte
    -- ccDesc: Si ccEst=P, se obtiene el descuento aplicado en el Pago
    -- ccCtaDesc: Cuenta de Descuento usada en el Pago
    -- ccPorcDesc: Porcentaje de Descuento Aplicado en el Pago
    -- ccDescNew: Nuevo Descuento a Aplicar
    -- ccCtaNom: Minima Cuenta de Nominal generada, para restar diferencia de descuento
    -- ccTOpera: Tipo de Operacion

  ctcte_id = 0;
  pag_id = 0;
  montopago = 0;

  -- Verifico si se puede efectuar la operación
  Select Into cant count(*) From ddjj d Where d.dj_id =_dj_id and d.est = 'B';

  If (Cant = 0) Then
    -- Obtengo los datos de la DDJJ
    Select Into vtrib_id, vobj_id, vsubcta, vanio, vcuota, vtipo, emi, fiscaliza
    d.Trib_id, d.obj_id, d.subcta, d.Anio, d.Cuota, d.Tipo, d.FchPresenta, d.Fiscaliza
    From ddjj d Where d.dj_id=_dj_id;

    -- Vencimiento
    Select Into venc v.FchVenc1 From sam.uf_trib_venc(vtrib_id, vanio, vcuota, vobj_id) v;

    -- Si es de Fiscalización cambio el Tributo
    If (fiscaliza=1) Then vtrib_id := 4;  End If;

    -- Verifico si existe el período en la CtaCte - Obtengo el Id de la CtaCte
    Select Into ctcte_id, ccEst, ccNominal c.ctacte_id, c.est, c.nominal From CtaCte c Where c.trib_id=vtrib_id
    and c.obj_id=vobj_id and c.anio=vanio and c.cuota=vcuota;

    If (ctcte_id > 0) Then
    	-- Verifico si se pago con descuento (Chany 17/04/2014)
        If (ccEst = 'P') Then
	        --raise notice 'ctcte_id: %',ctcte_id;
        	Select Into ccDesc, ccCtaDesc coalesce(sum(d.haber),0), min(d.cta_id)
              From ctacte_det d Inner Join cuenta c On d.cta_id=c.cta_id
              Where d.ctacte_id=ctcte_id and d.topera in (3,5,7,8,10,16,17) and c.tcta=2;
            -- Determino el porcentaje de descuento aplicado
            If (ccDesc <> 0) Then
            	ccPorcDesc := abs(ccDesc)*100/ccNominal;
                --RAISE NOTICE 'Porcentaje Descuento Aplicado: %',ccPorcDesc;
            End If;
        End If;
		-- Si existe, marco los registros en CtaCte_Det como Baja para TOpera=1,2
        Update CtaCte_Det d Set est='B' Where d.ctacte_id=ctcte_id and topera in (1,2,13,15,16);
        -- Actualizo Fecha de Emisión y Vencimiento
        Update CtaCte c Set FchEmi=Emi, FchVenc=Venc Where c.ctacte_id=ctcte_id;
    Else
    	ccEst := '';  ccNominal = 0; ccDesc = 0;
        -- Si no existe, inserto los datos en la CtaCte
    	Select Into ctcte_id nextval('seq_ctacte_id'::regclass);

        Insert Into ctacte Values (ctcte_id, vtrib_id, 2, vobj_id, vsubcta, vanio, vcuota,
        0, 0, 0, 0, 'D', emi, venc, null, 0, 0, 0, 0, 0, '', '', current_timestamp,_usr_id);
    End If;

	-- Determino el item de Retencion
    Select Into reteitem c.itemrete From sam.config_ddjj c;

    -- Genero los registros en la CtaCte_Det
    -- si el tipo es fiscalizacion (3), TOpera es igual a 15
    Insert Into ctacte_det
        Select ctcte_id, case i.tipo when 3 then 15 else 2 end,
        _dj_id, i.cta_id, sum(l.monto), 0, emi, 'A', current_timestamp,_usr_id
        From ddjj_liq l Inner Join Item i On l.item_id = i.item_id
        Where l.dj_id =_dj_id and i.item_id <> reteitem
        Group By i.tipo, l.dj_id, i.cta_id;

    -- Actualizo CtaCte_Id en la tabla de DDJJ
    If (vtipo = 0) Then
        Update ddjj d Set ctacte_id = ctcte_id, tipo = 1 Where d.dj_id =_dj_id;
    Else
        Update ddjj d Set ctacte_id = ctcte_id Where d.dj_id =_dj_id;
	End If;

    -- Si hubo Retencion, hay que actualizar los datos indicando q ya se uso
    Select Into montoreten abs(sum(l.Monto)) From ddjj_liq l
    Where l.dj_id =_dj_id and l.item_id = reteitem;

    If (montoreten > 0) Then
         -- Actualizo Cta.Cte.
    	Insert Into ctacte_det
        Select ctcte_id, 16,_dj_id, i.cta_id, sum(l.monto), 0, emi, 'A', current_timestamp,_usr_id
        From ddjj_liq l Inner Join Item i On l.item_id = i.item_id
        Where l.dj_id =_dj_id and i.item_id = reteitem
        Group By i.cta_id;

        Perform sam.uf_comp_aplicar(vobj_id, ctcte_id, montoreten, 0,_usr_id);
    End If;

	-- Verifico si existe un pago a cuenta
    Select into pag_id, montopago, fchpago pc.pago_id, pc.monto, pc.fchpago
    From ctacte_pagocta pc
    Where pc.trib_id = vtrib_id and pc.obj_id= vobj_id and pc.subcta = vsubcta and pc.anio= vanio and pc.cuota = vcuota and pc.est='P';

    If (pag_id > 0) Then
      	Delete from ctacte_pagocta_det pd where pd.pago_id= pag_id;
        update ctacte_det d set est= 'B' where d.ctacte_id = ctcte_id and d.topera= 17;

        For montoaux, ctaaux In
        Select sum(d.debe), d.cta_id
        From ctacte_det d Left Join cuenta c on d.cta_id=c.cta_id
        Where d.ctacte_id= ctcte_id and d.topera= 2
        Group by d.cta_id, c.tcta
        Order By c.tcta Desc
        Loop
          	If (montopago > 0) Then
            	If montoaux > montopago Then montoaux = montopago; End If;

        		Insert Into ctacte_pagocta_det
        		Values (pag_id, ctaaux, montoaux);

        		Insert Into ctacte_det
                Values (ctcte_id, 17, pag_id, ctaaux, 0, montoaux, fchpago, 'A',current_timestamp,_usr_id);

                montopago= montopago - montoaux;
            End if;
      	End Loop;
        -- si todavía me queda un saldo lo tengo que agregar a la ultima cuenta insertada
        If montopago > 0 Then
        	Update ctacte_pagocta_det d Set monto = monto + montopago
            Where d.pago_id= pag_id and d.cta_id= ctaaux;

            Update ctacte_det d Set haber= haber + montopago
            Where d.ctacte_id=ctcte_id and d.topera= 17 and d.cta_id=ctaaux;

        End If;
    End If;

    -- Ejecuto el procedimiento para actualizar la CtaCte
    Perform sam.uf_ctacte_ajuste(ctcte_id);

    -- Actualizo los Montos en la CtaCte
    Update ctacte c Set montovenc1 = nominal-nominalcub, montovenc2 = nominal-nominalcub
    Where c.ctacte_id = ctcte_id;

	-- Verifico si se reliquido en menos, recalculo el descuento (Chany 17/04/2014)
    Select Into ccNominalNew c.Nominal From ctacte c Where c.ctacte_id = ctcte_id;
    --raise notice 'ccNominalNew: %',ccNominalNew;
    If (ccEst = 'P' and ccNominalNew < ccNominal and ccDesc <>0) Then
    	ccTOpera = case vtipo when 3 then 15 else 2 end;
        -- Calculo nuevo descuento
        ccDescNew = ccNominalNew * ccPorcDesc / 100;
	    --RAISE NOTICE 'Diferencia de Descuento en +: %',abs(ccDesc)-abs(ccDescNew);
		-- Inserto la diferencia de Descuento en Positivo
        Insert Into ctacte_det Values (ctcte_id, ccTOpera,_dj_id,ccCtaDesc,
          abs(ccDesc)-abs(ccDescNew), abs(ccDesc)-abs(ccDescNew), emi, 'A', current_timestamp,_usr_id);
		-- Obtener la minima cuenta del nominal para actualizar la diferencia del descuento en el haber
		Select Into ccCtaNom min(d.cta_id) From ctacte_det d
          Where d.ctacte_id = ctcte_id and d.topera = ccTOpera and d.est='A';
        Update ctacte_det d Set haber = (abs(ccDesc)-abs(ccDescNew))*(-1)
          Where d.ctacte_id = ctcte_id and d.topera = ccTOpera and d.cta_id=ccCtaNom and d.est='A';

    	-- Vuelvo a actualizar la CtaCte
	    Perform sam.uf_ctacte_ajuste(ctcte_id);
    End If;
  End If;
  Return ctcte_id;
End
$$;


ALTER FUNCTION sam.uf_dj_aprobar(_dj_id integer, _usr_id integer) OWNER TO postgres;

--
-- TOC entry 809 (class 1255 OID 5282790)
-- Name: uf_dj_borrar(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_dj_borrar(_dj_id integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
Declare
	vobj_id varchar(8);
	vanio smallint;
	vcuota smallint;
	cant smallint;
	vctacte_id integer;
	vorden smallint;
	dj_idrec integer;
    resultado varchar;
BEGIN
    -- DEF: Procedimiento que da de baja una DDJJ
    Select Into vobj_id, vanio, vcuota, vctacte_id
    	d.obj_id, d.anio, d.cuota, d.ctacte_id From ddjj d Where d.dj_id = _dj_id;

    -- Actualizo el estado de la DJ
    Update ddjj d Set est='B', fchmod=current_timestamp Where d.dj_id=_dj_id;

    -- Marco los datos en la CtaCte - Elimino Dec Jur, Liq Adm y Compensa
    Update ctacte_det d Set est='B' Where d.ctacte_id=vctacte_id
       and d.topera in (2,13,15,16) and d.comprob = _dj_id;

    -- Actualizo las Retenciones Aplicadas, si corresponde.
    perform sam.uf_comp_aplicar_anula(vctacte_id);

    -- Establecer Estado "A" a la ultima Rectificativa, si existe
    Select  Into vorden max(d.orden) From ddjj d Where d.obj_id = vobj_id and d.anio = vanio
    and d.cuota = vCuota and d.dj_id <> _dj_id and d.est = 'R';

    Select Into dj_idrec d.dj_id From ddjj d Where d.obj_id = vobj_id and d.anio = vanio
    and d.cuota = vcuota and d.orden = vorden and d.est = 'R';

    Update ddjj d Set Est = 'A' Where d.obj_id = vobj_id and d.anio = vanio
    and d.cuota = vcuota and d.orden = vorden and d.est = 'R';

    -- Marco los datos en la CtaCte
    Update ctacte_det d Set est = 'A' Where d.ctacte_id = vctacte_id
       and d.topera = 2 and d.comprob = dj_idrec;

    -- Actualizo la CtaCte
    perform sam.uf_ctacte_ajuste(vctacte_id);
    Update ctacte c Set est = 'B' Where c.ctacte_id = vctacte_id;

    resultado = 'OK';

    Return resultado;
End;
$$;


ALTER FUNCTION sam.uf_dj_borrar(_dj_id integer) OWNER TO postgres;

--
-- TOC entry 961 (class 1255 OID 5282791)
-- Name: uf_dj_calcular(integer, character varying, integer, integer, integer, integer, date, integer, integer, numeric, integer[]); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_dj_calcular(_trib_id integer, _obj_id character varying, _fiscaliza integer, _anio integer, _cuota integer, _orden integer, _fchpresenta date, _djrub_id integer, _bonif integer DEFAULT 0, _saldo numeric DEFAULT 0, _retenciones integer[] DEFAULT NULL::integer[]) RETURNS TABLE(item_id smallint, item_nom character varying, item_monto numeric, resultado character varying)
    LANGUAGE plpgsql
    AS $$
declare
    cantitem smallint=0;
    fchvenc date;
    vfchpresenta date;
    funcion varchar(35);
    sql varchar(400);
    multatotal decimal(9,2);
    montototal decimal(9,2);
    rectotal decimal(9,2);
    desctotal decimal(9,2);
    excepmulta smallint;

    id integer;
    ret_monto numeric(12,2);

    item_saldo integer; --Ítem para volcar el saldo
    item_ret integer;   --Ítem para volcar las retenciones

    saldo_ant numeric;
    periodo_ant integer;
    cant_anio integer;

BEGIN
    item_id:=0;  item_nom:='';  item_monto:=0;  resultado:='';
    montototal := 0;  multatotal:=0;

    -- Verifico que el saldo ingresado no sea mayor al saldo del periodo anterior
    select into cant_anio r.cant_anio from resol r where r.trib_id=_trib_id and _anio*1000+_cuota BETWEEN r.perdesde and r.perhasta;

    if _cuota = 1 THEN
    	periodo_ant = (_anio-1)*1000+cant_anio;
    else
    	periodo_ant = _anio*1000+(_cuota-1);
    end if;

    Select Into saldo_ant ct.saldo
    	From sam.uf_ctacte_tributo(_trib_id,0,_obj_id,0,_fchpresenta,periodo_ant,periodo_ant) ct;

    if (abs(_saldo) > abs(saldo_ant)) then
    	Raise Exception 'El saldo ingresado es mayor al informado en el periodo anterior.';
    end if;

    -- Datos del Vencimiento
    Select Into fchvenc v.fchvenc2 From trib_venc v Where v.trib_id=_trib_id
    and v.anio=_anio and v.cuota=_cuota;

    -- Obtengo los items de saldo y ret
    select into item_saldo, item_ret c.itemsaldo, c.itemrete from sam.config_ddjj c where c.trib_id = _trib_id;

    -- Tomo la fecha de presentacion de la DJ original
    Select Into vfchpresenta min(d.fchpresenta) From ddjj d
    Where d.trib_id=_trib_id and d.obj_id=_obj_id and d.anio=_anio and d.cuota=_cuota
        and d.est <> 'B' and d.orden=0;

    If (vfchpresenta is null) Then vfchpresenta:=_fchpresenta; End If;

    -- Verifico si hay excepcion de Multa
    Select Into excepmulta coalesce(count(*),0) From ctaCte_excep e
    Where e.obj_id = _obj_id and e.anio=_anio and e.cuota = _cuota and e.tipo=4 and e.fchlimite>=current_date;
    If (excepmulta is null) Then excepmulta:= 0; End If;

    -- Obtengo la Funcion a ejecutar según Resolucion Vigente
    Select Into funcion r.funcion From resol r Where r.trib_id=_trib_id
    and _anio*1000+_cuota between r.perdesde and r.perhasta;

    -- Inserto los Item desde la Funcion Específica
    sql = 'Select * From sam.' || funcion || '(' || _trib_id || ',' || quote_literal(_obj_id) || ','
         || _fiscaliza || ',' || _anio || ',' || _cuota || ',' || _djrub_id || ','
         || iif(excepmulta = 0 and vfchpresenta > fchvenc,-1,_bonif) || ')';    -- Si se presenta fuera de término no va bonificación (valor -1)

    FOR item_id, item_nom, item_monto In Execute sql Loop
        montototal := montototal + item_monto;
        cantitem:=cantitem+1;
        return next;
    End Loop;

    If (montototal<0) Then
        resultado:='Error - Valores Negativos';
        return next;
    ElseIf (cantitem=0) Then
        resultado:='Error - No se encontraron items de Liquidación';
        return next;
    Else
        -- Calcular Fondo
        Select Into item_id,item_nom i.item_id,i.nombre From item i Where i.trib_id=_trib_id and i.tipo=7;
        If (item_id > 0) Then
            item_monto:= sam.uf_item_calcular(item_id,_anio,_cuota,montototal, 0, 0, 0) ;
            If (item_monto > 0 ) Then
              return next;
            End If;
        End If;

        -- Calcular la Multa
        multatotal := 0;
        item_monto:=0;

        If (excepmulta = 0 and vfchpresenta > fchvenc) Then
            For item_id, item_nom, item_monto In Select m.item_id, m.detalle, m.multa
            From sam.uf_calc_multa(_trib_id,_obj_id,_anio*1000+_cuota, montototal, vfchpresenta) m Loop
                If (item_monto <> 0 ) Then
                    multatotal:=multatotal+item_monto;
                    return next;
                End If;
            End Loop;
        End If;
        montototal := montototal + multatotal;

        -- Saldo
        If _saldo>0 Then
            Select into item_nom i.nombre from item i where i.item_id=item_saldo;
            item_id=item_saldo;
            Item_monto= -_saldo;
            Return Next;
        End If;

        -- Retenciones
        If not _retenciones is null Then
            Select into item_nom i.nombre from item i where i.item_id=item_ret;
            item_id=item_ret;
            item_monto=0;

            FOREACH id IN ARRAY _retenciones Loop
                Select Into ret_monto r.monto from ret_det r where r.ret_id=id;
                item_monto = item_monto - ret_monto;
            End Loop;
            Return Next;
        End If;

    End If;
End;
$$;


ALTER FUNCTION sam.uf_dj_calcular(_trib_id integer, _obj_id character varying, _fiscaliza integer, _anio integer, _cuota integer, _orden integer, _fchpresenta date, _djrub_id integer, _bonif integer, _saldo numeric, _retenciones integer[]) OWNER TO postgres;

--
-- TOC entry 962 (class 1255 OID 5486546)
-- Name: uf_dj_calcular_monto(character varying, integer, character varying, integer, integer, numeric, numeric, integer, integer, integer, numeric); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_dj_calcular_monto(_obj_id character varying, _subcta integer, _rubro_id character varying, _anio integer, _cuota integer, _minimo numeric, _fijo numeric, _tminimo integer, _tcalculo integer, _cantrubro integer, _monto numeric) RETURNS TABLE(minimo numeric, cant smallint, montorubro numeric)
    LANGUAGE plpgsql
    AS $$
Declare
    vCantHasta smallint;
    vTemporada varchar;
    vPorc numeric(5,2);
    vPorcRub numeric(5,2);
BEGIN
    -- Calcula el mínimo y el monto de un rubro, según el tipo de mínimo y tipo de Cálculo
    minimo = _minimo;
    cant=_CantRubro;

    --obtengo porcentaje y canthasta
    Select Into vPorc, vCantHasta v.Porc, v.CantHasta From Rubro_Vigencia v
    Where v.Rubro_id =_Rubro_id and _Anio*1000+_Cuota between v.PerDesde and v.PerHasta;

    If _tminimo = 3 Then --Fijo por Cantidad
        -- verifico que la cantidad no supere la cantidad hasta definida
        If vCantHasta > 0 Then
        	If Cant > vCantHasta Then Cant = vCantHasta; End If;
        End If;
        minimo = minimo * Cant;
    ElseIf _tminimo = 4 Then --Fijo por Cantidad (con excedente)
        If Cant > vCantHasta Then
        	minimo = minimo + _fijo * (Cant - vCantHasta);
        End If;
    ElseIf _tminimo = 5 Then --Fijo s/ temporada y zona
    	--obtengo temporada
        Select Into vTemporada t.Temporada From Rubro_Temporada t Where t.Cuota=_Cuota;
        If vTemporada = 'A' Then
        	--obtengo mínimo temporada alta
            Select Into minimo v.MinAlta From Rubro_Vigencia v Where v.Rubro_id=_Rubro_id and _Anio*1000+_Cuota between v.PerDesde and v.PerHasta;
        End If;
    ElseIf _tminimo = 6 Then --Fijo * cantidad s/ temporada y zona
        -- verifico que la cantidad no supere la cantidad hasta definida
        If vCantHasta > 0 Then
        	If Cant > vCantHasta Then Cant = vCantHasta; End If;
        End If;
        --obtengo temporada
        Select Into vTemporada t.Temporada From Rubro_Temporada t Where t.Cuota =_Cuota;
        If vTemporada = 'A' Then
        	--obtengo mínimo temporada alta
            Select Into minimo v.MinAlta From Rubro_Vigencia v Where v.Rubro_id=_Rubro_id and _Anio*1000+_Cuota between v.PerDesde and v.PerHasta;
        Else
            If vZona = 2 Then
            	minimo = Minimo * (vporc / 100);
            End If;
        End If;
        minimo = minimo * Cant;
    ElseIf _tminimo = 7 Then --Fijo según zona
		If vZona = 2 Then
        	minimo = minimo * (_Fijo / 100);
        End If;
    ElseIf _tminimo = 8 Then --Fijo * cantidad y según zona
		-- verifico que la cantidad no supere la cantidad hasta definida
        If vCantHasta > 0 Then
        	If Cant > vCantHasta Then Cant = vCantHasta; End If;
        End If;
        If vZona = 2 Then
        	minimo = minimo * (vporc / 100);
 		End If;
        minimo = minimo * Cant;
    End If;

    If _TCalculo = 4 Then --Fijo por Cantidad
    	montoRubro = _monto * Cant;
    Else
    	montoRubro = _monto;
    End If;

    --Verifico si el Porc a aplicar < 100%
    Select Into vPorcRub c.Porc From Objeto_Rubro c Where c.Obj_id=_Obj_id and c.subcta=_subcta
    and c.rubro_id=_Rubro_id
    and c.PerDesde <=_Anio*1000+_Cuota and c.PerHasta >= _Anio*1000+_Cuota;

    If vPorcRub >= 0 And vPorcRub < 100 Then
    	MontoRubro = MontoRubro * (vPorcRub / 100);
        Minimo = Minimo * (vPorcRub / 100);
    End If;

    Return next;
End;
$$;


ALTER FUNCTION sam.uf_dj_calcular_monto(_obj_id character varying, _subcta integer, _rubro_id character varying, _anio integer, _cuota integer, _minimo numeric, _fijo numeric, _tminimo integer, _tcalculo integer, _cantrubro integer, _monto numeric) OWNER TO postgres;

--
-- TOC entry 960 (class 1255 OID 5486543)
-- Name: uf_dj_calcular_rubro(character varying, integer, integer, integer, numeric, numeric, numeric, numeric, numeric, character varying, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_dj_calcular_rubro(_rubro_id character varying, _trib_id integer, _anio integer, _cuota integer, _base numeric, _cant numeric, _pi numeric, _cm numeric, _ai numeric, _obj_id character varying DEFAULT ''::character varying, _fchpresenta date DEFAULT ('now'::text)::date) RETURNS TABLE(rubro_id character varying, rubro_nom character varying, tcalculo smallint, tcalculo_nom character varying, alicuota numeric, tminimo smallint, minimo numeric, fijo numeric, canthasta smallint, monto numeric, porc numeric)
    LANGUAGE plpgsql
    AS $$
Declare
    vnomen_id varchar;
    cm_min smallint;
    ai_min smallint;
    djanual smallint;
    anticiposbase numeric;
    baseaux numeric;
    alicuota_atras numeric;
    vfchvenc date;
BEGIN
    -- DEF: Calcula un Rubro ingresado, según la Fórmula de Cálculo
    rubro_id = _rubro_id;
    baseaux= _base; anticiposbase = 0;
    tcalculo = 0;  tcalculo_nom = '';  alicuota = 0;  tminimo = 0;
    minimo = 0;  fijo = 0;  canthasta = 0;  monto = 0; porc = 0;

    -- Recupero el Nombre del Rubro y Nomenclador
    Select Into rubro_nom,vnomen_id r.nombre, r.nomen_id From rubro r Where r.rubro_id=_rubro_id;

    Select Into tcalculo, alicuota, alicuota_atras, tminimo, minimo, fijo, canthasta, porc
    v.tcalculo, v.alicuota/100, v.alicuota_atras/100, v.tminimo, v.minimo, v.fijo, v.canthasta, v.porc
    From rubro_vigencia v Where v.rubro_id=_rubro_id
    and _anio*1000+_cuota >= v.perdesde and (_anio*1000+_cuota <= v.perhasta Or v.perhasta=9999999);

    -- si el Tipo de Minimo es Fijo x Cantidad, devuelvo el Fijo en vez del Minimo
    If (tminimo = 3) Then 
	If (_cant in (0,1)) Then
	   minimo=fijo; 
	Else
	   minimo=fijo*_cant;   
	End If;   
    End If;

    -- si el Tipo de Minimo General, devuelvo el Minimo de la tabla General
    If (tminimo = 0) Then
    	Select into minimo g.minimo from rubro_general g
    	where g.nomen_id =vnomen_id and _anio*1000+_cuota between g.perdesde and g.perhasta;
    End If;

    -- Recupero el Nombre de la Fórmula de Cálculo
    Select Into tcalculo_nom t.nombre From rubro_tfcalculo t Where t.cod=tcalculo;

	-- Si es CM y no se aplica el mínimo => el minimo es 0
	If (_cm=1) Then
	    Select Into cm_min c.cm_min from sam.config_ddjj c;

	    if (cm_min=0) Then minimo:=0; End If;
    End If;

    -- Si es AI y no se aplica el mínimo => el minimo es 0
    If (_ai=1) Then
	    Select Into ai_min c.ai_min from sam.config_ddjj c;

	    if (ai_min=0) Then minimo:=0; End If;
    End If;

    -- Si se genera DJ anual, recupero los valores de los Anticipos
	If (_cuota = 12 and _base<>0) Then
		Select Into djanual c.djanual From sam.config_ddjj c;
    	    If (djanual = 1) Then -- Se genera DJ anual
        	Select Into anticiposbase sum(a.base)
		From sam.uf_dj_anticipos(vtrib_id,_obj_id,0,_anio) a;

		baseaux = _base - anticiposbase;
	    End If;			
        ElsIf (tcalculo = 7) Then  -- Se toma la Base Imponible Anual del Rubro para comparar con el fijo
	    Select Into baseaux sum(dr.base) From ddjj d inner join ddjj_rubros dr on d.dj_id=dr.dj_id
		where d.obj_id =_obj_id and d.anio =_anio
		and d.cuota<>_cuota and d.est = 'A' and dr.rubro_id = _rubro_id;
	    If (baseaux is null) Then baseaux = 0; End If;	
	End If;

    -- Si la presentación no fue en término, tomo alícuota atrasada
    Select Into vFchVenc coalesce(FchVenc1,'1900/01/01') From sam.Uf_Trib_Venc(_trib_id,_anio,_cuota,_obj_id);
    If _fchpresenta > vfchvenc Then
    	 alicuota= alicuota_atras;
    End If;

    -- Obtengo el Monto según Fórmula de Cálculo
    If (_PI=1) Then
        -- Obtengo la alicuota general para PI (el minimo no)
        Select Into alicuota g.alicuota/100
        From rubro_general g Where g.nomen_id =vnomen_id and _pi=1
        and _anio*1000+_cuota >= g.perdesde and (_anio*1000+_cuota <= g.perhasta Or perhasta=9999999);
        monto:= alicuota * baseaux;
    ElseIf (tcalculo = 0) Then
        -- Obtengo los datos del Regimen General
        Select Into alicuota, minimo g.alicuota/100, g.minimo
        From rubro_general g Where g.nomen_id =vnomen_id and _pi=0
        and _anio*1000+_cuota >= g.perdesde and (_anio*1000+_cuota <= g.perhasta Or perhasta=9999999);
        monto:= alicuota * baseaux;
    ElseIf (tcalculo = 1 or tcalculo=2) Then   -- Alícuota x Base
        monto = alicuota * baseaux;
    ElseIf (tcalculo = 3) Then                 -- Fijo
        monto = fijo;
    ElseIf (tcalculo = 4) Then                 -- Fijo x Cantidad
        monto = fijo * _cant;
    ElseIf (tcalculo = 5) Then                 -- Fijo x Base
        monto = fijo * baseaux;
    ElseIf (tcalculo = 6) Then                 -- Exento
        monto = 0;
    ElseIf (tcalculo = 7) Then                 -- Exento si Base < Fijo        
        -- Comparo con la base acumulada (baseaux) y verifico si ya se aplico
        If (baseaux > fijo) Then  --> ya fue aplicado
	    monto = _base * alicuota;
	ElsIf (baseaux + _base < fijo) Then --> aun no supera el minimo, queda exento
            monto = 0;
        Else -- Calculo por Alícuota sobre excedente
            monto = (baseaux + _base - fijo) * alicuota;
        End If;      
    End If;

    Return next;
End;
$$;


ALTER FUNCTION sam.uf_dj_calcular_rubro(_rubro_id character varying, _trib_id integer, _anio integer, _cuota integer, _base numeric, _cant numeric, _pi numeric, _cm numeric, _ai numeric, _obj_id character varying, _fchpresenta date) OWNER TO postgres;

--
-- TOC entry 811 (class 1255 OID 5282798)
-- Name: uf_dj_contador(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--
/*
CREATE FUNCTION sam.uf_dj_contador(_contador_id integer) RETURNS TABLE(id integer, contador smallint, contador_nom character varying, fecha timestamp without time zone, cant integer, modif character varying)
    LANGUAGE sql
    AS $_$
	Select r.recep_id, r.contador, c.nombre, r.fchmod, count(*)::integer,
    u.nombre || ' - ' || to_char(r.fchmod,'DD/MM/YYYY')
	From ddjj_recep r
	    Left Join ddjj_recep_det d On r.recep_id = d.recep_id
	    Left Join comer_tcontador c On r.contador = c.cod
    	Left Join sam.sis_usuario u On r.usrmod = u.usr_id
    Where r.contador = $1
	Group By r.recep_id, r.contador, c.nombre, r.fchmod, u.nombre
$_$;


ALTER FUNCTION sam.uf_dj_contador(_contador_id integer) OWNER TO postgres;
*/
--
-- TOC entry 812 (class 1255 OID 5282799)
-- Name: uf_dj_generar(integer, character varying, integer, integer, integer, integer, integer, integer, date, boolean, integer, integer, integer, integer, numeric, integer[]); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_dj_generar(_trib_id integer, _obj_id character varying, _subcta integer, _fiscaliza integer, _anio integer, _cuota integer, _orden integer, _tipo integer, _fchpresenta date, _rete boolean, _usr_id integer, _djrub_id integer, _aprobar integer, _bonif integer DEFAULT 0, _saldo numeric DEFAULT 0, _retenciones integer[] DEFAULT NULL::integer[]) RETURNS integer
    LANGUAGE plpgsql
    AS $$
Declare
	vdj_id integer;
	vitem_id smallint;
    item_monto numeric;
    item_tipo smallint;
    resultado varchar;
    fchvenc date;
    basetotal numeric:=0;
    montototal numeric:=0;
    multatotal numeric:=0;
    multaitem smallint;
    multarete numeric;
    reteitem smallint;
    retetotal numeric:=0;
    djanual smallint;
    anticiposbase numeric;
    anticiposmonto numeric;
    vctacte_id integer;
    id integer;
BEGIN
    djanual := 0;
    anticiposbase:=0;
    anticiposmonto := 0;
    multarete := 0;
	
    -- Verifico que exista en temp.ddjj_rubros
    if not exists(select 1 from temp.ddjj_rubros r Where r.djrub_id=_djrub_id) Then
    	Raise Exception 'No existen los Rubros para Calcular';
    End If;

    -- Datos del Vencimiento
    Select Into fchvenc v.fchvenc2 From trib_venc v Where v.trib_id=_trib_id
    and v.anio=_anio and v.cuota=_cuota;

	-- Obtengo el nuevo código para la dj
	vdj_id:= nextval('seq_dj_id'::regclass);

	-- Genero la Liquidación
    For vitem_id,item_monto,resultado
    In Select c.item_id,c.item_monto,c.resultado
	From sam.uf_dj_calcular(_trib_id,_obj_id,_fiscaliza,_anio,_cuota,_orden,_fchpresenta,_djrub_id,_bonif,_saldo,_retenciones) c
	Loop
		If (resultado = '' ) Then
        	Insert Into ddjj_liq Values (vdj_id, vitem_id,item_monto);
            montototal:=montototal+item_monto;
            Select Into item_tipo i.tipo From item i Where i.item_id=vitem_id;
            If (item_tipo=5) Then
            	multatotal:=multatotal+item_monto;
            End If;
		End If;
    End Loop;

    -- Retenciones (EN DESUSO)
    /*If (_rete and _retenciones is null) Then
      Select Into  retetotal r.saldo From sam.uf_rete_saldo(_trib_id,_obj_id) r;
      If (retetotal > 0) Then
		-- Verifico si la retencion supera el monto de la DJ
		If (retetotal > montototal) Then
        	retetotal = montototal;
        End If;

		-- Verifico si hay liquidacion de Multa
        If (multatotal > 0) Then
        	Select Into multaitem c.itemcompensamulta From sam.config_ddjj c;

	        -- compenso por separado multa y nominal
            If (multatotal > retetotal) Then
				multarete = retetotal;
		    Else
			    multarete = multatotal;
            End If;

			Insert Into ddjj_liq Values (vdj_id, multaitem, - multarete);
		End If;

        If (retetotal - multarete > 0) Then
        	  Select Into reteitem c.itemrete From sam.config_ddjj c;

        	  Insert Into ddjj_liq Values (vdj_id, reteitem, - (retetotal - multarete));
              montototal = montototal - retetotal;
        End If;
      End If;
    End If;*/
    -- FIN DESUSO

	-- Inserto los Rubros desde Temp
    Insert Into ddjj_rubros Select vdj_id,t.rubro_id,t.base,t.cant,t.minimo,t.alicuota,t.monto
    From temp.ddjj_rubros t Where t.djrub_id=_djrub_id;

	-- Elimino los datos temporales
    Delete From temp.ddjj_rubros t Where t.djrub_id=_djrub_id;

    -- Base Imponible Total
    Select Into basetotal sum(d.base) From ddjj_rubros d Where d.dj_id=vdj_id;

	-- Si se genera DJ anual, recupero los valores de los Anticipos
	If (_cuota=12) Then
		Select Into djanual c.djanual From sam.config_ddjj c;
    	If (djanual = 1) Then -- Se genera DJ anual
        	Select Into anticiposbase,anticiposmonto sum(base), sum(monto)
            From sam.uf_dj_anticipos(_trib_id,_obj_id,_fiscaliza,_anio);
        End If;
    End If;

	-- Genero la DDJJ
	Insert Into ddjj Values (vdj_id, 0, 0,_trib_id,_obj_id,_subcta,_fiscaliza,_anio,_cuota,_orden,
    	_tipo,basetotal,anticiposbase,anticiposmonto,montototal,multatotal,
        _fchpresenta,'A','', current_timestamp,_usr_id);

 	-- Si es una rectificativa cambio Estado a las DDJJ de orden anterior
	Update ddjj d Set Est='R' Where d.Trib_id=_trib_id and d.Obj_id=_obj_id and d.subcta=_subcta
		and d.Anio=_Anio and d.Cuota=_Cuota and d.orden < _Orden and d.Fiscaliza=_Fiscaliza and d.Est='A';

	-- Verifico si hay que aprobar
    --If (_aprobar = 1) Then
    vctacte_id:= sam.uf_dj_aprobar(vdj_id,_usr_id);
	--End If;

	-- Guardo las Retenciones asociadas a la DJ
    If not _retenciones is null Then
        FOREACH id IN ARRAY _retenciones Loop
            Insert into ddjj_ret values (vdj_id,id);
            update ret_det r set est='I',ctacte_id=vctacte_id where r.ret_id=id;
        End Loop;
    End If;

    -- Elimino los datos de la tabla temporal de rubros
    If (_djrub_id > 0) Then
    	Delete From temp.ddjj_rubros t Where t.djrub_id=_djrub_id;
    End If;

    Return vdj_id;
End;
$$;


ALTER FUNCTION sam.uf_dj_generar(_trib_id integer, _obj_id character varying, _subcta integer, _fiscaliza integer, _anio integer, _cuota integer, _orden integer, _tipo integer, _fchpresenta date, _rete boolean, _usr_id integer, _djrub_id integer, _aprobar integer, _bonif integer, _saldo numeric, _retenciones integer[]) OWNER TO postgres;

--
-- TOC entry 813 (class 1255 OID 5282801)
-- Name: uf_dj_periodo(integer, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_dj_periodo(_trib_id integer, _obj_id character varying) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
declare
	anio_act smallint;
    mes_act smallint;
	periodo integer;
begin
	-- Función que determina el período a presentar
    anio_act=extract(year from current_date);
    mes_act=extract(month from current_date);

    Select into periodo min(c.anio*1000+c.cuota) From ctacte c
    WHERE c.trib_id=_trib_id AND c.obj_id=_obj_id AND c.anio>=anio_act-5 AND c.est='X';

    If periodo is null Then
    	If mes_act=1 Then
        	periodo=(anio_act-1)*1000+12;
        Else
        	periodo=anio_act*1000+mes_act-1;
        End If;
    End If;

    Return periodo;

end
$$;


ALTER FUNCTION sam.uf_dj_periodo(_trib_id integer, _obj_id character varying) OWNER TO postgres;

--
-- TOC entry 814 (class 1255 OID 5282802)
-- Name: uf_dj_retenciones(integer, character varying, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_dj_retenciones(_trib_id integer, _obj_id character varying, _anio integer, _cuota integer) RETURNS TABLE(ret_id integer, numero integer, anio smallint, mes smallint, fecha date, ag_rete character varying, ag_cuit character varying, ag_nom_redu character varying, lugar character varying, tcomprob character varying, comprob character varying, base numeric, monto numeric, activo integer, puedeeliminar integer)
    LANGUAGE plpgsql
    AS $$
declare
    vret_sin_aprob smallint;
BEGIN
    -- Función que devuelve las Retenciones a usar
    Select Into vret_sin_aprob c.ret_sin_aprob from sam.config c;
    
    Return Query
    SELECT r.ret_id, r.numero, r.anio, r.mes, r.fecha::date, r.ag_rete, r.ag_cuit, r.ag_nom_redu::varchar,
      r.lugar, r.tcomprob, r.comprob, r.base, r.monto, 
    CASE WHEN r.ctacte_id = 0 OR r.retdj_id = 0 THEN 0 ELSE 1 END as activo,
    CASE WHEN r.ctacte_id = 0 OR r.retdj_id = 0 THEN 1 ELSE 0 END as puedeeliminar
    FROM v_ret_det r
    WHERE r.obj_id=_obj_id AND ((r.anio*1000+r.mes<=_anio*1000+_cuota AND r.est='P')
      OR r.ctacte_id IN (SELECT c.ctacte_id FROM ctacte c
      WHERE c.trib_id=_trib_id AND c.obj_id=_obj_id AND c.anio*1000+c.cuota=_anio*1000+_cuota))
    And (vret_sin_aprob=1 or (vret_sin_aprob=0 and (r.ret_est='A' or r.ret_est is null)))
    order by r.ag_rete, r.fecha, r.numero;

End
$$;


ALTER FUNCTION sam.uf_dj_retenciones(_trib_id integer, _obj_id character varying, _anio integer, _cuota integer) OWNER TO postgres;

--
-- TOC entry 815 (class 1255 OID 5282803)
-- Name: uf_dj_validar(integer, character varying, integer, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_dj_validar(_trib_id integer, _obj_id character varying, _subcta integer, _fiscaliza integer, _anio integer, _cuota integer) RETURNS TABLE(error character varying)
    LANGUAGE plpgsql
    AS $$
declare
	vperm_djfalta smallint;
    vcm_dj smallint;
    vai_dj smallint;
    vtipoliq varchar(2);
    viva smallint;
    vestobjeto varchar(1);
    vestctacte varchar(1);
	fchaux date;

BEGIN
	-- Validar la viabilidad de presentar la DJ
    -- Esta función reemplaza a uf_dj_verificar que verificaba y devolvía rubros.


	-- Leo la configuración
    Select into vperm_djfalta,vcm_dj,vai_dj  c.perm_djfalta,c.cm_dj,c.ai_dj
    from sam.config_ddjj c where c.trib_id=_trib_id;


    -- Leo tipoliq de la persona
    Select into vtipoliq,viva p.tipoliq,p.iva
    From objeto o inner join persona p on o.num=p.obj_id Where o.obj_id=_obj_id;

    -- Verifico Monotributo
    /*
    if viva = 6 then
    	error:='No se puede generar DJ para Monotributo';
        return next;
    end if;
    */
    
    -- Verifico Vencimiento
    If not exists(Select 1 From trib_venc v Where v.trib_id=_trib_id and v.anio=_anio and v.cuota=_cuota) Then
    	error:='No se ha definido el vencimiento para el período';
        return next;
    End If;


    -- Verifico que el período no sea vigente o futuro
    If _anio*1000+_cuota >= extract(year from current_date)*1000+extract(month from current_date) Then
    	error:='No se puede declarar el período actual o uno futuro';
        return next;
    End If;


    -- Verifico función de cálculo
    If not EXISTS(Select 1 From resol r Where r.trib_id=_trib_id and _anio*1000+_cuota between r.perdesde and r.perhasta) Then
    	error:='No se ha definido la Función de Cálculo para el período';
        return next;
    End If;


	-- Verifico Estado del objeto
	Select Into vestobjeto o.est From objeto o Where o.obj_id =_obj_id;
    If vestobjeto='C' Then  --si esta clausurado verifico fecha de clausura
        If exists(Select 1 From objeto_accion a Where a.obj_id=_obj_id and taccion=5
        and _anio*1000+_cuota between a.fchdesde and a.fchhasta) Then
            error := 'Comercio con Clausura durante el período';
            return next;
        End If;
    ElseIf vestobjeto='B' Then  -- si esta de baja verifico fecha de baja
        Select Into fchaux fchbaja From objeto o Where o.obj_id=_obj_id;
        If (_anio*1000+_cuota > extract(year from fchaux)*1000+extract(month from fchaux)) Then
            error := 'Objeto con Baja anterior al período';
            return next;
        End If;
    ElseIf not vestobjeto in ('A','E','N','T') Then
        error:= 'El estado del Objeto es Incorrecto, debe estar Activo.';
        return next;
    End If;


    -- Verifico que el estado del período en CtaCte
    Select Into vestctacte c.est From ctacte c Where c.trib_id=_trib_id
    and c.obj_id=_obj_id and c.subcta=_subcta and c.anio=_anio and c.cuota=_cuota;

    If vestctacte='J' Then
        error:= 'El período se encuentra en Juicio.';
        return next;
    ElseIf vestctacte='C' Then
        error:= 'El período se encuentra en Convenio.';
        return next;
    End If;


    -- Verifico si se permite si hay DJ pendientes
    If vperm_djfalta=0 and _anio*1000+_cuota > sam.uf_dj_periodo(_trib_id,_obj_id) Then
        error:='Existen DDJJ faltantes.';
        return next;
    End If;


    -- Verifico CM y AI
    If vtipoliq='CM' and vcm_dj=0 Then
        error:='No se permite DJ del tributo en caso de CM';
        return next;
    ElseIf vtipoliq='AI' and vai_dj=0 Then
        error:='No se permite DJ del tributo en caso de AI';
        return next;
    End If;


    -- Verifico si tiene rubros
    If not exists(select 1 from sam.uf_objeto_rubro(_trib_id,_obj_id,_subcta,_fiscaliza,_anio,_cuota)) Then
        error:='No se encontraron rubros asociados al objeto';
        return next;
    End If;

End;
$$;


ALTER FUNCTION sam.uf_dj_validar(_trib_id integer, _obj_id character varying, _subcta integer, _fiscaliza integer, _anio integer, _cuota integer) OWNER TO postgres;

--
-- TOC entry 963 (class 1255 OID 5486547)
-- Name: uf_dj_verificar(integer, character varying, integer, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_dj_verificar(_trib_id integer, _obj_id character varying, _subcta integer, _fiscaliza integer, _anio integer, _cuota integer) RETURNS TABLE(trib_id smallint, trib_nom character varying, rubro_id character varying, nombre character varying, tcalculo smallint, tcalculo_nom character varying, alicuota numeric, minimo numeric, fijo numeric, cant smallint, resultado character varying)
    LANGUAGE plpgsql
    AS $$
declare
	estobjeto varchar;
	sql varchar(400);
	fchaux date;
	verif smallint=0;
	fchvenc date;
    existeresol smallint;
BEGIN
    -- Inicializo los parámetros de resultado
    trib_id=_trib_id;  trib_nom='';  rubro_id='';  nombre='';  tcalculo=0;  tcalculo_nom='';
    alicuota=0;  minimo=0;  fijo=0;  cant=0;  resultado='';

    -- Nombre del Tributo
    Select Into trib_nom t.nombre_redu From trib t Where t.trib_id=_trib_id;

    -- Verifico función de cálculo
    Select Into existeresol coalesce(count(r.*),0) From resol r Where r.trib_id=_trib_id
    and _anio*1000+_cuota between r.perdesde and r.perhasta;
    If existeresol = 0 Then
    	resultado:='No se ha definido la Función de Cálculo para el período';
    End If;

    If resultado = '' Then
      -- Datos del Vencimiento
      Select Into fchvenc v.fchvenc2 From trib_venc v Where v.trib_id=_trib_id
      	and v.anio=_anio and v.cuota=_cuota;
      If (fchvenc is null) Then
    	resultado:='No se ha definido el vencimiento para el período';
      Else
	    Select Into estobjeto o.est From objeto o Where o.obj_id =_obj_id;
        If (estobjeto<>'A' and estobjeto<>'E' and estobjeto<>'N' and estobjeto<>'T') Then
            If (estobjeto='C') Then  --si esta clausurado verifico fecha de clausura
                Select Into verif count(*) From objeto_accion a Where a.obj_id=_obj_id and taccion=5
                and _anio*1000+_cuota between a.fchdesde and a.fchhasta;

                If (verif>0) Then
                    resultado:='Comercio con Clausura durante el período';
                End If;
            ElseIf (estobjeto='B') Then  -- si esta de baja verifico fecha de baja
                Select Into fchaux fchbaja From objeto o Where o.obj_id=_obj_id;
                If (_anio*1000+_cuota > extract(year from fchaux)*1000+extract(month from fchaux)) Then
                    resultado:='Comercio con Baja anterior al período';
                End If;
            Else
                resultado:='El estado del Comercio es Incorrecto, debe estar Activo.';
            End If;
        End If;
      End If;
    End If;

    If (resultado='') Then
        -- Verifico que el período no se encuentre en Juicio en CtaCte
        Select Into verif Coalesce(Count(*),0) From ctacte c Where c.trib_id=_trib_id
        and c.obj_id=_obj_id and c.subcta=_subcta and c.anio=_anio and c.cuota=_cuota
        and c.Est ='J';
        If (verif > 0) Then
            resultado:= 'El período se encuentra en Juicio.';
        End If;
	End If;

    If (resultado='') Then
        -- Verifico que el período no se encuentre en Convenio
        Select Into verif Coalesce(Count(*),0) From ctacte c Where c.trib_id=_trib_id
        and c.obj_id=_obj_id and c.subcta=_subcta and c.anio=_anio and c.cuota=_cuota
        and c.est in ('C','F');
        If (verif > 0) Then
            -- Verifico que el período en convenio no haya estado en Juicio
            Select Into cant Coalesce(Count(*),0) From ctacte c Left Join plan_periodo p on c.ctacte_id=p.ctacte_id
            Where c.trib_id=_trib_id and c.obj_id=_obj_id and c.subcta=_subcta and c.anio=_anio and c.cuota=_cuota
            and p.estant='J';
            If (cant > 0) Then
                resultado:='El período se encontraba en Juicio.';
            Else
                resultado:='El período se encuentra en Convenio o Facilidad';
            End If;
        End If;
	End If;

	If (resultado='') Then
	    For rubro_id, nombre, tcalculo, tcalculo_nom, alicuota, minimo, fijo, cant
    	    In Select c.rubro_id, c.rubro_nom, c.tcalculo, c.tcalculo_nom,
	    	    c.alicuota, c.minimo, c.fijo, c.cant
            	From sam.uf_objeto_rubro(_trib_id,_obj_id,_subcta,_fiscaliza,_anio,_cuota) c Loop
	        return next;
    	End Loop;
	Else
	    return next;
    End If;
End;
$$;


ALTER FUNCTION sam.uf_dj_verificar(_trib_id integer, _obj_id character varying, _subcta integer, _fiscaliza integer, _anio integer, _cuota integer) OWNER TO postgres;

--
-- TOC entry 818 (class 1255 OID 5282805)
-- Name: uf_emision(integer, integer, integer, character varying, integer, integer, integer, integer, date, character varying, character varying, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_emision(_trib_id integer, _anio integer, _cuota integer, _obj_id character varying, _subcta integer, _usr_id integer, _liq_id integer DEFAULT 0, _aprobar integer DEFAULT 0, _venc date DEFAULT ('now'::text)::date, _expe character varying DEFAULT ''::character varying, _obs character varying DEFAULT ''::character varying, _guardarucm integer DEFAULT 0) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
	vctacte_id integer;
	vitem_id smallint;
	vparam1 varchar(20);
	vparam2 varchar(20);
	vparam3 varchar(20);
	vparam4 varchar(20);
	item_monto numeric(15,4);
    orden_liq smallint;

    cuota_usar smallint;

    vmontototal numeric(12,2);
	monto1 numeric(12,2);
    monto2 numeric(12,2);
    anual numeric(12,2);

    uso_mm smallint;
    valor_mm numeric(12,2);
    fch_mm date;

    vtobj smallint;
    estobj varchar(1);

    ttrib smallint;
    genestcta smallint;
    vtexto_id smallint;
    vcant_anio smallint;
    vprescrip smallint;
    venc1 date;
    venc2 date;
    vencanual date;
    rec_venc2 numeric(12,4);


    vfuncion varchar;
    sql varchar;
    error smallint;
    existe_cuota1 smallint;
BEGIN
    vitem_id = 0; item_monto:=0; orden_liq := 0;
    vparam1 = ''; vparam2 = ''; vparam3 = ''; vparam4 = ''; vmontototal:=0;
    vtobj = 0; estobj = ''; cuota_usar = _cuota;

	-- 1 - Obtengo los datos principales

    -- a - Datos del Objeto
    if substr (_obj_id,1,1) <> '_' then
    	Select Into vtobj, estobj coalesce(o.tobj,0), o.est From objeto o Where o.obj_id=_obj_id;
    end if;

    -- b - Datos del Tributo
    Select Into ttrib, genestcta, vtexto_id, vcant_anio, vprescrip, rec_venc2, uso_mm
    t.tipo, t.genestcta, t.texto_id, coalesce(r.cant_anio,12), t.prescrip, t.rec_venc2, t.uso_mm
    From trib t left join resol r On t.trib_id=r.trib_id
    Where t.trib_id=_trib_id and (_anio*1000+_cuota between r.perdesde and r.perhasta or true);

    -- c - Vencimientos definidos para el Tributo
    If (ttrib = 0 or ttrib = 3 or ttrib=4) Then -- Tributos Eventuales o periodicos, el valor viene como parámetro
        venc1:= _venc;
        venc2:= _venc;
        vencanual:=null;
    ElseIf (vcant_anio = 1) Then  -- Liquidacion Anual solamente
        Select Into venc1, venc2, vencanual v.fchvenc1, v.fchvenc2, null
        From trib_venc v Where v.trib_id=_trib_id and v.anio=_anio and v.cuota=1;
    Else
    	cuota_usar = iif(_cuota=0,1,_cuota);

        Select Into venc1, venc2, vencanual
        v.fchvenc1, v.fchvenc2, v.fchvencanual
        From trib_venc v Where v.trib_id=_trib_id and v.anio=_anio and v.cuota=cuota_usar;
    End If;

    If (venc1 is null and venc2 is null) Then
	    RAISE EXCEPTION '%',5; --Error en las Fechas de Vencimiento del Período
    End If;

    -- d - Valor MM (Módulos Municipales
    if (uso_mm=1) Then
    	--Select Into valor_mm mm.valor From calc_mm mm Where venc1 between mm.fchdesde and mm.fchhasta;

	-- Tomo segun el valor del modulo del período que se liquida, no la fecha de vencimiento.
    	fch_mm = to_date(_anio::varchar||'/'||_cuota::varchar||'/'||'01','YYYY/MM/DD');
    	Select Into valor_mm mm.valor From calc_mm mm Where fch_mm between mm.fchdesde and mm.fchhasta;
    	
  	valor_mm := coalesce(valor_mm,1);
    else
    	valor_mm := 1;
    End If;


	-- 2 - Verificar si hay emision previa - Obtener CtaCte_id
	Select Into vctacte_id coalesce(c.ctacte_id,0) From ctacte c Where c.trib_id=_trib_id
    and c.obj_id=_obj_id and c.subcta=_subcta and c.anio=_anio and c.cuota=_cuota;
	If (vctacte_id > 0) Then
		execute sam.uf_emision_borrar(vctacte_id,_usr_id,'R');
        -- Elimino los errores previos
		Delete From emision_err e Where e.trib_id=_trib_id and e.anio=_anio
	     and e.cuota=_cuota and e.obj_id=_obj_id and e.subcta=_subcta;

-- ** EN ESQUEL SE TOMA LA FECHA DE VENCIMIENTO 1 PARA LA CTACTE (PARA EL RESTO VA LA SEGUNDA) **
        Update ctacte c set fchvenc=venc1, expe=iif(_expe='',expe,_expe), obs=iif(_obs='',obs,_obs)
        Where c.ctacte_id=vctacte_id;
    Else
        vctacte_id:=nextval('seq_ctacte_id'::regclass);

-- ** EN ESQUEL SE TOMA LA FECHA DE VENCIMIENTO 1 PARA LA CTACTE (PARA EL RESTO VA LA SEGUNDA) **
        Insert Into ctacte Values (vctacte_id, _trib_id, vtobj, _obj_id, _subcta,
        	_anio, _cuota, 0, 0, 0, 0, '', current_timestamp, venc1, null, 0, 0, 0, 0,
            vtexto_id, _expe, _obs, current_timestamp, _usr_id);
        -- Inicializo Orden para las liquidaciones
    End If;

	-- 3 - Verificar si se trata de un Objeto Exento
	If (estobj = 'E') Then
		Select into vitem_id min(i.item_id) From item i Where i.trib_id=_trib_id and i.tipo=1;
        orden_liq := orden_liq + 1;
        Insert Into ctacte_liq Values (vctacte_id, orden_liq, vitem_id, '', '', '', '', 0);
	Else -- no es Exento
    	-- 4 - Recupero la lista de items según Tipo de Tributo

	    If (ttrib = 1) Then  -- Emision --> llamar función especifica según Resolución
		    Select Into vfuncion coalesce(r.funcion,'') From resol r Where r.trib_id=_trib_id
		      and _anio*1000+cuota_usar between r.perdesde and r.perhasta;
        ElseIf (ttrib=2) Then -- Declarativo
        	select into ttrib r.ttrib from resol r where r.trib_id=_trib_id and r.ttrib<>2;
            if (NOT FOUND) Then
	        	RAISE EXCEPTION 'Los Tributos Declarativos no se Emiten';
            Else  --> llamo a la funcion especifica para el regimen de emision del tributo (Ejem RPC)
			    Select Into vfuncion coalesce(r.funcion,'') From resol r Where r.trib_id=_trib_id and r.ttrib<>2
			      and _anio*1000+_cuota between r.perdesde and r.perhasta;
			End If;
        ElseIf (ttrib=0 or ttrib=3 or ttrib=4 or _trib_id=5) Then -- Interno/Eventual/Periódico/Gastos Judiciales
  			vfuncion:='uf_emision_manual';
		ElseIf (ttrib=5) Then
            vfuncion:='uf_emision_itemxobjeto';
 		ElseIf (ttrib=6 or ttrib=7) Then
			RAISE EXCEPTION 'Los Sellados y Boletos no se Emiten';
        End If;

        If (vfuncion <> '') Then
          sql = 'Select item_id,param1,param2,param3,param4,item_monto,error From sam.';
          sql = sql || vfuncion || '(' || _trib_id || ',' || _anio || ',' || cuota_usar || ',';
          sql = sql || chr(39) || _obj_id || chr(39) || ',' || _subcta || ',' || _liq_id || ')';
          vitem_id:=0;

          For vitem_id,vparam1,vparam2,vparam3,vparam4,item_monto,error In Execute sql Loop
            If (error > 0) Then
            	RAISE EXCEPTION '%',error;
            Else

                If not (item_monto is null) Then
            		orden_liq := orden_liq + 1;
                    item_monto := item_monto * valor_mm;
	            	if (_cuota=0 and vcant_anio>1) then
                    	Insert Into ctacte_liq Values (vctacte_id,orden_liq,vitem_id,vparam1,vparam2,vparam3,vparam4,item_monto*vcant_anio);
                    else
                    	Insert Into ctacte_liq Values (vctacte_id,orden_liq,vitem_id,vparam1,vparam2,vparam3,vparam4,item_monto);
                    end if;
        	    	vmontototal:= vmontototal + item_monto;
                End if;
            End If;
          End Loop;

          -- 5 - Verificar Errores
          If (vitem_id is null or vitem_id=0 or item_monto is null) Then
		    RAISE EXCEPTION '%',6;  --No se encontraron Items en la Liquidación
          ElseIf (vmontototal<0 and ttrib not in (3,4)) Then
		    RAISE EXCEPTION '%',15;  --Valores Negativos';
		  End If;
        End If;

  		-- 6 - Incorporar Item de Fondo si está definido para el tributo
        vitem_id:=0;
        Select Into vitem_id i.item_id From item i Where i.trib_id=_trib_id and i.tipo=7;
        If (vitem_id>0) Then
          item_monto:=sam.uf_item_calcular(vitem_id,_anio,_cuota,vmontototal, 0, 0, 0);
          If (item_monto <> 0 ) Then
              orden_liq := orden_liq + 1;
              if (_cuota=0 and cant_anio>1) then
                  Insert Into ctacte_liq Values (vctacte_id,orden_liq,vitem_id,vmontototal,'','','',item_monto*vcant_anio);
    		  else
	              Insert Into ctacte_liq Values (vctacte_id,orden_liq,vitem_id,vmontototal,'','','',item_monto);
              end if;
              vmontototal:= vmontototal + item_monto;
          End If;
        End If;

		-- 7 - Incorporar Retenciones si existen
/*
        Select Into item_id,item_monto s.item_id,s.saldo From sam.uf_rete_saldo(trib_id,obj_id) s;
        If (item_id>0 and item_monto>0) Then
          -- Verifico si la retencion supera el monto Total de Emision
          If (item_monto>montototal) Then item_monto:=montototal; End If;
          orden_liq := orden_liq + 1;
          Insert Into ctacte_liq Values (ctacte_id, orden_liq, item_id, '', '', '', '', -item_monto);
          montototal:= montototal - item_monto;
        End If;
*/
  		-- 8 - Incorporar Item de Redondeo si está definido para el tributo
        vitem_id:=0;
        Select Into vitem_id i.item_id From item i Where i.trib_id=_trib_id and i.tipo=6;
        If (vitem_id>0) Then
          item_monto:=sam.uf_item_calcular(vitem_id,_anio,_cuota,vmontototal, 0, 0, 0);
          If (item_monto <> 0 ) Then
              orden_liq := orden_liq + 1;
              Insert Into ctacte_liq Values (vctacte_id,orden_liq,vitem_id, vmontototal,'','','',item_monto);
              vmontototal:= vmontototal + item_monto;
          End If;
        End If;

		-- 9 - Emisión Anual
        If (vencanual is not null and _cuota<>0) Then
        	Select Into existe_cuota1 coalesce(count(c.*),0) From ctacte c Where c.trib_id=_trib_id
    			and c.obj_id=_obj_id and c.subcta=_subcta and c.anio=_anio and c.cuota=1;
            If (_cuota<>1 and existe_cuota1=0) Then  -- si no existe cuota 1 no genero monto anual
				anual = 0;
            Else
            	anual := (vmontototal * (vcant_anio - _cuota + 1));
                anual := anual + sam.uf_calc_desc(_trib_id,_obj_id,_anio*1000,anual,vencanual);
            End If;
        End If;

        -- 10 - Descuentos por Vencimiento
        monto1 := vmontototal + sam.uf_calc_desc(_trib_id,_obj_id,_anio*1000+_cuota,vmontototal,venc1);
        If (venc1<>venc2) Then
          monto2 := vmontototal + sam.uf_calc_desc(_trib_id,_obj_id,_anio*1000+_cuota,vmontototal,venc2);
        Else
          monto2 := monto1;
        End If;
        -- Verifico si se aplica recargo al 2do vencimiento
        If (rec_venc2 > 0) Then
        	monto2 := monto2 * (1+rec_venc2);
        ElseIf (rec_venc2 = -1) Then
        	monto2 := monto2 + sam.uf_calc_interes(monto2,venc1,venc2);
        End If;

  	End If; -- fin If Exento

    -- 11 - Aprobar la Emisión

    If (_aprobar = 1) Then
        Update ctacte c Set montovenc1=monto1, montovenc2=monto2, montoanual=anual,
        	fchemi=current_timestamp, fchvenc=iif(rec_venc2<>0,venc1,venc2),
            fchmod=current_timestamp,usrmod=_usr_id
        Where c.ctacte_id = vctacte_id;

        PERFORM sam.uf_emision_aprobar(vctacte_id,_trib_id,_obj_id,_subcta,current_date,_usr_id,_guardarucm);
    Else
        Update ctacte c Set nominal=vmontototal, montovenc1=monto1,
            montovenc2=monto2, montoanual=anual,
            fchemi=current_timestamp, fchvenc=iif(rec_venc2<>0,venc1,venc2),
            est='', fchmod=current_timestamp,usrmod=_usr_id
        Where c.ctacte_id = vctacte_id;
	End If;

    -- 12 - Generar Estado de Deuda si corresponde
    If (genestcta=1) Then
        Delete From temp.ctacte_est_deuda e Where e.trib_id=_trib_id
			and e.obj_id=_obj_id and e.subcta=_subcta;

        -- Genero la información actualizada
        Insert Into temp.ctacte_est_deuda Select _trib_id, _obj_id, _subcta,
          e.anio, e.detalle, e.monto, e.accesor, e.multa, e.total, current_date
          From sam.uf_ctacte_est_deuda(_trib_id, _obj_id, _subcta) e;
    End If;

    -- 13 - Eliminar Liquidacion Temporal
	If (_liq_id>0) Then
	    Delete From temp.ctacte_liq_manual m Where m.liq_id=_liq_id;
    End If;

	Return vctacte_id;
End
$$;


ALTER FUNCTION sam.uf_emision(_trib_id integer, _anio integer, _cuota integer, _obj_id character varying, _subcta integer, _usr_id integer, _liq_id integer, _aprobar integer, _venc date, _expe character varying, _obs character varying, _guardarucm integer) OWNER TO postgres;

--
-- TOC entry 816 (class 1255 OID 5282807)
-- Name: uf_emision_aprobar(integer, integer, character varying, integer, date, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_emision_aprobar(_ctacte_id integer, _trib_id integer, _obj_id character varying, _subcta integer, _fchemi date, _usr_id integer, _guardarucm integer DEFAULT 0) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	cant smallint;
	trib_ucm smallint;
    saldo numeric(12,2);
    cta_id smallint;
    cta_monto numeric(12,2);
    obj_item_expe varchar(12);
    obj_item_obs varchar(250);
BEGIN
    -- Marco los registros en CtaCte_Det como Baja para TOpera=1,2
    Update ctacte_det d Set est='B' Where d.ctacte_id=_ctacte_id and d.topera in (1,2);--,16);

	-- Verifico si el tributo corresponde a ucm
    Select Into trib_ucm t.ucm From trib t Where t.trib_id=_trib_id;

    -- Genero los registros en la CtaCte_Det
    Insert Into ctacte_det
        Select l.ctacte_id, 1, l.ctacte_id, i.cta_id,
        sum(l.monto) debe, 0 haber, _fchemi, 'A', current_timestamp, _usr_id
        From ctacte_liq l
        Inner Join item i on l.item_id = i.item_id
        Where l.ctacte_id = _ctacte_id
        Group By l.ctacte_id,i.cta_id;

    -- Ejecuto el procedimiento para actualizar la CtaCte
    PERFORM sam.uf_ctacte_ajuste(_ctacte_id);

    -- Recupero el saldo de la ctacte actualizada
    saldo := sam.uf_ctacte_saldo(_ctacte_id);

    -- Incorporar Compensa/Rete si existe y si queda saldo en la ctacte
    If (saldo > 0) Then
      Select Into cta_monto s.saldo From sam.uf_comp_saldo(_trib_id,_obj_id) s;

      If (cta_monto>0) Then
        -- Verifico si la Compensa supera el monto Total de Emision
        If (cta_monto>saldo) Then cta_monto:=saldo; End If;

        -- Actualizar la compensacion para indicar que ya se uso
        Perform sam.uf_comp_aplicar(_obj_id, _ctacte_id, cta_monto, 1, _usr_id, 0);

        -- Vuelvo a ejecutar el procedimiento para actualizar la CtaCte
        PERFORM sam.uf_ctacte_ajuste(_ctacte_id);
      End If;
    End If;

	-- Si hay un registro en Objeto_item obtengo obs y expe, para actualizar CtaCte
    Obj_item_obs = ''; obj_item_expe = '';
	Select Into obj_item_obs, obj_item_expe oi.obs, oi.expe from objeto_item oi
		left join ctacte c on c.trib_id= oi.trib_id and c.obj_id = oi.obj_id and c.anio*1000+c.cuota between oi.perdesde and oi.perhasta
		where c.ctacte_id= _ctacte_id;

    If obj_item_obs <> '' or obj_item_expe <> '' Then
    	Update Ctacte c set expe = obj_item_expe, obs = obs || ' - ' || obj_item_obs Where c.ctacte_id= _ctacte_id;
    End If;

    If (trib_ucm>0) Then
      if (_guardarucm=1) then
          Update ctacte c Set ucm=nominal, nominal=0 Where c.ctacte_id=_ctacte_id;
      elseif (_guardarucm=2) then
          Update ctacte c Set ucm=0 Where c.ctacte_id=_ctacte_id;
      end if;
    End If;
End
$$;


ALTER FUNCTION sam.uf_emision_aprobar(_ctacte_id integer, _trib_id integer, _obj_id character varying, _subcta integer, _fchemi date, _usr_id integer, _guardarucm integer) OWNER TO postgres;

--
-- TOC entry 817 (class 1255 OID 5282808)
-- Name: uf_emision_aprobar_masiva(integer, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_emision_aprobar_masiva(_trib_id integer, _anio integer, _cuota integer, _usr_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	vctacte_id integer;
    vobj_id varchar(8);
    vsubcta smallint;
    vfchemi date;
    i integer;
BEGIN
	i:= 0;
	For vctacte_id, vobj_id, vsubcta, vfchemi IN
    	Select c.ctacte_id,c.obj_id,c.subcta,c.fchemi from ctacte c
        where c.trib_id=_trib_id and c.anio=_anio and c.cuota=_cuota and c.est='' Loop

      	i = i + 1;
    	perform sam.uf_emision_aprobar(vctacte_id,_trib_id,vobj_id,vsubcta,vfchemi,_usr_id);
    End Loop;
    raise info 'Total de objeto aprobados: %',i;

End
$$;


ALTER FUNCTION sam.uf_emision_aprobar_masiva(_trib_id integer, _anio integer, _cuota integer, _usr_id integer) OWNER TO postgres;

--
-- TOC entry 819 (class 1255 OID 5282809)
-- Name: uf_emision_borrar(integer, integer, character varying, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_emision_borrar(_ctacte_id integer, _usr_id integer, _accion character varying, _motivo character varying DEFAULT ''::character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	vorden smallint;
	cant smallint;
    vcuota smallint;
    estcc varchar(1);
BEGIN
/*    If (accion='B') Then -- Baja, elimino sólo si tiene topera = Emision
    	Select into cant count(*) From ctacte_det d
          Where d.ctacte_id=ctacte_id and d.topera<>1 and d.topera <> 13 and d.est<>'B';
        If (cant > 0) Then
        	RAISE EXCEPTION 'Existen conceptos que no son de Emisión';
        End If;
	End If;
*/
	-- Recupero el código de Orden
    Select Into vorden coalesce(max(b.orden),0)+1 From ctacte_baja b Where b.ctacte_id=_ctacte_id;

    -- Doy de baja la liquidacion ==> ctacte_baja_liq
    Insert into ctacte_baja_liq
    select l.ctacte_id,vorden,l.orden,l.item_id,l.param1,l.param2,l.param3,l.param4,l.monto
    from ctacte_liq l where l.ctacte_id=_ctacte_id;

    Delete from ctacte_liq l where l.ctacte_id=_ctacte_id;

    -- Marco los registros en CtaCte_Det como Baja para TOpera Emision
    Update ctacte_det d Set est='B' Where d.ctacte_id=_ctacte_id and d.topera in (1,13);

    -- Respaldo los datos para auditoria de la CtaCte
    Insert Into ctacte_baja Select c.ctacte_id, vorden, _accion, c.ucm, c.nominal,
      c.fchemi, c.expe, c.obs, current_timestamp, _usr_id
      From ctacte c Where c.ctacte_id = _ctacte_id;

    -- Elimino Retenciones y Mensajes
    If (_accion='B') Then
    	perform sam.uf_comp_aplicar_anula(_ctacte_id);
    End If;
    Delete From emision_mensaje m Where m.ctacte_id = _ctacte_id;

    If (_accion='R') Then  -- Reliquidacion
      -- Inicializar CtaCte
      Update ctacte c Set nominal=0, montovenc1=0, montovenc2=0, montoanual=0,
        fchemi=current_timestamp, est='', fchmod=current_timestamp, usrmod=_usr_id
        Where c.ctacte_id = _ctacte_id;
    Else
      Select into vcuota, estcc c.cuota, c.est From ctacte c Where c.ctacte_id=_ctacte_id;
      If (vcuota=0 and estcc='D') Then -- para período anual efectúo el delete directamente
	      Delete From ctacte c Where c.ctacte_id=_ctacte_id;
	  Else
	      Update ctacte c Set est='B', obs=obs||'/Baja por: ' || _motivo,fchmod=current_timestamp,
    	  	usrmod=_usr_id Where c.ctacte_id=_ctacte_id;
      End If;
    End If;
End
$$;


ALTER FUNCTION sam.uf_emision_borrar(_ctacte_id integer, _usr_id integer, _accion character varying, _motivo character varying) OWNER TO postgres;

--
-- TOC entry 820 (class 1255 OID 5282810)
-- Name: uf_emision_borrar_periodo(integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_emision_borrar_periodo(_trib_id integer, _anio integer, _cuota integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	vctacte_id integer;
Begin
	For vctacte_id In Select c.ctacte_id From ctacte c
	left join ctacte_det d On c.ctacte_id=d.ctacte_id
    Where c.trib_id=_trib_id and c.anio=_anio and c.cuota=_cuota
    and c.est = '' and c.ctacte_id is null Loop

      Delete From ctacte_liq c Where c.ctacte_id = vctacte_id;

      Delete From ctacte_det c Where c.ctacte_id = vctacte_id;

      Delete From ctacte c Where c.ctacte_id = vctacte_id;

      Delete From emision_mensaje c Where c.ctacte_id = vctacte_id;

      Delete From emision_err e Where e.trib_id=_trib_id and e.anio=_anio and e.cuota=_cuota;

      Delete From emision_esta e Where e.trib_id=_trib_id and e.anio=_anio and e.cuota=_cuota;
	End Loop;
End
$$;


ALTER FUNCTION sam.uf_emision_borrar_periodo(_trib_id integer, _anio integer, _cuota integer) OWNER TO postgres;

--
-- TOC entry 5674 (class 0 OID 0)
-- Dependencies: 820
-- Name: FUNCTION uf_emision_borrar_periodo(_trib_id integer, _anio integer, _cuota integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_emision_borrar_periodo(_trib_id integer, _anio integer, _cuota integer) IS 'Elimina la emisión de un período completo.
Se utiliza para borrar en forma completa una emisión masiva de prueba.

Parámetros:
  trib_id integer: código de tributo.
  anio integer: año del período.
  cuota integer: número de cuota.
';


--
-- TOC entry 821 (class 1255 OID 5282811)
-- Name: uf_emision_borrar_reliq(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_emision_borrar_reliq(_ctacte_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
fchmaxemi date;
fchantemi date;
BEGIN
    -- Obtengo la última fecha de emisión
    Select into fchmaxemi max(d.fecha) from ctacte_det d
    Where d.ctacte_id= _ctacte_id and d.est='A' and d.topera=1;
    
    -- Obtengo la fecha de emisión anterior
    Select into fchantemi max(d.fecha) from ctacte_det d
    Where d.ctacte_id= _ctacte_id AND d.est='B' and d.topera=1 and d.fecha<>fchmaxemi;

    -- Activo la emisión anterior
   	Update ctacte_det d set est='A'
    Where d.ctacte_id= _ctacte_id and d.fecha=fchantemi and d.est='B' and d.topera=1;

    -- Elimino la última emisión
    Update ctacte_det d set est='B'
    Where d.ctacte_id= _ctacte_id and d.fecha=fchmaxemi and d.est='A' and d.topera=1;

    perform sam.uf_ctacte_ajuste (_ctacte_id);
End
$$;


ALTER FUNCTION sam.uf_emision_borrar_reliq(_ctacte_id integer) OWNER TO postgres;

--
-- TOC entry 822 (class 1255 OID 5282812)
-- Name: uf_emision_cambiar_venc(integer, integer, integer, timestamp without time zone, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_emision_cambiar_venc(_trib_id integer, _anio integer, _cuota integer, _nuevovenc timestamp without time zone, _distrib integer DEFAULT 0) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    vobj_id varchar(8);
    vsubcta smallint;
BEGIN
    If (_distrib = 0) Then
        If (_trib_id in (1, 2)) Then
            Update ctacte c Set fchvenc = _nuevovenc
            Where c.trib_id = _trib_id and extract(year from c.fchvenc)=_anio
            and extract(month from c.fchvenc)=_cuota;
        Else
            Update ctacte c Set fchvenc = _nuevovenc
            Where c.trib_id = _trib_id and c.anio = _anio and c.cuota = _cuota;
        End If;
    Else
      If (_trib_id in (1, 2)) Then
          For vobj_id, vsubcta In Select c.obj_id, c.subcta From ctacte c
	        Inner Join objeto o on c.obj_id=o.obj_id
            Where c.trib_id = _trib_id and extract(year from c.fchvenc) = _anio
            and extract(month from c.fchvenc) = _cuota and c.Est='D'
            and o.distrib = _distrib Loop

                Update ctacte c set fchvenc =_nuevovenc
                Where c.trib_id=_trib_id and c.obj_id=_obj_id and c.subcta=_subcta
                and extract(year from c.fchvenc)=_anio and extract(month from c.fchvenc)=_cuota;
         End Loop;
      Else
          For vobj_id, vsubcta In Select c.obj_id, c.subcta From ctacte c
	        Inner Join objeto o on c.obj_id=o.obj_id
            Where c.trib_id= _trib_id and c.anio = _anio and c.cuota = _cuota and c.Est='D'
            and o.distrib = _distrib Loop

                Update ctacte c set fchvenc =_nuevovenc
                Where c.trib_id=_trib_id and c.obj_id=vobj_id and c.subcta=vsubcta
                and c.anio=_anio and c.cuota=_cuota;

          End Loop;
      End If;
    End If;
End
$$;


ALTER FUNCTION sam.uf_emision_cambiar_venc(_trib_id integer, _anio integer, _cuota integer, _nuevovenc timestamp without time zone, _distrib integer) OWNER TO postgres;

--
-- TOC entry 823 (class 1255 OID 5282815)
-- Name: uf_emision_esta(integer, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_emision_esta(_trib_id integer, _anio integer, _cuota integer, _usr_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
  vcant integer;
  vmonto numeric(12,2);
  vfchemi date;
  vcant_err integer;
  existe integer;
BEGIN
    Select Into vcant, vmonto, vfchemi count(*), sum(c.nominal), max(c.fchemi)
    From ctacte c Where c.trib_id=_trib_id and c.anio=_anio and c.cuota=_cuota;

    Select Into vcant_err count(*) From emision_err e
    Where e.trib_id=_trib_id and e.anio=_anio and e.cuota=_cuota;

    Select Into existe count(*) From emision_esta e
    Where e.trib_id=_trib_id and e.anio=_anio and e.cuota=_cuota;

    If (existe > 0) Then
        Update emision_esta e Set cant=vcant, monto=vmonto, cant_err=vcant_err
        Where e.trib_id=_trib_id and e.anio=_anio and e.cuota=_cuota;
    Else
        Insert Into emision_esta Values (_trib_id, _anio, _cuota, vcant, vmonto,
        vcant_err, vfchemi, _usr_id, null, null);
    End If;
End
$$;


ALTER FUNCTION sam.uf_emision_esta(_trib_id integer, _anio integer, _cuota integer, _usr_id integer) OWNER TO postgres;

--
-- TOC entry 824 (class 1255 OID 5282816)
-- Name: uf_emision_estadodeuda(integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_emision_estadodeuda(_trib_id integer, _anio integer, _cuota integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    ttrib smallint;
    vtobj smallint;
    sql text;
    vobj_id varchar(8);
    vsubcta smallint;
    i integer;
BEGIN
	-- Verificar el tipo de tributo
	Select into ttrib, vtobj t.tipo, t.tobj from trib t where t.trib_id=_trib_id;
    if (ttrib<>1 and ttrib<>5) then
    	raise exception 'La función sólo es válida para tributos de tipo Emisión o Item x Objeto';
    end if;

	--1. Selecciono los objetos
    If (_trib_id = 13) Then --para OSM tengo que usar un Join a OSM y a Inmuebles
      sql = 'Select distinct o.obj_id, coalesce(s.subcta,0) subcta From objeto o
      		Left join osm s On o.obj_id=s.obj_id Left Join inm i On o.obj_id=i.obj_id
		    Left Join ctacte c On o.obj_id=c.obj_id And s.subcta=c.subcta
      		and c.trib_id=' || _trib_id || ' And c.anio=' || _anio || ' and c.cuota In (0, ' || _cuota || ')
      		And i.serv>0 And (i.tinm<>9 or (i.tinm=9 and Not (s.ctaosm=' || chr(39) || chr(39) ||' or s.ctaosm is null)))';
    Elsif (_trib_id=22) Then --para TSH RPC tomo los objetos de ib_rpc
      sql = 'Select distinct o.obj_id, 0 subcta From objeto o
	      	Inner join ib_rpc r On o.obj_id=r.obj_id
            Inner join comer m On o.obj_id=m.obj_id
            Inner Join ib i On m.obj_id_ib=i.obj_id and i.rpc=1
      		Left Join ctacte c On o.obj_id= c.obj_id
      		and c.trib_id='||_trib_id||' And c.anio='||_anio||' and c.cuota In (0, '||_cuota||')';
    Elsif (_trib_id=70) Then --para Rodados filtro segun rangos de valuacion
      sql = 'Select distinct o.obj_id, 0 subcta From objeto o
		    Inner join rodado r on o.obj_id=r.obj_id
		    Inner Join rodado_val v On v.anioval='||_anio||' and v.anio=r.anio and v.tipo=r.tipo
            Left Join ctacte c On o.obj_id= c.obj_id
            and c.trib_id='||_trib_id||' And c.anio='||_anio||' and c.cuota In (0, '||_cuota||') ';
    Else
      sql = 'Select distinct o.obj_id, 0 subcta From objeto o
            Left Join ctacte c On o.obj_id= c.obj_id
            and c.trib_id='||_trib_id||' And c.anio='||_anio||' and c.cuota In (0, '||_cuota||') ';
    End If;
    --2. Verifico en función del Tipo de Tributo y si es de Item x Objeto
    --para Item x Objeto hay que recuperar solo los objetos q tengan ese tipo de Item (4)
    If (ttrib = 5) Then
      sql = sql || 'Inner Join objeto_item oi On o.obj_id=oi.obj_id
      		Inner Join item i On oi.item=i.cod and i.tipo=4 and i.trib_id='||_trib_id||
        	' and oi.perdesde<='||_anio*1000+_cuota||' And oi.perhasta>='||_anio*1000+_cuota||' ';
    End If;

    --4. Establecer condición según Tipo de Objeto
    sql = sql || ' And o.tobj=' || tobj || ' And o.Est not in ('||chr(39)||'B'||chr(39)||','||chr(39)||'D'||chr(39)||')';
	i:= 0;

	For vobj_id, vsubcta IN Execute sql Loop
      i = i + 1;
      Begin
		Delete From temp.ctacte_est_deuda e
        Where e.trib_id=_Trib_id and e.obj_id=vobj_id and e.subcta=vsubcta;

        Insert Into temp.ctacte_est_deuda Select _Trib_id,vobj_id,vsubcta,
        e.anio, e.detalle, e.monto, e.accesor, e.multa, e.total, current_date
        From sam.uf_ctacte_est_deuda(_Trib_id, vobj_id, vsubcta) e;
	  End;
    End Loop;

--    raise notice 'sql : %',sql;
    raise info 'Cantidad de Estados de Deuda Generados: %',i;

End
$$;


ALTER FUNCTION sam.uf_emision_estadodeuda(_trib_id integer, _anio integer, _cuota integer) OWNER TO postgres;

--
-- TOC entry 954 (class 1255 OID 5486525)
-- Name: uf_emision_itemxobjeto(integer, integer, integer, character varying, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_emision_itemxobjeto(_trib_id integer, _anio integer, _cuota integer, _obj_id character varying, _subcta integer, _liq_id integer) RETURNS TABLE(item_id smallint, item_nom character varying, param1 character varying, param2 character varying, param3 character varying, param4 character varying, item_monto numeric, error smallint)
    LANGUAGE plpgsql
    AS $$
DECLARE
    montototal numeric;
    vparam1 numeric;
BEGIN
    item_id = 0; item_nom:='';  item_monto:=0;  error:=0; vparam1 = 0;
    param1 = ''; param2 = ''; param3 = ''; param4 = ''; montototal:=0;

    -- Item por Objeto
    --param1 = 0; param2 = 0; param3 = 0; param4 = 0;
    For item_id, item_nom, vparam1 In Select oi.item_id, i.nombre, oi.param1
		From objeto_item oi Inner Join item i On oi.item_id=i.item_id
	    Inner Join item_vigencia v On oi.item_id = v.item_id
	    Where oi.obj_id=_obj_id and oi.subcta=_subcta and oi.trib_id=_trib_id
       	and oi.perdesde<=_anio*1000+_cuota and oi.perhasta>=_anio*1000+_cuota
        and v.perdesde<=_anio*1000+_cuota and v.perhasta>=_anio*1000+_cuota
    Loop
        item_monto:=sam.uf_item_calcular(item_id,_anio,_cuota,vparam1, 0, 0, 0);
        If (item_monto <> 0 ) Then
            Return next;
        End If;
    End Loop;

End
$$;


ALTER FUNCTION sam.uf_emision_itemxobjeto(_trib_id integer, _anio integer, _cuota integer, _obj_id character varying, _subcta integer, _liq_id integer) OWNER TO postgres;

--
-- TOC entry 825 (class 1255 OID 5282821)
-- Name: uf_emision_liq(integer, character varying, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_emision_liq(_trib_id integer, _obj_id character varying, _perdesde integer, _perhasta integer) RETURNS TABLE(ctacte_id integer, anio integer, cuota smallint, nominal numeric, est character, item_id smallint, item_nom character varying, item_monto numeric)
    LANGUAGE sql
    AS $_$
    Select c.ctacte_id, c.anio, c.cuota, c.nominal, c.est,
      coalesce(l.item_id,dl.item_id), coalesce(ci.nombre,di.nombre),
      coalesce(l.monto, dl.monto)
    From ctacte c
    -- Emision o Periódico
    Left Join ctacte_liq l On c.ctacte_id = l.ctacte_id
    Left Join item ci On l.item_id = ci.item_id
    -- Declarativo
    Left Join ddjj d On c.ctacte_id = d.ctacte_id
    Left Join ddjj_liq dl On d.dj_id = dl.dj_id
    Left Join item di On dl.item_id = di.item_id
    Where c.trib_id = $1 and c.obj_id=$2 and
		c.anio*100+c.cuota between $3 and $4
    Order By c.anio, c.cuota
$_$;


ALTER FUNCTION sam.uf_emision_liq(_trib_id integer, _obj_id character varying, _perdesde integer, _perhasta integer) OWNER TO postgres;

--
-- TOC entry 826 (class 1255 OID 5282822)
-- Name: uf_emision_manual(integer, integer, integer, character varying, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_emision_manual(_trib_id integer, _anio integer, _cuota integer, _obj_id character varying, _subcta integer, _liq_id integer) RETURNS TABLE(item_id smallint, item_nom character varying, param1 character varying, param2 character varying, param3 character varying, param4 character varying, item_monto numeric, error smallint)
    LANGUAGE plpgsql
    AS $$
DECLARE 
    montototal numeric;
BEGIN
    item_id = 0; item_nom:='';  item_monto:=0;  error:=0;
    param1 = ''; param2 = ''; param3 = ''; param4 = ''; montototal:=0;

	-- Recupero los items de la tabla temporal
    For item_id, item_nom, param1, param2, param3, param4, item_monto
    In Select l.item_id, i.nombre, l.param1, l.param2, l.param3, l.param4, l.monto
    From temp.ctacte_liq_manual l inner join item i on l.item_id=i.item_id
    Where l.liq_id =_liq_id and i.tipo not in (6,7) Loop

        montototal:= montototal + item_monto;

		Return next;
    End Loop;

	-- Descuentos y Recargos por Objeto
    --param1 = 0; param2 = 0; param3 = 0; param4 = 0;
    For item_id, item_nom In Select oi.item_id, i.nombre
		From objeto_item oi Inner Join item i On oi.item_id=i.item_id
	    Inner Join item_vigencia v On oi.item_id = v.item_id
	    Where oi.obj_id=_obj_id and oi.subcta=_subcta and oi.trib_id=_trib_id
       	and oi.perdesde<=_anio*1000+_cuota and oi.perhasta>=_anio*1000+_cuota
        and v.perdesde<=_anio*1000+_cuota and v.perhasta>=_anio*1000+_cuota
    Loop
        item_monto:=sam.uf_item_calcular(item_id,_anio,_cuota,montototal, 0, 0, 0);
        If (item_monto <> 0 ) Then
            Return next;
        End If;
    End Loop;
    
End
$$;


ALTER FUNCTION sam.uf_emision_manual(_trib_id integer, _anio integer, _cuota integer, _obj_id character varying, _subcta integer, _liq_id integer) OWNER TO postgres;

--
-- TOC entry 828 (class 1255 OID 5282823)
-- Name: uf_emision_masiva(integer, integer, integer, integer, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_emision_masiva(_trib_id integer, _anio integer, _cuota integer, _usr_id integer, _opcion character varying DEFAULT 'sinemision'::character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	vctacte_id integer;
    vttrib smallint;
    vtobj smallint;
    vobj_id varchar(8);
    vsubcta smallint;
    sql text;
    venc1 date;
    venc2 date;
    i integer;
    error smallint;
    cant integer;
BEGIN
	-- Verificar el tipo de tributo
	Select into vttrib, vtobj t.tipo, t.tobj from trib t where t.trib_id=_trib_id;
    if (vttrib<>1 and vttrib<>5 and _trib_id<>28)  then
    	RAISE EXCEPTION 'La función sólo es válida para tributos de tipo Emisión o Item x Objeto';
    end if;

    -- Verificar si está definida la fecha de vencimiento del período
    Select Into venc1, venc2 fchvenc1, fchvenc2
	  From trib_venc v Where v.trib_id=_trib_id and v.anio=_anio and v.cuota=_cuota;
    If (venc1 is null and venc2 is null) Then
	    RAISE EXCEPTION 'Error en las Fechas de Vencimiento del Período';
    End If;

	-- Emito
	i:= 0;
	For vobj_id, vsubcta In select o.obj_id,o.subcta
    from sam.uf_emision_sel(_trib_id,_anio,_cuota,_opcion) o Loop
      i = i + 1;
      Begin
    	vctacte_id = sam.uf_emision(_trib_id,_anio,_cuota,vobj_id,vsubcta,_usr_id);
		EXCEPTION
       	  WHEN OTHERS THEN
            --RAISE NOTICE 'NUM:%, DETAILS:%', obj_id, SQLERRM;
            error = cast(SQLERRM as smallint);
            Insert Into emision_err Values (_trib_id, vobj_id, vsubcta, _anio, _cuota, error);
	  End;
    End Loop;

    raise info 'Total de objeto emitidos: %',i;

End
$$;


ALTER FUNCTION sam.uf_emision_masiva(_trib_id integer, _anio integer, _cuota integer, _usr_id integer, _opcion character varying) OWNER TO postgres;

--
-- TOC entry 829 (class 1255 OID 5282825)
-- Name: uf_emision_rango(integer, character varying, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_emision_rango(_trib_id integer, _obj_id character varying, _perdesde integer, _perhasta integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
	venc date;
    vanio smallint;
    vcuota smallint;
Begin

	For vanio,vcuota,venc
    in Select v.anio,v.cuota,v.fchvenc1 from trib_venc v
    inner join inm_avaluo ia on v.anio*1000+v.cuota BETWEEN ia.perdesde and ia.perhasta
    where v.trib_id=_trib_id and ia.obj_id=_obj_id and ia.perdesde>=_perdesde and ia.perhasta<=_perhasta Loop

		perform sam.uf_emision(_trib_id,vanio,vcuota,_obj_id,0,100,0,1,venc,'','',0);

    End Loop;

End
$$;


ALTER FUNCTION sam.uf_emision_rango(_trib_id integer, _obj_id character varying, _perdesde integer, _perhasta integer) OWNER TO postgres;

--
-- TOC entry 832 (class 1255 OID 5282828)
-- Name: uf_emision_sel(integer, integer, integer, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_emision_sel(_trib_id integer, _anio integer, _cuota integer, _opcion character varying DEFAULT 'sinemision'::character varying) RETURNS TABLE(obj_id character varying, subcta integer)
    LANGUAGE plpgsql
    AS $$
DECLARE
    vttrib smallint;
    vtobj smallint;
    vinscrip_req smallint;
    vvenc date;
    vfiltro text;
    vuso_subcta smallint;
    sql text;
Begin
	-- Busco el filtro de la Resolución
    Select into vfiltro coalesce(r.filtro,'') from resol r
    where r.trib_id=_trib_id and _anio*1000+_cuota between r.perdesde and r.perhasta;

	if vfiltro like '%@anio%' Then vfiltro=replace(vfiltro,'@anio',_anio::text); End If;
	if vfiltro like '%@cuota%' Then vfiltro=replace(vfiltro,'@cuota',_cuota::text); End If;

	-- Busco datos del tributo
    Select into vttrib, vtobj, vinscrip_req, vuso_subcta t.tipo,t.tobj, t.inscrip_req, t.uso_subcta
    From trib t where t.trib_id=_trib_id;

	-- Busco el venc
    Select Into vvenc fchvenc1
    From trib_venc v Where v.trib_id=_trib_id and v.anio=_anio and v.cuota=_cuota;

	--1. Selecciono los objetos
    If (vtobj=1) Then
    	if vuso_subcta=1 Then 	-- INMUEBLE
            sql = 'Select distinct o.obj_id, coalesce(s.subcta,0) subcta
                   From objeto O Inner Join inm I on o.obj_id=i.obj_id
                   Left join osm s On o.obj_id=s.obj_id Left Join inm i On o.obj_id=i.obj_id ';
        else
            sql = 'Select distinct o.obj_id,0 subcta
                   From objeto O Inner Join inm I on o.obj_id=i.obj_id ';
		End If;

    Elseif (vtobj=2) Then	    -- COMERCIO
    	sql = 'Select distinct o.obj_id,0 subcta
        	From objeto o Inner join comer c on o.obj_id=c.obj_id ';

    Elseif (vtobj=3) Then	    -- PERSONA
    	sql = 'Select distinct o.obj_id,0 subcta From objeto o ';

    Elseif (vtobj=4) Then	    -- CEMENTERIO
    	sql = 'Select distinct o.obj_id, 0 subcta
        	From objeto o Inner Join cem e On o.obj_id=e.obj_id ';

    Elseif (vtobj=5) Then	    -- RODADO
    	sql = 'Select distinct o.obj_id, 0 subcta
        	From objeto o Inner Join rodado r On o.obj_id=r.obj_id and r.perini<='||_anio*1000+_cuota||' ';
        --sql = sql || 'Inner Join rodado_val v On v.anioval='||_anio||' and v.anio=r.anio ';
        --sql = sql || 'Inner join rodado_tcat tc on r.cat=tc.cod and tc.gru=v.gru ';

    Elseif (vtobj=6) Then	    -- TRANSPORTE
    	sql = 'Select distinct o.obj_id, 0 subcta
        	From objeto o Inner Join transporte t On o.obj_id=t.obj_id ';
	End If;

    -- 2. Para Item x Objeto hay que recuperar solo los objetos q tengan ese tipo de Item (4)
    If (vttrib = 5) Then
      sql = sql || 'Inner Join objeto_item oi On o.obj_id=oi.obj_id
      		Inner Join item i On oi.item_id=i.item_id and i.tipo=4 and i.trib_id='||_trib_id||
        	' and oi.perdesde<='||_anio*1000+_cuota||' And oi.perhasta>='||_anio*1000+_cuota||' ';
    End If;
    If (vinscrip_req=1) Then
    	sql = sql || 'Inner Join objeto_trib ot On o.obj_id=ot.obj_id and ot.trib_id='||_trib_id||
        	 ' and ot.perdesde<='||_anio*1000+_cuota||' And ot.perhasta>='||_anio*1000+_cuota||' ';
    End If;

	-- 3. ctacte
    sql = sql || 'Left Join ctacte cc On o.obj_id=cc.obj_id and cc.trib_id='||_trib_id||
    	  ' And cc.anio='||_anio||' and cc.cuota In (0, '||_cuota||') ';


    -- 4. Verificar segun opcion de Filtro de Emisión
    If (_opcion = 'nopagos') Then
        sql = sql || ' Where (cc.ctacte_id is null Or cc.est = '||chr(39)||'D'||chr(39)||') ';
    ElseIf (_opcion = 'reliq') Then
        sql = sql || ' Where cc.est = '||chr(39)||'P'||chr(39)||' ';
    ElseIf (_opcion = 'sinemision') Then
        sql = sql || 'Where (cc.ctacte_id is null) ';
    ElseIf (_opcion = 'debito') Then
    	sql = sql || 'Where o.obj_id in (select d.obj_id from debito_adhe d where d.trib_id='||_trib_id||
          ' and '||_anio*1000+_cuota||' between d.perdesde and d.perhasta and d.est='||chr(39)||'A'||chr(39)||')';
    Else
    	sql = sql || 'Left Join ctacte cc2 On o.obj_id=cc2.obj_id and cc2.trib_id='||_trib_id||
    	  ' And cc2.anio='||_anio||' and cc2.cuota =0 and cc2.est='||chr(39)||'P'||chr(39)||' ';
        sql = sql || 'Where (cc.ctacte_id is null Or cc.est in ('
        		||chr(39)||'B'||chr(39)||','||chr(39)||'D'||chr(39)||','||chr(39)||'P'||chr(39)||')) ';
        sql = sql || 'and cc2.ctacte_id is null';
    End If;

    -- 5. Establecer condición según Estado de Objeto
    sql = sql || ' And o.Est not in ('||chr(39)||'B'||chr(39)||','||chr(39)||'D'||chr(39)||')';

	-- 6. Verifico si hay definido filtro en la resolución
	If vfiltro<>'' Then sql = sql || ' And ' || vfiltro; End If;

	-- 7. Si es para multa por falta de presentación de DJ
   /* If aplica='MUL' Then
     	sql = sql || ' And rpc= 1 and  '||_anio*1000+_cuota||' between rpcdesde and rpchasta and tipoliq=' || chr(39)||'LO'|| chr(39);
    End If;*/

    -- 8. Descarto los casos con excepción
    sql = sql || ' And o.obj_id not in (select obj_id from ctacte_excep e
			where e.trib_id=' || _trib_id || ' and e.tipo=5 and e.fchlimite<' || chr(39)|| vvenc || chr(39) || ');';


    -- Ejemplo de Filtros:
    -- ==================
    -- OSM: i.serv>0 and i.tinm<>9
    -- RPC: c.rpc=1  (usar aplica='RPC')
    -- RODADO: ((not r.cat in (10,11)) or (r.cat in (10,11) and @anio-r.anio<20))

    Return Query Execute sql;

End
$$;


ALTER FUNCTION sam.uf_emision_sel(_trib_id integer, _anio integer, _cuota integer, _opcion character varying) OWNER TO postgres;

--
-- TOC entry 830 (class 1255 OID 5282830)
-- Name: uf_emision_sem(integer, character varying, integer, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_emision_sem(_trib_id integer, _obj_id character varying, _subcta integer, _anio integer, _sem integer, _usr_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
	vctacte_id integer;
    vcuota smallint;
    vcuota_ini smallint;
    venc1 date;
    vdesc1 decimal(9,2);
BEGIN
	-- 1 - Determino la cuota
    vcuota=60 + _sem;
    vcuota_ini = _sem * 3 - 2;

    -- 2 - Obtengo el vencimiento para el Tributo en el semestre
    Select Into venc1 fchvenc1
    From trib_venc v Where v.trib_id=_trib_id and v.anio=_anio and v.cuota=vcuota;

	-- 3 - Verificar si hay emision semestral previa y eliminar
	Select Into vctacte_id coalesce(c.ctacte_id,0) From ctacte c
    left join ctacte_sem s on c.ctacte_id=s.ctacte_id
    Where c.trib_id=_trib_id and c.obj_id=_obj_id and c.subcta=_subcta and c.anio=_anio and s.cuota=vcuota;
	If (vctacte_id > 0) Then
		Delete From ctacte_sem s Where s.ctacte_id=vctacte_id;
    End If;

	-- 4 - Obtengo el descuento 
	Select into vdesc1 coalesce(d.desc1,0) from calc_desc d 
    Where d.trib_id=_trib_id and _anio*1000+vcuota between d.perdesde and d.perhasta;
	If vdesc1<>0 Then 
    	vdesc1=vdesc1/100;
    Else
    	vdesc1=0;
    End If;
	
	-- 5 insertar en tabla ctacte_sem
	Insert into ctacte_sem
    Select c.ctacte_id, vcuota, Round(c.nominal*3*vdesc1,2) as desc, round(c.nominal*3 - round(c.nominal*3*vdesc1,2),2)  as monto,
    venc1, current_timestamp, _usr_id
    From ctacte c
    where c.trib_id=_trib_id and c.obj_id=_obj_id and c.subcta=_subcta and c.anio=_anio and c.cuota=vcuota_ini;

	Return 0;
End
$$;


ALTER FUNCTION sam.uf_emision_sem(_trib_id integer, _obj_id character varying, _subcta integer, _anio integer, _sem integer, _usr_id integer) OWNER TO postgres;

--
-- TOC entry 833 (class 1255 OID 5282831)
-- Name: uf_emision_sem_masiva(integer, integer, integer, integer, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_emision_sem_masiva(_trib_id integer, _anio integer, _sem integer, _usr_id integer, _opcion character varying DEFAULT 'todos'::character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	vctacte_id integer;
    vttrib smallint;
    sql text;
    vobj_id varchar(8);
    vsubcta smallint;
    venc1 date;
    vcuota smallint;
    vcuota_ini smallint;
    i integer;
    error smallint;
BEGIN
 	-- Determino la cuota
    vcuota=60 + _sem;
    vcuota_ini = _sem * 3 - 2;

	-- Verificar el tipo de tributo
	Select into vttrib t.tipo from trib t where t.trib_id=_trib_id;
    if (vttrib<>1)  then
    	RAISE EXCEPTION 'La función sólo es válida para tributos de tipo Emisión';
    end if;

    -- Verificar si está definida la fecha de vencimiento del período
    Select Into venc1 fchvenc1
	  From trib_venc v Where v.trib_id=_trib_id and v.anio=_anio and v.cuota=vcuota;
    If (venc1 is null) Then
	    RAISE EXCEPTION 'No está definida la Fecha de Vencimiento del Período';
    End If;

	-- Emito, seleccionando los objetos según la cuota que corresponde
	i:= 0;
	For vobj_id, vsubcta In select o.obj_id,o.subcta
    from sam.uf_emision_sel(_trib_id,_anio,vcuota_ini,_opcion) o Loop
      i = i + 1;
      Begin
    	vctacte_id = sam.uf_emision_sem(_trib_id,vobj_id,vsubcta,_anio,_sem,_usr_id);
	  End;
    End Loop;

    raise info 'Total de objeto emitidos: %',i;

End
$$;


ALTER FUNCTION sam.uf_emision_sem_masiva(_trib_id integer, _anio integer, _sem integer, _usr_id integer, _opcion character varying) OWNER TO postgres;

--
-- TOC entry 834 (class 1255 OID 5282832)
-- Name: uf_emision_sem_xml(character varying, character varying, integer, integer, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_emision_sem_xml(_cond character varying, _orden character varying, _trib_id integer, _tobj integer, _filadesde integer, _filahasta integer, _usr_id integer) RETURNS TABLE(str_xml xml)
    LANGUAGE plpgsql
    AS $$
DECLARE
 vcant integer;
 vtobj integer;
 letraobj varchar;
 vttrib integer;
 vanio integer;
 vcuota integer;
 sql varchar;
 sqlObjeto varchar;
 sqlCtaCte varchar;
 sqlLiquidacion varchar;
 sqlCuota varchar;
 sqlDatosGrales varchar;
 BEGIN
 --Obtengo el tipo de objeto y tipo tributo
 select into vtobj,vttrib t.tobj,t.tipo from trib t where t.trib_id=_trib_id;
 select into letraObj t.letra from objeto_tipo t where t.cod=vtobj;
 select into vanio, vcuota min(e.anio), min(e.cuota) from temp.emi e where e.usr_id=_usr_id
 	and e.fila between _filadesde and _filahasta;

 --Genero el temporal de objetos y ctacte_id a imprimir
 sqlObjeto = 'Select obj_id from temp.emi where usr_id=' || _usr_id;
 sqlObjeto = sqlObjeto || ' and fila between ' || _filadesde || ' and ' || _filahasta;

 sqlCtaCte = 'Select ctacte_id from temp.emi where usr_id=' || _usr_id;
 sqlCtaCte = sqlCtaCte || ' and fila between ' || _filadesde || ' and ' || _filahasta;

  --SubInforme 1 - Emisión
 sqlLiquidacion = 'select XMLAgg(xmlelement(name items, xmlforest(ctacte_id,item_id, item_nom,item_monto)))';
 sqlLiquidacion = sqlLiquidacion || 'From (select l.ctacte_id,l.item_id, l.item_nom,l.item_monto ';
 sqlLiquidacion = sqlLiquidacion || 'from V_Emision_Liq l where l.ctacte_id=c.ctacte_id ';
 sqlLiquidacion = sqlLiquidacion || ' and l.ctacte_id in (' || sqlCtaCte || ') order by l.item_id asc) as i';

--SubInforme 2 - Objeto
if (vtobj=1) then
 sqlDatosGrales = 'select XMLAgg(xmlelement(name objeto,';
 sqlDatosGrales = sqlDatosGrales || 'xmlforest(c.ctacte_id,o.obj_id,o.nombre,o.dompar_dir,o.parp,o.s1,o.s2,o.s3,o.manz,';
 sqlDatosGrales = sqlDatosGrales || 'o.parc,o.regimen_nom,o.zonat_nom,';
 sqlDatosGrales = sqlDatosGrales || 'o.coef,o.valbas,o.frente,o.supt,o.supm,o.avalt,o.avalm,o.barr_nom,o.comprador)))';
 --sqlDatosGrales = sqlDatosGrales || ' From v_inm o Where o.obj_id=c.obj_id and obj_id in (' || sqlObjeto || ')';
 sqlDatosGrales = sqlDatosGrales || ' From v_inm o Where o.obj_id=c.obj_id ';
end if;

if vtObj=2 then
 sqlDatosGrales = 'select XMLAgg(xmlelement(name objeto,';
 sqlDatosGrales = sqlDatosGrales || 'xmlforest(c.ctacte_id,o.obj_id,o.nombre,o.iva_nom,o.cuit,o.tipo_nom,';
 sqlDatosGrales = sqlDatosGrales || 'o.sinlocal,s.cantemple,s.fchvenchab,s.sup)))';
 sqlDatosGrales = sqlDatosGrales || ' From v_comer o left join comer_suc s on o.obj_id= s.obj_id and s.subcta= c.subcta Where c.obj_id=o.obj_id';
 end if;

if (vtobj=4) then
 sqlDatosGrales = 'select XMLAgg(xmlelement(name objeto,';
 sqlDatosGrales = sqlDatosGrales || 'xmlforest(c.ctacte_id,o.obj_id,o.cod_ant,o.cuadro_id,o.cuerpo_id,tc.nombre as tipo_nom,';
 sqlDatosGrales = sqlDatosGrales || 'o.piso,o.fila,o.nume,o.cat,g.nombre as deleg_nom,COALESCE(to_char(o.fchingreso,'|| chr(39) || 'dd/mm/yyyy'|| chr(39) || '),'|| chr(39) || chr(39) ||') as fchingreso,COALESCE(to_char(o.fchvenc,'|| chr(39) || 'dd/mm/yyyy'|| chr(39) || '),'|| chr(39) || chr(39) ||') as fchvenc)))';
 sqlDatosGrales = sqlDatosGrales || ' From cem o LEFT JOIN cem_tdeleg g ON o.deleg = g.cod ';
 sqlDatosGrales = sqlDatosGrales || ' LEFT JOIN cem_tipo tc ON o.tipo = tc.cod Where o.obj_id=c.obj_id ';
end if;

if (vtobj=5) then
 sqlDatosGrales = 'select XMLAgg(xmlelement(name objeto,';
 sqlDatosGrales = sqlDatosGrales || 'xmlforest(c.ctacte_id,o.obj_id,o.per_ini,o.tliq,o.aforo_modelo,o.marca_nom,';
 sqlDatosGrales = sqlDatosGrales || 'o.cat_nom,o.modelo_nom,o.anio,o.dominio,o.nromotor,o.nrochasis,o.peso,';
 sqlDatosGrales = sqlDatosGrales || 'o.cilindrada,o.deleg_nom,o.fchcompra)))';
 sqlDatosGrales = sqlDatosGrales || ' From v_rodado o Where o.obj_id=c.obj_id ';
end if;

 --SubInforme 3 - Cuotas
 sqlCuota = 'select XMLAgg(xmlelement(name cuotas,';
 sqlCuota = sqlCuota || 'xmlforest(trib_nom,obj_id,subcta,num,num_nom,domi,codpos,ctacte_id,';
 sqlCuota = sqlCuota || 'anio,cuota,venc1,venc2,monto,montovenc1,montovenc2,monto-montovenc1 as descvenc1,codbarra,codbarra_128c))) ';
 sqlCuota = sqlCuota || 'From (Select distinct e.trib_nom,e.obj_id,e.subcta,e.num,e.num_nom,e.domi,e.codpos,e.ctacte_id,';
 sqlCuota = sqlCuota || 'e.anio,e.cuota,e.venc1,e.venc2,e.monto,e.montovenc1,e.montovenc2,e.codbarra,e.codbarra_128c ';
 sqlCuota = sqlCuota || 'From v_emision_print_sem e where e.obj_id=c.obj_id and e.obj_id in (' || sqlObjeto || ') ';
 sqlCuota = sqlCuota || 'and e.anio='|| vanio ||' and e.cuota between '|| vcuota ||' and '|| vcuota+2;
 sqlCuota = sqlCuota || ' order by e.obj_id, e.cuota desc) as u';

 --Efectúo la búsqueda
 sql = 'select xmlelement(name emision, xmlforest(c.ctacte_id,c.trib_id,c.trib_nom,c.trib_tipo,c.trib_calc_rec,';
 sql = sql || 'c.obj_id,c.tobj,c.codigolink,sam.uf_code128c(c.codigolink) as codigolinkbarra, c.subcta,c.anio,c.cuota,c.fchemi,c.num,c.num_nom,c.distrib,c.distrib_nom,';
 sql = sql || 'c.domi,c.domi_det,c.codpos,coalesce(c.monto,0) as monto,coalesce(c.nominalcub,0) as nominalcub,c.montovenc1,';
 sql = sql || 'c.montovenc2,coalesce(c.montoanual,0) as montoanual,c.descanual,c.venc1,c.venc2,coalesce(c.vencanual,current_date) as vencanual,c.genestcta,c.mensaje,c.titulo_msj,';
 sql = sql || 'c.expe,c.codbarra,c.codbarra_128c,c.codbarraanual,c.codbarraanual_128c,coalesce(c.codbarrasem,' || chr(39) || chr(39) || '),coalesce(c.codbarrasem_128c,' || chr(39) || chr(39) || '),';
 sql = sql || 'coalesce(c.descsem,0) as descsem,coalesce(c.montosem,0) as montosem,coalesce(c.vencsem,current_date) as vencsem,c.est,';
 sql = sql || 'c.fila,' || chr(39) || letraobj || chr(39) || ' as letraobj),(' || sqlLiquidacion || '),(' || sqlDatosGrales || '),(' || sqlCuota || ')';
 sql = sql || ' ) from v_emision_print_sem c Where usr_id=' || _usr_id;
 sql = sql || ' and fila between ' || _filadesde || ' and ' || _filahasta;
 sql = sql || ' order by fila ' ;

 -- SELECT into str_xml query_to_xml(sql,FALSE,FALSE,'Emision');
 raise notice '%',letraobj;
 for str_xml in EXECUTE sql
 loop
 return next;
 end loop;

END;
$$;


ALTER FUNCTION sam.uf_emision_sem_xml(_cond character varying, _orden character varying, _trib_id integer, _tobj integer, _filadesde integer, _filahasta integer, _usr_id integer) OWNER TO postgres;

--
-- TOC entry 835 (class 1255 OID 5282834)
-- Name: uf_emision_xml(character varying, character varying, integer, integer, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_emision_xml(_cond character varying, _orden character varying, _trib integer, _tobj integer, _filadesde integer, _filahasta integer, _usr integer) RETURNS TABLE(str_xml xml)
    LANGUAGE plpgsql
    AS $$
DECLARE
 cant integer;
 vtObj integer;
 letraObj varchar;
 tTrib integer;
 sql varchar;
 sqlObjeto varchar;
 sqlCtaCte varchar;
 sqlLiquidacion varchar;
 sqlDatosGrales varchar;
 sqlInmMej varchar;
 sqlInmOsm varchar;
 sqlComRubro varchar;
 sqlEstadoCta varchar;
 BEGIN
 --Obtengo el tipo de objeto y tipo tributo
 select into vtObj,tTrib t.tobj,t.tipo from trib t where t.trib_id=_trib;
 select into letraObj t.letra from objeto_tipo t where t.cod=vtobj;

 --Genero el temporal de objetos y ctacte_id a imprimir
 sqlObjeto = 'Select obj_id from temp.emi where usr_id=' || _usr;
 sqlObjeto = sqlObjeto || ' and fila between ' || _filadesde || ' and ' || _filahasta;

 sqlCtaCte = 'Select ctacte_id from temp.emi where usr_id=' || _usr;
 sqlCtaCte = sqlCtaCte || ' and fila between ' || _filadesde || ' and ' || _filahasta;

 --SubInforme 1 - Emisión
 sqlLiquidacion = 'select XMLAgg(xmlelement(name items, xmlforest(ctacte_id,item_id, item_nom,item_monto)))';
 sqlLiquidacion = sqlLiquidacion || 'From (select l.ctacte_id,l.item_id, l.item_nom,l.item_monto ';
 sqlLiquidacion = sqlLiquidacion || 'from V_Emision_Liq l where l.ctacte_id=c.ctacte_id ';
 sqlLiquidacion = sqlLiquidacion || ' and l.ctacte_id in (' || sqlCtaCte || ') order by l.item_id asc) as i';

 --SubInforme 2 - Objeto
 if vtObj=1 then
 sqlDatosGrales = 'select XMLAgg(xmlelement(name objeto,';
 sqlDatosGrales = sqlDatosGrales || 'xmlforest(c.ctacte_id,o.obj_id,o.nombre,o.dompar_dir,o.parp,o.s1,o.s2,o.s3,o.manz,';
 sqlDatosGrales = sqlDatosGrales || 'o.parc,o.regimen_nom,o.zonat_nom,o.serv_nom,';
 sqlDatosGrales = sqlDatosGrales || 'o.coef,o.valbas,o.frente,o.supt,o.supm,o.avalt,o.avalm,o.barr_nom,o.comprador)))';
 --sqlDatosGrales = sqlDatosGrales || ' From v_inm o Where o.obj_id=c.obj_id and obj_id in (' || sqlObjeto || ')';
 sqlDatosGrales = sqlDatosGrales || ' From v_inm o Where o.obj_id=c.obj_id ';
 end if;

 if vtObj=2 then
 sqlDatosGrales = 'select XMLAgg(xmlelement(name objeto,';
 sqlDatosGrales = sqlDatosGrales || 'xmlforest(c.ctacte_id,o.obj_id,o.nombre,o.iva_nom,o.cuit,o.tipo_nom,';
 sqlDatosGrales = sqlDatosGrales || 'o.sinlocal,s.cantemple,s.fchvenchab,s.sup)))';
 sqlDatosGrales = sqlDatosGrales || ' From v_comer o left join comer_suc s on o.obj_id= s.obj_id and s.subcta= c.subcta Where c.obj_id=o.obj_id';
 end if;

 if vtObj=4 then
 sqlDatosGrales = 'select XMLAgg(xmlelement(name objeto,';
 sqlDatosGrales = sqlDatosGrales || 'xmlforest(c.ctacte_id,o.obj_id,o.cod_ant,o.cuadro_id,o.cuerpo_id,tc.nombre as tipo_nom,';
 sqlDatosGrales = sqlDatosGrales || 'o.piso,o.fila,o.nume,o.cat,g.nombre as deleg_nom,o.fchingreso,to_char(o.fchvenc,'|| chr(39) || 'dd/mm/yyyy'|| chr(39) || ') as fchvenc)))';
 sqlDatosGrales = sqlDatosGrales || ' From cem o LEFT JOIN cem_tdeleg g ON o.deleg = g.cod ';
 sqlDatosGrales = sqlDatosGrales || ' LEFT JOIN cem_tipo tc ON o.tipo = tc.cod Where o.obj_id=c.obj_id ';
 end if;

 if vtObj=5 then
 sqlDatosGrales = 'select XMLAgg(xmlelement(name objeto,';
 sqlDatosGrales = sqlDatosGrales || 'xmlforest(c.ctacte_id,o.obj_id,o.per_ini,o.tliq,o.aforo_modelo,o.marca_nom,';
 sqlDatosGrales = sqlDatosGrales || 'o.cat_nom,o.modelo_nom,o.anio,o.dominio,o.nromotor,o.nrochasis,o.peso,';
 sqlDatosGrales = sqlDatosGrales || 'o.cilindrada,o.deleg_nom,o.fchcompra)))';
 sqlDatosGrales = sqlDatosGrales || ' From v_rodado o Where o.obj_id=c.obj_id ';
 end if;

 --SubInforme 3 - Otros datos
 sqlInmOsm='';
 sqlInmMej='';
 sqlComRubro='';
 if vtObj=1 then
 if _trib=13 THEN
 sql='select count(*) from From v_inm_osm osm ';
 sql = sql || ' Left Join v_osm_consumo con On os.obj_id=con.obj_id and osm.subcta=con.subcta ';
 sql = sql || ' and e.anio=con.anio and e.cuota=con.cuota ';
 sql = sql || 'Where o.obj_id in(' || sqlObjeto || ')';

 execute sql into cant;

 if cant <> 0 then
 sqlInmOsm='select XMLAgg(xmlelement(name inm_osm,';
 sqlInmOsm = sqlInmOsm || 'xmlforest(c.ctacte_id,osm.obj_id, osm.subcta, osm.ctaosm,osm.tliq, osm.tliq_nom, osm.nummedidor, con.fchlect,';
 sqlInmOsm = sqlInmOsm || 'con.tlect_nom, con.lect_ant, con.lect_act, coalesce(con.consumo,0) as consumo)))';
 sqlInmOsm = sqlInmOsm || ' From v_inm_osm osm Left Join v_osm_consumo con On os.obj_id=con.obj_id and osm.subcta=con.subcta and e.anio=con.anio and e.cuota=con.cuota';
 --sqlInmOsm = sqlInmOsm || ' Where osm.obj_id in(' || sqlObjeto || ')';
 sqlInmOsm = sqlInmOsm || ' Where osm.obj_id=c.obj_id';
 end if;
 else
 sql='select count(*) From v_inm_mej m Where m.obj_id in(' || sqlObjeto || ')';

 execute sql INTO cant;

 if cant <> 0 THEN
 sqlInmMej='select XMLAgg(xmlelement(name inm_mej,';
 sqlInmMej = sqlInmMej || 'xmlforest(c.ctacte_id,m.obj_id,m.pol,m.nivel,m.tdest_nom,m.tobra_nom,m.anio,m.est_nom,';
 sqlInmMej = sqlInmMej || 'm.supcub,m.supsemi,m.cat,m.estado)))';
 sqlInmMej = sqlInmMej || ' From v_inm_mej m ';
 --sqlInmMej = sqlInmMej || ' Where m.obj_id in(' || sqlObjeto || ')';
 sqlInmMej = sqlInmMej || ' Where m.obj_id=c.obj_id';
 end if;
 end if;
 if sqlInmMej = '' then
 sqlInmMej='select XMLAgg(xmlelement(name inm_mej,';
 sqlInmMej = sqlInmMej || 'xmlforest(' || chr(39) || chr(39) || ' as ctacte_id,' || chr(39) || chr(39) || ' as obj_id,';
 sqlInmMej = sqlInmMej || chr(39) || chr(39) || ' as pol,' || chr(39) || chr(39) || ' as nivel,';
 sqlInmMej = sqlInmMej || chr(39) || chr(39) || ' as tdest_nom,' || chr(39) || chr(39) || ' as tobra_nom,';
 sqlInmMej = sqlInmMej || chr(39) || chr(39) || ' as anio,' || chr(39) || chr(39) || ' as est_nom,';
 sqlInmMej = sqlInmMej || chr(39) || chr(39) || ' as supcub,' || chr(39) || chr(39) || ' as supsemi,';
 sqlInmMej = sqlInmMej || chr(39) || chr(39) || ' as cat,' || chr(39) || chr(39) || ' as estado)))';
 end if;
 if sqlInmOsm = '' then
 sqlInmOsm='select XMLAgg(xmlelement(name inm_osm,';
 sqlInmOsm = sqlInmOsm || 'xmlforest(' || chr(39) || chr(39) || ' as ctacte_id,' || chr(39) || chr(39) || ' as obj_id,';
 sqlInmOsm = sqlInmOsm || chr(39) || chr(39) || ' as subcta,' || chr(39) || chr(39) || ' as ctaosm,';
 sqlInmOsm = sqlInmOsm || chr(39) || chr(39) || ' as tliq,';
 sqlInmOsm = sqlInmOsm || chr(39) || chr(39) || ' as tliq_nom,' || chr(39) || chr(39) || ' as nummedidor,';
 sqlInmOsm = sqlInmOsm || chr(39) || chr(39) || ' as fchlect,' || chr(39) || chr(39) || ' as tlect_nom,';
 sqlInmOsm = sqlInmOsm || chr(39) || chr(39) || ' as lect_ant,' || chr(39) || chr(39) || ' as lect_act,';
 sqlInmOsm = sqlInmOsm || chr(39) || chr(39) || ' as consumo)))';
 end if;
 elseif vtObj=2 then
 sqlComRubro ='select XMLAgg(xmlelement(name comer_rubro,';
 sqlComRubro = sqlComRubro || 'xmlforest(c.ctacte_id,r.obj_id,r.rubro_nom,r.perdesde,';
 sqlComRubro = sqlComRubro || 'r.tipo_nom,r.est)))';
 sqlComRubro = sqlComRubro || ' From v_objeto_rubro r ';
 sqlComRubro = sqlComRubro || ' Where c.obj_id=r.obj_id ';
 sqlComRubro = sqlComRubro || ' and c.anio*100+cuota between r.nperdesde and r.nperhasta';
 end if;


 --Subinforme de Estado de Cuenta
 sqlEstadoCta='select XMLAgg(xmlelement(name estadocta,';
 sqlEstadoCta = sqlEstadoCta || 'xmlforest(ctacte_id,trib_id,obj_id,anio,detalle,total)))';
 sqlEstadoCta = sqlEstadoCta || ' From (SELECT DISTINCT ec.trib_id,ec.obj_id,ec.anio,ec.detalle,ec.total';
 sqlEstadoCta = sqlEstadoCta || ' from temp.ctacte_est_deuda ec ';
 sqlEstadoCta = sqlEstadoCta || ' Inner Join temp.emi te On ec.trib_id=te.trib_id and ec.obj_id=te.obj_id and ec.subcta=te.subcta  ';
 sqlEstadoCta = sqlEstadoCta || ' Where c.obj_id=ec.obj_id and c.trib_id=ec.trib_id order by ec.anio) as estadocta ';
 -- sqlEstadoCta = sqlEstadoCta || ' Order By  ec.trib_id,ec.obj_id,ec.subcta,ec.anio';

 --Efectúo la búsqueda
 sql = 'select xmlelement(name emision, xmlforest(c.ctacte_id,c.trib_id,c.trib_nom,c.trib_tipo,c.trib_calc_rec,';
 sql = sql || 'c.obj_id,c.tobj,c.codigolink,c.subcta,c.anio,c.cuota,c.fchemi,c.num,c.num_nom,c.distrib,c.distrib_nom,';
 sql = sql || 'c.domi,c.domi_det,c.codpos,coalesce(c.monto,0) as monto,coalesce(c.nominalcub,0) as nominalcub,c.montovenc1,c.montovenc2,coalesce(c.montoanual,0) as montoanual,c.descanual,';
 sql = sql || 'c.venc1,c.venc2,c.vencanual,c.genestcta,c.mensaje,c.titulo_msj,c.expe,c.codbarra,c.codbarra_128c,';
 sql = sql || 'c.codbarraanual,c.codbarraanual_128c,c.est,c.fila,' || chr(39) || letraObj || chr(39) || ' as letraobj),(' || sqlLiquidacion || '),(' || sqlDatosGrales || ')';
 if vtobj=1 then
 sql = sql || ',(' || sqlInmOsm || '),(' || sqlInmMej || ')';
 elseif vtobj=2 then
 sql = sql || ',(' || sqlComRubro || ')';
 end if;
 sql = sql || ',(' || sqlEstadoCta || ')) from v_emision_print c Where usr_id=' || _usr;
 sql = sql || ' and fila between ' || _filadesde || ' and ' || _filahasta;
 sql = sql || ' order by fila ' ;

 --SELECT into str_xml query_to_xml(sql,FALSE,FALSE,'Emision');
raise notice '%',sql;
 for str_xml in EXECUTE sql
 loop
 return next;
 end loop;

END;
$$;


ALTER FUNCTION sam.uf_emision_xml(_cond character varying, _orden character varying, _trib integer, _tobj integer, _filadesde integer, _filahasta integer, _usr integer) OWNER TO postgres;

--
-- TOC entry 836 (class 1255 OID 5282836)
-- Name: uf_esta_buenc(integer, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_esta_buenc(_perdesde integer, _perhasta integer, _pagotermino integer, _noconvenio integer) RETURNS TABLE(num character varying, nombre character varying, dompos_dir character varying, cantimpo smallint)
    LANGUAGE plpgsql
    AS $$
Declare
  ssql varchar(250);
  cant integer;
  cantpag integer;
  cantpagter integer;
  cantdeu integer;
  cantplan integer;
  vnum varchar;
Begin

    cant=0;

    For num, cantpag, cantpagter, cantplan, cantdeu, cantimpo, nombre
    In Select o.num, sum(case when c.est='P' then 1 else 0 end),
    sum(case when c.est='P' and c.fchpago<=c.fchvenc then 1 else 0 end), -- periodos pagos en termino
    sum(case when c.est='C' then 1 else 0 end),
    sum(case when c.est not in ('P','C') then 1 else 0 end), -- periodos en deuda
    count(distinct c.obj_id), -- cant_impo
    o.nombre
    From ctacte c inner join objeto o on c.obj_id=o.obj_id
    inner join trib t on c.trib_id=t.trib_id
    Where t.tipo in (1,2,3,4) and c.anio*1000+c.cuota Between _perdesde and _perhasta and c.est<>'B' and o.est='A'
    Group By o.num, o.nombre Loop
        If (cantdeu = 0) Then  -- Filtro primero periodos en deuda
            cant:=0;
            vnum = num;
            If (_noconvenio=1) Then  -- Filtro segun noconvenio
                Select Into cant count(*)
                From ctacte c Inner Join plan_periodo p on c.ctacte_id=p.ctacte_id
                inner join objeto o on c.obj_id=o.obj_id
                Where o.num=vnum and c.anio*1000+c.cuota Between _perdesde and _perhasta;

                cant := cant + cantplan;
            End If;

            If (cant = 0) Then
                If (_pagotermino=0 or (_pagotermino=1 and cantpag=cantpagter)) Then
                    Select Into dompos_dir d.direccion
                    From v_domi d Where d.torigen='OBJ' and d.obj_id=vnum;

                    Return Next;
                End If;
            End If;

        End If;
    End Loop;

End
$$;


ALTER FUNCTION sam.uf_esta_buenc(_perdesde integer, _perhasta integer, _pagotermino integer, _noconvenio integer) OWNER TO postgres;

--
-- TOC entry 837 (class 1255 OID 5282837)
-- Name: uf_esta_buenc_trib(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_esta_buenc_trib(_trib_id integer, _perdesde integer, _perhasta integer, _pagotermino integer, _noconvenio integer) RETURNS TABLE(obj_id character varying, nombre character varying, dompos_dir character varying)
    LANGUAGE plpgsql
    AS $$
Declare
  ssql varchar(250);
  cant smallint;
  cantpag smallint;
  cantpagter smallint;
  cantdeu smallint;
  cantplan smallint;
  vobj_id varchar;
Begin

  cant=0;

  For obj_id, cantpag, cantpagter, cantplan, cantdeu, nombre
      In Select c.obj_id, sum(case when c.est='P' then 1 else 0 end),
        sum(case when c.est='P' and c.fchpago<=c.fchvenc then 1 else 0 end), -- periodos pagos en termino
          sum(case when c.est='C' then 1 else 0 end),
        sum(case when c.est not in ('P','C') then 1 else 0 end), -- periodos en deuda
          o.nombre
      From ctacte c inner join objeto o ON c.obj_id=o.obj_id 
      Where c.trib_id = _trib_id and c.anio*1000+c.cuota Between _perdesde and _perhasta and c.est<>'B' and o.est='A'
      Group By c.obj_id, o.nombre
    Loop
        If (cantdeu = 0) Then  -- Filtro primero periodos en deuda
        cant:=0;
            vobj_id = obj_id;
            If (_noconvenio=1) Then  -- Filtro segun noconvenio
                Select Into cant count(*) From ctacte c Inner Join plan_periodo p on c.ctacte_id=p.ctacte_id
                Where c.obj_id=vobj_id and c.anio*1000+c.cuota Between _perdesde and _perhasta;

                cant := cant + cantplan;
            End If;

            If (cant = 0) Then
                If (_pagotermino=0 or (_pagotermino=1 and cantpag=cantpagter)) Then
                    Select Into dompos_dir d.direccion
                    From v_domi d Where d.torigen='OBJ' and d.obj_id=vobj_id;

              Return Next;
                End If;
            End If;

        End If;
    End Loop;

End
$$;


ALTER FUNCTION sam.uf_esta_buenc_trib(_trib_id integer, _perdesde integer, _perhasta integer, _pagotermino integer, _noconvenio integer) OWNER TO postgres;

--
-- TOC entry 838 (class 1255 OID 5282838)
-- Name: uf_esta_compara(integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_esta_compara(_trib_id integer, _aniocuota1 integer, _aniocuota2 integer) RETURNS TABLE(tipo character varying, cant integer, montoviejo numeric, montonuevo numeric, dif numeric)
    LANGUAGE plpgsql
    AS $_$
Begin

    -- Compara dos perÃ­odos de emisiÃ³n de un Tributo (Mantienen, Bajan, Suben).
    RETURN QUERY
	Select
        case when c2.nominal=0 then '1. EXENTO'::varchar
           when c2.nominal<c1.nominal/1.10 then '2. BAJAN'::varchar
           when c2.nominal between c1.nominal/1.10 and c1.nominal*1.10 then '3. MANTIENEN'::varchar
           when c2.nominal>c1.nominal*1.10 and c2.nominal-c1.nominal<=10 then '4. SUBEN $  1 a $ 10'::varchar
           when c2.nominal>c1.nominal*1.10 and c2.nominal-c1.nominal between 10.01 and 50 then '5. SUBEN $  10 a $  50'::varchar
           when c2.nominal>c1.nominal*1.10 and c2.nominal-c1.nominal between 50.01 and 100 then '6. SUBEN $  50 a $ 100'::varchar
           when c2.nominal>c1.nominal*1.10 and c2.nominal-c1.nominal between 100.01 and 500 then '7. SUBEN $ 100 a $ 500'::varchar
           when c2.nominal>c1.nominal*1.10 and c2.nominal-c1.nominal > 500 then '8. SUBEN Más de $500'::varchar end as _tipo,
        Sum(1)::integer as _cant, sum(c1.nominal) as _montoviejo, sum(c2.nominal) as _montonuevo,
        sum(c2.nominal-c1.nominal) as Dife
    from ctacte c1
    inner join ctacte c2 ON c1.trib_id=c2.trib_id and c1.obj_id=c2.obj_id
    where c1.trib_id=_trib_id
        and c1.anio*1000+c1.cuota=_aniocuota1
        and c2.anio*1000+c2.cuota=_aniocuota2
    group by _tipo order by _tipo;

End
$_$;


ALTER FUNCTION sam.uf_esta_compara(_trib_id integer, _aniocuota1 integer, _aniocuota2 integer) OWNER TO postgres;

--
-- TOC entry 5675 (class 0 OID 0)
-- Dependencies: 838
-- Name: FUNCTION uf_esta_compara(_trib_id integer, _aniocuota1 integer, _aniocuota2 integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_esta_compara(_trib_id integer, _aniocuota1 integer, _aniocuota2 integer) IS 'Compara dos perÃ­odos de emisiÃ³n de un Tributo (Mantienen, Bajan, Suben)';


--
-- TOC entry 840 (class 1255 OID 5282840)
-- Name: uf_esta_deuda_cem_arren(character varying, date, date, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_esta_deuda_cem_arren(_tipo character varying, _desde date, _hasta date, _fecha date) RETURNS TABLE(anio smallint, cant smallint, accesor numeric, total numeric)
    LANGUAGE plpgsql
    AS $$
declare
  vobj_id varchar(8);
  vcuadro varchar(3);
  v3333 smallint;
  anio_a smallint;
  venc_suma smallint;
  accesor_a numeric(12,2);
  anio_calc smallint;
  nominal_anual numeric(12,2);
  accesor_anual numeric(12,2);
  vfchvenc date;
begin
    -- Este procedimiento devuelve el estado de deuda de planes vigentes.
    -- PARAMETROS: Tipo: Tipo de Sepultura (1: Panteon, 2:Nicho, 4:Fosa)
    --             Desde, Hasta: Rango de fechas de vencimiento.
    --             Fecha: Fecha de cálculo de interés por mora
    -- SALIDA:     Anio: Período
    --             Cant: Cantidad de Periodos.
    --             Nominal, Accesor y Total: Importe de la Deuda

    anio=0;

    --if (:Tipo = 1 or :Tipo = 4) then begin -- cálculo para Panteones y Fosas
      For vobj_id, anio_a, vfchvenc
      In Select e.obj_id, extract(year from e.fchvenc), e.fchvenc
        From cem e
        Inner Join objeto o on e.obj_id = o.obj_id
        Inner Join cem_talq a On e.tipo = a.tipo
           and e.fchvenc >= a.desde and e.fchvenc <= a.hasta
           and ((e.cuadro_id between a.cuadrodesde and a.cuadrohasta) or (a.cuadrodesde='' and a.cuadrohasta=''))
           and ((e.fila = a.fila) or a.fila='')
        Where e.tipo = _tipo and e.fchvenc > _desde and e.fchvenc <= _hasta
	       and o.est in ('O','R','U')  -- Sólo Ocupados, Reservados o Unificados
        Order By extract(year from e.fchvenc), e.obj_id
      Loop

        accesor_a:= sam.uf_calc_accesor(8,vobj_id,0,anio_a*1000+1,nominal_a,0, vfchvenc, _fecha);

        If (anio<>anio_a) Then
            If (anio<>0) Then Return Next; End If;

            anio = anio_a;
            cant = 0;
            accesor = 0;
            total = 0;
        End If;

        -- Acumulo
        cant = cant + 1;
        accesor = accesor + accesor_a;
        total = nominal + accesor;
	End Loop;

    If (anio<>0) Then Return Next; End If;

End
$$;


ALTER FUNCTION sam.uf_esta_deuda_cem_arren(_tipo character varying, _desde date, _hasta date, _fecha date) OWNER TO postgres;

--
-- TOC entry 841 (class 1255 OID 5282842)
-- Name: uf_esta_deuda_eventual(integer, date, date, character varying, date, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_esta_deuda_eventual(_trib_id integer, _desde date, _hasta date, _est character varying, _fecha date, _incluirbaja integer) RETURNS TABLE(anio smallint, cuota smallint, cant smallint, nominal numeric, accesor numeric, multa numeric, total numeric)
    LANGUAGE plpgsql
    AS $_$
declare
  valorucm numeric(12,2);
  obj_id varchar(8);
  subcta smallint;
  anio_a smallint;
  cuota_a smallint;
  ucm numeric(12,2);
  ucm_usar smallint;
  nominal_a numeric(12,2);
  nominalcub_a numeric(12,2);
  multa_a numeric(12,2);
  accesor_a numeric(12,2);
  fchvenc date;
  fchpago date;
  fchcons date;
begin
    -- Obtengo el ValorUCM
    
    Select Into ucm_usar t.ucm from trib t;

    If ucm_usar=2 Then
        	Select Into valorucm c.ucm2 From sam.config c;
        else
        	Select Into valorucm c.ucm1 From sam.config c;
    End If;
    
    anio=0; cuota=0;

    For obj_id,subcta,anio_a,cuota_a,ucm,nominal_a,nominalCub_a,multa_a,fchVenc,fchPago
    In Select c.obj_id,c.subcta,extract(year from c.fchVenc),extract(month from c.fchVenc),
    	c.ucm,c.nominal,c.nominalCub,c.multa,c.fchVenc,c.fchPago
    From ctacte c Inner Join objeto o on c.obj_id=o.obj_id
    Where c.trib_id=_trib_id and c.fchVenc between _desde and _hasta
    and c.est=_est and (o.est<>'B' or _incluirBaja=1)
    Order By extract(year from c.fchVenc),extract(month from c.fchVenc)
    Loop
        -- Si está en Deuda y es UCM, lo transformo en $
        If (_est='D' and ucm>0 and nominal_a=0) Then
             nominal_a = ucm * valorUCM;
        End If;

        If (_est not in ('E','P','F','C','O','B','T')) Then
            If (fchPago is null or fchPago<=fchVenc) Then
                fchCons=fchVenc;
        	Else
            	fchCons=fchPago;
            End If;

            accesor_a:= sam.uf_calc_accesor(_trib_id,obj_id,subcta,anio_a*1000+cuota_a,
	            	nominal_a,nominalCub_a, fchCons, _fecha);
        Else
        	accesor_a:= 0;
        End If;

        If (anio<>anio_a or cuota<>cuota_a) Then
            If (anio<>0 and cuota<>0) Then Return Next; End If;

            anio = anio_a;
            cuota = cuota_a;
            cant = 0;
            nominal = 0;
            accesor = 0;
            multa = 0;
            total = 0;
        End If;

        -- Acumulo
        cant = cant + 1;
        nominal = nominal + nominal_a - nominalCub_a;
        accesor = accesor + accesor_a;
        multa = multa+ multa_a;
        total = nominal + accesor + multa;

    End Loop;

	-- Retorno el ultimo elemento
    Return Next;
End
$_$;


ALTER FUNCTION sam.uf_esta_deuda_eventual(_trib_id integer, _desde date, _hasta date, _est character varying, _fecha date, _incluirbaja integer) OWNER TO postgres;

--
-- TOC entry 5676 (class 0 OID 0)
-- Dependencies: 841
-- Name: FUNCTION uf_esta_deuda_eventual(_trib_id integer, _desde date, _hasta date, _est character varying, _fecha date, _incluirbaja integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_esta_deuda_eventual(_trib_id integer, _desde date, _hasta date, _est character varying, _fecha date, _incluirbaja integer) IS 'Este procedimiento devuelve el estado de deuda de planes vigentes.
PARAMETROS: Tributo: Tributo a consultar.
            Desde, Hasta: Rango de FECHAS DE VENCIMIENTO.
            Est: Estado de la cuota (''D'':Deuda / ''P'': Pagada / etc.)
            Fecha: Fecha de cálculo de interés por mora
            IncluirBaja: Si es 1 ==> se deben incluir los objetos dados de baja
SALIDA:     Anio, Cuota: aNIO - mES DE VENCIMIENTO
            Cant: Cantidad de Cuotas.
            Nominal, Accesor, Multa y Total: Importe de la Deuda
';


--
-- TOC entry 842 (class 1255 OID 5282843)
-- Name: uf_esta_deuda_objeto(integer, integer, integer, date, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_esta_deuda_objeto(_trib_id integer, _desde integer, _hasta integer, _fecha date, _incluirbaja integer) RETURNS TABLE(obj_id character varying, obj_dato character varying, nombre character varying, est character varying, zonat character varying, regimen character varying, supt numeric, supm numeric, avalt numeric, avalm numeric, barrio_nom character varying, cant smallint, faltadj smallint, deuda numeric, plan numeric, juicio numeric, total numeric)
    LANGUAGE plpgsql
    AS $_$
Declare
    valorucm numeric(12,2);
    obj_id_a varchar(8);
    obj_id_aux varchar(8);
    vsubcta smallint;
    vanio integer;
    vcuota smallint;
    est_cc varchar;
    vucm numeric(12,2);
    vnominal numeric(12,2);
    nominalcub numeric(12,2);
    vmulta numeric(12,2);
    vaccesor numeric(12,2);
    vfchvenc date;
    vfchpago date;
    vfchcons date;
    ucmusar smallint;
    pagocta numeric;
    vtobj smallint;
Begin
    -- Detalle: Devuelve el estado de deuda para un Tributo

    -- Obtengo el UCM a usar según el Tributo
    select into ucmusar,vtobj t.ucm,t.tobj from trib t where t.trib_id=_trib_id;

    -- Obtengo el ValorUCM
    if ucmusar=1 then
        select into ValorUCM sc.ucm1 from sam.config sc;
    elseif ucmusar=2 then
        select into ValorUCM sc.ucm2 from sam.config sc;
    end if;

	obj_id_a := '';
    cant:=0;
    faltadj:=0;
    deuda:=0;
    plan:=0;
    juicio:=0;
    total:=0;

    For Obj_id_aux,vSubCta,vAnio,vCuota,est_cc,vUCM,vNominal,NominalCub,vMulta,vFchVenc,vFchPago
    In select o.obj_id, c.SubCta,c.Anio,c.Cuota,c.est,c.UCM,c.Nominal,c.NominalCub,c.Multa,c.FchVenc,c.FchPago
    From objeto o Inner Join CtaCte c on c.obj_id=o.obj_id
    Where c.trib_id=_trib_id and c.Anio*1000+c.Cuota between _Desde and _Hasta
    and c.fchvenc<current_date and c.est in ('J','D','C','X')
    and (o.Est<>'B' or _IncluirBaja=1)
    Order By c.obj_id Loop

        -- Si está en Deuda y es UCM, lo transformo en $
        if (est_cc in ('D','T') and vUCM>0 and vNominal=0) then
             vNominal := vUCM * ValorUCM;
        End If;

        if (est_cc not in ('E','P','F','C','O','B')) then
            if (vFchPago is null or vFchPago<=vFchVenc) then
            	vFchCons:=vFchVenc;
            else
            	vFchCons:=vFchPago;
            End If;

            If est='D' and nominalcub>0 then
                -- Obtengo monto por pago a Cuenta
                Select Into pagocta coalesce(sum(d.haber),0) from ctacte_det d
                where d.ctacte_id = ctacte_id and d.topera=17 and d.est = 'A';
			End If;

            vaccesor:= sam.uf_calc_accesor(_trib_id,obj_id_aux,vsubcta,vanio*1000+vcuota,vnominal+pagocta,nominalcub,vfchcons,_fecha);
        else
        	vaccesor := 0;
        End If;

        if (obj_id_aux<>obj_id_a) then
            if (obj_id_a<>'') then
                Select Into obj_id, obj_dato,nombre,est,zonat,regimen,supt,supm,avalt,avalm,barrio_nom
                o.obj_id, o.obj_dato,o.nombre,o.est, coalesce(i.zonat,''),coalesce(r.nombre,''),i.supt,i.supm,i.avalt,i.avalm,b.nombre
                From  objeto o
                Left Join inm i on i.obj_id= o.obj_id
                Left Join inm_tregimen r on i.regimen=r.cod
                Left Join domi_barrio b on i.barr_id= b.barr_id
                Where o.obj_id= obj_id_a;

                Return Next;
			End If;

            obj_id_a := obj_id_aux;
            cant:=0;
            faltadj:=0;
            deuda:=0;
            plan:=0;
            juicio:=0;
            total:=0;
            pagocta:=0;
        end If;

        -- Acumulo
        Cant := Cant + 1;
        vNominal = vNominal-NominalCub;
        faltadj := faltadj + case when est_cc='X' and vtobj=2 then 1 else 0 end;
        deuda := deuda + case when est_cc='D' then vnominal+vaccesor+vmulta else 0 end;
        plan := plan + case when est_cc='C' then vnominal+vmulta else 0 end;
        juicio := juicio + case when est_cc='J' then vnominal+vaccesor+vmulta else 0 end;
        total := deuda + plan + juicio;
    End Loop;

    Return Next;


End
$_$;


ALTER FUNCTION sam.uf_esta_deuda_objeto(_trib_id integer, _desde integer, _hasta integer, _fecha date, _incluirbaja integer) OWNER TO postgres;

--
-- TOC entry 843 (class 1255 OID 5282845)
-- Name: uf_esta_deuda_per(integer, integer, integer, character varying, date, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_esta_deuda_per(_trib_id integer, _desde integer, _hasta integer, _est character varying, _fecha date, _incluirbaja integer) RETURNS TABLE(anio smallint, cuota smallint, cant integer, nominal numeric, accesor numeric, multa numeric, total numeric)
    LANGUAGE plpgsql
    AS $_$
Declare
    valorucm numeric(12,2);
    obj_id varchar(8);
    subcta smallint;
    anio_a smallint;
    cuota_a smallint;
    ucm numeric(12,2);
    nominal_a numeric(12,2);
    nominalcub_a numeric(12,2);
    multa_a numeric(12,2);
    accesor_a numeric(12,2);
    fchvenc date;
    fchpago date;
    fchcons date;
    ucmusar smallint;
Begin

    -- Detalle: Devuelve el estado de deuda para un Tributo

    -- Obtengo el UCM a usar según el Tributo
    select into ucmusar t.ucm from trib t where t.trib_id=_trib_id;

    -- Obtengo el ValorUCM    
    if ucmusar=1 then
        select into ValorUCM sc.ucm1 from sam.config sc;
    elseif ucmusar=2 then
        select into ValorUCM sc.ucm2 from sam.config sc;
    end if;

    Anio:=0; Cuota:=0;

    For obj_id,SubCta,Anio_a,Cuota_a,UCM,Nominal_a,NominalCub_a,Multa_a,FchVenc,FchPago
    In select c.obj_id,c.SubCta,c.Anio,c.Cuota,c.UCM,c.Nominal,c.NominalCub,c.Multa,c.FchVenc,c.FchPago
    From CtaCte c Inner Join Objeto o on c.obj_id=o.obj_id
    Where c.trib_id=_trib_id and c.Anio*1000+c.Cuota between _Desde and _Hasta
    and c.Est=_Est and (o.Est<>'B' or _IncluirBaja=1)
    Order By c.Anio,c.Cuota Loop

        -- Si está en Deuda y es UCM, lo transformo en $
        if (_Est in ('D','T') and UCM>0 and Nominal_a=0) then
             Nominal_a := UCM * ValorUCM;
        End If;

        if (_est not in ('E','P','F','C','O','B','T')) then
            if (FchPago is null or FchPago<=FchVenc) then
            	FchCons:=FchVenc;
            else
            	FchCons:=FchPago;
            End If;

            Accesor_a := sam.Uf_calc_Accesor(_trib_id,obj_id,SubCta,Anio_a*1000+Cuota_a,
			            Nominal_a,NominalCub_a, FchCons, _Fecha);
        else
        	Accesor_a := 0;
        End If;


        if (Anio<>Anio_a or Cuota<>Cuota_a) then
            if (Anio<>0 and Cuota<>0) then
                Return Next;
			End If;

            Anio := Anio_a;
            Cuota := Cuota_a;
            Cant := 0;
            Nominal := 0;
            Accesor := 0;
            Multa := 0;
            Total := 0;
        end If;

        -- Acumulo
        Cant := Cant + 1;
        Nominal := Nominal + Nominal_a - NominalCub_a;
        Accesor := Accesor + Accesor_a;
        Multa := Multa + Multa_a;
        Total := Nominal + Accesor + Multa;

    End Loop;

    Return Next;


End
$_$;


ALTER FUNCTION sam.uf_esta_deuda_per(_trib_id integer, _desde integer, _hasta integer, _est character varying, _fecha date, _incluirbaja integer) OWNER TO postgres;

--
-- TOC entry 5677 (class 0 OID 0)
-- Dependencies: 843
-- Name: FUNCTION uf_esta_deuda_per(_trib_id integer, _desde integer, _hasta integer, _est character varying, _fecha date, _incluirbaja integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_esta_deuda_per(_trib_id integer, _desde integer, _hasta integer, _est character varying, _fecha date, _incluirbaja integer) IS 'Este procedimiento devuelve el estado de deuda para un Tributo.
PARAMETROS: Tributo: Tributo a consultar.
            Desde, Hasta: Rango de períodos de la forma AAAACC (AAAA:Año, CC:Cuota).
            Est: Estado de la cuota (D:Deuda / P: Pagada / etc.)
            Fecha: Fecha de cálculo de interés por mora
            IncluirBaja: Si es 1 ==> se deben incluir los objetos dados de baja
SALIDA:     Anio, Cuota: Período
            Cant: Cantidad de Cuotas.
            Nominal, Accesor, Multa y Total: Importe de la Deuda.';


--
-- TOC entry 844 (class 1255 OID 5282846)
-- Name: uf_esta_deuda_plan(date, date, character varying, date, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_esta_deuda_plan(_desde date, _hasta date, _est character varying, _fecha date, _incluirbaja integer) RETURNS TABLE(anio smallint, mes smallint, cant smallint, capital numeric, financia numeric, accesor numeric, total numeric)
    LANGUAGE plpgsql
    AS $$
declare
  anio_a smallint;
  mes_a smallint;
  nominal_a numeric(12,2);
  nominalcub_a numeric(12,2);
  capital_a numeric(12,2);
  financia_a numeric(12,2);
  accesor_a numeric(12,2);
  vfchvenc date;
  vfchpago date;
  vfchcons date;
begin

    anio=0; mes=0;

    For anio_a,mes_a,nominal_a,nominalCub_a,vfchVenc,vfchPago,capital_a,financia_a
    In Select extract(year from c.fchVenc), extract(month from c.fchVenc),
    	c.nominal,c.nominalCub,c.fchVenc,c.fchPago,pc.capital, pc.financia
    From plan p
    inner join plan_cuota pc on p.plan_id=pc.plan_id
    inner join ctacte c On pc.ctacte_id = c.ctacte_id
    Inner Join objeto o on c.obj_id=o.obj_id
    Where p.est=1 and c.est=_est and c.fchVenc between _desde and _hasta
    and (o.est<>'B' or _incluirBaja=1)
    Order By 1, 2
    Loop
        If (_est not in ('E','P','F','C','O','B','T')) Then
            If (vfchPago is null or vfchPago<=vfchVenc) Then
                vfchCons=vfchVenc;
            Else
            	vfchCons=vfchPago;
            End If;

            accesor_a:= sam.uf_calc_interes(nominal_a-nominalCub_a, vfchCons, _fecha);
        Else
        	accesor_a = 0;
        End If;

        If (anio<>anio_a or mes<>mes_a) Then
            If (anio<>0 and mes<>0) Then Return Next; End If;

            anio = anio_a;
            mes = mes_a;
            cant = 0;
            capital = 0;
            financia = 0;
            accesor = 0;
            total = 0;
        End If;

        -- Acumulo
        cant = cant + 1;
        capital = capital + capital_a;
        financia = financia + financia_a;
        accesor = accesor + accesor_a;
        total = capital + financia + accesor;

    End Loop;

    Return Next;
End
$$;


ALTER FUNCTION sam.uf_esta_deuda_plan(_desde date, _hasta date, _est character varying, _fecha date, _incluirbaja integer) OWNER TO postgres;

--
-- TOC entry 846 (class 1255 OID 5282847)
-- Name: uf_esta_dj(integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_esta_dj(_trib_id integer, _desde integer, _hasta integer) RETURNS TABLE(anio integer, cuota smallint, cant integer, cantemi integer, montoemi numeric, cantpago integer, montopago numeric, accpago numeric, porcpago numeric, cantconv integer, montoconv numeric)
    LANGUAGE plpgsql
    AS $$
Begin

    -- Estadística de un período de Tributos de Emisión

    RETURN QUERY
	Select c.anio,c.cuota,
    Count(*)::integer,
	Sum(Case When c.Est<>'X' then 1 else 0 end)::integer,
    Sum(Case When c.Est<>'X' then Nominal else 0 end),
    Sum(Case When c.Est in ('P','E') then 1 else 0 end)::integer,
    Sum(Case When c.Est in ('P','E') then c.NominalCub else 0 end),
    Sum(Case When c.Est in ('P','E') then DD.AccesorCub else 0 end),
    round(Sum(Case When c.Est in ('P','E') then 1 else 0 end) / Sum(Case When c.Est<>'X' then 1 else 0 end) * 100, 2), --PorcPago=CantPago/CantEmi*100
    Sum(Case When c.Est in ('C') then 1 else 0 end)::integer,
    Sum(Case When c.Est in ('C') then c.Nominal else 0 end)
    From Comer co
    	inner join Objeto o on co.obj_id=o.obj_id
    	Inner Join CtaCte c on O.obj_id=c.obj_id
        Left Join
            (select DD.CtaCte_id, coalesce(Sum(DD.Haber),0) AccesorCub
            From CtaCte_Det DD Inner Join Cuenta CU on DD.cta_id=CU.cta_id
            Where TCta in (2,3) group By CtaCte_id) as DD on C.CtaCte_id=DD.CtaCte_id
    Where c.trib_id=_trib_id
    	and c.anio*1000+c.cuota between _desde and _hasta and c.est<>'B'
        and c.fchvenc>o.fchalta
    Group By c.anio,c.cuota
    Order By c.anio,c.cuota;


End
$$;


ALTER FUNCTION sam.uf_esta_dj(_trib_id integer, _desde integer, _hasta integer) OWNER TO postgres;

--
-- TOC entry 5678 (class 0 OID 0)
-- Dependencies: 846
-- Name: FUNCTION uf_esta_dj(_trib_id integer, _desde integer, _hasta integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_esta_dj(_trib_id integer, _desde integer, _hasta integer) IS 'Estadística de un período de Tributos de Emisión.';


--
-- TOC entry 847 (class 1255 OID 5282848)
-- Name: uf_esta_emi(integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_esta_emi(_trib_id integer, _desde integer, _hasta integer) RETURNS TABLE(anio smallint, cuota smallint, cant integer, cantemi integer, montoemi numeric, cantpago integer, montopago numeric, accpago numeric, porcpago numeric, cantconv integer, montoconv numeric)
    LANGUAGE plpgsql
    AS $$
Declare
  cant_anio smallint;
  an_anio integer;
  an_cant integer;
  an_cantemi integer;
  an_montoemi numeric;
  an_cantpago integer;
  an_montopago numeric;
  an_accpago numeric;
  an_porcpago numeric;
  an_cantconv integer;
  an_montoconv numeric;
Begin

    -- Estadistica de un periodo de Tributos de Emision

	For anio, cuota, cant, cantemi, montoemi, cantpago, montopago, accpago, cantconv, montoconv
    In Select c.anio,c.cuota,
    Count(*)::integer,
    Count(*)::integer,
    Sum(Nominal),
    Sum(Case When Est in ('P','E') then 1 else 0 end)::integer,
    Sum(Case When Est in ('P','E') then NominalCub else 0 end),
    Sum(Case When Est in ('P','E') then DD.AccesorCub else 0 end),
    Sum(Case When Est in ('C') then 1 else 0 end)::integer,
    Sum(Case When Est in ('C') then Nominal else 0 end)
    From CtaCte c
        Left Join
            (select CtaCte_id, coalesce(Sum(Haber),0) AccesorCub
            From CtaCte_Det DD Inner Join Cuenta CU on DD.cta_id=CU.cta_id
            Where TCta in (2,3) group By CtaCte_id) as DD on C.CtaCte_id=DD.CtaCte_id
    Where c.trib_id=_trib_id
    	and (c.anio*1000+c.cuota between _desde and _hasta or
            (c.anio between trunc(_desde/1000) and trunc(_hasta/1000) and c.cuota=0))
        and c.est<>'B'
    Group By c.anio,c.cuota
    Order By c.anio,c.cuota
    Loop

    	If (cuota = 0) Then
        	-- Asigno en variables anuales para acumular los montos despues por períodos
            an_anio=anio; an_cant=cant; an_cantemi=cantemi;  an_montoemi=montoemi; an_cantpago=cantpago;
            an_montopago=montopago; an_accpago=accpago; an_porcpago=porcpago; an_cantconv=cantconv; an_montoconv=montoconv;
            -- Determino la cantidad de períodos en el año para el tributo
            select Into cant_anio r.cant_anio from resol r
            where r.trib_id=_trib_id and anio*1000+cuota between r.perdesde and r.perhasta;
        Else
			If (anio = an_anio) Then
			  cant = cant + an_cant;
			  cantemi = cantemi + an_cantemi;
			  montoemi = montoemi + an_montoemi/cant_anio;
              cantpago = cantpago + an_cantpago;
              montopago = montopago + an_montopago/cant_anio;
              accpago = accpago + an_accpago/cant_anio;
              porcpago = round(cantpago * 100 / cantemi,2);
              cantconv = cantconv + an_cantconv;
			  montoconv = montoconv + an_montoconv/cant_anio;
            else
			  porcpago = round(cantpago * 100 / cantemi,2);
            End If;

            Return Next;

		End If;

    End Loop;

End
$$;


ALTER FUNCTION sam.uf_esta_emi(_trib_id integer, _desde integer, _hasta integer) OWNER TO postgres;

--
-- TOC entry 848 (class 1255 OID 5282849)
-- Name: uf_esta_emi_rango(integer, integer, integer, numeric, numeric, numeric, numeric, numeric); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_esta_emi_rango(_trib_id integer, _anio integer, _cuota integer, _n0 numeric, _n1 numeric, _n2 numeric, _n3 numeric, _n4 numeric) RETURNS TABLE(clasif text, cant integer, monto numeric, cant_pago integer, monto_pago numeric)
    LANGUAGE plpgsql
    AS $$
Begin

    -- Estadistica de un periodo de Emision por Rango de Montos

    RETURN QUERY
	Select case when c.nominal<=_n0 then '1. Hasta ' || cast(_n0 as varchar(10))
        when c.nominal between _n0+0.01 and _n1 then '2. Entre ' || cast(_n0 as varchar(10)) || ' y ' || cast(_n1 as varchar(10))
        when c.nominal between _n1+0.01 and _n2 then '3. Entre ' || cast(_n1 as varchar(10)) || ' y ' || cast(_n2 as varchar(10))
        when c.nominal between _n2+0.01 and _n3 then '4. Entre ' || cast(_n2 as varchar(10)) || ' y ' || cast(_n3 as varchar(10))
        when c.nominal between _n3+0.01 and _n4 then '5. Entre ' || cast(_n3 as varchar(10)) || ' y ' || cast(_n4 as varchar(10))
        when c.nominal>_n4 then '6. Más de ' || cast(_n4 as varchar(10)) end as _tipo,
        Sum(1)::integer,
        sum(c.nominal),
        sum(case when c.Est in ('P','E') then 1 else 0 end)::integer,
        sum(case when c.Est in ('P','E') then c.nominal else 0 end)
    from CtaCte C
    where c.trib_id=_trib_id and c.anio=_anio and c.cuota=_cuota
    group by _Tipo;


End
$$;


ALTER FUNCTION sam.uf_esta_emi_rango(_trib_id integer, _anio integer, _cuota integer, _n0 numeric, _n1 numeric, _n2 numeric, _n3 numeric, _n4 numeric) OWNER TO postgres;

--
-- TOC entry 5679 (class 0 OID 0)
-- Dependencies: 848
-- Name: FUNCTION uf_esta_emi_rango(_trib_id integer, _anio integer, _cuota integer, _n0 numeric, _n1 numeric, _n2 numeric, _n3 numeric, _n4 numeric); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_esta_emi_rango(_trib_id integer, _anio integer, _cuota integer, _n0 numeric, _n1 numeric, _n2 numeric, _n3 numeric, _n4 numeric) IS 'EstadÃ­stica de un perÃ­odo de EmisiÃ³n por Rango de Montos.';


--
-- TOC entry 849 (class 1255 OID 5282850)
-- Name: uf_esta_eve(integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_esta_eve(_trib_id integer, _desde integer, _hasta integer) RETURNS TABLE(anio smallint, cuota smallint, cant integer, cantemi integer, montoemi numeric, cantpago integer, montopago numeric, accpago numeric, porcpago numeric, cantconv integer, montoconv numeric)
    LANGUAGE plpgsql
    AS $$
Begin

    -- Estadística de un período de Tributos Eventuales
    RETURN QUERY
	Select extract(year from c.FchVenc)::smallint, extract(month from c.Fchvenc)::smallint,
    Count(*)::integer,
    Count(*)::integer,
    Sum(c.Nominal),
    Sum(Case When c.Est in ('P','E') then 1 else 0 end)::integer,
    Sum(Case When c.Est in ('P','E') then c.NominalCub else 0 end),
    Sum(Case When c.Est in ('P','E') then DD.AccesorCub else 0 end),
    round(Sum(Case When c.Est in ('P','E') then 1 else 0 end) / Count(*) * 100, 2), --PorcPago=CantPago/CantEmi*100
    Sum(Case When c.Est in ('C') then 1 else 0 end)::integer,
    Sum(Case When c.Est in ('C') then c.Nominal else 0 end)
    From CtaCte c
        Left Join
            (select DD.CtaCte_id, coalesce(Sum(DD.Haber),0) AccesorCub
            From CtaCte_Det DD Inner Join Cuenta CU on DD.cta_id=CU.cta_id
            Where TCta in (2,3) group By CtaCte_id) as DD on C.CtaCte_id=DD.CtaCte_id
    Where c.trib_id=_trib_id
    	and extract(year from c.FchVenc)*1000+extract(month from c.Fchvenc) between _desde and _hasta and c.est<>'B'
    Group By extract(year from c.FchVenc), extract(month from c.Fchvenc)
    Order By extract(year from c.FchVenc), extract(month from c.Fchvenc);


End
$$;


ALTER FUNCTION sam.uf_esta_eve(_trib_id integer, _desde integer, _hasta integer) OWNER TO postgres;

--
-- TOC entry 5680 (class 0 OID 0)
-- Dependencies: 849
-- Name: FUNCTION uf_esta_eve(_trib_id integer, _desde integer, _hasta integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_esta_eve(_trib_id integer, _desde integer, _hasta integer) IS 'Estadística de un período de Tributos Eventuales.';


--
-- TOC entry 850 (class 1255 OID 5282851)
-- Name: uf_esta_liq_item(integer, character varying, date, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_esta_liq_item(_trib_id integer, _items character varying, _fchdesde date, _fchhasta date) RETURNS TABLE(item_cod integer, item_nom character varying, anio integer, total numeric)
    LANGUAGE plpgsql
    AS $$
DECLARE
	sql varchar;
BEGIN
	sql = 'select l.item_id,i.nombre,c.anio,sum(l.monto) from ctacte_liq l ';
    sql = sql || 'inner join ctacte c on l.ctacte_id=c.ctacte_id ';
    sql = sql || 'inner join item i on l.item_id=i.item_id ';
    sql = sql || 'where i.trib_id=' || _trib_id || ' and l.item_id in (' || _items || ')';
    sql = sql || ' and c.fchemi BETWEEN ' || chr(39) || _fchdesde || chr(39) || ' and ' || chr(39) || _fchhasta || chr(39);
    sql = sql || ' group by l.item_id,i.nombre,c.anio' ;

    for item_cod,item_nom,anio,total in EXECUTE sql
    loop
    	return next;
    end loop;

END;
$$;


ALTER FUNCTION sam.uf_esta_liq_item(_trib_id integer, _items character varying, _fchdesde date, _fchhasta date) OWNER TO postgres;

--
-- TOC entry 851 (class 1255 OID 5282852)
-- Name: uf_esta_pagos(integer, integer, integer, date, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_esta_pagos(_trib_id integer, _anio integer, _cuota integer, _fchdesde date, _fchhasta date) RETURNS TABLE(fecha date, cant integer, nominal numeric, accesor numeric, multa numeric, total numeric)
    LANGUAGE plpgsql
    AS $$
Begin
    -- Recupera montos cobrados por Tributo.
    RETURN QUERY
        -- sin Facilidades
        Select t.fecha, cast(count(distinct t.ticket) as integer),
            sum(case when c.tcta in (1,2) then d.monto else 0 end),
            sum(case when c.tcta in (3) then d.monto else 0 end),
            sum(case when c.tcta in (4) then d.monto else 0 end),
            sum(d.monto)
        From caja_ticket t
        inner join caja_ticket_det d on t.ticket=d.ticket
        inner join cuenta c on d.cta_id=c.cta_id
        Where t.trib_id = _trib_id and t.anio = _anio and t.cuota = _cuota
            and t.fecha between _fchDesde and _fchHasta and t.est = 'A' and t.trib_id <> 2
        Group By t.fecha
    UNION
        -- Tomo sólo las Facilidades
        Select t.fecha, cast(count(distinct fp.ctacte_id) as integer),
            sum(fp.nominal), sum(fp.accesor - fp.quita), sum(fp.multa),
            sum(fp.nominal + fp.accesor + fp.multa - fp.quita)
        From caja_ticket t
        Inner Join objeto o On t.obj_id = o.obj_id
        Inner Join objeto p On o.num = p.obj_id
        inner join facilida f on t.anio=f.faci_id
        inner join facilida_periodo fp on t.anio = fp.faci_id
        inner join ctacte cc on fp.ctacte_id = cc.ctacte_id
        Where cc.trib_id = _trib_id and cc.anio = _anio and cc.cuota = _cuota
            and t.fecha between _fchDesde and _fchHasta and t.est = 'A' and t.trib_id = 2
        Group By t.fecha
    Order by 1; -- fecha, obj_id

End
$$;


ALTER FUNCTION sam.uf_esta_pagos(_trib_id integer, _anio integer, _cuota integer, _fchdesde date, _fchhasta date) OWNER TO postgres;

--
-- TOC entry 852 (class 1255 OID 5282856)
-- Name: uf_facilida_activar(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_facilida_activar(_faci_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
	cant integer;
	estcc smallint;
BEGIN
    Select Into cant count(*) From facilida f Where f.faci_id=_faci_Id;

	If (cant=0) Then
    	RAISE EXCEPTION 'La Facilidad no existe';
    End If;

    -- Verifico que la Facilidad esté dada de baja
    Select Into estcc f.est From facilida f Where f.faci_id=_faci_id;

    If (estcc = 2) Then
        -- Actualizo el estado de la Facilidad (tabla plan_test)
        Update facilida f Set est=1, fchbaja=null, fchvenc=current_date
        Where f.faci_id=_faci_id;

    ElseIf (estcc <> 2) Then
        RAISE EXCEPTION 'La Facilidad no ha sido dada de baja';
	End If;
End
$$;


ALTER FUNCTION sam.uf_facilida_activar(_faci_id integer) OWNER TO postgres;

--
-- TOC entry 801 (class 1255 OID 5282857)
-- Name: uf_facilida_anular(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_facilida_anular(_faci_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    estfaci smallint;
begin
    -- Anula la imputación de una Facilidad

    -- verIfico el estado actual de la Facilidad
    Select into estfaci f.est
    From facilida f Where f.faci_id=_faci_id;

    If (estfaci <> 5 ) Then
        RAISE EXCEPTION 'El estado de la facilidad es incorrecto';
    End If;

    -- Actualizo el estado de la facilidad
    Update facilida f set est=1, fchimputa=null Where f.faci_id=_faci_id;

end
$$;


ALTER FUNCTION sam.uf_facilida_anular(_faci_id integer) OWNER TO postgres;

--
-- TOC entry 827 (class 1255 OID 5282858)
-- Name: uf_facilida_borrar(integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_facilida_borrar(_faci_id integer, _usr_baja integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
	vctacte_id integer;
	estcc smallint;
BEGIN
    -- Verifico que la Facilidad no esté Paga
    Select Into estcc f.est From facilida f Where f.faci_id=_faci_id;

    If (estcc = 1) Then
        -- Actualizo el estado de la Facilidad (tabla plan_test)
        Update facilida f Set est=2, fchbaja=current_timestamp, usrbaja=_usr_baja
        	Where f.faci_id=_faci_id;

    ElseIf (estcc = 5) Then
        RAISE EXCEPTION 'La Facilidad se encuentra Imputada';
    ElseIf (estcc = 2) Then
        RAISE EXCEPTION 'La Facilidad fue dada de Baja';
    Else
        RAISE EXCEPTION 'Estado Incorrecto';
	End If;
End
$$;


ALTER FUNCTION sam.uf_facilida_borrar(_faci_id integer, _usr_baja integer) OWNER TO postgres;

--
-- TOC entry 831 (class 1255 OID 5282859)
-- Name: uf_facilida_borrar_venc(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_facilida_borrar_venc(_usr integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
declare
	vfaci_id integer;
	cant smallint;
BEGIN
	cant:=0;
    For vfaci_id In Select f.faci_id From facilida f
        Where f.est=1 And f.fchvenc < current_date and baja_auto=1
    Loop
		cant:=cant+1;
        Perform sam.uf_facilida_borrar(vfaci_id,_usr);
    End Loop;
    Return cant;
End
$$;


ALTER FUNCTION sam.uf_facilida_borrar_venc(_usr integer) OWNER TO postgres;

--
-- TOC entry 5681 (class 0 OID 0)
-- Dependencies: 831
-- Name: FUNCTION uf_facilida_borrar_venc(_usr integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_facilida_borrar_venc(_usr integer) IS 'Esta Función efectúa la Baja de Facilidades que no fueron pagadas
a la fecha de Vencimiento.

';


--
-- TOC entry 853 (class 1255 OID 5282860)
-- Name: uf_facilida_generar(integer, integer, character varying, date, date, character varying, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_facilida_generar(_faci_id integer, _trib_id integer, _obj_id character varying, _fchvenc date, _fchconsolida date, _obs character varying, _usr_id integer, _baja_auto integer DEFAULT 1) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
	porcquita numeric(5,2);
	cantdeuda smallint;
    cantfaci smallint;
    vtobj smallint;
    ctacte_id_per integer;
    fchvenc_per date;
	vnominal numeric(12,2);
	vaccesor numeric(12,2);
	vmulta numeric(12,2);
    vquita numeric(12,2);
	nominaltotal numeric(12,2);
	accesortotal numeric(12,2);
    quitatotal numeric(12,2);
	multatotal numeric(12,2);
    vcta_id smallint;
    vtcta smallint;
    vcta_monto numeric(12,2);
    vmonto numeric(12,2);
    detcta numeric(12,2)[];
    detmto numeric(12,2)[];
    ix smallint;
    i smallint;
    cantdet smallint;
    ctaexiste smallint;
BEGIN
	nominaltotal:=0;  accesortotal:=0;  multatotal:=0;  quitatotal:=0;

	-- Tipo de Objeto
    Select Into vtobj o.tobj From objeto o Where o.obj_id=_obj_id;

    -- Recupero los datos de los períodos incluidos
    For ctacte_id_per, vnominal, vaccesor, vquita, vmulta, fchvenc_per
	    In Select p.ctacte_id, p.nominal, p.accesor, p.quita, p.multa, c.fchvenc
    	From facilida_periodo p Inner Join ctacte c On p.ctacte_id=c.ctacte_id
        Where p.faci_id = _faci_id
    Loop
    	nominaltotal:=nominaltotal+vnominal;
    	accesortotal:=accesortotal+vaccesor;
    	multatotal:=multatotal+vmulta;
        quitatotal:=quitatotal+vquita;

		vaccesor:= vaccesor - vquita;
      	--Recupero el detalle del período agrupado por Cuenta
        For vcta_id, vtcta, vcta_monto
      	In Select c.cta_id, c.tcta, sum(c.monto)
        From sam.uf_caja_det(ctacte_id_per,fchvenc_per, _fchconsolida) c
        Group By c.cta_id,c.tCta Order By c.cta_id
		Loop
            vmonto:= 0;
            If (vtcta=1) Then --Nominal
                If (vnominal > 0) Then
                    vmonto:=case when vnominal>vcta_monto then vcta_monto else vnominal end;
                    vnominal = vnominal - vmonto;
                End If;
            ElseIf (vtcta=3) Then --Accesor
                If (vaccesor > 0) Then
	                vmonto:=case when vaccesor>vcta_monto then vcta_monto else vaccesor end;
                    vaccesor = vaccesor - vmonto;

                    select into vcta_id t.cta_id_rec from trib t where t.trib_id = _trib_id;

                    if (vcta_id = 0) then
                    	select into vcta_id c.ctarecargo from sam.config c;
                    End If;
                    -- **************************************************
                End If;
            ElseIf (vtcta=4) Then  --Multa
                If (vmulta > 0) Then
                    vmonto:=case when vmulta>vcta_monto then vcta_monto else vmulta end;
                    vmulta = vmulta - vmonto;
                End If;
            End If;
            -- Acumulo los montos por cuenta en un array
            If (vmonto <> 0) Then
                cantdet=array_upper(detcta,1);
                If (cantdet is null or cantdet=0) Then
                	ix:=1;
                	detcta[ix]:=vcta_id;
                    detmto[ix]:=vmonto;
                    ix:=ix+1;
                Else
                  ctaexiste:=0;
                  For i in 1..cantdet Loop
                  	If (detcta[i]=vcta_id) Then
                      ctaexiste:=1;
                      detmto[i]:=detmto[i] + vmonto;
                      exit;
                    End If;
                  End Loop;
                  If (ctaexiste = 0) Then
                	detcta[ix]:=vcta_id;
                    detmto[ix]:=vmonto;
                    ix:=ix+1;
                  End If;
                End If;
            End If;
        End Loop;
	End Loop;

	-- Inserto los datos principales
    Insert Into facilida Values (_faci_id,_trib_id,_obj_id,nominaltotal,accesortotal,
    multatotal,quitatotal,nominaltotal+accesortotal+multatotal-quitatotal,
    1,current_timestamp,_fchvenc,_fchconsolida,null,null,
    null,_baja_auto,_obs,current_timestamp,_usr_id);

End
$$;


ALTER FUNCTION sam.uf_facilida_generar(_faci_id integer, _trib_id integer, _obj_id character varying, _fchvenc date, _fchconsolida date, _obs character varying, _usr_id integer, _baja_auto integer) OWNER TO postgres;

--
-- TOC entry 854 (class 1255 OID 5282861)
-- Name: uf_facilida_imputar(integer, integer, smallint); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_facilida_imputar(_faci_id integer, _usr_id integer, _caja_id smallint DEFAULT 0) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
	ctarecargo smallint;
    vctacte_id integer;
    estcc varchar(1);
    vnominal numeric(12,2);
    vaccesor numeric(12,2);
    vmulta numeric(12,2);
    vfchvenc date;
    vcta_id smallint;
    vtcta smallint;
    vmonto numeric(12,2);
    nominaltotal numeric(12,2);
    nominalporc numeric(12,2);
    nominalacum numeric(12,2);
    nominalcta smallint;
    ncta smallint;
BEGIN
    -- Inicializo las variables
    ncta = 0; nominalporc = 0;  nominalacum = 0;

    -- Recupero la Cuenta General de Recargo definido en la Configuración
    Select Into ctarecargo c.ctarecargo From sam.config c;

    -- Actualizo el estado de la Facilidad
    Update facilida f Set est=5, fchimputa=current_timestamp
        Where f.faci_id=_faci_id;

    -- Inserto en la CtaCteDet, con Operación = 'Imputacion'
    For vctacte_id, vnominal, vaccesor, vmulta, vfchvenc
    In Select p.ctacte_id, p.nominal, p.accesor-p.quita, p.multa, c.fchvenc
    From facilida_periodo p Inner Join ctacte c On p.ctacte_id=c.ctacte_id
    Where p.faci_id=_faci_id Order By c.anio,c.cuota
    Loop
        -- Recupero los Montos Totales de la Deuda para comparar
        Select Into nominaltotal, nominalcta
        sum(case d.tcta When 1 then d.monto else 0 end),
        sum(case d.tcta When 1 then 1 else 0 end)
        From sam.uf_caja_det(vctacte_id, vfchvenc,current_date) d;

        If (nominaltotal > vnominal) Then -- No se cubre todo el Nominal
           -- Determino el Porcentaje que se cubre
           nominalporc = vnominal * 100 / nominaltotal;
        Else If (nominaltotal = vnominal) Then
                nominalporc:= 100;
             Else
                nominalporc:= 0;
             End If;
        End If;

        For vcta_id, vtcta, vmonto In Select c.cta_id, c.tcta, c.monto
        From sam.uf_caja_det(vctacte_id, vfchvenc,current_date) c
        Order By c.tcta Desc
        Loop
            -- Inserto el pago de la Multa
            If (vtcta = 4) Then
              If (vmonto > vmulta) Then vmonto = vmulta; End If;

              Insert Into ctacte_det Values (  --TOpera=10 (Pago Facilidad)
              vctacte_id, 10, _faci_id, vcta_id, 0, vmonto,
              current_date, 'A', current_timestamp, _usr_id);

              vmulta:= vmulta - vmonto;
            End If;

            -- Inserto los Accesorios según CuentaRec,
            -- tomando un monto proporcional según :Accesor
            -- Recupero el porcentaje correspondiente
            If (vtcta = 3 and vaccesor > 0) Then
              If (vmonto > vaccesor) Then vmonto:= vaccesor; End If;

              If (vcta_id = 0) Then vcta_id:=ctarecargo; End If;

              Insert Into ctacte_det Values (
              vctacte_id, 10, _faci_id, vcta_id, vmonto, vmonto,
              current_date, 'A', current_timestamp, _usr_id);

              vaccesor:= vaccesor - vmonto;
            End If;

            -- Inserto la imputación del Nominal
            If (vtcta = 1 and vnominal > 0) Then
                ncta = ncta + 1;
                If (nominalporc > 0 and nominalporc < 100) Then -- No se cubre todo el Nominal
                    -- Verificar si es la última cuenta tomo la diferencia
                    If (nominalcta = ncta) Then
                      vmonto = vnominal - nominalacum;
                    Else -- hay que cubrir en forma proporcional
                      vmonto = vmonto * nominalporc / 100;
                    End If;
                    nominalacum = nominalacum + vmonto;
                Else
                    If (vmonto > vnominal) Then vmonto = vnominal; End If;
                    vnominal = vnominal - vmonto;
                End If;

                Insert Into ctacte_det Values (
                vctacte_id, 10, _faci_id, vcta_id, 0, vmonto,
                current_date, 'A', current_timestamp, _usr_id);
            End If;
        End Loop;

        Perform sam.uf_ctacte_ajuste(vctacte_id);

        update ctacte set caja_id=_caja_id where ctacte_id=vctacte_id;

    End Loop;

End
$$;


ALTER FUNCTION sam.uf_facilida_imputar(_faci_id integer, _usr_id integer, _caja_id smallint) OWNER TO postgres;

--
-- TOC entry 855 (class 1255 OID 5282863)
-- Name: uf_fiscaliza_borrar(integer, character varying, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_fiscaliza_borrar(_trib_id integer, _obj_id character varying, _perdesde integer, _perhasta integer, _usr_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
trib_fiscaliza smallint;
vdj_id integer;
vanio smallint;
vcuota smallint;
vorden smallint;
vctacte_id integer;
BEGIN
    -- DEF: Procedimiento que Borra la CtaCte paralela de Fiscalización
    -- y la DJ de Fiscalización generada

   Trib_Fiscaliza := 4;

    For vDJ_Id, vCtaCte_Id, vAnio, vCuota In
    Select DJ_Id, CtaCte_Id, Anio, Cuota From DDJJ d Where d.trib_id = _trib_id and d.obj_id = _obj_id
        and d.Anio*1000+d.Cuota between _PerDesde and _PerHasta and d.Fiscaliza = 1 and d.Est = 'A'
    Loop

        -- Doy de Baja los datos en la CtaCte
        -- ==================================
        -- Baja de CtaCte
        Update CtaCte c set Est = 'B' Where c.CtaCte_Id = vCtaCte_Id;

        -- Baja del Detalle de CtaCte
        Update CtaCte_Det d Set Est = 'B' Where d.CtaCte_Id = vCtaCte_Id;

        -- Baja de DJ de Fiscalización
        -- ===========================
        Update DDJJ d Set Est = 'B' Where d.DJ_Id = vDJ_Id;

    End Loop;
End
$$;


ALTER FUNCTION sam.uf_fiscaliza_borrar(_trib_id integer, _obj_id character varying, _perdesde integer, _perhasta integer, _usr_id integer) OWNER TO postgres;

--
-- TOC entry 5682 (class 0 OID 0)
-- Dependencies: 855
-- Name: FUNCTION uf_fiscaliza_borrar(_trib_id integer, _obj_id character varying, _perdesde integer, _perhasta integer, _usr_id integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_fiscaliza_borrar(_trib_id integer, _obj_id character varying, _perdesde integer, _perhasta integer, _usr_id integer) IS 'Borra la CtaCte paralela de fiscalización';


--
-- TOC entry 856 (class 1255 OID 5282864)
-- Name: uf_fiscaliza_copiar(integer, character varying, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_fiscaliza_copiar(_trib_id integer, _obj_id character varying, _perdesde integer, _perhasta integer, _usr_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
trib_fiscaliza smallint;
vdj_id integer;
dj_id_nueva integer;
vanio smallint;
vcuota smallint;
vorden smallint;
vctacte_id integer;
ctacte_id_nueva integer;
begin
    -- DEF: Procedimiento que realiza una copia de las DJ incluidas en el rango
    -- de períodos como Fiscalización, incluyendo los datos de la CtaCte.

    Trib_Fiscaliza := 4;

    -- Inserto CtaCte Paralela
    -- =======================

    For vCtaCte_id
    In  Select c.CtaCte_Id From CtaCte c Where c.Trib_id = _Trib_id and c.Obj_id=_Obj_id And c.Anio*1000+c.Cuota between _PerDesde and _PerHasta
    Loop
        CtaCte_Id_Nueva =nextval('seq_ctacte_id'::regclass);

    	-- Inserto en la CtaCte Principal de CtaCte
    	Insert into CtaCte
        	Select CtaCte_Id_Nueva, Trib_Fiscaliza, 2, c.Obj_id, c.SubCta, c.Anio, c.Cuota, c.ucm, c.Nominal, c.NominalCub,
        	c.Multa, c.Est, c.FchEmi, c.FchVenc, c.FchPago, c.Caja_id, c.MontoVenc1, c.MontoVenc2,
        	c.MontoAnual, c.Texto_id, c.Expe, c.Obs, c.FchMod, c.UsrMod
    	From CtaCte c Where c.ctacte_id= vctacte_id;

    End Loop;


    For vDJ_Id, vCtaCte_Id, vAnio, vCuota
    In Select d.DJ_Id, d.CtaCte_Id, d.Anio, d.Cuota From DDJJ d Where d.Trib_id=_Trib_id and d.obj_id=_obj_id
        and d.Anio*100+d.Cuota between _PerDesde and _PerHasta and d.Fiscaliza = 0 and d.Est = 'A'
        Loop

        -- Inserto el Detalle de la CtaCte
        Insert Into CtaCte_Det Select CtaCte_Id_Nueva, d.TOpera, d.Comprob, d.cta_id, d.Debe, d.Haber,
        d.Fecha, d.Est, d.FchMod, d.UsrMod From CtaCte_Det d Where d.CtaCte_Id = vCtaCte_Id;

        -- Genero una nueva DJ para Fiscalización
        -- ======================================
        -- Obtengo un nuevo Id
        DJ_Id_Nueva:= nextval('seq_dj_id'::regclass);

        -- Obtengo un nro de Orden
        Select Into vOrden coalesce(max(d.Orden),0) + 1 From DDJJ d Where d.trib_id = _trib_id
        and d.obj_id = _obj_id and d.Anio = vAnio and d.Cuota = vCuota ;

        -- Inserto los datos en la tabla principal de DJ
        Insert Into DDJJ Select DJ_Id_Nueva, 0, vctacte_id, d.trib_id, d.obj_id, 1, d.Anio, d.Cuota,
        vOrden, 3, d.Base, d.Anual, d.Anticipos, d.Monto, d.Multa, d.FchPresenta, 'A', d.Error_Act,
        current_timestamp, _usr_id From DDJJ d Where d.DJ_Id = vDJ_Id;

        -- Inserto los datos en Liq
        Insert Into DDJJ_Liq
        Select DJ_Id_Nueva, l.Item_id, l.Monto From DDJJ_Liq l Where l.DJ_Id = vDJ_Id;

        -- Inserto los datos en Rubros
        Insert Into DDJJ_Rubros Select DJ_Id_Nueva, r.Rubro_id, r.Base, r.Cant,
        r.Minimo, r.Alicuota, r.Monto From DDJJ_Rubros r Where r.DJ_Id = vDJ_Id;

        -- Inserto los datos en Anual
        Insert Into DDJJ_Anual Select DJ_Id_Nueva, a.Cuota, a.Base, a.Monto
        From DDJJ_Anual a Where a.DJ_Id = vDJ_Id;

        -- Ejecuto el procedimiento para generar la CtaCte
--        Execute Procedure UF_DJ_A_CtaCte(:DJ_Id_Nueva);

    End Loop;
End
$$;


ALTER FUNCTION sam.uf_fiscaliza_copiar(_trib_id integer, _obj_id character varying, _perdesde integer, _perhasta integer, _usr_id integer) OWNER TO postgres;

--
-- TOC entry 5683 (class 0 OID 0)
-- Dependencies: 856
-- Name: FUNCTION uf_fiscaliza_copiar(_trib_id integer, _obj_id character varying, _perdesde integer, _perhasta integer, _usr_id integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_fiscaliza_copiar(_trib_id integer, _obj_id character varying, _perdesde integer, _perhasta integer, _usr_id integer) IS 'Copia las DDJJ y la CtaCte al tributo de fiscalización';


--
-- TOC entry 857 (class 1255 OID 5282865)
-- Name: uf_fiscaliza_mover(integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_fiscaliza_mover(_dj_id integer, _usr_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
cant smallint;
vtrib_id smallint;
vobj_id varchar(8);
vanio integer;
vcuota smallint;
dj_id_nueva integer;
vorden smallint;
vctacte_id integer;
BEGIN
    -- DEF: Procedimiento que mueve la DJ de Fiscalización a DJ Normal
    -- y genera la CtaCte según los datos de la misma (Uf_DJ_A_CtaCte)

  -- Verifico si se puede efectuar la operación
  Select Into Cant count(*) From DDJJ d Where d.DJ_Id = _DJ_Id and
  (d.Fiscaliza = 0 Or d.Tipo < 3 Or d.Est = 'B') ;

  if (Cant <> 0) then

    -- Obtengo los datos de la DDJJ
    Select Into vtrib_id, vobj_id, vAnio, vCuota
     d.Trib_id, d.Obj_id, d.Anio, d.Cuota From DDJJ d
    Where d.DJ_Id=_DJ_Id ;

    -- Verifico si no fue movida con anterioridad
    Select Into Cant Count(*) From DDJJ d Where d.trib_id = vtrib_id and d.obj_id = vobj_id
    and d.Anio = vanio and d.Cuota = vcuota and d.Fiscaliza = 0 and d.Tipo = 3;

    if (Cant = 0) then

      -- Genero una nueva DJ con los datos de la DJ de Fiscalización
      -- Obtengo un nuevo Id
      DJ_Id_Nueva:= nextval('seq_dj_id'::regclass);

      -- Obtengo un nro de Orden
      Select Into vorden coalesce(max(d.Orden),0) From DDJJ d Where d.Trib_id = vTrib_id
      and d.obj_id = vobj_id and d.Anio = vAnio and d.Cuota = vCuota ;

      -- Inserto los datos en la tabla principal
      Insert Into DDJJ Select DJ_Id_Nueva, 0, d.ctacte_id, d.trib_id, d.obj_id, d.subcta, 0, 
      d.Anio, d.Cuota, vorden, 3, 
      d.Base, d.Anual, d.Anticipos, d.Monto, d.Multa, d.FchPresenta, 'A', d.Error_Act,
      current_timestamp, _Usr_id From DDJJ d Where d.DJ_Id = _DJ_Id;

      -- Inserto los datos en Liq
      Insert Into DDJJ_Liq
      Select DJ_Id_Nueva, l.Item_id, l.Monto From DDJJ_Liq l Where l.DJ_Id = _DJ_Id;

      -- Inserto los datos en Rubros
      Insert Into DDJJ_Rubros Select DJ_Id_Nueva, r.Rubro_id, r.Base, r.Cant,
      r.Minimo, r.Alicuota, r.Monto From DDJJ_Rubros r Where r.DJ_Id = _DJ_Id;

      -- Inserto los datos en Anual
      Insert Into DDJJ_Anual Select DJ_Id_Nueva, a.Cuota, a.Base, a.Monto
      From DDJJ_Anual a Where a.DJ_Id = _DJ_Id;


      -- Ejecuto el procedimiento para generar la CtaCte
      Perform sam.uf_dj_aprobar(DJ_Id_Nueva, _usr_id);

    End If;
  End If;
End
$$;


ALTER FUNCTION sam.uf_fiscaliza_mover(_dj_id integer, _usr_id integer) OWNER TO postgres;

--
-- TOC entry 5684 (class 0 OID 0)
-- Dependencies: 857
-- Name: FUNCTION uf_fiscaliza_mover(_dj_id integer, _usr_id integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_fiscaliza_mover(_dj_id integer, _usr_id integer) IS 'Mueve las DDJJ de fiscalización al tributo principal y genera la CtaCte';


--
-- TOC entry 839 (class 1255 OID 5282866)
-- Name: uf_inm_armar_nc(character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_inm_armar_nc(_s1 character varying, _s2 character varying, _s3 character varying, _manz character varying, _parc character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
	nc varchar(26);
	vnombre varchar(8);
	vlargo smallint:=0;
	l_s1 smallint:= 0;
    l_s2 smallint:= 0;
    l_s3 smallint:= 0;
    l_manz smallint:= 0;
    l_parc smallint:= 0;
BEGIN
	-- Recupero el largo de cada campo de la configuracion de nc
    -- El caracter de relleno siempre es '0'
	For vnombre,vlargo In Select campo,max_largo
      From sam.config_inm_nc Where aplica=true Loop
		If vnombre='s1' Then l_s1:=vlargo; End If;
		If vnombre='s2' Then l_s2:=vlargo; End If;
		If vnombre='s3' Then l_s3:=vlargo; End If;
		If vnombre='manz' Then l_manz:=vlargo; End If;
		If vnombre='parc' Then l_parc:=vlargo; End If;
	End Loop;
	nc:= lpad(ltrim(_s1),l_s1,'0')
        || lpad(ltrim(_s2),l_s2,'0')
		|| lpad(ltrim(_s3),l_s3,'0')
        || lpad(ltrim(_manz),l_manz,'0')
        || lpad(ltrim(_parc),l_parc,'0');

	return nc;
END;
$$;


ALTER FUNCTION sam.uf_inm_armar_nc(_s1 character varying, _s2 character varying, _s3 character varying, _manz character varying, _parc character varying) OWNER TO postgres;

--
-- TOC entry 5685 (class 0 OID 0)
-- Dependencies: 839
-- Name: FUNCTION uf_inm_armar_nc(_s1 character varying, _s2 character varying, _s3 character varying, _manz character varying, _parc character varying); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_inm_armar_nc(_s1 character varying, _s2 character varying, _s3 character varying, _manz character varying, _parc character varying) IS 'Genera la nomenclatura de Parcela.
Parámetros:
  s1 varchar: s1 de la Manzana.
  s2 varchar: s1 de la Manzana.
  s3 varchar: s1 de la Manzana.
  manz varchar: Número de la Manzana.
  parc varchar: Número de la Parcela.
	';


--
-- TOC entry 858 (class 1255 OID 5282867)
-- Name: uf_inm_armar_nc_completo(character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_inm_armar_nc_completo(_s1 character varying, _s2 character varying, _s3 character varying, _manz character varying, _parc character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
	nc varchar(50);
	vcampo varchar(8);
	vnombre varchar(10);
	vlargo smallint:=0;
	l_s1 smallint:= 0;
        l_s2 smallint:= 0;
        l_s3 smallint:= 0;
        l_manz smallint:= 0;
        l_parc smallint:= 0;
        
	n_s1 varchar;
        n_s2 varchar;
        n_s3 varchar;
        n_manz varchar;
        n_parc varchar;
        sep varchar(1);
BEGIN
	-- Recupero el largo de cada campo de la configuracion de nc
    -- No se utilizar caracter de relleno, se separan los valores que intervienen con guiones y otro separador
    sep = ' ';
    nc = '';
    
	For vcampo,vnombre,vlargo In Select campo,nombre,max_largo
      From sam.config_inm_nc Where aplica=true order by orden Loop
		If vcampo='s1' Then l_s1:=vlargo; n_s1=vnombre; End If;
		If vcampo='s2' Then l_s2:=vlargo; n_s2=vnombre; End If;
		If vcampo='s3' Then l_s3:=vlargo; n_s3=vnombre; End If;
		If vcampo='manz' Then l_manz:=vlargo; n_manz=vnombre; End If;
		If vcampo='parc' Then l_parc:=vlargo; n_parc=vnombre; End If;

	End Loop;

    nc:= case when l_s1>0 and trim(_s1) not in ('','0') then n_s1||': '||trim(_s1)||sep else '' end
      || case when l_s2>0 and trim(_s2) not in ('','0') then n_s2||': '||trim(_s2)||sep else '' end
      || case when l_s3>0 and trim(_s3) not in ('','0') then n_s3||': '||trim(_s3)||sep else '' end
      || case when l_manz>0 and trim(_manz) not in ('','0') then n_manz||': '||trim(_manz)||sep else '' end
      || case when l_parc>0 and trim(_parc) not in ('','0') then n_parc||': '||trim(_parc) else '' end;

	return nc;
END;
$$;


ALTER FUNCTION sam.uf_inm_armar_nc_completo(_s1 character varying, _s2 character varying, _s3 character varying, _manz character varying, _parc character varying) OWNER TO postgres;



--
-- TOC entry 864 (class 1255 OID 5282873)
-- Name: uf_inm_avaluo_compara(integer, integer, integer, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_inm_avaluo_compara(oldanio integer, oldcuota integer, newanio integer, newcuota integer, trib_id_1 integer, trib_id_2 integer) RETURNS TABLE(obj_id character varying, nombre character varying, num character varying, num_tipo character varying, regimen_old character varying, zonat_old character varying, supt_old numeric, supm_old numeric, avalt_old numeric, avalm_old numeric, tasa1_old numeric, est1_old character, tasa2_old numeric, est2_old character, regimen_new character varying, zonat_new character varying, supt_new numeric, supm_new numeric, avalt_new numeric, avalm_new numeric, tasa1_new numeric, est1_new character, tasa2_new numeric, est2_new character)
    LANGUAGE sql
    AS $_$
    Select i.obj_id, obj.nombre, obj.num, t.nombre,
        coalesce(r1.nombre,''), coalesce(o.zonaT,''), coalesce(o.SupT,0),
    	coalesce(o.SupM,0), coalesce(o.AvalT,0), coalesce(o.AvalM,0), coalesce(tco.Nominal,0),
        coalesce(tco.est,''), coalesce(oco.Nominal,0),coalesce(oco.est,''), coalesce(r2.nombre,''),
        coalesce(n.zonaT,''), coalesce(n.SupT,0), coalesce(n.SupM,0),
        coalesce(n.AvalT,0), coalesce(n.AvalM,0), coalesce(tcn.Nominal,0), coalesce(tcn.est,''),
        coalesce(ocn.Nominal,0),coalesce(oco.est,'')
    From inm i
    Inner Join objeto obj on i.obj_id=obj.obj_id
    Inner Join persona p on obj.num=p.obj_id
    Inner Join persona_tipo t on p.tipo=t.cod
    Left join inm_Avaluo o on o.obj_id=i.obj_id and $1*1000+$2 between o.PerDesde and o.PerHasta
    Left join Inm_Avaluo n on n.obj_id=i.obj_id and $3*1000+$4 between n.PerDesde and n.PerHasta

	-- Regimen
    Left Join inm_tregimen r1 on o.regimen=r1.cod
    Left Join inm_tregimen r2 on n.regimen=r2.cod

    -- Liquidacion Trib_1
    Left join CtaCte tco on i.obj_id = tco.obj_id and tco.trib_id = $5 and tco.SubCta=0 and tco.Anio = $1 and tco.Cuota = $2
    Left join CtaCte tcn on i.obj_id = tcn.obj_id and tcn.trib_id = $5 and tcn.SubCta=0 and tcn.Anio = $3 and tcn.Cuota = $4

    -- Liquidacion Trib_2
    Left join CtaCte oco on i.obj_id = oco.obj_id and oco.trib_id = $6 and oco.SubCta=0 and oco.Anio = $1 and oco.Cuota = $2
    Left join CtaCte ocn on i.obj_id = ocn.obj_id and ocn.trib_id = $6 and ocn.SubCta=0 and ocn.Anio = $3 and ocn.Cuota = $4

	Where obj.est='A'
    Order By obj.obj_id
$_$;


ALTER FUNCTION sam.uf_inm_avaluo_compara(oldanio integer, oldcuota integer, newanio integer, newcuota integer, trib_id_1 integer, trib_id_2 integer) OWNER TO postgres;

--
-- TOC entry 865 (class 1255 OID 5282874)
-- Name: uf_inm_avaluo_masivo(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_inm_avaluo_masivo(_perdesde integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
	vobj_id varchar(8);
BEGIN
	-- Deshabilito el Trigger
    ALTER TABLE inm DISABLE TRIGGER tr_his_inmueble;

    -- Actualizo los avalúos en forma masiva
    For vobj_id In Select i.obj_id From inm i Inner Join Objeto o On i.obj_id = o.obj_id
    Where o.Est = 'A' Loop

		--raise notice 'obj_id: %',obj_id;
        Perform sam.uf_objeto_computa_inm(vobj_id);
        Perform sam.uf_inm_avaluo_perdesde(vobj_id, _perdesde);

    End Loop;

	-- Habilito el Trigger
    ALTER TABLE inm ENABLE TRIGGER tr_his_inmueble;
END
$$;


ALTER FUNCTION sam.uf_inm_avaluo_masivo(_perdesde integer) OWNER TO postgres;

--
-- TOC entry 866 (class 1255 OID 5282875)
-- Name: uf_inm_avaluo_obtener(character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_inm_avaluo_obtener(_obj_id character varying) RETURNS TABLE(obj_id character varying, supt numeric, supm numeric, avalt numeric, avalm numeric, frente numeric, regimen smallint, zonat character varying, zonav smallint, zonaop smallint, agua smallint, cloaca smallint, gas smallint, alum smallint, pav smallint, coef numeric, valbas numeric)
    LANGUAGE plpgsql
    AS $$
DECLARE
    vpol varchar(6);
    vform varchar(2);
    mej_supm decimal(15,2);
    vcat varchar(2);
    vest smallint;
    vanio smallint;
    anio_act smallint;
    vant smallint;
    vvalor numeric(12,2);
    vcoefmej numeric (5,2);
    periodo integer;
    vsec varchar(5);
    supt_pasillo decimal(9,2);
    vurbsub varchar(2);
    vtinm varchar(1);    
    supm numeric(12,2);
    valor_mm numeric(12,2);
begin
    -- Procedimiento que devuelve campos computados del inmueble, sin actualizarlos
    -- Se actualizan con sam.uf_objeto_computa_inm.
    -- También se usa en el formulario de inmueble para mostrar los avalúos calculados

    -- inicializo las variables
    obj_id = _obj_id;	
    anio_act := extract(YEAR from current_date);
    periodo := anio_act*1000 + extract(MONTH from current_date);
    supm:=0; avalt:=0; avalm:=0; frente:=0;
    agua:=0; cloaca:=0; gas:=0; alum:=0; pav:=0; coef:=0; valbas:=0;

    -- obtengo los valores de inm y zonav
    Select into vsec, supt, supt_pasillo, supm, zonat, zonav, zonaop, coef, regimen, agua, cloaca, gas, alum, pav, vurbsub, vtinm
    i.s1, i.supt, i.supt_pasillo, i.supm, i.zonat, i.zonav, i.zonaop, i.coef, i.regimen, i.agua, i.cloaca, i.gas, i.alum, i.pav, urbsub, tinm
    from inm i where i.obj_id= _obj_id;

    -- medida total del Frente. El campo está definido como campos computado.
    Select into frente coalesce(sum(Medida),0) From inm_frente f Where f.obj_id= _obj_id;
  	If (NOT FOUND) then frente=0; End If;

    Select Into valor_mm mm.valor From calc_mm mm Where current_date between mm.fchdesde and mm.fchhasta;
    valor_mm := coalesce(valor_mm,1);

    -- Calculo el Avalúo de Tierra y Mejoras en funcion de ubicacion
    If (vurbsub = 'R') Then  -- Rural
	If (vtinm = 'P') Then -- Tierra Productiva  
	   avalt = (case zonat when '9' then 350 when '10' then 438 when '11' then 300 when '12' then 225 when '13' then 112 else 0 end) * valor_mm;
	Else
	   avalt = (supt * 20500 * valor_mm) * 0.15;
	End If;
    Else  -- Urbano   
	avalt = supt * (case zonat when '1' then 4 when '2' then 3.25 when '3' then 2.75 when '4' then 2.5 when '5' then 2 
		 when '6' then 1.5 when '7' then 1.5 when '8' then 1.5 else 1 end) * valor_mm;
    End If;

    avalm = supm * 185 * valor_mm;

    If (supm=0 and regimen=3) Then
    	-- Si no hay mejoras y es PH mantengo los datos actuales
        Select into supm, avalm  coalesce(i.supm,0), coalesce(i.avalm,0) from inm i where i.obj_id=_obj_id;
    End If;


	-- Retorno los datos
	Return next;
End;
$$;


ALTER FUNCTION sam.uf_inm_avaluo_obtener(_obj_id character varying) OWNER TO postgres;

--
-- TOC entry 867 (class 1255 OID 5282876)
-- Name: uf_inm_avaluo_perdesde(character varying, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_inm_avaluo_perdesde(_obj_id character varying, _perdesde integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE
    perdesdeant integer;
    vanio smallint;
    vcuota smallint;
    vsupt numeric(12,2);
    vsupm numeric(12,2);
    vavalt numeric(12,2);
    vavalm numeric(12,2);
    vfrente numeric(12,2);
    vregimen smallint;
    vzonat varchar;
    vzonav smallint;
    vzonaop smallint;
    ves_esquina smallint;
    ves_calleppal smallint;
    vagua smallint;
    vcloaca smallint;
    vgas smallint;
    valum smallint;
    vpav smallint;
    vcant smallint;
    vusrcod smallint;

begin
    -- Procedimiento que actualiza la tabla Inmuebles_Avaluos,
    -- por cambios en los valores asociados (cambios en la valuacion de Inmuebles)

    vcant := 0;

    -- Recupero los nuevos datos actualizados en el inmueble
    Select Into vsupt, vsupm, vavalt, vavalm, vfrente, vregimen, vzonat, vzonav, vzonaop, ves_esquina, ves_calleppal, vagua, vcloaca, vgas, valum, vpav, vusrcod
    i.supt, i.supm, i.avalt, i.avalm, i.frente, i.regimen, i.zonat, i.zonav, i.zonaop, i.es_esquina, i.es_calleppal, i.agua, i.cloaca, i.gas, i.alum, i.pav, o.usrmod
    From inm i inner join objeto o on i.obj_id=o.obj_id Where i.obj_id = _obj_id;

    -- Borro vigencias posteriores
    Delete From inm_avaluo ia Where ia.obj_id=_obj_id and ia.perdesde>=_perdesde;

    -- Corto la vigencia al periodo anterior
    select into perdesdeant coalesce(max(ia.perdesde),0)
    from inm_avaluo ia where ia.obj_id=_obj_id;

    If perdesdeant > 0 Then
        -- Si hay período anterior, corto la vigencia
        vanio=cast(_perdesde/1000 as integer);
	    vcuota=_perdesde-cast(_perdesde/1000 as integer)*1000;

        If vcuota=0 Then
            vanio := vanio - 1;
            vcuota := 6;
        Else
        	vcuota := vcuota - 1;
        End If;

        -- Verifico si los datos son iguales prolongo el periodo anterior
        -- sin insertar un nuevo registro
        Select into vcant count(*) From inm_avaluo ia
        Where ia.obj_id=_obj_id and ia.perdesde=perdesdeant
        and ia.SupT=vSupT and ia.SupM=vSupM and ia.AvalT=vAvalT
        and ia.AvalM=vAvalM and ia.Frente=vFrente and ia.regimen=vregimen
        and ia.ZonaT=vZonaT and ia.Zonav=vZonav and ia.zonaop=vzonaop
        and ia.es_esquina=ves_esquina and ia.es_calleppal<>ves_calleppal
        and ia.agua<>vagua and ia.cloaca<>vcloaca and ia.gas<>vgas
        and ia.alum<>valum and ia.pav<>vpav;

        If (vcant > 0) then
        	-- Si no hubo cambios, pongo el perhasta en 999999
        	Update inm_avaluo ia Set PerHasta = 9999999
        	where ia.obj_id=_obj_id and ia.PerDesde=perdesdeant;
    	else
        	-- Si hubo cambios corto la vigencia
        	update inm_avaluo ia set perhasta = vanio*1000+vcuota
        	where ia.obj_id = _obj_id and ia.perdesde = perdesdeant;
		End If;
	End If;

    If (vcant = 0) then
    	-- Si realmente hay cambios inserto el nuevo registro
        vAvalM = coalesce(vAvalM, 0);
        Insert Into inm_avaluo values
        (_obj_id, _perdesde, 9999999, vSupT, vSupM, vAvalT, vAvalM,
        vfrente, vregimen, ves_esquina, ves_calleppal, vZonaT, vZonaV, vZonaOP,
        vagua, vcloaca, vgas, valum, vpav, current_timestamp, vusrcod);
    End IF;

    -- Devuelvo el resultado final
    return vcant=0;
end;
$$;


ALTER FUNCTION sam.uf_inm_avaluo_perdesde(_obj_id character varying, _perdesde integer) OWNER TO postgres;

--
-- TOC entry 868 (class 1255 OID 5282877)
-- Name: uf_inm_cambio(character varying, integer, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_inm_cambio(_obj_id character varying, _old_id integer, _tipo character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
	cbio_id integer;
	cbio_nomencla smallint;
	cbio_identif smallint;
	cbio_carac smallint;
	cbio_titular smallint;
	cbio_dominio smallint;
	cbio_dompos smallint;
	cbio_dompar smallint;
	cbio_avalt smallint;
	cbio_avalm smallint;
	cbio_zonaserv smallint;
	supt_old numeric(12,4);
	supt_new numeric(12,4);
	supm_old numeric(12,2);
	supm_new numeric(12,2);
	avalt_old numeric(12,2);
	avalt_new numeric(12,2);
	avalm_old numeric(12,2);
	avalm_new numeric(12,2);
	zonat_old varchar(2);
	zonat_new varchar(2);
	serv_old smallint;
	serv_new smallint;
	vusrmod smallint;
	vfchmod timestamp;
begin

    -- Obtener Fecha y usuario
    select into vUsrMod o.UsrMod from objeto o where o.obj_id = _obj_id;
    vFchMod = current_timestamp;

    -- Cargar variables OLD
    if (_tipo in ('N','A')) then
        SupT_Old=0; SupM_Old=0; AvalT_Old=0; AvalM_Old=0; ZonaT_Old=0; Serv_Old=0;
    else
      if (_tipo in ('B','U')) then
        select into SupT_Old, SupM_Old, AvalT_Old, AvalM_Old, ZonaT_Old, Serv_Old
        	i.SupT, i.SupM, i.AvalT, i.AvalM, i.ZonaT, i.Serv
        from inm i where i.obj_id= _obj_id;
      else
        select into SupT_Old, SupM_Old, AvalT_Old, AvalM_Old, ZonaT_Old, Serv_Old
        	h.SupT, h.SupM, h.AvalT, h.AvalM, h.ZonaT, h.Serv
        from his_inm h where h.his_Id= _Old_Id;
      end if;
	end if;

    -- Cargar variables NEW
    if (_tipo in ('B','U')) then
        SupT_New=0; SupM_New=0; AvalT_New=0; AvalM_New=0; ZonaT_New=0; Serv_New=0;
    else
        select into SupT_New, SupM_New, AvalT_New, AvalM_New, ZonaT_New, Serv_New
        	i.SupT, i.SupM, i.AvalT, i.AvalM, i.ZonaT, i.Serv
        from inm i where i.obj_id= _obj_id;
	end if ;

    -- Cargar variables CBIO
    if (_Tipo='N') then
        Cbio_Nomencla=1; Cbio_Identif=1; Cbio_Carac=1; Cbio_Titular=1; Cbio_Dominio=1;
        Cbio_DomPos=1; Cbio_DomPar=1; Cbio_Avalt=1; Cbio_AvalM=1; Cbio_ZonaServ=1;
    else
      if (_tipo in ('B','U','A')) then
        Cbio_Nomencla=0; Cbio_Identif=0; Cbio_Carac=0; Cbio_Titular=0; Cbio_Dominio=0;
        Cbio_DomPos=0; Cbio_DomPar=0; Cbio_Avalt=0; Cbio_AvalM=0; Cbio_ZonaServ=0;
      else
        select  into Cbio_Nomencla, Cbio_Identif, Cbio_Carac, Cbio_Dominio,
        Cbio_DomPar, Cbio_Avalt, Cbio_AvalM, Cbio_ZonaServ
        case when i.nc<>o.nc then 1 else 0 end,
        case when i.ParP<>o.ParP or i.Plano<>o.Plano or i.UF<>i.UF or i.PorcUF<>o.PorcUf then 1 else 0 end,
        case when i.UrbSub<>o.UrbSub or i.Planta<>o.Planta or i.TInm<>i.TInm or i.Titularidad<>o.Titularidad or i.Uso<>i.Uso or i.Barrio<>i.Barrio or i.Baldio<>i.Baldio then 1 else 0 end,
        case when i.Matricula<>o.Matricula or i.Anio<>o.Anio then 1 else 0 end,
        case when i.DomPar<>o.DomPar then 1 else 0 end,
        case when i.SupT<>o.SupT or i.AvalT<>o.AvalT or i.Frente<>i.Frente or i.ZonaV<>o.ZonaV or i.ValBas<>o.ValBas or i.Coef<>o.Coef then 1 else 0 end,
        case when i.SupM<>o.SupM or i.AvalM<>o.AvalM then 1 else 0 end,
        case when i.ZonaT<>o.ZonaT or i.ZonaOS<>o.ZonaOS or i.agua<>o.agua or i.cloaca<>o.cloaca or i.gas<>o.gas and i.alum<>o.alum or i.Pav<>o.Pav then 1 else 0 end
        from inm i left join His_inm o on i.obj_id=o.obj_id
        where i.obj_id= _obj_id and o.Old_Id= _Old_Id;

        if (exists(select * from objeto_persona v
            where v.obj_id= _obj_id and cast(v.FchMod as date)=cast(vFchMod as date)))
                then Cbio_Titular=1;
                else Cbio_Titular=0;
        end if;

        select into Cbio_DomPos case when i.DomPos<>o.DomPos then 1 else 0 end
        from Objeto i left join his_Objeto o on i.obj_id=o.obj_id
        where i.obj_id= _obj_id and o.Old_Id=_Old_Id;
      end if;
    end if;

	SELECT into cbio_id nextval('public.seq_his_inm_cambio');

    -- Guardar
    insert into his_inm_cambio values (cbio_id, _obj_id, _Tipo,
    Cbio_Nomencla, Cbio_Identif, Cbio_Carac, Cbio_Titular, Cbio_Dominio,
    Cbio_DomPos, Cbio_DomPar, Cbio_Avalt, Cbio_AvalM, Cbio_ZonaServ,
    SupT_Old, SupT_New, SupM_Old, SupM_New, AvalT_Old, AvalT_New, AvalM_Old,
    AvalM_New, ZonaT_Old, ZonaT_New, Serv_Old, Serv_New, vFchMod, vUsrMod);
end;
$$;


ALTER FUNCTION sam.uf_inm_cambio(_obj_id character varying, _old_id integer, _tipo character varying) OWNER TO postgres;

--
-- TOC entry 869 (class 1255 OID 5282882)
-- Name: uf_inm_desarmar_nc(character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_inm_desarmar_nc(nc character varying) RETURNS TABLE(_s1 character varying, _s2 character varying, _s3 character varying, _manz character varying, _parc character varying)
    LANGUAGE plpgsql
    AS $$
declare
	vnombre varchar(8);
	vlargo smallint:=0;
	l_s1 smallint:= 0;
    l_s2 smallint:= 0;
    l_s3 smallint:= 0;
    l_manz smallint:= 0;
    l_parc smallint:= 0;
BEGIN
	-- Recupero el largo de cada campo de la configuracion de nc
    -- El caracter de relleno siempre es '0'
	For vnombre,vlargo In Select campo,max_largo
      From sam.config_inm_nc Where aplica=true Loop
		If vnombre='s1' Then l_s1:=vlargo; End If;
		If vnombre='s2' Then l_s2:=vlargo; End If;
		If vnombre='s3' Then l_s3:=vlargo; End If;
		If vnombre='manz' Then l_manz:=vlargo; End If;
        If vnombre='parc' Then l_parc:=vlargo; End If;
	End Loop;
	_s1 := substring(ncm,1,l_s1);
    _s2 := substring(ncm,l_s1+1,l_s2);
    _s3 := substring(ncm,l_s1+l_s2+1,l_s3);
    _manz := substring(ncm,l_s1+l_s2+l_s3+1,l_manz);
    _parc := substring(ncm,l_s1+l_s2+l_s3+l_manz+1,l_parc);

	return next;
END;
$$;


ALTER FUNCTION sam.uf_inm_desarmar_nc(nc character varying) OWNER TO postgres;

--
-- TOC entry 870 (class 1255 OID 5282883)
-- Name: uf_inm_desarmar_ncm(character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_inm_desarmar_ncm(ncm character varying) RETURNS TABLE(_s1 character varying, _s2 character varying, _s3 character varying, _manz character varying)
    LANGUAGE plpgsql
    AS $$
declare
	vnombre varchar(8);
	vlargo smallint:=0;
	l_s1 smallint:= 0;
    l_s2 smallint:= 0;
    l_s3 smallint:= 0;
    l_manz smallint:= 0;
BEGIN
	-- Recupero el largo de cada campo de la configuracion de nc
    -- El caracter de relleno siempre es '0'
	For vnombre,vlargo In Select campo,max_largo
      From sam.config_inm_nc Where aplica=true Loop
		If vnombre='s1' Then l_s1:=vlargo; End If;
		If vnombre='s2' Then l_s2:=vlargo; End If;
		If vnombre='s3' Then l_s3:=vlargo; End If;
		If vnombre='manz' Then l_manz:=vlargo; End If;
	End Loop;
	_s1 := substring(ncm,1,l_s1);
    _s2 := substring(ncm,l_s1+1,l_s2);
    _s3 := substring(ncm,l_s1+l_s2+1,l_s3);
    _manz := substring(ncm,l_s1+l_s2+l_s3+1,l_manz);

	return next;
END;
$$;


ALTER FUNCTION sam.uf_inm_desarmar_ncm(ncm character varying) OWNER TO postgres;

--
-- TOC entry 871 (class 1255 OID 5282884)
-- Name: uf_inm_manz(character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_inm_manz(_s1 character varying) RETURNS TABLE(sec character varying, nmanz character varying, padrones character varying)
    LANGUAGE plpgsql
    AS $$
DECLARE
	padron VARCHAR(6);
    sec_ant varchar(3);
    nmanz_ant varchar(5);
BEGIN
    sec_ant:= ''; nmanz_ant := '';

    For sec,nmanz,padron
    In Select i.s1,i.nmanz,(substr(i.obj_id,2,7)::INTEGER)::varchar(6)
    From inm i where s1='' or i.s1=_s1 Order by i.s1,i.nmanz,i.obj_id Loop
    	if sec_ant<>sec or nmanz_ant<>nmanz then
        	if sec_ant<>'' Then
            	padrones := substr(padrones,4,length(padrones));
                Return Next;
            End If;

            padrones := '';
            sec_ant := sec;
            nmanz_ant := nmanz;
        End If;

        padrones := padrones || ' - ' || padron;

    End Loop;

    padrones := substr(padrones,4,length(padrones));
    Return Next;

End
$$;


ALTER FUNCTION sam.uf_inm_manz(_s1 character varying) OWNER TO postgres;

--
-- TOC entry 5689 (class 0 OID 0)
-- Dependencies: 871
-- Name: FUNCTION uf_inm_manz(_s1 character varying); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_inm_manz(_s1 character varying) IS 'Recupera los padrones de cada manzana en un mismo campo.';


--
-- TOC entry 872 (class 1255 OID 5282885)
-- Name: uf_inm_manz_frente(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_inm_manz_frente(_s1 character varying, _s2 character varying, _s3 character varying, _manz character varying) RETURNS TABLE(parc character varying, obj_id character varying, parp integer, plano integer, nombre character varying, dompar character varying, matricula character varying, anio smallint, frente character varying)
    LANGUAGE plpgsql
    AS $$
declare
	nfrente smallint;
	vcalle_id smallint;
	vmedida decimal(9,2);
    vobj_id varchar;
BEGIN
    For Parc, obj_id, ParP, Plano, Nombre, DomPar, Matricula, Anio
    In Select i.Parc, i.obj_id, i.ParP, i.Plano, i.Nombre, i.DomPar_Dir, i.Matric, i.Anio
    From v_inm i
    Where i.S1= _s1 and i.S2= _s2 and i.S3 = _s3 and i.Manz= _Manz  Loop
        Frente = '';
        nFrente = 0;

        For vCalle_id, vMedida
        In Select f.Calle_id, f.Medida From Inm_Frente f
        Where f.Obj_id= vObj_id Order By Calle_id Loop
              nFrente = nFrente + 1;
              Frente = Frente || nFrente || ': (' || vCalle_id || ') ' || vMedida || '   ';
        end loop;
        obj_id= vobj_id;
        return;
    end loop;
END;
$$;


ALTER FUNCTION sam.uf_inm_manz_frente(_s1 character varying, _s2 character varying, _s3 character varying, _manz character varying) OWNER TO postgres;

--
-- TOC entry 873 (class 1255 OID 5282888)
-- Name: uf_inm_serv(character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_inm_serv(_obj_id character varying) RETURNS TABLE(pav smallint, agua smallint, cloaca smallint, serv smallint, gas smallint, cordon smallint, residuos smallint, barrido smallint, alumbrado smallint, electricidad smallint, mantvial smallint, zonat character varying, valbas numeric, diamos smallint)
    LANGUAGE plpgsql
    AS $$
declare
	cant smallint;
	vs1 varchar (3);
    vs2 varchar (3);
  	vs3 varchar (3);
	vmanz varchar (6);
	ncm varchar(17);
    vagua smallint;
    vcloaca smallint;
BEGIN
	-- Obtener la Nomenclatura de Manzana del Objeto
    Select Into vs1, vs2, vs3,  vManz
    	i.s1, i.s2, i.s3,  i.Manz
    From inm i Where i.Obj_id = _obj_id;
	ncm:= sam.uf_inm_armar_ncm(vs1, vs2, vs3, vManz);

	-- Inicializo los datos
    pav:=0; agua:=0; cloaca:=0; serv:=0; gas:=0; cordon:=0;
	residuos:=0; barrido:=0; alumbrado:=0; electricidad:=0;
	mantvial:=0; zonat:=0; valbas:=0; diamos:=0;

	-- Recupero los valores óptimos
    Select Into pav, agua, cloaca, gas, cordon, residuos, barrido,
    alumbrado, electricidad, mantvial, zonat, valbas, diamos
        min(e.Pav), max(e.agua), max(e.Cloaca),
        max(e.Gas), max(e.Cordon), max(e.Residuos), max(e.Barrido),
        max(e.Alumbrado), max(e.Electricidad), max(e.MantVial),
        min(e.ZonaT), max(e.ValBas), max(e.DiamOS)
    From inm i
		inner join inm_frente f on i.obj_id=f.obj_id
      	inner join eje e on f.calle_id=e.calle_id and (ncm=e.ncm1 or ncm=e.ncm2)
    Where i.Obj_id = _obj_id;

    vagua = agua;
    vcloaca = cloaca;

    Select Into serv s.cod From Inm_tserv s Where s.agua=vagua and s.cloaca=vcloaca;

    Return;
END;
$$;


ALTER FUNCTION sam.uf_inm_serv(_obj_id character varying) OWNER TO postgres;

--
-- TOC entry 5690 (class 0 OID 0)
-- Dependencies: 873
-- Name: FUNCTION uf_inm_serv(_obj_id character varying); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_inm_serv(_obj_id character varying) IS 'Función que recupera los valores de servicio óptimos según la
información almacenada en los ejes de calle relacionados con los frentes.
Parámetros:
	objeto varchar: Código del Inmueble a consultar
';


--
-- TOC entry 876 (class 1255 OID 5282910)
-- Name: uf_item_act(integer, integer, integer, integer, numeric, numeric, integer, integer, numeric, numeric, numeric, character varying, character varying, character varying, character varying, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_item_act(_trib_id integer, _perdesde integer, _perhasta integer, _perorigen integer, _porc_monto numeric, _porc_min numeric, _decimales integer, _tcalculo integer, _monto numeric, _porc numeric, _minimo numeric, _param1 character varying, _param2 character varying, _param3 character varying, _param4 character varying, _usr_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
	cant smallint;
    vitem_id integer;
    vperorigen integer;
    vtcalculo smallint;
    vmonto numeric;
    vporc numeric;
    vminimo numeric;
    vparam1 varchar;
    vparam2 varchar;
    vparam3 varchar;
    vparam4 varchar;
    vparamcomp1 varchar;
    vparamcomp2 varchar;
    vparamcomp3 varchar;
    vparamcomp4 varchar;
begin
    -- DEF: Procedimiento que crea una nueva vigencia, tomando de un período origen o según parámetros ingresados.

    -- Parámetros:
    -- trib_id: tributo
  	-- perdesde,perhasta: rango nueva vigencia
    -- perorigen: período que se toma como base para nueva vigencia (0 indica que no se toma período base)
    -- porc_monto, porc_min: incremento sobre fijo y mínimo si se toma un período base.
    -- decimales: si se toma un período base con porc, se puede indicar 0 sin decimales.
    -- tcalculo, monto, porc numeric, min, param1..4: Parámetros de la nueva vigencia
    -- usr_id: usuario

    -- Verifique que no existan superposiciones
    Select into cant count(*) from item i inner join item_vigencia v on i.item_id=v.item_id
    where i.trib_id=_trib_id and
    (v.perdesde between _perdesde and _perhasta or v.perhasta between _perdesde and _perhasta);
    if cant>0 then
    	RAISE EXCEPTION 'Existen superposiciones en la nueva vigencia';
    end if;

    -- OBTENGO TODOS LOS ITEMS A ACTUALIZAR
    if _perorigen > 0 Then
        for vitem_id, vtcalculo, vmonto, vporc, vminimo,
            vparam1, vparam2, vparam3, vparam4,
            vparamcomp1, vparamcomp2, vparamcomp3, vparamcomp4
        In select i.item_id, v.tcalculo, v.monto, v.porc, v.minimo,
            v.paramnombre1, v.paramnombre2, v.paramnombre3, v.paramnombre4,
            v.paramcomp1, v.paramcomp2, v.paramcomp3, v.paramcomp4
        from item i inner join item_vigencia v on i.item_id=v.item_id
        where i.trib_id=_trib_id and _perorigen between v.perdesde and v.perhasta Loop

            -- Obtengo los nuevos valores
            vmonto := vmonto + vmonto * _porc_monto;
            vminimo := vminimo + vminimo * _porc_min;
            if (_decimales = 0) then
                vmonto = trunc(vmonto);
                vminimo = trunc(vminimo);
            End If;

            -- Inserto nueva vigencia
            insert into item_vigencia values (vitem_id, _perdesde, _perhasta,
            vtcalculo, vmonto, vporc, vminimo, vparam1, vparam2, vparam3, vparam4,
            vparamcomp1, vparamcomp2, vparamcomp3, vparamcomp4, current_timestamp, _usr_id);
    	End Loop;
    Else
		-- Si no se toma de un período origen, inserto vigencia s/parámetros
        vperorigen := trunc(_perdesde/100) * 100 + 1;
	    For vitem_id in Select i.item_id from item i inner join item_vigencia v on i.item_id=v.item_id
        Where i.trib_id=_trib_id and vperorigen between v.perdesde and v.perhasta Loop
            insert into item_vigencia
            values (vitem_id, _perdesde, _perhasta, _tcalculo, _monto, _porc, _minimo,
            _param1, _param2, _param3, _param4, '', '', '', '', current_timestamp, _usr_id);
		End Loop;
    End If;

End
$$;


ALTER FUNCTION sam.uf_item_act(_trib_id integer, _perdesde integer, _perhasta integer, _perorigen integer, _porc_monto numeric, _porc_min numeric, _decimales integer, _tcalculo integer, _monto numeric, _porc numeric, _minimo numeric, _param1 character varying, _param2 character varying, _param3 character varying, _param4 character varying, _usr_id integer) OWNER TO postgres;

--
-- TOC entry 877 (class 1255 OID 5282911)
-- Name: uf_item_calcular(integer, integer, integer, numeric, numeric, numeric, numeric); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_item_calcular(_item_id integer, _anio integer, _cuota integer, _param1 numeric, _param2 numeric, _param3 numeric, _param4 numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
declare
    item_monto numeric;
    item_tipo smallint;
    trib_tipo smallint;
    vtcalculo smallint;
    vmonto numeric;
    vporc numeric;
    vminimo numeric;
    vparamcomp1 varchar(2);
    vparamcomp2 varchar(2);
    vparamcomp3 varchar(2);
    vparamcomp4 varchar(2);
    varsistema varchar(15);
    valor_mm numeric(12,2);
    cant smallint;
    ssql varchar(100);
BEGIN
  item_monto:=0;

  Select Into trib_tipo t.tipo From item i Inner Join trib t On i.trib_id=t.trib_id
    Where i.item_id = _item_id;

  -- Obtengo los datos del Item
  If ((_anio=0 and _cuota=0) or trib_tipo=3) Then
    Select Into item_tipo, vtcalculo, vmonto, vporc, vminimo,
        vparamcomp1, vparamcomp2, vparamcomp3, vparamcomp4
        i.tipo, v.tcalculo, v.monto, v.porc, v.minimo,
        v.paramcomp1, v.paramcomp2, v.paramcomp3, v.paramcomp4
    From item i Inner Join item_vigencia v On i.item_id=v.item_id
    Where i.item_id=_item_id and extract(year from current_date)*1000+extract(month from current_date)
        between v.perdesde and v.perhasta;
  Else
    Select Into item_tipo, vtcalculo, vmonto, vporc, vminimo,
        vparamcomp1, vparamcomp2, vparamcomp3, vparamcomp4
        i.tipo, v.tcalculo, v.monto, v.porc, v.minimo,
        v.paramcomp1, v.paramcomp2, v.paramcomp3, v.paramcomp4
    From item i Inner Join item_vigencia v On i.item_id=v.item_id
    Where i.item_id=_item_id and _anio*1000+_cuota between v.perdesde and v.perhasta;
  End If;

  If (item_tipo=6) Then -- Redondeo
    --ItemMonto = 0;
    If (vporc=0) Then
        vporc:= 1; --0.5;
    End If;
    item_monto := (1 - vporc) - (_param1 - trunc(_param1));
    If (item_monto < 0) Then item_monto = vporc + item_monto; End If;
    If (item_monto > vporc / 2) Then item_monto = item_monto - vporc; End If;
  Else

    -- Calcular según la Fórmula de Cálculo
    If (vtcalculo = 1) Then  -- Monto
        item_monto = vmonto;
    ElseIf (vtcalculo = 2) Then  -- Monto x Param1
        item_monto = vmonto * _param1;
    ElseIf (vtcalculo = 3) Then  -- Monto x Param1 x Param2
        item_monto = vmonto * _param1 * _param2;
    ElseIf (vtcalculo = 4 or vtcalculo=15) Then  -- Param1 x Porc
        item_monto = _param1 * vporc;
    ElseIf (vtcalculo = 5) Then  -- Param1
        item_monto = _param1;
    ElseIf (vtcalculo = 6) Then  -- Según Tabla Asociada
        -- verificar que no haya ambigüedad en los datos
        sSql = 'Select coalesce(monto, 0) From item_asoc Where item_id = ' || item_id;
        If (vparamcomp1 <> '') Then sSql = sSql || ' and Param1' || vparamcomp1 || _param1; End If;
        If (vparamcomp2 <> '') Then sSql = sSql || ' and Param2' || vparamcomp2 || _param2; End If;
        If (vparamcomp3 <> '') Then sSql = sSql || ' and Param3' || vparamcomp3 || _param3; End If;
        If (vparamcomp4 <> '') Then sSql = sSql || ' and Param4' || vparamcomp4 || _param4; End If;

        item_monto:=0;
        For vmonto In Execute sSql Loop
            item_monto:= vmonto;
        End Loop;

    ElseIf (vtcalculo = 7) Then  -- Min+(Param1-Cant Base)xMonto
        item_monto = vminimo + (_anio - vporc) * vmonto;
    ElseIf (vtcalculo = 8) Then  -- Mn+Ent(Param1-Porc)xMonto
        item_monto = vminimo + trunc(_param1 - vporc) * vmonto;
    ElseIf (vtcalculo = 9) Then  -- Monto Fijo por período
        Select Into item_monto coalesce(v.monto, 0) From trib_venc_item v Where v.item_id = _item_id
          and v.anio=_anio and v.cuota=_cuota;
    ElseIf (vtcalculo = 10) Then -- Monto * Ent(Param/Porc)
        item_monto = vmonto * Ceil(_param1 / vporc);
    ElseIf (vtcalculo = 11) Then -- Monto + Monto * Porc * (Param1 - 1)
        item_monto = vmonto + vmonto * vporc * (_param1 - 1);
    ElseIf (vtcalculo = 12) Then -- VariableSistema * Param2
        -- recupero el nombre del Parametro 1 que identifica la Variable
        Select Into varsistema v.paramnombre1 From item i Inner Join item_vigencia v On i.item_id = v.item_id
            Where i.item_id = _item_id and v.perdesde <= _anio*1000+_cuota and v.perhasta >= _anio*1000+_cuota;
        Select Into item_monto v.defecto From var v Where v.uso = 1
          and v.nombre = varsistema;
        item_monto = item_monto * _param2;
    Elseif (vtcalculo = 13) then -- Monto * Porc * Param1
        item_monto = vmonto * vporc * _param1;
    ElseIf (vtcalculo = 14) then -- Monto * Ent(Param1) * Param2
        item_monto = vmonto * Ceiling(_param1) * _param2;
    ElseIf (vtcalculo = 16) then -- Monto * Param1 + Param2*Porc
        item_monto = vmonto * _param1 + _param2 * vporc;
    ElseIf (vtcalculo = 17) then -- Param1 / ValorModulo
        -- Obtengo Valor MM (Módulos Municipales) s/ período
        Select Into valor_mm mm.valor
        From calc_mm mm Where current_date between fchdesde and fchhasta;
        valor_mm := coalesce(valor_mm,1);

        item_monto = _param1 / valor_mm;
	End If;

    item_monto = coalesce(item_monto, 0);
    If (item_monto < vminimo and vminimo<>0) Then item_monto = vminimo; End If;

    -- Verificar el Tipo de Item (si es Descuento el monto es negativo)
    If (item_tipo = 3) Then item_monto = - item_monto; End If;

  End If;

  Return item_monto;
End;
$$;


ALTER FUNCTION sam.uf_item_calcular(_item_id integer, _anio integer, _cuota integer, _param1 numeric, _param2 numeric, _param3 numeric, _param4 numeric) OWNER TO postgres;

--
-- TOC entry 878 (class 1255 OID 5282913)
-- Name: uf_item_cortar(integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_item_cortar(_trib_id integer, _per_sup integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    vper_hasta integer;
    vcuota smallint;
begin
    -- DEF: Procedimiento que corta la vigencia de los items de un tributo
    -- a partir de un período límite

    -- Obtengo el período Hasta
    vcuota := _per_sup - trunc(_per_sup / 1000) * 1000;
    if vcuota=0 or vcuota=1 Then
    	vper_hasta := (trunc(_per_sup/1000)-1) * 1000 + 99;
    else
	    vcuota := vcuota-1;
		vper_hasta := trunc(_per_sup/1000) * 1000 + vcuota;
    end if;

    -- Realizo el corte de vigencia
	Delete From item_vigencia v
    where v.item_id in (select i.item_id from item i where i.trib_id=_trib_id)
    and v.perdesde>vper_hasta;

    Update item_vigencia v set perhasta=vper_hasta
    where v.item_id in (select i.item_id from item i where i.trib_id=_trib_id)
    and v.perhasta>vper_hasta;

End
$$;


ALTER FUNCTION sam.uf_item_cortar(_trib_id integer, _per_sup integer) OWNER TO postgres;

--
-- TOC entry 879 (class 1255 OID 5282914)
-- Name: uf_judi_etapa_baja(integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_judi_etapa_baja(_judi_id integer, _usr_id integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
  resultado varchar;
  vestado varchar(1);
  vest_fin varchar(1);
  vdeuda numeric(12,2);
  vgasto_jud numeric(12,2);
  vhono_jud numeric(12,2);
  vsupuesto smallint;
  vorden smallint;
  sSql varchar(250);
BEGIN
    -- Eliminar la última etapa y actualizar datos de la planilla

	-- inicializo
    vsupuesto = 0; vgasto_jud = 0; vhono_jud = 0;

	-- Obtengo el último orden
    Select Into vorden coalesce(max(e.orden),0) From judi_etapa e where e.judi_id=_judi_id;

    if vorden = 0 then
    	resultado := 'No existen etapas para eliminar.';

    else
		-- Elimino la última etapa
        delete from judi_etapa e where e.judi_id=_judi_id and e.orden=vorden;


        -- Obtengo el estado Actual de la Planilla
        Select Into vestado,vdeuda j.Est,j.nominal+j.accesor+j.multa+j.multa_omi
        From Judi j WHERE j.Judi_Id= _Judi_Id;

        -- Obtengo el estado que debería quedar la planilla
        Select Into vorden coalesce(max(e.orden),0)
        From judi_etapa e where e.judi_id=_judi_id;

        if vorden = 0 then
        	vest_fin = 'R';
        else
            Select Into vest_fin,vsupuesto,vgasto_jud,vhono_jud  t.est,t.supuesto,e.gasto_jud,e.hono_jud
            From judi_etapa e inner join judi_tetapa t on e.etapa=t.cod
            where e.judi_id=_judi_id and e.orden=vorden;
		end If;

		-- Calculo gastos y honorarios judiciales (si corresponde)
        if vgasto_jud=0 and vhono_jud=0 then
        	Select Into vgasto_jud,vhono_jud coalesce(h.gasto_jud,0),coalesce(h.hono_jud,0)
            From sam.uf_judi_hono(vest_fin,vsupuesto,vdeuda) h;
        End If;


		-- Actualizo la planilla
        If vest_fin = 'R' then -- "Previo"
        	sSql := ',fchapremio=null';

        elseif vest_fin = 'A' then -- "Apremio"
        	sSql := ',fchprocurador=null,procurador=null,juzgado=null';

		elseif vestado='B' then -- "Baja"
	        sSql := ',fchbaja=null';

    	elseif vest_fin='E' and vfchjuicio is null then -- "Juicio"
            sSql := ',fchjuicio=null';

        End if;

        sSql := 'Update judi set est=' || quote_literal(vest_fin) ||
        		',FchMod = current_timestamp, UsrMod =' || _Usr_id ||
        		',gasto_jud=' || vgasto_jud || ',hono_jud=' || vhono_jud ||
                ssql ||
        		' where judi_id=' || _judi_id;

		execute sSql;


		-- Si es baja, actualizo ctacte
		If vestado='B' then
            UPDATE ctacte c SET Est = 'J',
            Obs= replace(obs,'/Perteneció al Apremio:'|| _judi_id ||'/','/Judi:'|| _judi_id ||'/')
            From judi_periodo p
            WHERE p.judi_id=_judi_id and c.ctacte_id=p.ctacte_id;
    	End If;

        Resultado = 'OK';

    End if;

    return Resultado;
END;
$$;


ALTER FUNCTION sam.uf_judi_etapa_baja(_judi_id integer, _usr_id integer) OWNER TO postgres;

--
-- TOC entry 880 (class 1255 OID 5282915)
-- Name: uf_judi_etapa_nueva(integer, integer, date, integer, integer, integer, numeric, numeric, character varying, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_judi_etapa_nueva(_judi_id integer, _etapa integer, _fecha date, _procurador integer, _juzgado integer, _motivo integer, _hono_jud numeric, _gasto_jud numeric, _detalle character varying, _usr_id integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
  resultado varchar;
  vfchjuicio date;
  vestado varchar(1);
  vest_ini varchar(5);
  vest_fin varchar(1);
  vpedir_proc boolean;
  vpedir_dev boolean;
  vpedir_hono boolean;
  vnombre varchar;
  vorden smallint;
  vdetalle varchar(100);
  vdeuda numeric(12,2);
  vgasto_jud numeric(12,2);
  vhono_jud numeric(12,2);
  vsupuesto smallint;  
  sSql varchar(250);
BEGIN
    -- Registrar una nueva etapa y actualizar datos de la planilla

    -- Obtengo el estado Actual de la Planilla
    Select Into vestado,vfchjuicio,vdeuda j.Est,j.fchjuicio,(j.nominal+j.accesor+j.multa+j.multa_omi)
    From Judi j where j.Judi_Id= _Judi_Id;

	-- Obtengo el último orden
    Select Into vorden coalesce(max(e.orden),0) From judi_etapa e where e.judi_id=_judi_id;
    
	-- Obtengo los parámtetros de la etapa
    Select Into vest_fin,vest_ini,vpedir_proc,vpedir_dev,vpedir_hono,vsupuesto
    t.est,t.est_ini,t.pedir_proc,t.pedir_dev,t.pedir_hono,t.supuesto
    From judi_tetapa t where cod=_etapa;
    
    -- Validaciones
    if (vpedir_proc and _procurador=0 and _juzgado=0) or (vpedir_dev and _motivo=0) or (vpedir_hono and _gasto_jud+_hono_jud=0) Then
    	resultado := 'No se recibieron los parámetros requeridos';

    elseif position(vestado in vest_ini) = 0 then
    	resultado := 'No se puede agregar la etapa, dado que la planilla no se encuentra en el estado requerido.'
        			' La planilla eposee estado "' || vestado || '" y se requiere "' || vest_ini || '"';	
    else
    	-- Si se recibió procurador obtengo el nombre
        if vpedir_proc then 
            Select Into vnombre coalesce(p.apenom,'') from sam.sis_usuario p where p.usr_id=_procurador;
            vdetalle = 'Procurador: ' || vnombre || '. ' || coalesce(_detalle,'');
        else 
        	vdetalle = coalesce(_detalle,'');
        End if;
        
		-- calculo gastos y honorarios judiciales (si corresponde)
        if _gasto_jud=0 and _hono_jud=0 then
        	Select Into vgasto_jud,vhono_jud h.gasto_jud,h.hono_jud
            From sam.uf_judi_hono(vest_fin,vsupuesto,vdeuda) h;
        else
        	vgasto_jud:=_gasto_jud;
            vhono_jud:=_hono_jud;
        End If;
        vgasto_jud:=coalesce(vgasto_jud,0);
        vhono_jud:=coalesce(vhono_jud,0);
        
                
        -- Actualizo la planilla
        If vest_fin = 'A' then -- "Apremio"
        	sSql := ',fchapremio=' || quote_literal(to_char(_fecha,'YYYY/MM/DD'));

        elseif vpedir_proc then -- "Procurador"
        	sSql := ',fchprocurador=' || quote_literal(to_char(_fecha,'YYYY/MM/DD')) ||
            		',procurador=' || _procurador || ',juzgado=' || _juzgado;

        elseif vpedir_dev then -- "Devolución"
        	sSql := ',fchdev=' || quote_literal(to_char(_fecha,'YYYY/MM/DD')) || 
            		',motivo_dev=' || _motivo;

		elseif vest_fin='B' then -- "Baja"
	        sSql := ',fchbaja=' || quote_literal(to_char(_fecha,'YYYY/MM/DD'));

    	elseif vest_fin='J' and vfchjuicio is null then -- "Juicio"
            sSql := ',fchjuicio=' || quote_literal(to_char(_fecha,'YYYY/MM/DD'));
            
        End if;
        
        sSql := 'Update judi set est=' || quote_literal(vest_fin) || 
        		',FchMod = current_timestamp, UsrMod =' || _Usr_id || 
                ',gasto_jud=' || vgasto_jud || ',hono_jud=' || vhono_jud ||
                ssql ||
            	' where judi_id=' || _judi_id;

    	execute ssql;
        
		-- Inserto una nueva etapa
   		INSERT Into judi_etapa Values (
        _Judi_id,vorden+1,_fecha,_etapa,vdetalle,_hono_jud,_gasto_jud,current_timestamp,_usr_id);


		-- Si es baja, actualizo ctacte
		If vest_fin='B' then
            UPDATE ctacte c SET Est = p.est, 
            Obs= replace(obs,'/Judi:'|| _judi_id ||'/','/Perteneció al Apremio:'|| _judi_id ||'/')
            From judi_periodo p
            WHERE p.judi_id=_judi_id and c.ctacte_id=p.ctacte_id;
    	End If;
        
        Resultado = 'OK';
        
    End if;

	raise notice '%',resultado;
    
    return Resultado;
END;
$$;


ALTER FUNCTION sam.uf_judi_etapa_nueva(_judi_id integer, _etapa integer, _fecha date, _procurador integer, _juzgado integer, _motivo integer, _hono_jud numeric, _gasto_jud numeric, _detalle character varying, _usr_id integer) OWNER TO postgres;

--
-- TOC entry 881 (class 1255 OID 5282917)
-- Name: uf_judi_hono(character varying, integer, numeric); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_judi_hono(_est character varying, _supuesto integer, _deuda numeric) RETURNS TABLE(hono_jud numeric, gasto_jud numeric)
    LANGUAGE plpgsql
    AS $$
Declare
	hono_min numeric;
    hono_porc numeric;
BEGIN
	-- obtengo los valores de honorarios
    hono_jud = 0;
    Select Into hono_min, hono_porc, gasto_jud h.hono_min, h.hono_porc, h.gastos
    From judi_hono h
    Where h.est=_est and h.supuesto=_supuesto and
    	_deuda between h.deuda_desde and h.deuda_hasta;

    if hono_porc > 0 then hono_jud = (_deuda * hono_porc)/100; end if;
    if hono_jud < hono_min then hono_jud = hono_min; end if;

    return next;
End;
$$;


ALTER FUNCTION sam.uf_judi_hono(_est character varying, _supuesto integer, _deuda numeric) OWNER TO postgres;

--
-- TOC entry 882 (class 1255 OID 5282920)
-- Name: uf_libredeuda(character varying, integer, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_libredeuda(_obj_id character varying, _aniodesde integer, _aniohasta integer, _tobj integer, _trib_id integer) RETURNS TABLE(tobj smallint, obj_id character varying, obj_nom character varying, dompos_dir character varying, num character varying, num_nom character varying, fchemi date, escribano character varying, titulo character varying, detalle character varying, mensaje character varying, obs character varying, d_deuda character varying, d_total numeric, j_deuda character varying, j_total numeric, x_deuda character varying, x_total numeric, deudaplanes character varying, totalplanes numeric, deudamejoras character varying, totalmejoras numeric, deudaotras character varying, totalotras numeric, proxvenc character varying, sindeudas smallint, tobj_nom character varying, lib_id smallint, est_obj character, fchbaja date)
    LANGUAGE plpgsql
    AS $$
declare
  vdeuda varchar(250);
  vtotal numeric(12,2);
  cant smallint;
BEGIN
    obj_id:= _obj_id;
    tobj:= _tobj;

    -- Datos del Objeto
    Select Into tobj_nom t.nombre From objeto_tipo t Where t.cod = _tobj;

    Select Into lib_id max(ldeuda_Id) From ctacte_libredeuda l Where l.obj_id = _obj_id;

    Select Into obj_nom, dompos_dir, num, num_nom, fchemi, escribano, titulo, detalle, mensaje, obs,est_obj,fchbaja
    l.obj_nom, l.dompos_dir, l.num, l.num_nom, l.fchemi, l.escribano, l.titulo, l.detalle, l.mensaje, l.obs,l.est_obj,l.fchbaja
    From v_libredeuda l Where ldeuda_id = lib_id;


    -- Inicializo Datos
    d_deuda:= '';  d_total:= 0;
    x_deuda:= '';  x_total:= 0;
    j_deuda:= '';  j_total:= 0;
    deudaplanes:= '';  totalplanes:= 0;
    deudamejoras:= '';  totalmejoras:= 0;
    deudaotras:= '';  totalotras:= 0;
    proxvenc:= ''; cant:= 0;


    -- A. Detalle de Deuda
    vdeuda:= '';  vtotal:= 0;
    For vdeuda, vtotal In Select d.deuda, d.total
    From sam.uf_libredeuda_deuda(obj_id, _aniodesde, _aniohasta, _tobj, 'D', _trib_id) d
    Loop
        d_deuda:= d_deuda || rtrim(vdeuda) || chr(13);
        d_total:= d_total + vtotal;
    End Loop;


    -- B. Deuda en Juicio
    vdeuda:= '';  vtotal:= 0;
    For vdeuda, vtotal In Select d.deuda, d.total
    From sam.uf_libredeuda_deuda(obj_id, _aniodesde, _aniohasta, _tobj, 'J', _trib_id) d
    Order By d.trib_id, d.objcta, d.anio Loop
        j_deuda:= j_deuda || rtrim(vdeuda) || chr(13);
        j_total:= j_total + vtotal;
    End Loop;


    -- C. Períodos sin Presentación de DJ
    vdeuda:= '';  vtotal:= 0;
    If _tobj in (1,2) Then
        For vdeuda, vtotal In Select d.deuda, d.total
        From sam.uf_libredeuda_deuda(obj_id, _aniodesde, _aniohasta, _tobj, 'X', _trib_id) d
        Order By d.trib_id, d.objcta, d.anio Loop
            x_deuda:= x_deuda || rtrim(vdeuda) || chr(13);
            x_total:= x_total + vtotal;
        End Loop;
    End If;


    -- D. Convenios de Pago Vigentes
    vdeuda:= '';  vtotal:= 0;
    For vdeuda, vtotal In Select d.deuda, d.total
    From sam.uf_libredeuda_planes(obj_id, _aniodesde, _aniohasta, _tobj, _trib_id) d
    Order By d.plan_id Loop
        deudaplanes:= deudaplanes || vdeuda || chr(13);
        totalplanes:= totalplanes + vtotal;
    End Loop;


    -- E. Mejoras con Deuda
    vdeuda:= '';  vtotal:= 0;
    If _tobj=1 and _trib_id=0 Then
        For vdeuda, vtotal In Select d.deuda, d.total
        From sam.uf_libredeuda_mejoras(obj_id, _aniodesde, _aniohasta, _tobj) d
        Order By d.plan_id Loop
            deudamejoras:= deudamejoras || vdeuda || chr(13);
            totalmejoras:= totalmejoras + vtotal;
        End Loop;
    End If;


    -- F. Otras Deudas
    If _trib_id=0 Then
        vdeuda:= '';  vtotal:= 0;
        For vdeuda, vtotal In Select d.deuda, d.total
        From sam.uf_libredeuda_otros(obj_id, _aniodesde, _aniohasta, _tobj) d Loop
            deudaotras:= deudaotras || vdeuda || chr(13);
            totalotras:= totalotras + vtotal;
        End Loop;
    End If;


    -- G. Próximos Vencimientos
    vdeuda:= '';
    For vdeuda In Select d.proxvenc
    From sam.uf_libredeuda_prox(obj_id, _aniodesde, _aniohasta, _tobj, _trib_id) d
    Group By d.proxvenc,d.proxfchvenc Order By d.proxfchvenc Loop
        proxvenc:= proxvenc || vdeuda || chr(13);
    End Loop;


    -- H. Verificar si no tiene Deuda de ningún concepto
    If (d_total=0 and j_total=0 and x_deuda='' and totalplanes=0 and totalmejoras= 0 and totalotras=0) Then
        sindeudas:= 1;
    Else
        sindeudas:= 0;
    End If;
    Return Next;
End
$$;


ALTER FUNCTION sam.uf_libredeuda(_obj_id character varying, _aniodesde integer, _aniohasta integer, _tobj integer, _trib_id integer) OWNER TO postgres;

--
-- TOC entry 5691 (class 0 OID 0)
-- Dependencies: 882
-- Name: FUNCTION uf_libredeuda(_obj_id character varying, _aniodesde integer, _aniohasta integer, _tobj integer, _trib_id integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_libredeuda(_obj_id character varying, _aniodesde integer, _aniohasta integer, _tobj integer, _trib_id integer) IS 'Función que devuelve todos los Datos del Libre Deuda Liquida y Exigible
con formato de texto plano
Parámetros:
  _obj_id varchar: Identificación del Objeto.
  _aniodesde integer: Año Desde para la consulta.
  _aniohasta integer: Año Hasta.
  _tobj integer: Código del tipo de Objeto.
  _trib_id integer: Tributo (0 indica todos)
';


--
-- TOC entry 883 (class 1255 OID 5282921)
-- Name: uf_libredeuda_deuda(character varying, integer, integer, integer, character varying, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_libredeuda_deuda(_obj_id character varying, _aniodesde integer, _aniohasta integer, _tobj integer, _est character varying, _trib_id integer) RETURNS TABLE(trib_id smallint, objcta character varying, anio smallint, deuda character varying, total numeric)
    LANGUAGE plpgsql
    AS $_$
declare
    sql text;
    trib_nom varchar(15);
    monto numeric(12,2);
    accesor numeric(12,2);
    multa numeric(12,2);
    vtrib_id integer;
    vanio smallint;
    vcuota smallint;
    vnominal numeric(12,2);
    vnominalcub numeric(12,2);
    vmulta numeric(12,2);
    vfchvenc timestamp;
    vfchpago timestamp;
    vfchcons date;
    vtrib_ant smallint;
    vobjcta_ant varchar(11);
    vanio_ant smallint;
    vcuota_ant smallint;
    vinteres numeric(12,2);
    vdeudaperiodos varchar(250);
    totaltrib numeric(12,2);
    valorucm1 numeric(9,3);
    valorucm2 numeric(9,3);
    ucm numeric(12,2);
    ucm_usar smallint;
    per_plandecaido boolean;
    vobj_vinc varchar(8);
    vcta smallint;
BEGIN
    vobjcta_ant = '';
    vtrib_ant = 0;  vanio_ant = 0;  vcuota_ant = 0;
    vdeudaperiodos = '';  total = 0;  trib_nom = '';  totaltrib = 0;
    monto = 0;  accesor = 0;  multa = 0;

    -- Obtengo el ValorUCM
    Select Into valorucm1, valorucm2, per_plandecaido c.ucm1, c.ucm2, c.per_plan_decaido From sam.config c;

    -- Genero el script de la consulta
    sql = 'Select case when c.subcta = 0 then c.obj_id || ' || quote_literal('   ') ||
          ' else c.obj_id || ' || quote_literal('/') || ' || lpad(ltrim(cast(c.subcta as varchar(2))),2,' || quote_literal('0') || ') end,
          c.trib_id, c.anio, c.cuota, c.nominal, c.nominalcub, c.ucm, c.multa, c.fchvenc, c.fchpago, t.ucm
          From ctacte c
          Left Join trib t on c.trib_id=t.trib_id
          Where c.obj_id=' || quote_literal(_obj_id);

    If _trib_id>0 Then
        sql = sql || ' and c.trib_id=' || _trib_id;
    End If;

    sql = sql || ' and ((t.tipo in (1,2,4) and c.anio <= ' || _aniohasta || ' And c.anio >= ' || _aniodesde || ') ';

	If (_aniodesde > 0 and per_plandecaido =true) Then
		sql = sql || 'Or (t.tipo in (1,2,4) and c.ctacte_id in (select ctacte_id from plan_periodo)) ';
    End If;

    sql = sql || 'Or (t.tipo = 3)) and c.est = ' || chr(39) || _est || chr(39) ||
    	' and c.trib_id<>2 and c.FchVenc < current_date
        Order By c.trib_id, c.subcta, c.anio, c.cuota';


	-- Bucle para recorrer los datos de la consulta
    For objcta, vtrib_id, vanio, vcuota, vnominal, vnominalcub, ucm, vmulta, vfchvenc, vfchpago, ucm_usar
    In Execute sql Loop
        If (vobjcta_ant = '') Then vobjcta_ant = objcta; End If;
        If (vanio_ant = 0) Then vanio_ant = vanio; End If;
        If (vtrib_ant = 0) Then
            vtrib_ant = vtrib_id;
            Select Into trib_nom t.nombre_redu From trib t Where t.trib_id=vtrib_ant;
        End If;

        -- Si está en Deuda y es UCM, lo transformo en $
        If (_est ='D' and ucm>0 and vnominal=0) Then
           If ucm_usar = 1 Then
              vnominal = ucm * valorucm1;
           Else
              vnominal = ucm * valorucm2;
           End If;
        End If;

        If (objcta <> vobjcta_ant or vtrib_id <> vtrib_ant or vanio <> vanio_ant) Then
            -- Cuando el objeto/trib/año cambia, devuelvo el resumen anual e inicializo los datos
            objcta = vobjcta_ant;
            trib_id = vtrib_ant;
            anio = vanio_ant;
            deuda = rpad(trib_nom::varchar,16,' ') || rpad(vobjcta_ant,12,' ') || vanio_ant || ': ' ||
                    rpad(substr(vdeudaperiodos,1,length(vdeudaperiodos)-2),50,' ');
            total = monto + accesor + multa;
            totaltrib = totaltrib + total;

            If (objcta <> vobjcta_ant or vtrib_id <> vtrib_ant) Then
                If (totaltrib > 0) Then
                	deuda:= deuda || '  ' || lpad(totaltrib::varchar,12,' ');
                End If;
                Return Next;

                anio:= 9999;
                deuda:= rpad('_',100,'_');
                total:= 0;
                Return Next;
                Select Into trib_nom t.nombre_redu From trib t Where t.trib_id=vtrib_id;
                totaltrib:= total;
            Else
                Return Next;
                trib_nom = ' ';
                vobjcta_ant = ' ';
            End If;

            vobjcta_ant = objcta;
            vtrib_ant = vtrib_id;
            vanio_ant = vanio;
            monto = 0;
            accesor = 0;
            multa = 0;
            deuda = '';
            vdeudaperiodos = '';
        End If;

        -- Acumulo los valores
        If (_est in ('D','J')) Then
            If (vfchpago is null or vfchpago<=vfchvenc) Then
                vfchcons:=vfchvenc;
            Else
            	vfchcons:=vfchpago;
            End If;

			vcta := case when substr(objcta,10,2)='  ' then 0 else substr(objcta,10,2)::smallint end;
            vinteres:= sam.uf_calc_accesor(vtrib_id,substr(objcta,1,8)::varchar,vcta,
            vanio*100+vcuota,vnominal,vnominalcub,vfchcons,current_date);
        Else
            vinteres:= 0;
        End If;

        If (not _est in ('E','N','F','R','B')) Then
            If (vnominalcub<=vnominal) Then
                monto:= monto + vnominal - vnominalcub;
            Else
            	monto:= 0;
            End If;
            accesor:= accesor + vinteres;
            multa:= multa + vmulta;
        End If;

        vdeudaperiodos = vdeudaperiodos || lpad(vcuota::varchar,2,'0') || ', ';
    End Loop;

    -- Devuelvo los datos del último registro
    If (_tobj <> 3) Then
        objcta = vobjcta_ant;
    Else
        objcta = _obj_id;
    End If;
    trib_id = vtrib_ant;
    anio = vanio_ant;
    If (length(vdeudaperiodos)>0) Then
    	deuda = rpad(trib_nom::varchar,16,' ') || rpad(vobjcta_ant,12,' ') || vanio_ant || ': ' ||
                rpad(substr(vdeudaperiodos,1,length(vdeudaperiodos)-2),50,' ');
    Else
    	deuda = rpad(trib_nom::varchar,16,' ') || rpad(vobjcta_ant,12,' ') || vanio_ant || ': ';
    End If;

    total = monto +accesor + multa;
    totaltrib = totaltrib + total;

    If (totaltrib > 0) Then
    	deuda:= deuda || '  ' || lpad(totaltrib::varchar,12,' ');
    End If;

    If (vanio <> 0) Then
        Return Next;
        anio = 9999;
        deuda = rpad('_',100,'_');
        total = 0;
        Return Next;
    End If;

    -- Si se trata de una Persona, recupero la deuda de otros Objetos
    If (_tobj = 3) Then
    	For vobj_vinc In Select op.obj_id From objeto_persona op
        Where op.num=_obj_id and op.obj_id<>_obj_id and op.est='A' order by op.obj_id Loop
		    For trib_id, objcta, anio, deuda,total
		    In Select c.trib_id, c.objcta, c.anio, c.deuda, c.total
            From sam.uf_libredeuda_deuda(vobj_vinc, _aniodesde, _aniohasta, 0, _est, _trib_id) c
            Order By c.trib_id, c.objcta, c.anio Loop
            	Return Next;
            End Loop;
        End Loop;
    End If;

End
$_$;


ALTER FUNCTION sam.uf_libredeuda_deuda(_obj_id character varying, _aniodesde integer, _aniohasta integer, _tobj integer, _est character varying, _trib_id integer) OWNER TO postgres;

--
-- TOC entry 885 (class 1255 OID 5282924)
-- Name: uf_libredeuda_otros(character varying, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_libredeuda_otros(_obj_id character varying, _aniodesde integer, _aniohasta integer, _tobj integer) RETURNS TABLE(deuda character varying, total numeric)
    LANGUAGE plpgsql
    AS $$
declare
  trib_nom varchar(15);
  obj_aux varchar(11);
  vfchemi timestamp;
  vfchvenc timestamp;
  monto numeric(12,2);
BEGIN
    monto:=0;
    total :=0;

    For obj_aux, trib_nom, vfchemi, vfchvenc, monto
    	In Select case c.subcta when 0 then c.obj_id || '   '
          else c.obj_id || '/' || lpad(ltrim(cast(c.subcta as varchar(2))),2,'0') end,
          t.nombre_redu, c.fchemi, c.fchvenc, c.nominal-c.nominalcub
        From ctacte c
        Left Join trib t on c.trib_id=t.trib_id
        Where c.obj_id=_obj_id
        and (t.tipo = 3) and c.est = 'D' and c.fchvenc >= current_date
    Loop
        deuda = rpad(trib_nom,25,' ') || rpad(obj_aux,15,' ')
            || to_char(vfchemi,'DD/MM/YYYY') || '     '
            || to_char(vfchvenc,'DD/MM/YYYY') || '     ' || lpad(monto::text,15,' ');
        total:= total + monto;
        Return Next;
    End Loop;

    -- Si se trata de una Persona, recupero la deuda de otros Objetos
    If (_tobj = 3) Then
    	For obj_aux In Select op.obj_id From objeto_persona op
        	Where op.num=_obj_id and op.obj_id<>_obj_id and op.est='A' order by op.obj_id
		Loop
		    For deuda, total
		    In Select c.deuda, c.total
            From sam.uf_libredeuda_otros(obj_aux, _aniodesde, _aniohasta, 0) c
			Loop
            	Return Next;
            End Loop;
        End Loop;
    End If;

End
$$;


ALTER FUNCTION sam.uf_libredeuda_otros(_obj_id character varying, _aniodesde integer, _aniohasta integer, _tobj integer) OWNER TO postgres;

--
-- TOC entry 5692 (class 0 OID 0)
-- Dependencies: 885
-- Name: FUNCTION uf_libredeuda_otros(_obj_id character varying, _aniodesde integer, _aniohasta integer, _tobj integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_libredeuda_otros(_obj_id character varying, _aniodesde integer, _aniohasta integer, _tobj integer) IS 'Función que devuelve un cursor conteniendo el resumen de tributos eventuales
Esta función es utilizada para emitir el Libre Deuda
Parámetros:
  vobj_id varchar: Identificación del Objeto.
  vaniodesde integer: Año Desde para la consulta.
  vaniohasta integer: Año Hasta.
  vtobj integer: Código del tipo de Objeto.';


--
-- TOC entry 886 (class 1255 OID 5282925)
-- Name: uf_libredeuda_planes(character varying, integer, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_libredeuda_planes(_obj_id character varying, _aniodesde integer, _aniohasta integer, _tobj integer, _trib_id integer) RETURNS TABLE(plan_id integer, deuda character varying, total numeric)
    LANGUAGE plpgsql
    AS $$
declare
    plan_id_ant integer;
    plan_id_aux integer;
    obj_aux varchar(8);
    obj_plan varchar(8);
    trib_id smallint;
    est char(1);
    fchvenc timestamp;
    fchpago timestamp;
    fchcons date;
    interes numeric(12,2);
    nominal numeric(12,2);
    nominalcub numeric(12,2);
    tipo varchar(20);
    fchalta date;
    cuotas smallint;
    montodeuda numeric(12,2);
    pagado numeric(12,2);
    cuovenc smallint;
    cuonovenc smallint;
    cuota smallint;
    saldo numeric(12,2);
    accesor numeric(12,2);
    tpago varchar(20);
BEGIN
    total:= 0;
    accesor:= 0;
    plan_id_ant:= 0;
    obj_aux:= _obj_id;

    For plan_id, obj_plan, tipo, fchalta, montodeuda, pagado, cuotas, cuovenc, cuonovenc,
    est, saldo, trib_id, fchvenc, fchpago, nominal, nominalcub, cuota, tpago
    In Select p.plan_id, p.obj_id, substr(g.nombre,1,20), c.fchemi, p.total, p.pagado,
    p.cuotas, p.cuotas_venc, p.cuotas_novenc, c.est, p.saldo, c.trib_id, c.fchvenc, c.fchpago,
    c.nominal, c.nominalcub, c.cuota, tp.nombre
    From ctacte c
    Left Join v_plan_deuda p On c.anio = p.plan_id
    Left Join plan_config g On p.tplan = g.cod
    Left Join plan l On p.plan_id=l.plan_id
    Left Join plan_tpago tp On l.tpago=tp.cod
    Where c.trib_id = 1 and c.obj_id=obj_aux and p.est = 1
    Order By c.anio, c.cuota Loop

        If (plan_id_ant = 0) Then
            plan_id_ant:=plan_id;
        End If;

        If (plan_id_ant <> plan_id) Then -- tengo que devolver los datos e inicializar
           If (total> 0) Then
                plan_id_aux:= plan_id;
                plan_id = plan_id_ant;
                Return Next;
                -- inicializo
                plan_id:= plan_id_aux;
                plan_id_ant:= plan_id;
                accesor:= 0;
            End If;
        End If;

        If (est = 'D' or est = 'J') Then
            If (fchpago is null or fchpago<=fchvenc) Then
                fchcons:=fchvenc;
            Else
                fchcons:=fchpago;
            End If;

            interes:=sam.uf_calc_accesor(trib_id,obj_aux,0,plan_id*1000+cuota,nominal,nominalcub,fchcons,current_date);
            accesor:= accesor + interes;
        End If;

        total:= saldo + accesor;
        deuda = rpad(plan_id_ant::varchar,8,' ') || obj_plan || '  ' || to_char(fchalta,'DD/MM/YYYY') || ' '
        || rpad(tpago::varchar,12,' ') || lpad(montodeuda::varchar,10,' ') || lpad(pagado::varchar,10,' ') || '  '
        || rpad(cuotas::varchar,5,' ') || rpad(cuovenc::varchar,6,' ') || rpad(cuonovenc::varchar,5,' ')
        || lpad(saldo::varchar,10,' ') || lpad(accesor::varchar,9,' ') || lpad(total::varchar,10,' ');
    End Loop;

    If (total> 0) then
        Return Next;
    End If;

    -- Si se trata de una Persona, recupero la deuda de otros Objetos
    If (_tobj = 3) Then
    	For obj_aux In Select op.obj_id From objeto_persona op
        Where op.num=_obj_id and op.obj_id<>_obj_id and op.est='A' order by op.obj_id Loop
		    For plan_id, deuda, total
		    In Select c.plan_id, c.deuda, c.total
            From sam.uf_libredeuda_planes(obj_aux, _aniodesde, _aniohasta, 0, _trib_id) c
            Order By c.plan_id Loop
            	Return Next;
            End Loop;
        End Loop;
    End If;

End
$$;


ALTER FUNCTION sam.uf_libredeuda_planes(_obj_id character varying, _aniodesde integer, _aniohasta integer, _tobj integer, _trib_id integer) OWNER TO postgres;

--
-- TOC entry 887 (class 1255 OID 5282926)
-- Name: uf_libredeuda_prox(character varying, integer, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_libredeuda_prox(_obj_id character varying, _aniodesde integer, _aniohasta integer, _tobj integer, _trib_id integer) RETURNS TABLE(proxvenc character varying, proxfchvenc date)
    LANGUAGE plpgsql
    AS $$
declare
    trib_nom varchar(25);
    periodo varchar(7);
    trib_aux smallint;
    anio_aux smallint;
    cuota_aux smallint;
    obj_aux varchar(8);
    tobj_aux smallint;
    plan_id integer;
    fchvenc timestamp;
    cant smallint;
BEGIN
    -- de Emisión y Periódicas
    For trib_aux, trib_nom, periodo, fchvenc, anio_aux, cuota_aux
    In Select t.trib_id, t.nombre_redu, min(cast(v.anio as varchar(4))||'/'||lpad(cast(v.cuota as varchar(2)),2,'0')),
    min(v.fchvenc2), v.anio, v.cuota
    From trib t
    Left Join trib_venc v On t.trib_id=v.trib_id
    Where t.tipo in (1) and t.tobj=_tobj
    and (_trib_id=0 or t.trib_id=_trib_id)
    and v.fchvenc2 >= current_date
    Group By t.trib_id, t.nombre_redu, v.anio, v.cuota Loop

    	-- antes de informar los próximos vencimientos verifico si ya está pago
    	Select into cant count(c.*) from ctacte c where c.trib_id=trib_aux and
        c.obj_id= _obj_id and c.anio=anio_aux and (c.cuota=cuota_aux or c.cuota=0) and c.est='P';

        If (cant=0) Then
        	proxvenc = rpad(trib_nom,23,' ')|| _obj_id || '  ' || periodo || '  ' || to_char(fchvenc,'DD/MM/YYYY');
        	proxfchvenc = fchvenc;
        	Return Next;
        End If;
    End Loop;

    -- Cuotas de Planes de Pagos
    For trib_nom, plan_id, periodo, fchvenc In Select 'Convenio', p.plan_id, min(cast(pc.cuota as varchar(3)))||'    ', min(c.fchvenc)
    From plan p Inner Join plan_cuota pc On p.plan_id = pc.plan_id
    Inner Join ctacte c On pc.ctacte_id = c.ctacte_id
    Where p.obj_id=_obj_id and (_trib_id=0 or c.trib_id=_trib_id)
    and c.est='D' and p.est = 1
    And c.fchvenc >= current_date
    Group By p.plan_id Loop

        proxvenc = rpad(trib_nom,23,' ') || rpad(cast(plan_id as varchar(6)),10,' ') || '  ' || periodo || ' '
            || to_char(fchvenc,'DD/MM/YYYY');
        proxfchvenc = fchvenc;
        Return Next;

    End Loop;

    -- Si se trata de una Persona, recupero la deuda de otros Objetos
    If (_tobj = 3) Then
        For obj_aux,tobj_aux In Select op.obj_id, op.tobj From objeto_persona op
        Where op.num=_obj_id and op.obj_id<>_obj_id and op.est='A' order by op.obj_id Loop
		    For proxvenc,proxfchvenc
		    In Select c.proxvenc, c.proxfchvenc
            From sam.uf_libredeuda_prox(obj_aux, _aniodesde, _aniohasta, tobj_aux, _trib_id) c Loop
            	Return Next;
            End Loop;
        End Loop;
    End If;

End
$$;


ALTER FUNCTION sam.uf_libredeuda_prox(_obj_id character varying, _aniodesde integer, _aniohasta integer, _tobj integer, _trib_id integer) OWNER TO postgres;

--
-- TOC entry 5693 (class 0 OID 0)
-- Dependencies: 887
-- Name: FUNCTION uf_libredeuda_prox(_obj_id character varying, _aniodesde integer, _aniohasta integer, _tobj integer, _trib_id integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_libredeuda_prox(_obj_id character varying, _aniodesde integer, _aniohasta integer, _tobj integer, _trib_id integer) IS 'Función que devuelve los próximos vencimientos para el objeto
Esta función es utilizada para emitir el Libre Deuda
Parámetros:
  _obj_id varchar: Identificación del Objeto.
  _aniodesde integer: Año Desde para la consulta.
  _aniohasta integer: Año Hasta.
  _tobj integer: Código del tipo de Objeto.
  _trib_id integer: tributo (0 indica todos)';


--
-- TOC entry 889 (class 1255 OID 5282936)
-- Name: uf_num_letras(numeric); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_num_letras(_num numeric) RETURNS text
    LANGUAGE plpgsql
    AS $$
-- Función que devuelve la cadena de texto en castellano que corresponde a un número.
-- Parámetros: número con 2 decimales, máximo 999.999.999,99.

DECLARE
	d VARCHAR[];
	f VARCHAR[];
	g VARCHAR[];
	numt VARCHAR;
	txt VARCHAR;
	a INTEGER;
	a1 INTEGER;
	a2 INTEGER;
	n INTEGER;
	p INTEGER;
	negativo BOOLEAN;
BEGIN
	-- Máximo 999.999.999,99
	IF _num > 999999999.99 THEN
		RETURN '---';
	END IF;
	txt = '';
	d = ARRAY[' un',' dos',' tres',' cuatro',' cinco',' seis',' siete',' ocho',' nueve',' diez',' once',' doce',' trece',' catorce',' quince',
		' dieciseis',' diecisiete',' dieciocho',' diecinueve',' veinte',' veintiun',' veintidos', ' veintitres', ' veinticuatro', ' veinticinco',
		' veintiseis',' veintisiete',' veintiocho',' veintinueve'];
	f = ARRAY ['','',' treinta',' cuarenta',' cincuenta',' sesenta',' setenta',' ochenta', ' noventa'];
	g= ARRAY [' ciento',' doscientos',' trescientos',' cuatrocientos',' quinientos',' seiscientos',' setecientos',' ochocientos',' novecientos'];
	numt = LPAD((_num::numeric(12,2))::text,12,'0');
	IF strpos(numt,'-') > 0 THEN
	   negativo = TRUE;
	ELSE
	   negativo = FALSE;
	END IF;
	numt = TRANSLATE(numt,'-','0');
	numt = TRANSLATE(numt,'.,','');
	-- Trato 4 grupos: millones, miles, unidades y decimales
	p = 1;
	FOR i IN 1..4 LOOP
		IF i < 4 THEN
			n = substring(numt::text FROM p FOR 3);
		ELSE
			n = substring(numt::text FROM p FOR 2);
		END IF;
		p = p + 3;
		IF i = 4 THEN
			IF txt = '' THEN
				txt = ' cero';
			END IF;
			IF n > 0 THEN
			-- Empieza con los decimales
				txt = txt || ' con';
			END IF;
		END IF;
		-- Centenas
		IF n > 99 THEN
			a = substring(n::text FROM 1 FOR 1);
			a1 = substring(n::text FROM 2 FOR 2);
			IF a = 1 THEN
				IF a1 = 0 THEN
					txt = txt || ' cien';
				ELSE
					txt = txt || ' ciento';
				END IF;
			ELSE
				txt = txt || g[a];
			END IF;
		ELSE
			a1 = n;
		END IF;
		-- Decenas
		a = a1;
		IF a > 0 THEN
			IF a < 30 THEN
				IF a = 21 AND (i = 3 OR i = 4) THEN
					txt = txt || ' veintiuno';
				ELSIF n = 1 AND i = 2 THEN
					txt = txt;
				ELSIF a = 1 AND (i = 3 OR i = 4)THEN
					txt = txt || ' uno';
				ELSE
					txt = txt || d[a];
				END IF;
			ELSE
				a1 = substring(a::text FROM 1 FOR 1);
				a2 = substring(a::text FROM 2 FOR 1);
				IF a2 = 1 AND (i = 3 OR i = 4) THEN
						txt = txt || f[a1] || ' y' || ' uno';
				ELSE
					IF a2 <> 0 THEN
						txt = txt || f[a1] || ' y' || d[a2];
					ELSE
						txt = txt || f[a1];
					END IF;
				END IF;
			END IF;
		END IF;
		IF n > 0 THEN
			IF i = 1 THEN
				IF n = 1 THEN
					txt = txt || ' millón';
				ELSE
					txt = txt || ' millones';
				END IF;
			ELSIF i = 2 THEN
				txt = txt || ' mil';
			END IF;
		END IF;
	END LOOP;
	txt = LTRIM(txt);
	IF negativo = TRUE THEN
	   txt= '-' || txt;
	END IF;
    RETURN txt;
END;
$$;


ALTER FUNCTION sam.uf_num_letras(_num numeric) OWNER TO postgres;

--
-- TOC entry 5694 (class 0 OID 0)
-- Dependencies: 889
-- Name: FUNCTION uf_num_letras(_num numeric); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_num_letras(_num numeric) IS 'Funcion para Convertir el un número en Letras';


--
-- TOC entry 890 (class 1255 OID 5282937)
-- Name: uf_objeto(character); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_objeto(_est character DEFAULT ''::bpchar) RETURNS TABLE(obj_id character varying, nombre character varying, tobj smallint, tobj_nom character varying, num character varying, num_nom character varying, dompos_dir character varying, loc_id smallint, calle_id smallint, puerta smallint, est character, est_nom character varying, distrib smallint, disctrib_nom character varying, fchmod timestamp without time zone, modif character varying)
    LANGUAGE sql
    AS $$
SELECT o.obj_id, o.nombre, o.tobj, t.nombre AS tobj_nom, o.num, p.nombre AS
    num_nom, coalesce((d.direccion || ' - '::text) || d.locprov,'') AS dompos_dir, d.loc AS
    loc_id, d.calle_id, d.puerta, o.est, e.nombre AS est_nom, o.distrib,
    COALESCE(di.nombre, ''::character varying) AS disctrib_nom, o.fchmod,
    (u.nombre::text || ' - '::text) || to_char(o.fchmod, 'DD/MM/YYYY'::text) AS modif
FROM objeto o
   LEFT JOIN objeto_tipo t ON o.tobj = t.cod
   LEFT JOIN objeto p ON o.num::text = p.obj_id::text
   LEFT JOIN v_domi d ON d.torigen::text = 'OBJ'::text AND d.obj_id::text =
       o.obj_id::text
   LEFT JOIN objeto_test e ON o.est = e.cod AND o.tobj = e.tobj
   LEFT JOIN sam.sis_usuario di ON o.distrib = di.usr_id
   LEFT JOIN sam.sis_usuario u ON o.usrmod = u.usr_id
$$;


ALTER FUNCTION sam.uf_objeto(_est character) OWNER TO postgres;

--
-- TOC entry 891 (class 1255 OID 5282938)
-- Name: uf_objeto_borrar(character varying, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_objeto_borrar(_oldobj character varying, _usr integer, _tobj integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
	cant smallint;
BEGIN
    -- Este procedimiento Elimina todas las apariciones de un objeto

    Insert Into his_objeto_reemplaza Values (_oldobj, '', current_timestamp, _usr);

	-- Según Tipo de Objeto
    If _tobj = 1 then
    	Delete From inm Where obj_id= _oldobj;
        Delete From inm_avaluo Where obj_id= _oldobj;
        Delete From inm_carac Where obj_id= _oldobj;
        Delete From inm_censo Where obj_id= _oldobj;
        Delete From inm_dim Where obj_id= _oldobj;
        Delete From inm_frente Where obj_id= _oldobj;
        Delete From inm_mej Where obj_id= _oldobj;
        Delete From inm_servidumbre Where obj_id= _oldobj;
        Delete From comer_inmueble Where inmueble= _oldobj;
        Delete From his_inm Where obj_id = _oldobj;
        Delete From his_inm_cambio Where obj_id = _oldobj;
        Delete From his_inm_mej Where obj_id = _oldobj;
        Delete From osm Where obj_id = _oldobj;
        Delete From osm_consumo Where obj_id = _oldobj;
    ElseIf _tobj = 2 or _tobj = 7  Then
    	Delete From comer Where obj_id= _oldobj;
        Delete From comer_infrac Where obj_id= _oldobj;
        Delete From comer_inmueble Where comercio= _oldobj;
        Delete From comer_rubro Where obj_id= _oldobj;

        Delete From his_comer Where obj_id = _oldobj;
    ElseIf _tobj = 3 Then
    	Delete From persona Where obj_id= _oldobj;
        Delete From persona_rela Where obj_id= _oldobj;
        Delete From his_persona Where obj_id = _oldobj;

        -- Tablas con campos NUM
    	Delete From caja_ticket Where num = _oldobj;
    	Delete From his_objeto Where num = _oldobj;
    	Delete From objeto Where num = _oldobj and obj_id <> _oldobj;
    	Delete From objeto_persona Where num = _oldobj;
    	Delete From plan Where num = _oldobj;

    	-- Tablas con campos RESP
    	Delete From cem_alquiler Where resp = _oldobj;
		Delete From cem_fall Where resp = _oldobj;
    	Delete From cem_fall_reg Where resp = _oldobj;
    	Delete From hab Where resp = _oldobj;
    ElseIf _tobj = 4 Then
    	Delete From cem Where obj_id = _oldobj;
        Delete From cem_alquiler Where obj_id = _oldobj;
        Delete From cem_fall Where obj_id = _oldobj;
        Delete From cem_fall_reg_det Where origen = _oldobj;
        Delete From cem_fall_reg_det Where destino = _oldobj;
        Delete From his_cem Where obj_id = _oldobj;
    End If;

    -- Tablas con campos OBJETO
    Delete From caja_pagoold Where obj_id = _oldobj;
    Delete From caja_ticket Where obj_id = _oldobj;
    Delete From ctacte Where obj_id = _oldobj;
    Delete From ctacte_cambioest Where obj_id = _oldobj;
    Delete From ctacte_excep Where obj_id = _oldobj;
    Delete From ctacte_libredeuda Where obj_id = _oldobj;
    Delete From debito_adhe Where obj_id = _oldobj;
    Delete From domi Where obj_id = _oldobj;
    Delete From emision_err Where obj_id = _oldobj;
    Delete From facilida Where obj_id = _oldobj;
    Delete From fiscaliza Where obj_id = _oldobj;
    Delete From his_objeto Where obj_id = _oldobj;
    Delete From his_objeto_item Where obj_id = _oldobj;
    Delete From his_domi Where obj_id = _oldobj;

    Delete From judi Where obj_id = _oldobj;
    Delete From objeto Where obj_id = _oldobj;
    Delete From objeto_accion Where obj_id = _oldobj;
    Delete From objeto_item Where obj_id = _oldobj;
    Delete From objeto_misc Where obj_id = _oldobj;
    Delete From objeto_persona Where obj_id = _oldobj;
    Delete From objeto_tabla Where obj_id = _oldobj;
    Delete From objeto_var Where obj_id = _oldobj;
    Delete From plan Where obj_id = _oldobj;
    Delete From rete Where obj_ori = _oldobj;
    Delete From rete Where obj_dest = _oldobj;

   	Delete From ddjj Where obj_id = _oldobj;
   	Delete From ddjj_recep_det Where obj_id = _oldobj;
    Return 'OK';
END
$$;


ALTER FUNCTION sam.uf_objeto_borrar(_oldobj character varying, _usr integer, _tobj integer) OWNER TO postgres;

--
-- TOC entry 892 (class 1255 OID 5282939)
-- Name: uf_objeto_computa(integer, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_objeto_computa(_tobj integer, _obj_id character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
	vfuncion varchar(30);
 	sql varchar(100);
BEGIN
    -- Actualizo los Campos Computados que estén relacionados con el Objeto,
    -- a través de la ejecución de las funciones definidas para cada uno

    For vfuncion In Select c.funcion From objeto_computa c Where c.TObj = _tobj
    Loop
        sql = 'Select sam.' || vfuncion || '(' || chr(39) || _obj_id || chr(39) || ')';
    	raise notice 'Sql: %',sql;
        EXECUTE sql;
    End Loop;
END;
$$;


ALTER FUNCTION sam.uf_objeto_computa(_tobj integer, _obj_id character varying) OWNER TO postgres;

--
-- TOC entry 893 (class 1255 OID 5282940)
-- Name: uf_objeto_computa_inm(character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_objeto_computa_inm(_obj_id character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare 

BEGIN
    -- Actualizo los datos del inmueble, a partir de uf_inm_avaluo_obtener
    -- (comentar lo que no se quiera actualizar)
    Update inm i Set
    	supm=o.supm,
        avalt=o.avalt,
        avalm=o.avalm,
        frente=o.frente
        --regimen=o.regimen,
        --zonat=o.zonat,
        --zonav=o.zonav,
        --zonaop=o.zonaop,
        --serv=o.serv,
        --pav=o.pav,
        --valbas=o.valbas
    From sam.uf_inm_avaluo_obtener(_obj_id) o
    Where i.obj_id = _obj_id;

END
$$;


ALTER FUNCTION sam.uf_objeto_computa_inm(_obj_id character varying) OWNER TO postgres;

--
-- TOC entry 875 (class 1255 OID 5282941)
-- Name: uf_objeto_item_aplic(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_objeto_item_aplic(_item_id integer) RETURNS TABLE(ctacte_id integer, trib_id smallint, trib_nom character varying, item_id smallint, item_nom character varying, obj_id character varying, obj_nom character varying, subcta smallint, anio integer, cuota smallint, param1 character varying, param2 character varying, monto numeric)
    LANGUAGE sql
    AS $_$
SELECT c.ctacte_id, oi.trib_id, t.nombre_redu, oi.item_id, i.nombre,
		oi.obj_id, o.nombre, oi.subcta, c.anio, c.cuota, l.param1, l.param2, l.monto
FROM objeto_item oi 
	Inner Join ctacte c On oi.trib_id=c.trib_id and oi.obj_id=c.obj_id and oi.subcta=c.subcta
	Inner Join ctacte_liq l On c.ctacte_id=l.ctacte_id and oi.item_id=l.item_id
    Inner Join objeto o ON oi.obj_id=o.obj_id
   	Left Join item i ON oi.item_id=i.item_id
   	Left Join trib t ON oi.trib_id=t.trib_id
Where oi.item_id=$1
Order By oi.trib_id, oi.obj_id, oi.subcta, c.anio, c.cuota
$_$;


ALTER FUNCTION sam.uf_objeto_item_aplic(_item_id integer) OWNER TO postgres;

--
-- TOC entry 888 (class 1255 OID 5282942)
-- Name: uf_objeto_item_aplic(character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_objeto_item_aplic(_obj_id character varying) RETURNS TABLE(ctacte_id integer, trib_id smallint, trib_nom character varying, item_id smallint, item_nom character varying, obj_id character varying, obj_nom character varying, subcta smallint, anio integer, cuota smallint, param1 character varying, param2 character varying, monto numeric)
    LANGUAGE sql
    AS $_$
SELECT c.ctacte_id, oi.trib_id, t.nombre_redu, oi.item_id, i.nombre,
		oi.obj_id, o.nombre, oi.subcta, c.anio, c.cuota, l.param1, l.param2, l.monto
FROM objeto_item oi 
	Inner Join ctacte c On oi.trib_id=c.trib_id and oi.obj_id=c.obj_id and oi.subcta=c.subcta
	Inner Join ctacte_liq l On c.ctacte_id=l.ctacte_id and oi.item_id=l.item_id
    Inner Join objeto o ON oi.obj_id=o.obj_id
   	Left Join item i ON oi.item_id=i.item_id
   	Left Join trib t ON oi.trib_id=t.trib_id
Where oi.obj_id=$1
Order By oi.trib_id, c.anio, c.cuota
$_$;


ALTER FUNCTION sam.uf_objeto_item_aplic(_obj_id character varying) OWNER TO postgres;

--
-- TOC entry 894 (class 1255 OID 5282943)
-- Name: uf_objeto_item_aplic(character varying, integer, integer, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_objeto_item_aplic(_obj_id character varying, _subcta integer, _orden integer, _trib_id integer, _item_id integer, _perdesde integer) RETURNS TABLE(ctacte_id integer, trib_id smallint, trib_nom character varying, item_id smallint, item_nom character varying, obj_id character varying, obj_nom character varying, subcta smallint, anio integer, cuota smallint, param1 character varying, param2 character varying, monto numeric)
    LANGUAGE sql
    AS $_$
SELECT c.ctacte_id, oi.trib_id, t.nombre_redu, oi.item_id, i.nombre,
		oi.obj_id, o.nombre, oi.subcta, c.anio, c.cuota, l.param1, l.param2, l.monto
FROM objeto_item oi 
	Inner Join ctacte c On oi.trib_id=c.trib_id and oi.obj_id=c.obj_id and oi.subcta=c.subcta
	Inner Join ctacte_liq l On c.ctacte_id=l.ctacte_id and oi.item_id=l.item_id
    Inner Join objeto o ON oi.obj_id=o.obj_id
   	Left Join item i ON oi.item_id=i.item_id
   	Left Join trib t ON oi.trib_id=t.trib_id
Where oi.obj_id=$1 and oi.subcta=$2 and oi.orden=$3 
  and oi.trib_id=$4 and oi.item_id=$5 and oi.perdesde=$6
Order By oi.trib_id, oi.obj_id, c.anio, c.cuota
$_$;


ALTER FUNCTION sam.uf_objeto_item_aplic(_obj_id character varying, _subcta integer, _orden integer, _trib_id integer, _item_id integer, _perdesde integer) OWNER TO postgres;

--
-- TOC entry 895 (class 1255 OID 5282944)
-- Name: uf_objeto_reemplaza(character varying, character varying, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_objeto_reemplaza(_oldobj character varying, _newobj character varying, _usr integer, _tobj integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
	cant smallint;
BEGIN
  -- Este procedimiento Reemplaza todas las apariciones de un objeto por otro

  -- Verifico que el Objeto Destino no Exista
  Select Into cant count(*) from objeto where obj_id= _newobj;

  if cant = 0 then

    Insert Into his_objeto_reemplaza Values (
        _oldobj, _newobj, current_timestamp, _usr);

	-- Según Tipo de Objeto
    If _tobj = 1 then
    	Update inm Set obj_id = _newobj Where obj_id= _oldobj;
        Update inm_avaluo Set obj_id = _newobj Where obj_id= _oldobj;
        Update inm_carac Set obj_id = _newobj Where obj_id= _oldobj;
        Update inm_censo Set obj_id = _newobj Where obj_id= _oldobj;
        Update inm_dim Set obj_id = _newobj Where obj_id= _oldobj;
        Update inm_frente Set obj_id = _newobj Where obj_id= _oldobj;
        Update inm_mej Set obj_id = _newobj Where obj_id= _oldobj;
        --Update inm_servidumbre Set obj_id = _newobj Where obj_id= _oldobj;
        Update comer_inm Set inmueble = _newobj Where inmueble= _oldobj;
        Update his_inm Set obj_id = _newobj Where obj_id = _oldobj;
        Update his_inm_cambio Set obj_id = _newobj Where obj_id = _oldobj;
        Update his_inm_mej Set obj_id = _newobj Where obj_id = _oldobj;
        Update osm Set obj_id = _newobj Where obj_id = _oldobj;
        Update osm_consumo Set obj_id = _newobj Where obj_id = _oldobj;
    ElseIf _tobj = 2 Then
    	Update comer Set obj_id = _newobj Where obj_id= _oldobj;
        Update comer_infrac Set obj_id = _newobj Where obj_id= _oldobj;
        Update comer_inm Set comercio = _newobj Where comercio= _oldobj;
        Update comer_rpc Set obj_id = _newobj Where obj_id= _oldobj;
        Update objeto_rubro Set obj_id = _newobj Where obj_id= _oldobj;
        Update ddjj Set obj_id = _newobj Where obj_id = _oldobj;
        Update ddjj_recep_det Set obj_id = _newobj Where obj_id = _oldobj;
        Update his_comer Set obj_id = _newobj Where obj_id = _oldobj;
    ElseIf _tobj = 3 Then
    	Update persona Set obj_id = _newobj Where obj_id= _oldobj;
        Update persona_rela Set obj_id = _newobj Where obj_id= _oldobj;
        Update his_persona Set obj_id = _newobj Where obj_id = _oldobj;

        -- Tablas con campos NUM
    	Update caja_ticket Set num = _newobj Where num = _oldobj;
    	Update his_objeto Set num = _newobj Where num = _oldobj;
    	Update objeto Set num = _newobj Where num = _oldobj and obj_id <> _oldobj;
    	Update objeto_persona Set num = _newobj Where num = _oldobj;
    	Update plan Set num = _newobj Where num = _oldobj;

    	-- Tablas con campos RESP
    	Update cem_alquiler Set resp = _newobj Where resp = _oldobj;
		Update cem_fall Set resp = _newobj Where resp = _oldobj;
    	Update cem_fall_reg Set resp = _newobj Where resp = _oldobj;
    	Update hab Set resp = _newobj Where resp = _oldobj;
    ElseIf _tobj = 4 Then
    	Update cem Set obj_id = _newobj Where obj_id = _oldobj;
        Update cem_alquiler Set obj_id = _newobj Where obj_id = _oldobj;
        Update cem_fall Set obj_id = _newobj Where obj_id = _oldobj;
        Update cem_fall_reg_det Set origen = _newobj Where origen = _oldobj;
        Update cem_fall_reg_det Set destino = _newobj Where destino = _oldobj;
        Update his_cem Set obj_id = _newobj Where obj_id = _oldobj;
    End If;

    -- Tablas con campos OBJETO
    Update caja_pagoold Set obj_id = _newobj Where obj_id = _oldobj;
    Update caja_ticket Set obj_id = _newobj Where obj_id = _oldobj;
    Update ctacte Set obj_id = _newobj Where obj_id = _oldobj;
    Update ctacte_cambioest Set obj_id = _newobj Where obj_id = _oldobj;
    Update ctacte_excep Set obj_id = _newobj Where obj_id = _oldobj;
    Update ctacte_libredeuda Set obj_id = _newobj Where obj_id = _oldobj;
    Update debito_adhe Set obj_id = _newobj Where obj_id = _oldobj;
    Update domi Set obj_id = _newobj Where obj_id = _oldobj;
    Update emision_err Set obj_id = _newobj Where obj_id = _oldobj;
    Update facilida Set obj_id = _newobj Where obj_id = _oldobj;
    Update fiscaliza Set obj_id = _newobj Where obj_id = _oldobj;
    Update his_objeto Set obj_id = _newobj Where obj_id = _oldobj;
    Update his_objeto_item Set obj_id = _newobj Where obj_id = _oldobj;
    Update his_domi Set obj_id = _newobj Where obj_id = _oldobj;

    Update judi Set obj_id = _newobj Where obj_id = _oldobj;
    Update objeto Set obj_id = _newobj Where obj_id = _oldobj;
    Update objeto_accion Set obj_id = _newobj Where obj_id = _oldobj;
    Update objeto_item Set obj_id = _newobj Where obj_id = _oldobj;
    Update objeto_misc Set obj_id = _newobj Where obj_id = _oldobj;
    Update objeto_persona Set obj_id = _newobj Where obj_id = _oldobj;
    Update objeto_tabla Set obj_id = _newobj Where obj_id = _oldobj;
    Update plan Set obj_id = _newobj Where obj_id = _oldobj;
    Update rete Set obj_ori = _newobj Where obj_ori = _oldobj;
    Update rete Set obj_dest = _newobj Where obj_dest = _oldobj;

    Return 'OK';
    End if;

END
$$;


ALTER FUNCTION sam.uf_objeto_reemplaza(_oldobj character varying, _newobj character varying, _usr integer, _tobj integer) OWNER TO postgres;

--
-- TOC entry 953 (class 1255 OID 5486524)
-- Name: uf_objeto_rubro(integer, character varying, integer, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_objeto_rubro(_trib_id integer, _obj_id character varying, _subcta integer, _fiscaliza integer, _anio integer, _cuota integer) RETURNS TABLE(nomen_id character varying, nomen_nom character varying, rubro_id character varying, rubro_nom character varying, tcalculo smallint, tcalculo_nom character varying, alicuota numeric, minimo numeric, fijo numeric, cant integer)
    LANGUAGE plpgsql
    AS $$
Declare
    vtobj smallint;
    vtipoliq varchar(2);
    vnomen_id_1 varchar(1);
    vnomen_id_2 varchar(1);
    ssql VARCHAR(5000);
BEGIN
    -- Devuelve los rubros a declarar para un objeto y per'iodo dado
    
    Select Into vtObj t.tobj From trib t Where t.trib_id= _trib_id;
    Select Into vnomen_id_1, vnomen_id_2 d.nomen_id_1, d.nomen_id_2 From sam.config_ddjj d Where d.trib_id=_trib_id;    
    Select Into vtipoliq coalesce(p.tipoliq,'') From persona p Where p.obj_id = _obj_id;
    
    
    ssql = 'Select n.nomen_id, n.nombre, c.rubro_id, r.nombre, max(v.tcalculo), max(f.nombre), max(v.alicuota), max(v.minimo), max(v.fijo), sum(coalesce(c.cant,0))
        From objeto_rubro c
        Inner Join rubro r On c.rubro_id = r.rubro_id
        Inner Join rubro_vigencia v On c.rubro_id = v.rubro_id and ' || _anio*1000+_cuota || ' between v.perdesde and v.perhasta
        Inner Join rubro_tfcalculo f On v.tcalculo=f.cod
        Inner Join rubro_tnomen n On r.nomen_id=n.nomen_id ';

    -- Si tobj=3 (persona) y no hay rubros para persona ==> tomo los rubros de los comercios
    If (vtobj=3) Then 
      If (vtipoliq = 'LO') Then
        ssql = ssql || ' Where c.obj_id in (select o.obj_id from objeto o where tobj in (2,3) and o.est=' || quote_literal('A') || ' and o.num=' || quote_literal(_obj_id) || ')';
      Else  -- Para CM y AI, sólo se recuperan los rubros de Comercios (TSH)
        ssql = ssql || ' Where c.obj_id in (select o.obj_id from objeto o where tobj = 2 and o.est=' || quote_literal('A') || ' and o.num=' || quote_literal(_obj_id) || ')';
      End If;  
    Else
        ssql = ssql || ' Where c.obj_id = ' || quote_literal(_obj_id);
    End If;

    -- Recupero los Rubros asociados al Objeto según Configuración de tributo principal de DJ
    ssql = ssql || ' and c.est= ' || quote_literal('A');
    ssql = ssql || ' and (r.nomen_id=' || quote_literal(vnomen_id_1) || ' or r.nomen_id=' || quote_literal(vnomen_id_2) || ')';
    ssql = ssql || ' and ' || _anio*1000+_cuota || ' between c.perdesde and c.perhasta';
    ssql = ssql || ' and (('|| _fiscaliza ||'=0 and c.fiscaliza=0) or ('|| _fiscaliza || '=1 and c.fiscaliza>=0))';
    ssql = ssql || '  Group By n.nomen_id, n.nombre,c.rubro_id, r.nombre';
    ssql = ssql || '  Order By c.rubro_id';

--  ssql = ssql || ' and r.trib_id in (Select trib_id from trib where dj_tribprinc=' || _trib_id || ' and est=' || quote_literal('A') || ')';

    raise notice '%', ssql;
    For nomen_id, nomen_nom, rubro_id, rubro_nom, tcalculo, tcalculo_nom, alicuota, minimo, fijo, cant
    In Execute SSQL  Loop

        Return next;

    End Loop;
End;
$$;


ALTER FUNCTION sam.uf_objeto_rubro(_trib_id integer, _obj_id character varying, _subcta integer, _fiscaliza integer, _anio integer, _cuota integer) OWNER TO postgres;

--
-- TOC entry 896 (class 1255 OID 5282947)
-- Name: uf_persona_reemplaza(character varying, character varying, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_persona_reemplaza(_oldnum character varying, _newnum character varying, _usr integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
    oldnombre varchar(50);
    oldtdoc smallint;
    oldndoc bigint;
    oldcuit varchar(11);
    newnombre varchar(50);
    newtdoc smallint;
    newndoc bigint;
    newcuit varchar(11);
    vcant smallint;
BEGIN
    -- Este procedimiento Reemplaza todas las apariciones de la persona
    -- esto puede ser por errores cometidos y como forma de unificar los datos

    -- Recupero los datos de las Personas para el Historico
    -- PERSONA A ELIMINAR
    Select Into oldnombre, oldtdoc, oldndoc, oldcuit
    		    o.nombre, p.tdoc, p.ndoc, p.cuit
	From persona p Inner Join objeto o On p.obj_id = o.obj_id
    Where p.obj_id = _oldnum;

    -- PERSONA A MANTENER
    Select Into newnombre, newtdoc, newndoc, newcuit
    			o.nombre, p.tdoc, p.ndoc, p.cuit
	From persona p Inner Join objeto o On p.obj_id = o.obj_id
    Where p.obj_id = _newnum;

	-- Elimino por si hubo reemplazos anteriores para los mismos objetos
	delete from his_persona_reemplaza r where r.oldnum=_oldnum and r.newnum=_newnum;
    delete from his_persona_reemplaza_objeto r where r.oldnum=_oldnum;
	delete from his_persona_reemplaza_ctacte r where r.oldnum=_oldnum;
    delete from his_persona_reemplaza_plan r where r.oldnum=_oldnum;


    Insert Into his_persona_reemplaza Values (
        _oldnum, oldnombre, oldtdoc, oldndoc, oldcuit,
        _newnum, newnombre, newtdoc, newndoc, newcuit,
        'A', current_timestamp, _usr);


	-- Respaldo los obj_id y los ctacte_id donde se encuentre
    Insert into his_persona_reemplaza_objeto
    Select _oldnum,o.obj_id From objeto o where o.num=_oldnum and o.obj_id<>o.num;

    Insert into his_persona_reemplaza_ctacte
    Select _oldnum,c.ctacte_id From ctacte c where c.obj_id=_oldnum;

    Insert into his_persona_reemplaza_plan
    Select _oldnum,p.plan_id From plan p where p.obj_id=_oldnum;


    -- REEMPLAZO

    -- Tablas con campos NUM
    Update caja Set ext_num = _newnum Where ext_num = _oldnum;
    Update caja_ticket Set num = _newnum Where num = _oldnum;
    Update his_objeto Set num = _newnum Where num = _oldnum;
    Update objeto Set num = _newnum Where num = _oldnum and obj_id <> _oldnum;
    Update objeto_persona Set num = _newnum
    	Where num = _oldnum and obj_id <> _oldnum
 		and obj_id || _newnum not in (select obj_id || num from objeto_persona);
    Update plan Set num = _newnum Where num = _oldnum;

    -- Tablas con campos RESP
    Update cem_alquiler Set resp = _newnum Where resp = _oldnum;
	Update cem_fall Set resp = _newnum Where resp = _oldnum;
    Update cem_fall_serv Set resp = _newnum Where resp = _oldnum;

    -- Tablas con campos OBJETO
    Update caja_ticket Set obj_id = _newnum Where obj_id = _oldnum;
    Update caja_pagoold Set obj_id = _newnum Where obj_id = _oldnum;
    Update ctacte Set obj_id = _newnum Where obj_id = _oldnum;
    Update ctacte_cambioest Set obj_id = _newnum Where obj_id = _oldnum;
    Update ctacte_excep Set obj_id = _newnum Where obj_id = _oldnum;
    Update ctacte_libredeuda Set obj_id = _newnum Where obj_id = _oldnum;
    Update ctacte_pagocta Set obj_id = _newnum Where obj_id = _oldnum;
    Update debito_adhe Set obj_id = _newnum Where obj_id = _oldnum;
    Update emision_err Set obj_id = _newnum Where obj_id = _oldnum;
    Update facilida Set obj_id = _newnum Where obj_id = _oldnum;
    Update his_objeto Set obj_id = _newnum Where obj_id = _oldnum;
    Update his_domi Set obj_id = _newnum Where obj_id = _oldnum;
    Update his_persona Set obj_id = _newnum Where obj_id = _oldnum;
    Update judi Set obj_id = _newnum Where obj_id = _oldnum;
    Update plan Set obj_id = _newnum Where obj_id = _oldnum;
    Update comp Set obj_ori = _newnum Where obj_ori = _oldnum;
    Update comp Set obj_dest = _newnum Where obj_dest = _oldnum;

	-- Tablas de otros sistemas
	If EXISTS(select 1 from pg_tables where tablename='leg' and schemaname='rh') Then
	    Update rh.leg Set obj_id = _newnum Where obj_id = _oldnum;
    End If;

	If EXISTS(select 1 from pg_tables where tablename='proveedor' and schemaname='fin') Then
	    Update fin.proveedor Set obj_id = _newnum Where obj_id = _oldnum;
    End IF;

    -- Borro la Persona	
    Delete From his_domi Where obj_id = _oldnum;
    Delete From objeto_accion Where obj_id = _oldnum;
    Delete From objeto_item Where obj_id = _oldnum;
    Delete From objeto_misc Where obj_id = _oldnum;
    --Delete From objeto_tabla Where obj_id = _oldnum;
    Delete From objeto_var Where obj_id = _oldnum;
    Delete From persona Where obj_id = _oldnum;
    Delete From persona_rela Where obj_id = _oldnum;
    Delete From objeto_persona Where obj_id = _oldnum;
    Delete From objeto Where obj_id = _oldnum;

    -- Cambio el domicilio de la persona que se elimina, si la otra no lo tiene
    Select Into vcant count(*) from domi d where d.obj_id = _newnum;
    If (vcant = 0) Then 
	Update domi d Set obj_id = _newnum Where d.obj_id = _oldnum;
    End If;   

    Return 'OK';
END
$$;


ALTER FUNCTION sam.uf_persona_reemplaza(_oldnum character varying, _newnum character varying, _usr integer) OWNER TO postgres;

--
-- TOC entry 5695 (class 0 OID 0)
-- Dependencies: 896
-- Name: FUNCTION uf_persona_reemplaza(_oldnum character varying, _newnum character varying, _usr integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_persona_reemplaza(_oldnum character varying, _newnum character varying, _usr integer) IS 'Permite unificar la CtaCte, Planes y demás de un Contribuyente con otro
Parámetros:
  oldnum varchar: Código de Objeto viejo.
  newnum varchar: Código de Objeto a mantener,
  usr smallint: código de usuario que realiza la operación
';


--
-- TOC entry 897 (class 1255 OID 5282948)
-- Name: uf_persona_reemplaza_anula(character varying, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_persona_reemplaza_anula(_oldnum character varying, _usr integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
	oldnombre varchar(50);
	oldtdoc smallint;
	oldndoc bigint;
    oldcuit varchar(11);
BEGIN
    -- Este procedimiento Reemplaza todas las apariciones de la persona
    -- esto puede ser por errores cometidos y como forma de unificar los datos


	-- Obtengo la info de old
    Select Into oldnombre, oldtdoc, oldndoc, oldcuit
    		    coalesce(r.oldnombre,''), coalesce(r.oldtdoc,0), coalesce(r.oldndoc,0), coalesce(r.oldcuit,'')
	From his_persona_reemplaza r where r.oldnum=_oldnum;


    -- REEMPLAZO

    -- Tablas con campos NUM
    Update caja_ticket Set num = _oldnum Where obj_id in (select r.obj_id from his_persona_reemplaza_objeto r where r.oldnum=_oldnum);
    Update his_objeto Set num = _oldnum Where obj_id in (select r.obj_id from his_persona_reemplaza_objeto r where r.oldnum=_oldnum);
    Update objeto Set num = _oldnum Where obj_id in (select r.obj_id from his_persona_reemplaza_objeto r where r.oldnum=_oldnum);
    Update objeto_persona Set num = _oldnum Where obj_id in (select r.obj_id from his_persona_reemplaza_objeto r where r.oldnum=_oldnum);
    Update plan Set num = _oldnum  Where obj_id in (select r.obj_id from his_persona_reemplaza_objeto r where r.oldnum=_oldnum);

    -- Tablas con campos RESP
    Update cem_alquiler Set resp = _oldnum Where obj_id in (select r.obj_id from his_persona_reemplaza_objeto r where r.oldnum=_oldnum);
	Update cem_fall Set resp = _oldnum Where obj_id in (select r.obj_id from his_persona_reemplaza_objeto r where r.oldnum=_oldnum);

    -- Tablas con campos OBJETO
    Update caja_ticket Set obj_id = _oldnum Where ctacte_id in (select r.ctacte_id from his_persona_reemplaza_ctacte r where r.oldnum=_oldnum);
    Update ctacte Set obj_id = _oldnum Where ctacte_id in (select r.ctacte_id from his_persona_reemplaza_ctacte r where r.oldnum=_oldnum);
    Update ctacte_excep Set obj_id = _oldnum Where ctacte_id in (select r.ctacte_id from his_persona_reemplaza_ctacte r where r.oldnum=_oldnum);
    Update facilida Set obj_id = _oldnum Where obj_id =_oldnum;
    Update plan Set obj_id = _oldnum Where plan_id in (select r.plan_id from his_persona_reemplaza_plan r where r.oldnum=_oldnum);


	-- Inserto en objeto, persona y objeto_persona
    insert into objeto values (_oldnum,3,_oldnum,oldnombre,0,'A',0,0,'','',0,'',current_timestamp,_usr,NULL,NULL,0,current_timestamp,_usr);
    insert into persona values (_oldnum,0,0,oldtdoc,oldndoc,NULL,'I',1,0,1,0,oldcuit,'',0,'','','',0,0,0,
       'N','',0,'',0,0,null, null, '', '');
    insert into objeto_persona values (_oldnum,_oldnum,3,1,100,'A',current_timestamp,_usr);

	-- Doy de baja el reemplazo
    Update his_persona_reemplaza r Set est='B' where r.oldnum=_oldnum;

    Return 'OK';
END
$$;


ALTER FUNCTION sam.uf_persona_reemplaza_anula(_oldnum character varying, _usr integer) OWNER TO postgres;

--
-- TOC entry 5696 (class 0 OID 0)
-- Dependencies: 897
-- Name: FUNCTION uf_persona_reemplaza_anula(_oldnum character varying, _usr integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_persona_reemplaza_anula(_oldnum character varying, _usr integer) IS 'Intenta volver atrás una unificación la CtaCte, Planes y demás de un Contribuyente con otro
Parámetros:
  oldnum varchar: Código de Objeto viejo a activar
  usr smallint: código de usuario que realiza la operación
';


--
-- TOC entry 898 (class 1255 OID 5282949)
-- Name: uf_persona_reemplaza_ver(character varying, character varying, integer, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_persona_reemplaza_ver(_num character varying, _nombre character varying, _ndoc integer, _cuit character varying) RETURNS TABLE(oldnum character varying, oldnombre character varying, oldtdoc character varying, oldndoc bigint, oldcuit character varying, newnum character varying, newnombre character varying, newtdoc character varying, newndoc bigint, newcuit character varying, modif character varying, objetos character varying)
    LANGUAGE plpgsql
    AS $$
declare
	vobj_id varchar(250);
    voldnum varchar;
BEGIN
    -- Este procedimiento Reemplaza todas las apariciones de la persona
    -- esto puede ser por errores cometidos y como forma de unificar los datos

    For oldnum,oldnombre,oldtdoc,oldndoc,oldcuit,newnum,newnombre,newtdoc,newndoc,newcuit,modif
    In Select u.OldNUM,u.OldNombre,coalesce(ot.Nombre,''),u.OldNDoc,u.oldcuit,
              u.NewNUM,u.NewNombre,coalesce(nt.Nombre,''),u.NewNDoc,u.newcuit,
    coalesce(us.Nombre || ' - ' || to_char(u.FchMod,'DD/MM/YYYY'),'')
    From his_persona_reemplaza u
    left join persona_tdoc ot on u.OldTDoc = ot.cod
    left join persona_tdoc nt on u.NewTDoc = nt.cod
    left join sam.sis_usuario us On u.UsrMod = us.usr_id
    where u.est='A'
    and (_num='' or _num=u.oldnum or _num=u.newnum)
    and (_nombre='' or u.oldnombre like '%' || upper(_nombre) || '%' or u.newnombre like '%' || upper(_nombre) || '%')
    and (_ndoc=0 or _ndoc=u.oldndoc or _ndoc=u.newndoc)
    and (_cuit='' or _cuit=u.oldcuit or _cuit=u.newcuit) Loop

    	objetos := '';
        voldnum = oldnum;
        For vobj_id in Select r.obj_id from his_persona_reemplaza_objeto r where r.oldnum=voldnum Loop
        	objetos := objetos || ' - ' || vobj_id;
        End Loop;

    	Return Next;

    End Loop;

END
$$;


ALTER FUNCTION sam.uf_persona_reemplaza_ver(_num character varying, _nombre character varying, _ndoc integer, _cuit character varying) OWNER TO postgres;

--
-- TOC entry 5697 (class 0 OID 0)
-- Dependencies: 898
-- Name: FUNCTION uf_persona_reemplaza_ver(_num character varying, _nombre character varying, _ndoc integer, _cuit character varying); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_persona_reemplaza_ver(_num character varying, _nombre character varying, _ndoc integer, _cuit character varying) IS 'Trae la lista de las unificaciones realizadas.
Parámetros:
  num varchar: Filtro (vacío ==> no filtrar)
  nombre varchar: Filtro (vacío ==> no filtrar)
  ndoc integer: Filtro (vacío ==> no filtrar)
  cuit varchar: Filtro (vacío ==> no filtrar)
';


--
-- TOC entry 899 (class 1255 OID 5282950)
-- Name: uf_plan_adelanta(integer, character varying, integer, date, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_plan_adelanta(_plan_id integer, _obj_id character varying, _cuotas integer, _fecha date, _usr integer, _graba integer) RETURNS TABLE(capital numeric, cuota smallint)
    LANGUAGE plpgsql
    AS $$
declare
    cant smallint;
    vcta_id smallint;
    vtobj smallint;
    vctacte_id integer;
    cuotas_det varchar(500);
    resultado varchar(200);
begin
    -- permite adelantar cuotas en un plan.
    -- genera una nueva cuota 900. y da de baja las cuotas originales.

    -- inicializo
    capital := 0;
    cuota := 0;
    cuotas_det := '';

    -- verIfico que no existan cuotas 900 pEndientes o cuotas vencidas.
    Select Into cant count(*)
    From ctacte Where trib_id=1 and anio=_plan_id and est = 'D'
    and (fchvenc<current_date or cuota>=900);

    If (cant>1) Then
        RAISE EXCEPTION 'Existen cuotas pendientes de pago.';
    End If;

    -- verIfico que la cantidad de cuotas a adelantar sea correcta
    cant := sam.uf_plan_adelanta_ver(_plan_id);

    If (_cuotas > cant) Then
        RAISE EXCEPTION 'La cantidad de cuotas a adelantar es incorrecta.';
    End If;

    -- obtengo el número de cuota a ingresar
    Select Into cuota coalesce(max(pc.cuota)+1,900)
    From plan_cuota pc Where pc.plan_id=_plan_id and pc.cuota>=900;

    -- marco est='B' las cuotas adelantadas y acumulo el capital a cubrir
    cant := 0;
    For vctacte_id In Select c.ctacte_id
    From ctacte c Where c.trib_id=1 and c.anio=_plan_id and c.est='D'
    Order By c.cuota desc Loop

        cant := cant + 1;

        If (_graba=1) Then
            update ctacte c set est='B' Where c.ctacte_id=vctacte_id;
            update plan_cuota pc set cuota_adelanta=cuota Where pc.ctacte_id=vctacte_id;
        End If;

        Select Into capital pc.capital+capital From plan_cuota pc Where pc.ctacte_id=vctacte_id;

        If (cant=_cuotas) Then
            Exit;
        End If;

    End Loop;

    -- grabo el adelantamiento
    If (_graba=1) Then

        -- obtengo la cuenta a usar
        Select Into vcta_id t.cta_id
        From plan p inner join plan_config t on p.tplan=t.cod
        Where p.plan_id=_plan_id ;

        -- obtengo el tipo de objeto
        Select Into vtobj o.tobj From objeto o Where o.obj_id=_obj_id ;

        -- inserto en la ctacte
        cuotas_det := sam.uf_plan_adelanta_cuotas(_plan_id, cuota);
        vctacte_id:=nextval('seq_ctacte_id'::regclass);

        Insert Into ctacte
        Values (vctacte_id, 1, vtobj, _obj_id, 0,
        _plan_id, cuota, 0, capital, 0, 0, 'D', current_timestamp, _fecha, null, 0, capital, capital,
        0, 0, '', cuotas_det, current_timestamp, _usr);

        -- genero los registros en la ctacte_det
        Insert Into ctacte_det values (vctacte_id, 6, _plan_id, vcta_id,
        capital, 0, _fecha, 'A', current_timestamp, _usr);

        -- inserto en la planes_cuotas
        Insert Into plan_cuota values (_plan_id, vctacte_id, cuota,
        capital, 0, _cuotas);

    End If;


    return Next;
End
$$;


ALTER FUNCTION sam.uf_plan_adelanta(_plan_id integer, _obj_id character varying, _cuotas integer, _fecha date, _usr integer, _graba integer) OWNER TO postgres;

--
-- TOC entry 5698 (class 0 OID 0)
-- Dependencies: 899
-- Name: FUNCTION uf_plan_adelanta(_plan_id integer, _obj_id character varying, _cuotas integer, _fecha date, _usr integer, _graba integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_plan_adelanta(_plan_id integer, _obj_id character varying, _cuotas integer, _fecha date, _usr integer, _graba integer) IS 'Genera una cuota tipo 900, con el adelantamiento de cuotas del plan, a valor de cuota pura';


--
-- TOC entry 900 (class 1255 OID 5282951)
-- Name: uf_plan_adelanta(integer, character varying, integer, date, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_plan_adelanta(_plan_id integer, _obj_id character varying, _cuotas integer, _fecha date, _usr integer, _graba integer, _quitafinancia integer DEFAULT 1) RETURNS TABLE(capital numeric, cuota smallint)
    LANGUAGE plpgsql
    AS $$
declare
    cant smallint;
    vcta_id smallint;
    vtobj smallint;
    vctacte_id integer;
    cuotas_det varchar(500);
    resultado varchar(200);
    vcapital numeric;
    vcuota SMALLINT;
begin
    -- permite adelantar cuotas en un plan.
    -- genera una nueva cuota 900. y da de baja las cuotas originales.

    -- inicializo
    vcapital := 0;
    vcuota := 0;
    cuotas_det := '';

    -- verIfico que no existan cuotas 900 pEndientes o cuotas vencidas.
    Select Into cant count(*)
    From ctacte c Where trib_id=1 and anio=_plan_id and est = 'D'
    and (fchvenc<current_date or c.cuota>=900);

    If (cant>1) Then
        RAISE EXCEPTION 'Existen cuotas pendientes de pago';
    End If;

    -- verIfico que la cantidad de cuotas a adelantar sea correcta
    cant := sam.uf_plan_adelanta_ver(_plan_id);

    If (_cuotas > cant) Then
        RAISE EXCEPTION 'La cantidad de cuotas a adelantar es incorrecta.';
    End If;

    -- obtengo el número de cuota a ingresar
    Select Into vcuota coalesce(max(pc.cuota)+1,900)
    From plan_cuota pc Where pc.plan_id=_plan_id and pc.cuota>=900;

    -- marco est='B' las cuotas adelantadas y acumulo el capital a cubrir
    cant := 0;
    For vctacte_id In Select c.ctacte_id
    From ctacte c Where c.trib_id=1 and c.anio=_plan_id and c.est='D'
    Order By c.cuota desc Loop

        cant := cant + 1;

        If (_graba=1) Then
            update ctacte c set est='B' Where c.ctacte_id=vctacte_id;
            update plan_cuota pc set cuota_adelanta=vcuota Where pc.ctacte_id=vctacte_id;
        End If;

        if (_quitafinancia=1) then
        	Select Into vcapital pc.capital+vcapital From plan_cuota pc Where pc.ctacte_id=vctacte_id;
        else
        	Select Into vcapital pc.capital+vcapital+pc.financia From plan_cuota pc Where pc.ctacte_id=vctacte_id;
        end if;

        If (cant=_cuotas) Then
            Exit;
        End If;

    End Loop;

    -- grabo el adelantamiento
    If (_graba=1) Then

        -- obtengo la cuenta a usar
        Select Into vcta_id t.cta_id
        From plan p inner join plan_config t on p.tplan=t.cod
        Where p.plan_id=_plan_id ;

        -- obtengo el tipo de objeto
        Select Into vtobj o.tobj From objeto o Where o.obj_id=_obj_id ;

        -- inserto en la ctacte
        cuotas_det := sam.uf_plan_adelanta_cuotas(_plan_id, vcuota);
        vctacte_id:=nextval('seq_ctacte_id'::regclass);

        Insert Into ctacte
        Values (vctacte_id, 1, vtobj, _obj_id, 0,
        _plan_id, vcuota, 0, vcapital, 0, 0, 'D', current_timestamp, _fecha, null, 0, vcapital, vcapital,
        0, 0, '', cuotas_det, current_timestamp, _usr);

        -- genero los registros en la ctacte_det
        Insert Into ctacte_det values (vctacte_id, 6, _plan_id, vcta_id,
        vcapital, 0, _fecha, 'A', current_timestamp, _usr);

        -- inserto en la planes_cuotas
        Insert Into plan_cuota values (_plan_id, vctacte_id, vcuota,
        vcapital, 0, _cuotas);

    End If;

	capital = vcapital;
    cuota = vcuota;
    return Next;
End
$$;


ALTER FUNCTION sam.uf_plan_adelanta(_plan_id integer, _obj_id character varying, _cuotas integer, _fecha date, _usr integer, _graba integer, _quitafinancia integer) OWNER TO postgres;

--
-- TOC entry 901 (class 1255 OID 5282952)
-- Name: uf_plan_adelanta_baja(integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_plan_adelanta_baja(_plan_id integer, _cuota integer, _usr integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    vctacte_id integer;
    est_cc varchar(1);
begin

    -- Permite eliminar una cuota adelantada (900)
    -- vuelve a activar las cuotas originales del plan.

    -- verificar que la cuota sea 900 y esté impaga (est='D')
    Select Into est_cc, vctacte_id  c.est, c.ctacte_id From ctacte c
    Where c.trib_id=1 and c.anio=_plan_id and c.cuota=_cuota;

    If (est_cc<>'D') Then
        Raise Exception 'La cuota ingresada se encuentra paga ó dada de baja.';
    End If;

    If (_cuota<900) Then
        Raise Exception 'La cuota ingresada se encuentra paga, dada de baja o bien no pertenece a una cuota adelantada.';
    End If;


    -- doy de baja la cuota en ctacte y en ctacte_det
    Update ctacte c set est='B', usrmod=_usr, fchmod=current_timestamp
    where c.ctacte_id=vctacte_id;

    Update ctacte_det c set est='B', usrmod=_usr, fchmod=current_timestamp
    where c.ctacte_id=vctacte_id;

    -- activo las cuotas que se intentó adelantar
    update ctacte c set est='D'
    From plan_cuota pc where c.ctacte_id = pc.ctacte_id and pc.plan_id=_plan_id and cuota_adelanta=_cuota;

    update plan_cuota pc set cuota_adelanta=0
    Where pc.plan_id=_plan_id and cuota_adelanta=_cuota;
end
$$;


ALTER FUNCTION sam.uf_plan_adelanta_baja(_plan_id integer, _cuota integer, _usr integer) OWNER TO postgres;

--
-- TOC entry 5699 (class 0 OID 0)
-- Dependencies: 901
-- Name: FUNCTION uf_plan_adelanta_baja(_plan_id integer, _cuota integer, _usr integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_plan_adelanta_baja(_plan_id integer, _cuota integer, _usr integer) IS 'Permite eliminar una cuota adelantada de un plan';


--
-- TOC entry 902 (class 1255 OID 5282953)
-- Name: uf_plan_adelanta_cuotas(integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_plan_adelanta_cuotas(_plan_id integer, _cuotaadelanta integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
    mincuota smallint;
    maxcuota smallint;
    cuotas varchar(500);
begin
    -- def: Genera una cadena conteniendo los nros de cuotas que se adelantan

    -- recupero los periodos del plan
    Select Into mincuota, maxcuota  min(cuota), max(cuota) From plan_cuota pc
    Where pc.plan_id = _plan_id and pc.cuota_adelanta = _cuotaadelanta;

    cuotas = 'Cuotas adelantadas: ' || cast(mincuota as varchar(3)) || ' a ' || cast(maxcuota as varchar(3));

    return cuotas;

end
$$;


ALTER FUNCTION sam.uf_plan_adelanta_cuotas(_plan_id integer, _cuotaadelanta integer) OWNER TO postgres;

--
-- TOC entry 5700 (class 0 OID 0)
-- Dependencies: 902
-- Name: FUNCTION uf_plan_adelanta_cuotas(_plan_id integer, _cuotaadelanta integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_plan_adelanta_cuotas(_plan_id integer, _cuotaadelanta integer) IS 'Recupera el listado de cuotas a adelantar de planes en una cadena de texto.';


--
-- TOC entry 903 (class 1255 OID 5282954)
-- Name: uf_plan_adelanta_ver(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_plan_adelanta_ver(_plan_id integer) RETURNS smallint
    LANGUAGE plpgsql
    AS $$
declare
    fchinicio date;
    cant smallint;
begin

    -- def: Devuelve la cantidad de cuotas que se pueden adelantar en un plan
    
    fchinicio = cast(cast(date_part('year',current_date) as varchar(4)) || '/'
             || cast(date_part('month',current_date) as varchar(2)) || '/01' as date);

    fchinicio =  fchinicio + interval '1 months';

    Select Into cant count(*) From ctacte c
    Where c.trib_id=1 and anio=_plan_id and est='D' and fchvenc>=fchinicio;

    return cant;
    
end
$$;


ALTER FUNCTION sam.uf_plan_adelanta_ver(_plan_id integer) OWNER TO postgres;

--
-- TOC entry 5701 (class 0 OID 0)
-- Dependencies: 903
-- Name: FUNCTION uf_plan_adelanta_ver(_plan_id integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_plan_adelanta_ver(_plan_id integer) IS 'Devuelve la cantidad de cuotas que se pueden adelantar en un plan';


--
-- TOC entry 904 (class 1255 OID 5282955)
-- Name: uf_plan_anula(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_plan_anula(_plan_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    estplan smallint;
    vctacte_id integer;
begin
    -- def: anula la imputación o decaimiento de un plan de pago

    -- verIfico el estado actual del plan
    Select into estplan est From plan p Where p.plan_id=_plan_id;

    If (estplan <> 2 and estplan <> 3 and estplan <> 5 ) Then
        RAISE EXCEPTION 'El estado del convenio de pago es incorrecto';
    End If;

    -- actualizo el estado del plan
    Update plan p Set est=1, fchimputa=null, fchdecae=null
    Where p.plan_id=_plan_id;

    -- marco los conceptos de la ctacte detalle
    If (estplan = 5) Then -- imputacion
        Update ctacte_det Set est='B' Where topera=7 and comprob = _plan_id;
    End If;

    If (estplan = 3) Then -- decaimiento
        Update ctacte_det Set est='B' Where topera=8 and comprob = _plan_id;

        -- activo las cuotas del plan
        Update ctacte Set est='D' Where trib_id=1 and anio=_plan_id and est='B';
    end If;

    If (estplan = 2) Then -- borrado
        -- activo las cuotas del plan
        Update ctacte Set est='D' Where trib_id=1 and anio=_plan_id and est='B';
	End If;

    -- marco los períodos afectados en la ctacte
    For vctacte_id In Select pp.ctacte_id From plan_periodo pp Where pp.plan_id = _plan_id Loop
        Perform sam.uf_ctacte_ajuste(vctacte_id);

        Update ctacte c Set est = 'C' Where c.ctacte_id = vctacte_id;
    End Loop;

    -- actualizo la tabla de periodos del plan, para representar que no se cubrió nada
    Update plan_periodo pp Set nominalcub = 0, accesorcub = 0, multacub = 0
    Where pp.plan_id = _plan_id;


end
$$;


ALTER FUNCTION sam.uf_plan_anula(_plan_id integer) OWNER TO postgres;

--
-- TOC entry 5702 (class 0 OID 0)
-- Dependencies: 904
-- Name: FUNCTION uf_plan_anula(_plan_id integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_plan_anula(_plan_id integer) IS 'Anula la Imputación o Decaimiento de un Plan de Pago';


--
-- TOC entry 905 (class 1255 OID 5282956)
-- Name: uf_plan_borra(integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_plan_borra(_plan_id integer, _usr integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    cant smallint;
    vctacte_id integer;
    vorigen smallint;
begin
    -- def: procedimiento que da de baja un plan de pago

    -- verIfico si existen períodos pagos en la ctacte
    Select Into cant count(*) From ctacte Where trib_id=1 and anio=_plan_id and est = 'P';

    If (cant <> 0) then
    	RAISE EXCEPTION 'Existen cuotas pagadas en la ctacte';
    End If;

    -- actualizo el estado del plan
    Update plan p set est = 2, usrmod=_usr, fchbaja = current_timestamp Where p.plan_id=_plan_id;

    -- marco las cuotas afectadas en la ctacte
    Update ctacte set est = 'B' Where trib_id=1 and anio=_plan_id;

    -- desmarco los períodos incluídos en el plan, en la ctacte
    Update ctacte c set est = pp.estant
    From plan_periodo pp Where pp.plan_id=_plan_id and c.ctacte_id=pp.ctacte_id;

    -- actualizo la tabla de periodos del plan, para representar que no se cubrió nada
    Update plan_periodo pp set nominalcub = 0, accesorcub = 0, multacub = 0
    Where pp.plan_id = _plan_id;

    -- si el origen es Expediente Judicial, actualizo el estado de la planilla
    Select into vorigen p.origen From plan p Where p.plan_id = _plan_id;
    If (vorigen = 3) then
        Update judi j set est = 1 Where j.plan_id = _plan_id;  -- rentas
    End If;

end
$$;


ALTER FUNCTION sam.uf_plan_borra(_plan_id integer, _usr integer) OWNER TO postgres;

--
-- TOC entry 908 (class 1255 OID 5282957)
-- Name: uf_plan_caidos(integer, integer, integer, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_plan_caidos(_tplan integer, _origen integer, _tpago integer, _caja_id integer, atrasadas integer, consecutivas integer) RETURNS TABLE(plan_id integer, tplan smallint, tplan_nom character varying, obj_id character varying, num character varying, num_nom character varying, resp character varying, resptdoc character varying, respndoc bigint, respdompos_dir character varying, nominal numeric, accesor numeric, multa numeric, financia numeric, sellado numeric, anticipo numeric, total numeric, origen smallint, origen_nom character varying, tpago smallint, tpago_nom character varying, cuotas smallint, montocuo numeric, cant_atras smallint, cant_cons smallint, fchalta character varying)
    LANGUAGE plpgsql
    AS $$
declare
    cant_aux smallint;
    cuota smallint;
    cuota_ant smallint;
begin
    -- def: procedimiento que obtiene los planes que están vigentes
    -- pero que están en condiciones de decaer.
    -- parámetros: tplan: tipo de plan
    --             origen: general,
    --             tpago: general, cheque diferido, débito
    --             caja_id si tpago=débito puede especificarse la caja
    --             atrasadas: cantidad de cuotas adeudadas (cuo_atras>cuo_cons)
    --             consecutivas: cantidad de cuotas adeudadas consecutivas.


    -- primero obtengo los planes según cuotas adeudadas
    For plan_id, cant_atras
    In Select p.plan_id, count(*)
    From plan p Inner Join plan_cuota pc on p.plan_id=pc.plan_id
    Inner Join ctacte c on pc.ctacte_id=c.ctacte_id
    Where p.est=1 and c.est='D' and c.fchvenc<current_date
    and p.origen=1 and p.tpago=1
    and (p.tplan=_tplan or _tplan=0)
    and (p.origen=_origen or _origen=0)
    and (p.tpago=_tpago or _tpago=0)
    and (p.caja_id=_caja_id or _caja_id=0)
    Group By p.plan_id, p.tplan
    Having count(*)>=consecutivas Loop

        -- me fijo si cumple la condición de consecutivas
        cuota_ant := -2;
        cant_aux := 1;
        cant_cons := 1;

        For cuota In Select c.cuota From ctacte c
        Where trib_id=1 and anio=plan_id and est='D' and fchvenc<current_date
        Order By cuota Loop

            If (cuota-1=cuota_ant) Then
                cant_aux := cant_aux+1;
            Else
                If (cant_aux>cant_cons) Then
                    cant_cons := cant_aux;
                End If;
                cant_aux := 1;
            End If;

            cuota_ant := cuota;
        End Loop;

        If (cant_aux>cant_cons) Then
            cant_cons := cant_aux;
        End If;

        If (cant_atras>=atrasadas and cant_cons>=consecutivas) Then

            -- cumple la segunda condición, eureka ! hago los Return
            Select
            into tplan,tplan_nom,obj_id,num,num_nom,resp,resptdoc,respndoc,respdompos_dir,
            nominal,accesor,multa,financia,sellado,anticipo,
            total,origen,origen_nom,tpago,tpago_nom,cuotas,montocuo,fchalta
            p.tplan,coalesce(p.tplan_nom,''),p.obj_id,p.num,p.num_nom,p.resp,p.resptdoc,
            coalesce(p.respndoc,0),p.respdompos_dir,
            p.nominal,p.accesor,p.multa,p.financia,p.sellado,p.anticipo,
            p.total,p.origen,p.origen_nom,p.tpago,p.tpago_nom,p.cuotas,p.montocuo,to_char(p.fchalta,'DD/MM/YYYY')
            From v_plan p Where p.plan_id=plan_id;

            Return Next;
        End If;
    End Loop;
End
$$;


ALTER FUNCTION sam.uf_plan_caidos(_tplan integer, _origen integer, _tpago integer, _caja_id integer, atrasadas integer, consecutivas integer) OWNER TO postgres;

--
-- TOC entry 909 (class 1255 OID 5282958)
-- Name: uf_plan_decae(integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_plan_decae(_plan_id integer, _usr integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    cantcuotas smallint;
    cant smallint;
    fchultpago date;
    vcapital decimal(12,2);
    vctacte_id integer;
    vnominal decimal(12,2);
    vaccesor decimal(12,2);
    vmulta decimal(12,2);
    vfchvenc date;
    vfchalta date;
    vfchpago date;
    vcta_id smallint;
    vtcta smallint;
    cta_id_rec smallint;
    vmonto decimal(12,2);
    montoaccesor decimal(12,2);
    vmultacub decimal(12,2);
    vaccesorcub decimal(12,2);
    vnominalcub decimal(12,2);
    porcmultacub decimal(9,4);
    porcaccesorcub decimal(9,4);
    porcnominalcub decimal(9,4);
    vctarecgral smallint;
    ctamultadecae smallint;
    porcmultadecae decimal(12,2);
    vorigen smallint;
    vest varchar(1);
    vest_ant varchar(1);
begin

    -- def: procedimiento que efectúa el decaimiento de planes de pago

    -- recupero la cuenta general de recargo definido en la configuración
    Select Into vctarecgral c.ctarecargo From sam.config c;

    -- verifico si el plan tiene periodos vinculados
    Select Into cant count(*) From plan_periodo p Where p.plan_id=_plan_id;
    If (cant = 0) Then
    	RAISE EXCEPTION 'El Plan No tiene Períodos vinculados';
    End If;

    -- verifico que el convenio esté pagado parcialmente
    Select Into cantcuotas
    case when anticipo>0 Then cuotas+1 Else cuotas End
    From plan p Where p.plan_id=_plan_id;

    -- recupero cantidad cuotas pagas, fecha ultimo pago y capital pagado
    Select Into cant, fchultpago, vcapital
    count(*), max(c.fchpago), sum(pc.capital)
    From plan_cuota pc inner join ctacte c on pc.ctacte_id=c.ctacte_id
    Where pc.plan_id=_plan_id and est = 'P';

    If (cant = 0) Then
        RAISE EXCEPTION 'No existen cuotas pagas en la ctacte para efectuar el decaimiento';
    ElseIf (cant = cantcuotas) Then
        RAISE EXCEPTION 'El convenio se encuentra pago en Forma completa';
    End If;

    -- recupero la multa por caducidad y fecha alta plan
    Select Into ctamultadecae, porcmultadecae, vfchalta
    t.cta_id_multa, t.multa/100, p.fchalta
    From plan p inner join plan_config t on p.tplan=t.cod
    Where p.plan_id=_plan_id;

    -- actualizo el estado del plan
    Update plan p set est=3, usrmod=_usr, fchmod=current_timestamp, fchdecae=current_timestamp
    Where p.plan_id=_plan_id;

    -- doy de baja las cuotas pEndientes del plan
    Update ctacte set est='B' Where trib_id=1 and anio=_plan_id and est in ('D','J');

    -- actualizo la tabla de periodos del plan, con los montos en cero,
    -- por cada período se actualizará lo cubierto para cada uno
    Update plan_periodo pp set nominalcub = 0, accesorcub = 0, multacub = 0
    Where pp.plan_id = _plan_id;

    -- obtengo el origen del plan
    Select into vorigen p.origen From plan p Where p.plan_id = _plan_id;
    
    -- Inserto en la ctactedet, con operación = 'decaimiento'
    For vctacte_id, vnominal, vaccesor, vmulta, vfchvenc
    In Select p.ctacte_id, p.nominalreal, p.accesorreal, p.multareal, c.fchvenc
    From plan_periodo p inner join ctacte c on p.ctacte_id = c.ctacte_id
    Where p.plan_id = _plan_id Order By c.fchvenc Loop

        vnominalcub := 0; vaccesorcub := 0; vmultacub := 0;

        -- si corresponde multa por caducidad la Inserto
        -- la multa por caducidad lo calculo sobre el nominal del período
        If (porcmultadecae>0) Then
            Insert Into ctacte_det Values (
            vctacte_id, 8, _plan_id, ctamultadecae, vnominal*porcmultadecae, 0,
            fchultpago, 'A', current_timestamp, _usr);

            vmulta := vmulta + vnominal*porcmultadecae;
        End If;

        -- verifico lo cubierto por multa
        If (vmulta>0 and vcapital>0) Then
            vmultacub := case when vcapital>=vmulta Then vmulta Else vcapital End;
            porcmultacub := vmultacub*100/vmulta;
            vcapital := vcapital-vmultacub;
        End If;

        -- verifico lo cubierto por accesorio
        If (vaccesor>0 and vcapital>0) Then
            vaccesorcub := case when vcapital>=vaccesor Then vaccesor Else vcapital End;
            porcaccesorcub := vaccesorcub*100/vaccesor;
            vcapital := vcapital-vaccesorcub;
        End If;

        -- verifico lo cubierto por nominal
        If (vnominal>0 and vcapital>0) Then
            vnominalcub := case when vcapital>=vnominal Then vnominal Else vcapital End;
            porcnominalcub := vnominalcub*100/vnominal;
            vcapital := vcapital-vnominalcub;
        End If;

        -- realizo las inserciones en ctacte_det
        If (vnominalcub+vaccesorcub+vmultacub > 0) Then
            For vcta_id, vtcta, vmonto
            In Select d.cta_id, c.tcta, sum(d.debe - d.haber)
            From ctacte_det d inner join cuenta c on d.cta_id = c.cta_id
            Where d.ctacte_id = vctacte_id and d.est = 'A'
            group by d.cta_id, c.tcta--, c.cta_id_rec
            Order By c.tcta desc, d.cta_id Loop

                If (vtcta = 4 and vmultacub>0) Then -- Inserto multa
                    Insert Into ctacte_det Values
                    (vctacte_id, 8, _plan_id, vcta_id, 0, vmonto*porcmultacub/100,
                    fchultpago, 'A', current_timestamp, _usr);
                End If;

                If (vtcta = 1 and vnominalcub>0) Then  -- Inserto nominal
                    Insert Into ctacte_det Values
                    (vctacte_id, 8, _plan_id, vcta_id, 0, vmonto*porcnominalcub/100,
                    fchultpago, 'A', current_timestamp, _usr);
                End If;

            End Loop;

			if vaccesorcub>0 Then

                Select Into vmonto sum(d.debe - d.haber)
                From ctacte_det d inner join cuenta c on d.cta_id = c.cta_id
                Where d.ctacte_id = vctacte_id and d.est = 'A' and c.tcta=1;

				if not vmonto is null Then
                   If (vmonto<>0) Then
                      montoaccesor := sam.uf_calc_interes(vmonto, vfchvenc, vfchalta);
                      cta_id_rec := vctarecgral;

                      -- si se cubrió en Forma completa, Inserto la liquidacion del interes
                      If (vnominal = vnominalcub and vaccesor = vaccesorcub and vmulta = vmultacub) Then
                          Insert Into ctacte_det Values
                          (vctacte_id, 8, _plan_id, cta_id_rec, montoaccesor, montoaccesor,
                          fchultpago, 'A', current_timestamp, _usr);
                      Else
                          Insert Into ctacte_det Values
                          (vctacte_id, 8, _plan_id, cta_id_rec, montoaccesor*porcaccesorcub/100, montoaccesor*porcaccesorcub/100,
                          fchultpago, 'A', current_timestamp, _usr);
                      End If;
                   End If;
				End If;
            End IF;
        End If;

        -- recalculo la ctacte para el período actual
        Perform sam.uf_ctacte_ajuste(vctacte_id);
        
        -- si el origen es judicial
        If (vorigen = 3) then
        	select into vest_ant, vest pp.estant, c.est from plan_periodo pp
			left join ctacte c on pp.ctacte_id=c.ctacte_id
			where pp.ctacte_id= vctacte_id;
            
            -- actualizo al estado anterior del período
            If vest='D' and vest_ant='J' Then
            	update ctacte c set est = vest_ant where c.ctacte_id= vctacte_id;
            End If;
        End if;

        -- si se cubrió parcialmente los intereses, corro fchpago
        If (vaccesorcub<vaccesor and vaccesorcub>0) Then
            vfchpago := sam.uf_calc_interes_hasta(vnominal, vfchvenc, vaccesorcub);

            Update ctacte c set fchpago=vfchpago Where c.ctacte_id = vctacte_id;
        End If;

        -- actualizo la tabla de periodos del plan, con los montos cubiertos
        Update plan_periodo pp
        set nominalcub = vnominalcub, accesorcub = vaccesorcub, multacub = vmultacub
        Where pp.plan_id = _plan_id and pp.ctacte_id = vctacte_id;

    End Loop;

    -- si el origen es Expediente Judicial, actualizo el estado de la planilla
    If (vorigen = 3) then
        Update judi j set est = 'D' Where j.plan_id = _plan_id;  -- plan decaido
    End If;
End
$$;


ALTER FUNCTION sam.uf_plan_decae(_plan_id integer, _usr integer) OWNER TO postgres;

--
-- TOC entry 5703 (class 0 OID 0)
-- Dependencies: 909
-- Name: FUNCTION uf_plan_decae(_plan_id integer, _usr integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_plan_decae(_plan_id integer, _usr integer) IS 'Efectúa el decaimiento de un plan de pago pagado parcialmente';


--
-- TOC entry 910 (class 1255 OID 5282960)
-- Name: uf_plan_decaer_masiva(); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_plan_decaer_masiva() RETURNS integer
    LANGUAGE plpgsql
    AS $$
declare
    cant smallint;
    cant_proceso smallint;
    vtplan integer;
    vorigen integer;
    vtpago integer;
    vcaja_id integer;
    vcant_atras integer;
    vcant_cons integer;
    vplan_id integer;
begin
    -- def: procedimiento que realiza el decaimiento de los planes
    -- que cumplan con las condiciones definidas en plan_config_decaer.
	cant_proceso := 0;

	For vtplan,vorigen,vtpago,vcaja_id,vcant_atras,vcant_cons
    In Select d.tplan,d.origen,d.tpago,d.caja_id,d.cant_atras,d.cant_cons
    From plan_config_decaer d Loop

    	For vplan_id In Select c.plan_id
        From sam.uf_plan_caidos(vtplan,vorigen,vtpago,vcaja_id,vcant_atras,vcant_cons) c Loop

        	cant_proceso := cant_proceso + 1;

        	Select into cant count(*) From plan_cuota pc
            Inner join ctacte c on pc.ctacte_id=c.ctacte_id
            Where pc.plan_id=vplan_id and est='P';

            If Cant > 0 Then
               perform sam.uf_Plan_Decae(vplan_id,100);
            Else
               perform sam.uf_Plan_Borra(vplan_id,100);
            End If;

        End Loop;

    End Loop;

    -- Retorno la cantidad de procesados
    Return cant_proceso;
End
$$;


ALTER FUNCTION sam.uf_plan_decaer_masiva() OWNER TO postgres;

--
-- TOC entry 911 (class 1255 OID 5282961)
-- Name: uf_plan_fecha(integer, integer, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_plan_fecha(_anio integer, _mes integer, _nuevovenc date) RETURNS void
    LANGUAGE plpgsql
    AS $$
begin
    If (date_part('year',_nuevovenc)<>_anio or date_part('month',_nuevovenc)<>_mes) Then
       RAISE EXCEPTION 'Nuevo vencimiento no coincide con parametros';
    End If;

    Update ctacte Set fchvenc=_nuevovenc
    Where trib_id=1 and date_part('year',_nuevovenc)=_anio and date_part('month',_nuevovenc)=_mes and est='D';

end
$$;


ALTER FUNCTION sam.uf_plan_fecha(_anio integer, _mes integer, _nuevovenc date) OWNER TO postgres;

--
-- TOC entry 5704 (class 0 OID 0)
-- Dependencies: 911
-- Name: FUNCTION uf_plan_fecha(_anio integer, _mes integer, _nuevovenc date); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_plan_fecha(_anio integer, _mes integer, _nuevovenc date) IS 'Cambia el vencimiento de las cuotas de planes de un mes determinado';


--
-- TOC entry 912 (class 1255 OID 5282962)
-- Name: uf_plan_fecha_uno(integer, integer, date, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_plan_fecha_uno(_plan_id integer, _cuodesde integer, _nuevovencdesde date, _usr_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
	cant smallint;
    cuohasta smallint;
    venc  date;
begin

	-- Me fijo si la cuota es válida
	select into cant,cuohasta count(*),max(c.cuota) from ctacte c
    where c.trib_id=1 and c.anio=_plan_id and c.cuota>=_cuodesde and c.est<>'B' and c.est<>'P';
    if cant=0 Then
    	raise exception 'El n° de plan o la cuota inicial son incorrectos';
    End If;

	-- Recupero la fecha de vencimiento anterior para auditoria
	Select Into venc c.fchvenc From ctacte c Where c.trib_id=1 and c.anio=_plan_id and c.cuota=_cuodesde;
	-- Tabla de Auditoria
    Insert Into ctacte_planvenc (plan_id,cuota_desde,vencdesde_nuevo,vencdesde_ant,usrmod)
      Values (_plan_id, _cuodesde, _nuevovencdesde, venc, _usr_id);

    -- Realizo el cambio de vencimientos
    venc := _nuevovencdesde;
    For i in _cuodesde..cuohasta Loop
    	update ctacte c set fchvenc=venc where c.trib_id=1 and c.anio=_plan_id and c.cuota=i;
        venc := venc + interval '1 month';
    End Loop;

end
$$;


ALTER FUNCTION sam.uf_plan_fecha_uno(_plan_id integer, _cuodesde integer, _nuevovencdesde date, _usr_id integer) OWNER TO postgres;

--
-- TOC entry 913 (class 1255 OID 5282963)
-- Name: uf_plan_graba_cuotas(numeric, integer, integer, date, integer, character varying, integer, integer, numeric, numeric); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_plan_graba_cuotas(_deuda numeric, _periodos integer, _cuotas integer, _fchconsolida date, _tplan integer, _obj_id character varying, _plan_id integer, _usr_id integer, _monto_anticipo numeric, _interesusar numeric DEFAULT (-1)) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    vtobj SMALLINT;
    vsellado numeric;
    usarctaper smallint;
    vcta_id_plan smallint;
    vcta_id_rec smallint;
    vcta_id_sellado smallint;
    n smallint;
    vcuota smallint;
    vcapital numeric;
    vfinancia numeric;
    vtotal numeric;
	vfchalta timestamp;
    venc date;
    vctacte_id integer;
    vmonto numeric;

    descnominal numeric(12,2);
    descmulta numeric(12,2);
    vnominal numeric(12,2);
    vaccesor numeric(12,2);
    vmulta numeric(12,2);
    accesor_cuota numeric(12,2);
    vcta_id smallint;
    vtcta smallint;
    cta_monto numeric(12,2);
    planporc numeric;  -- porcentaje que representa la cuenta del monto total de deuda
    montototal numeric(12,2);
begin

    -- Me fijo si las cuotas ya se generaron
    Select Into n count(*) From plan_cuota c where c.plan_id=_plan_id;
    If n >0 Then
    	Raise Exception 'Las cuotas del plan ya fueron generadas';
    End If;

    -- Obtengo las cuentas de la configuración
    Select into usarctaper, vcta_id_plan, vcta_id_rec, vcta_id_sellado
    	c.usarctaper, c.cta_id, c.cta_id_rec, c.cta_id_sellado
    from plan_config c where c.cod=_tplan;

    -- Obtengo TObj
    Select into vTObj o.TObj From objeto o Where o.obj_id=_obj_id;

    -- Recupero los montos y porcentajes de quita del plan
    Select into vnominal, vaccesor, vmulta, vsellado, descnominal,descmulta, vfchalta
    p.nominal, p.accesor, p.multa, p.sellado, p.descnominal, p.descmulta, p.fchalta
    from plan p where p.plan_id=_plan_id;

    -- recorro las cuotas generadas
    n = 0;
    For vcuota, vcapital, vfinancia, vtotal, venc
    In Select p.cuota, p.capital, p.financia, p.total, p.venc
    From sam.uf_plan_previo (_deuda, _periodos, _cuotas, _fchconsolida, _tplan, _obj_id,_monto_anticipo,_interesusar) p Loop

        n := n + 1;

        If (vsellado>0 and n=1) Then
            vmonto := vtotal + vsellado;
        Else
            vmonto := vtotal;
        End If;

        -- Recupero el ctacte_id
        vctacte_id:=nextval('seq_ctacte_id'::regclass);

        -- Inserto en la ctacte
        Insert Into ctacte Values
        (vctacte_id, 1, vtobj, _obj_id, 0, _plan_id, vcuota, 0, vmonto, 0, 0, 'D',
        current_timestamp, venc, null, 0, vmonto, vmonto, 0, 0, '', '', current_timestamp, _usr_id);

        -- Me fijo si tengo que usar las cuentas de períodos
        if usarctaper=0 Then

            -- Inserto el capital y financiación en la cuenta plan definida
            Insert Into ctacte_det Values
            (vctacte_id, 6, _plan_id, vcta_id_plan, vcapital+vfinancia, 0, vfchalta, 'A',current_timestamp, _usr_id);

        Else

        	-- Tengo que usar las cuentas de los periodos asociados ...
            -- Determino el porcentaje que representa el capital de la cuota en la deuda total
            planporc := vcapital / _deuda;

            -- Inserto los accesorios propios de la deuda
            montototal:=0;
            If (vaccesor > 0) Then
                accesor_cuota := round(planporc * vaccesor,2);
                montototal:= montototal + accesor_cuota;

                Insert Into ctacte_det Values
                  (vctacte_id, 6, _plan_id, vcta_id_rec, accesor_cuota, 0, vfchalta, 'A',current_timestamp, _usr_id);
            Else
                accesor_cuota=0;
            End If;

            -- Recupero todas las cuentas que intervienen segun los periodos incluidos
            For vcta_id, vtcta, cta_monto
            In Select case when cc.anio<extract(year from current_date) then c.cta_id_atras else d.cta_id end,
            c.tcta, sum(d.debe - d.haber)
            from ctacte_det d inner join cuenta c on d.cta_id = c.cta_id
            left join cuenta ca on c.cta_id_atras=ca.cta_id
            inner join plan_periodo pp on d.ctacte_id=pp.ctacte_id
            inner join ctacte cc on pp.ctacte_id=cc.ctacte_id
            where pp.plan_id = _plan_id and d.est = 'A' and c.tcta not in (2,3)
            group by 1, 2 order by 1 desc
            Loop
                If (vtcta=4 and descmulta>0) then -- aplico quita
                    cta_monto = cta_monto * (1-descmulta/100);
                Elseif (descnominal>0) then
                    cta_monto = cta_monto * (1-descnominal/100);
                End If;

                cta_monto := round(planporc * cta_monto,2);
                montototal:= montototal + cta_monto;

                Insert Into ctacte_det Values
                (vctacte_id, 6, _plan_id, vcta_id, cta_monto, 0, vfchalta, 'A',current_timestamp, _usr_id);

            End Loop;
            -- en la ultima cuenta ajusto la diferencia
            update ctacte_det d set debe = debe + (vcapital-montototal)
               where d.ctacte_id=vctacte_id and d.topera=6 and d.comprob=_plan_id and d.cta_id=vcta_id;

            -- Inserto el monto correspondiente a financia
            If (vfinancia > 0) Then
                Insert Into ctacte_det Values
                (vctacte_id, 6, _plan_id, vcta_id_plan, vfinancia, 0, vfchalta, 'A',current_timestamp, _usr_id);
            End If;

		End If;

        -- Inserto el sellado si corresponde
        If (vsellado>0 and n=1) Then
            Insert Into ctacte_det Values
            (vctacte_id, 6, _plan_id, vcta_id_sellado, vsellado, 0, vfchalta, 'A',current_timestamp, _usr_id);
        End If;

        -- Inserto en plan_cuota
        Insert Into plan_cuota Values (_plan_id, vctacte_id, vcuota, vcapital, vfinancia, 0);

	End Loop;

End
$$;


ALTER FUNCTION sam.uf_plan_graba_cuotas(_deuda numeric, _periodos integer, _cuotas integer, _fchconsolida date, _tplan integer, _obj_id character varying, _plan_id integer, _usr_id integer, _monto_anticipo numeric, _interesusar numeric) OWNER TO postgres;

--
-- TOC entry 916 (class 1255 OID 5282966)
-- Name: uf_plan_imputa(integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_plan_imputa(_plan_id integer, _usr integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    vctarecgral smallint;
    cant smallint;
    fchultpago timestamp;
    vctacte_id integer;
    vnominal decimal(12,2);
    vaccesor decimal(12,2);
    vmulta decimal(12,2);
    vcta_id smallint;
    vtcta smallint;
    cuentarec smallint;
    monto decimal(12,2);
    accesorporc decimal(12,2);
    accesormonto decimal(12,2);
    vorigen smallint;
    nominalreal decimal(12,2);
    suma_tcta decimal(12,2);
begin
    -- def: procedimiento que efectúa la imputación de planes de pago

    -- recupero la cuenta general de recargo definido en la configuración
    Select Into vctarecgral c.ctarecargo From sam.config c;

    -- verIfico que no existan cuotas con deuda en la ctacte
    Select Into cant count(*) From ctacte c Where c.trib_id=1 and c.anio=_plan_id and c.est='D';
    If (cant <> 0) Then
    	RAISE EXCEPTION 'Existen cuotas en deuda en la ctacte';
    End If;

    -- recupero la fecha del último pago
    Select Into fchultpago max(c.fchpago) From ctacte c Where c.trib_id=1 and c.anio=_plan_id;
	if (fchultpago = null) then
    	raise exception 'Error en las fechas del Plan: %',_plan_id;
    end if;

    -- actualizo el estado del plan
    Update plan p Set est=5, fchimputa = current_timestamp Where p.plan_id=_plan_id;

  -- verifico si el plan tiene periodos vinculados
  Select Into cant count(*) From plan_periodo p Where p.plan_id=_plan_id;
  If (cant > 0) Then

    -- inserto en la ctactedet, con operación = 'imputacion'
    For vctacte_id, vnominal, vaccesor, vmulta, nominalreal
    In Select pp.ctacte_id, pp.nominal, pp.accesor, pp.multa, pp.nominalreal
    From plan_periodo pp Where pp.plan_id = _plan_id Loop

	-- verifico si el periodo tiene cuentas en el detalle
        Select Into cant coalesce(count(*),0) From ctacte_det d Where d.ctacte_id=vctacte_id and d.est='A';
        If (cant > 0) Then

          For vcta_id, vtcta, monto
          In Select c.cta_id, c.tcta, sum(d.debe - d.haber)
          From ctacte_det d inner join cuenta c on d.cta_id = c.cta_id
          Where d.ctacte_id = vctacte_id and d.est = 'A'
          Group By c.cta_id, c.tcta
          Having sum(debe - haber) <> 0 Loop


              Select sum(d.debe - d.haber)
              From ctacte_det d inner join cuenta c on d.cta_id = c.cta_id
              Where d.ctacte_id = vctacte_id and d.est = 'A' and topera<>7
              and c.tcta=vtcta Into suma_tcta;

              -- inserto la liquidacion de la multa en menos si hubo quita
              If (vtcta = 4 and monto > vmulta) Then
                  insert Into ctacte_det values (
                  vctacte_id, 7, _plan_id, vcta_id, vmulta - monto, 0,
                  fchultpago, 'A', current_timestamp, _usr);
              End If;

              -- inserto los accesorios según cuentarec,
              -- tomando un monto proporcional según :accesor
              -- recupero el porcentaje correspondiente
              If (vtcta=1 and vnominal >0) Then
                  accesorporc := (monto * 100) / vnominal;
                  accesormonto := (accesorporc * vaccesor) / 100;

                  If (accesormonto>0) Then
                      Select Into cant count(*) From cuenta c Where c.cta_id=cuentarec and tcta=3;
                      If (cant = 0) Then
                          cuentarec := vctarecgral;
                      End If;

                      Insert Into ctacte_det values (
                      vctacte_id, 7, _plan_id, cuentarec, accesormonto, accesormonto,
                      fchultpago, 'A', current_timestamp, _usr);
                  end If;
              end If;

              -- inserto la imputación de la multa
              If (vtcta=4) Then
                  If (monto >= vmulta and vmulta>0) Then
                      Insert Into ctacte_det values (
                      vctacte_id, 7, _plan_id, vcta_id, 0, vmulta, fchultpago,
                      'A', current_timestamp, _usr);
                  End If;

              -- inserto la imputación del nominal
              else
                  If (nominalreal<=vnominal) Then
                  if (fchultpago is null) then raise notice 'Plan_id: %',_plan_id; End If;
                      Insert Into ctacte_det values (
                      vctacte_id, 7, _plan_id, vcta_id, 0, nominalreal*monto/suma_tcta, fchultpago,
                      'A', current_timestamp, _usr);
                  else
                      Insert Into ctacte_det values (vctacte_id, 7, _plan_id, vcta_id,
                      (vnominal/nominalreal-1) * monto, (vnominal/nominalreal) * monto, fchultpago,
                      'A', current_timestamp, _usr);
                  End If;
              End If;
          End Loop;

          Perform sam.uf_ctacte_ajuste(vctacte_id);
        Else
          -- Al no existir detalle de ctacte, actualizo los datos solamente en la cabecera de la misma
          Update ctacte c set est='P', nominalcub=vnominal, fchpago=fchultpago Where c.ctacte_id=vctacte_id;
        End If;
    End Loop;

    -- actualizo la tabla de periodos del plan, para representar que se cubrió todo
    Update plan_periodo pp Set nominalcub = vnominal, accesorcub = vaccesor, multacub = vmulta
    Where pp.plan_id = _plan_id;

  End If;  


    -- si el origen es cdf, actualizo el estado de la planilla
    Select Into vorigen p.origen From plan p Where p.plan_id = _plan_id;
    If (vorigen = 3) Then
        Update judi j Set est = 'P' Where j.plan_id = _plan_id;  -- pagado
    End If;

end
$$;


ALTER FUNCTION sam.uf_plan_imputa(_plan_id integer, _usr integer) OWNER TO postgres;

--
-- TOC entry 5705 (class 0 OID 0)
-- Dependencies: 916
-- Name: FUNCTION uf_plan_imputa(_plan_id integer, _usr integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_plan_imputa(_plan_id integer, _usr integer) IS 'Efectúa la imputación de un plan de pago';


--
-- TOC entry 917 (class 1255 OID 5282968)
-- Name: uf_plan_periodos(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_plan_periodos(_plan_id integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
    periodos varchar;
    obj_cta varchar(10);
    tributo varchar(50);
    vtrib_id smallint;
    vanio integer;
    vcuota smallint;
    obj_cta_ant varchar(10);
    tributo_ant varchar(50);
    vtrib_id_ant smallint;
    mej_obra varchar(20);
begin
    -- def: genera una cadena conteniendo los períodos de la Forma (aaaa/pp,...)
    -- se recupera en primer lugar el n° de objeto y tributo, porque pueden ser varios

    periodos := ''; obj_cta_ant := ''; tributo_ant := ''; vtrib_id_ant = 0;
    obj_Cta := '';

    -- Recupero los periodos del plan
    For obj_cta, tributo, vtrib_id, vanio, vcuota
    In Select case c.subcta when 0 then c.obj_id || '   '
              else c.obj_id || '/' || lpad(ltrim(cast(c.subcta as varchar(1))),1,'0') end,
              t.nombre, t.trib_id, c.anio, c.cuota
    From plan_periodo pp Inner Join ctacte c on pp.ctacte_id = c.ctacte_id
    Inner Join trib t on c.trib_id = t.trib_id
    Where pp.plan_id = _plan_id
    Order By c.obj_id, c.subcta, t.nombre, c.anio, c.cuota Loop


        If ((obj_cta_ant <> '' and obj_cta_ant <> obj_cta) or (tributo_ant <> '' and tributo_ant <> tributo)) Then
            periodos := periodos || chr(13) || chr(13);
        End If;

        -- verificar si cambió el objeto
        If (obj_cta_ant <> obj_cta) Then
            obj_cta_ant := obj_cta;
            tributo_ant := '';
        End If;

        -- verificar si cambió el tributo
        If (tributo_ant <> tributo) Then
               mej_obra = '';
            periodos := periodos || 'Objeto: ' || obj_cta || ' - Tributo: ' || tributo || mej_obra || chr(13) || 'Períodos: ';
            tributo_ant := tributo;
            vtrib_id_ant = vtrib_id;
        Else
            periodos := periodos || ', ';
        End If;

        periodos := periodos || cast(vanio as varchar(4)) || '/' || cast(vcuota as varchar(3));

    End Loop;

    return periodos;
end
$$;


ALTER FUNCTION sam.uf_plan_periodos(_plan_id integer) OWNER TO postgres;

--
-- TOC entry 5706 (class 0 OID 0)
-- Dependencies: 917
-- Name: FUNCTION uf_plan_periodos(_plan_id integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_plan_periodos(_plan_id integer) IS 'Recupera los períodos incluidos en el plan en un STRING, para su uso en reportes';


--
-- TOC entry 949 (class 1255 OID 5282969)
-- Name: uf_plan_previo(numeric, integer, integer, date, integer, character varying, numeric, numeric); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_plan_previo(_deuda numeric, _periodos integer, _cuotas integer, _fchconsolida date, _tplan integer, _obj_id character varying, _monto_anticipo numeric, _interesusar numeric DEFAULT (-1)) RETURNS TABLE(cuota smallint, cuota_nom character varying, capital numeric, financia numeric, total numeric, venc date, sellado numeric)
    LANGUAGE plpgsql
    AS $$
declare
    tp record;
    inicio smallint;
    i smallint;
    cant smallint;
    vinteres numeric;
    vanticipo numeric;
    valorcuota decimal(12,2);
    capitalcuota decimal(12,2);
    financiacuota decimal(12,2);
    vsaldo decimal(12,2);
    fchaltaaux date;
begin

    -- obtengo los parámetros según tplan
    select into tp * from plan_config c where c.cod=_tplan;

    -- realizo las validaciones
    if (not found) then
        raise exception 'El tipo de plan ingresado no existe o no se encuentra vigente';
    elseif (_periodos=0) then
        raise exception 'No hay períodos para calcular el convenio de pago';
    elseif (tp.cantcuotas = 1 and (_cuotas < tp.mincantcuo or _cuotas > tp.maxcantcuo)) then
        raise exception 'El rango de cuotas establecido en la configuración es desde %', tp.mincantcuo || ' hasta ' || tp.maxcantcuo;
    elseif (tp.cantcuotas = 2 and _cuotas > _periodos) then
        raise exception 'La cantidad de cuotas no puede ser superior a la cantidad de períodos afectados.';
    elseif (_deuda<=0) then
        raise exception 'El monto total de la deuda no puede ser inferior o igual a cero.';
    elseif (tp.deuda <> 0) and (_deuda < tp.mindeuda or _deuda > tp.maxdeuda) then
        raise exception 'El rango de monto total establecido en la configuración es desde %', tp.mindeuda || ' hasta ' || tp.maxdeuda;
    elseif (tp.aldia <> 0) then
        select into cant count(*) from ctacte c where c.obj_id=_obj_id
        and c.anio*1000+c.cuota between tp.aldiadesde and tp.aldiahasta and est='D';

        if (cant>0) then
            raise exception 'El rango de periodos al dia establecido en la configuración es desde %', tp.aldiadesde || ' hasta ' || tp.aldiahasta;
        end if;
    End If;


    -- calculo el monto del anticipo
    vanticipo := _monto_anticipo;
    If (tp.anticipo = -1 and tp.anticipomanual = 0) then
	    vanticipo := 0;
    elseif (tp.anticipo > 0) then
    	If (tp.anticipomanual = 0) then
    		vanticipo := _deuda * (tp.anticipo / 100);
        elseif (tp.anticipo > 0 and vanticipo < _deuda * (tp.anticipo / 100)) then
        	raise exception 'El monto de anticipo es inferior al porcentaje establecido (%)',tp.anticipo;
		end if;
    end if;

    -- si la fecha de consolidacion es anterior a la actual, uso como vencimiento la actual
    if (_fchconsolida >= current_date) then
        fchaltaaux := _fchconsolida;
    else
        fchaltaaux := current_date;
    end if;

	-- Cargo el sellado
    sellado := tp.sellado;

    -- Si el dia de venc=0 ==> Tomo el día actual
    If tp.diavenc = 0 Then
        tp.diavenc = extract(day from fchaltaaux);
    End If;

    -- Si hay anticipo, cargo las variables
    if (vanticipo > 0) then
        inicio := 0;
        cuota := 0;
        cuota_nom := 'Anticipo';
        capital := vanticipo;
        financia := 0;
        total := vanticipo;
        venc := fchaltaaux;

        return next;
    else
        inicio := 1;
    end if;

    -- obtengo el interés a usar
    if (_interesusar <> -1) then
    	vinteres := _interesusar;
    elseif (tp.tactiva = 1) then
        select into vinteres indice from calc_interes where current_date between fchdesde and fchhasta;
        vinteres := vinteres * (tp.tactivaporc / 100);
    else
        vinteres := tp.interes;
    end if;
    vinteres := vinteres / 100;
    if _cuotas=1 and vanticipo=0 Then
    	vinteres = 0;
    End If;

    -- calculo las cuotas
    financia = 0;
    vsaldo = _deuda - vanticipo;

    -- genero las cuotas, según el sistema
    for i in 1 .. _cuotas loop
        if (tp.sistema = 1 and vinteres<>0) then -- sistema francés
            valorcuota := (_deuda - vanticipo) * ((vinteres*((1+vinteres)^_cuotas)) / (((1+vinteres)^_cuotas)-1));
            capitalcuota := valorcuota - (vsaldo * vinteres);
            financiacuota := vsaldo * vinteres;
            vsaldo := vsaldo - capitalcuota;
            --capitalcuota := round(-pmt(interes, cuotas, deuda - anticipo, 0, inicio), 2);
            --financiacuota := round(-ipmt(interes, i, cuotas, deuda - anticipo, 0, inicio), 2);
            --capitalcuota := capitalcuota - financiacuota;
        elseif (tp.sistema = 1 and vinteres=0) then
        	capitalcuota := round((_deuda - vanticipo) / _cuotas, 2);
            financiacuota := 0;
        elseif (tp.sistema = 2) then -- sistema alemán
            capitalcuota := round((_deuda - vanticipo) / _cuotas, 2);
            financiacuota := round(vsaldo * vinteres, 2);
            vsaldo := vsaldo - capitalcuota;
        elseif (tp.sistema = 3) then -- sistema municipal
            capitalcuota := round((_deuda - vanticipo) / _cuotas, 2);
            financiacuota := round(capitalcuota * vinteres * (i - inicio), 2);
        elseif (tp.sistema = 4) then -- Financiación Variable sobre saldo (Gaiman)
            capitalcuota := round((_deuda - vanticipo) / _cuotas, 2);
            financiacuota := round((_cuotas - i + 1) * capitalcuota * vinteres, 2);
        elseif (tp.sistema = 5) then -- Financiación Fija según cuotas (rada Tilly)
            capitalcuota := round((_deuda - vanticipo) / _cuotas, 2);
            financiacuota := round((_deuda - vanticipo) * vinteres, 2);
        end if;

        cuota := i;
        cuota_nom := i;
        capital := capitalcuota;
        financia := financiacuota;
        total := capitalcuota + financiacuota;

        -- verifico anticipo >= cuota1 si corresponde
        if (tp.anticipocuota = 1 and cuota = 1 and vanticipo < total) then
            raise exception 'El anticipo es menor al valor de la cuota';
        end if;

        -- verifico si el monto de cuota es correcto
        if (tp.importecuota = 1 and cuota = 1 and (total < tp.minmontocuo or total > tp.maxmontocuo)) then
            raise exception 'El rango de monto por cuota establecido en la configuración es desde %', tp.minmontocuo || ' hasta ' || tp.maxmontocuo;
        end if;

        -- calculo a partir de la fchalta, no de la fecha actual
        if (i = inicio) then
            venc := fchaltaaux;
        elseif (i = inicio + 1) Then
            venc := date_trunc('month', venc)
            		+ interval '1 month'
                    + cast(cast(tp.diavenc-1 as varchar(2)) || ' day' as interval);
        elseif (i > inicio + 1) then
            venc := venc + interval '1 month';
            if (tp.diavenc>28) then
                venc := sam.uf_calc_finmes(venc);
            end if;
        end if;

		if (vanticipo = 0 and cuota=1) then
			sellado := tp.sellado;
        else
        	sellado := 0;
        end if;

        return next;

    end loop;
end
$$;


ALTER FUNCTION sam.uf_plan_previo(_deuda numeric, _periodos integer, _cuotas integer, _fchconsolida date, _tplan integer, _obj_id character varying, _monto_anticipo numeric, _interesusar numeric) OWNER TO postgres;

--
-- TOC entry 918 (class 1255 OID 5282971)
-- Name: uf_plan_tributos(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_plan_tributos(_plan_id integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
    tributos varchar;
    obj_cta varchar(10);
    tributo varchar(50);
    obj_cta_ant varchar(10);
begin
    -- def: genera una cadena conteniendo los tributos
    -- se recupera n° de objeto y tributo

    tributos := ''; obj_cta_ant := ''; obj_Cta := '';

    -- Recupero los periodos del plan
    For  obj_cta, tributo
    In Select distinct case c.subcta when 0 then c.obj_id || '   '
              else c.obj_id || '/' || lpad(ltrim(cast(c.subcta as varchar(1))),1,'0') end,
              t.nombre
    From plan_periodo pp Inner Join ctacte c on pp.ctacte_id = c.ctacte_id
    Inner Join trib t on c.trib_id = t.trib_id
    Where pp.plan_id = _plan_id
    Order By 1,2 Loop

        If (obj_cta_ant <> '' and obj_cta_ant <> obj_cta) Then
            tributos := tributos || chr(13) || chr(13);
        End If;

        -- verificar si cambió el objeto
        If (obj_cta_ant <> obj_cta) Then
            obj_cta_ant := obj_cta;
        End If;

        -- verificar si cambió el tributo
        tributos := tributos || 'Objeto: ' || obj_cta || ' - Tributo: ' || tributo || chr(13);

    End Loop;

    return tributos;
end
$$;


ALTER FUNCTION sam.uf_plan_tributos(_plan_id integer) OWNER TO postgres;

--
-- TOC entry 5707 (class 0 OID 0)
-- Dependencies: 918
-- Name: FUNCTION uf_plan_tributos(_plan_id integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_plan_tributos(_plan_id integer) IS 'Recupera los tributos incluidos en el plan en un STRING, para su uso en reportes';


--
-- TOC entry 906 (class 1255 OID 5282974)
-- Name: uf_ret_archivo(character varying, integer, integer, date, character varying, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ret_archivo(_ag_rete character varying, _anio integer, _mes integer, _fchpresenta date, _arch character varying, _usr_id integer) RETURNS TABLE(excep smallint, retdj_id integer, vlog smallint)
    LANGUAGE plpgsql
    AS $_$
declare
    vpath varchar;
    vseq varchar;
    ssql varchar;
    vcant integer;
    -- variables cabecera
    vag_rete varchar;
    vanio smallint;
    vmes smallint;
    -- variables pie
    vfilas integer;
    vtotal numeric(12,2);
    valid_pie smallint;
    vfilas_calc integer;
    vtotal_calc numeric(12,2);
    -- variables detalle
    vfila integer;
    vcuit varchar;
    vfecha varchar(8);
    vnumero varchar(8);
    vtcomprob varchar;
    vcomprob varchar;
    vbase varchar(12);
    valic varchar(12);
    vmonto varchar(12);

    dfecha date;
    nnumero integer;
    nbase numeric(12,2);
    nalic numeric(12,2);
    nmonto numeric(12,2);
    -- variables ret
    vretdj_id integer;
    vret_id integer;
    vobj_id varchar(8);
begin

   -- Este procedimiento lee el archivo de texto subido por el agente de retencion, lo valida y graba DDJJ

   -- Inicializo variables de excepcion y log
   excep = 0;  retdj_id = 0; vlog = 0; valid_pie = 1;

   -- Elimino los datos previos
   Delete From temp.ag_rete_prev;
   Delete From temp.ag_rete a Where a.ag_rete = _ag_rete and a.usrmod = _usr_id;
   Delete From temp.ag_rete_log a Where a.ag_rete = _ag_rete and a.usrmod = _usr_id;

   -- Leo el archivo desde el directorio de upload ("../samservweb/uploads/agrete/")
   Select Into vpath c.agrete_path From sam.config c;
   ssql = 'copy temp.ag_rete_prev from '||chr(39)||vpath||_arch||chr(39);
   Execute ssql;

   -- Verifico la existencia de filas de Cabecera y Pie
   Select Into vcant count(*) From temp.ag_rete_prev Where substr(dato,1,3) in ('CAB','PIE');
   If (vcant < 2 ) Then excep=1; Insert Into temp.ag_rete_log Values (_ag_rete,0, '-No se encontró fila de Cabecera y/o Pie, verificar diseño de archivo.',_usr_id);  End If;

   If (excep = 0) Then -- Continuo leyendo el detalle y valido el resto
    -- Guardo Variables con los datos de Cabecera y Pie
    Select Into vag_rete, vanio, vmes substr(dato,4,8), substr(dato,23,4), substr(dato,27,2)
    From temp.ag_rete_prev Where substr(dato,1,3) = 'CAB';

    Select Into vfilas, vtotal substr(dato,4,6), cast(substr(dato,10,11) as numeric(12,2))/100 From temp.ag_rete_prev Where substr(dato,1,3) = 'PIE';

    -- Genero el archivo con las filas de detalle
    vseq = 'temp.seq'||_ag_rete;
    ssql = 'create sequence '||vseq||' start 2';
    Execute ssql;

    Insert into temp.ag_rete Select _ag_rete, nextval(vseq),
       substr(dato,1,11) cuit, substr(dato,12,8) fecha, substr(dato,20,8) numero,
       upper(substr(dato,28,2)) tcomprob, substr(dato,30,12) comprob, substr(dato,42,11) base,
       substr(dato,53,11) alic, substr(dato,64,11), _usr_id, current_timestamp
    From temp.ag_rete_prev Where substr(dato,1,3) not in ('CAB','PIE');

    ssql = 'drop sequence '||vseq;
    Execute ssql;

    -- Valido el largo de las filas de detalle
    Select Into vcant count(*) From temp.ag_rete_prev Where substr(dato,1,3) not in ('CAB','PIE') and length(dato)<>74;
    If (vcant > 0) Then excep=1; Insert Into temp.ag_rete_log Values (_ag_rete,0, '-Verificar el largo de las filas de detalle, debe ser 74.',_usr_id);  End If;    

    -- Valido Cabecera
    If (vag_rete <> lpad(_ag_rete,8,'0')) Then excep=1; Insert Into temp.ag_rete_log Values (_ag_rete,0, 'El Código de Agente no coincide con la Cabecera.',_usr_id);  End If;
    If (vanio <> _anio) Then excep=1; Insert Into temp.ag_rete_log Values (_ag_rete,0,'-El Año no coincide con la Cabecera. ',_usr_id);  End If;
    If (vmes <> _mes) Then excep=1; Insert Into temp.ag_rete_log Values (_ag_rete,0,'-El Mes no coincide con la Cabecera. ',_usr_id);  End If;

    -- Valido si se repite el numero
    Select Into vcant,vnumero count(*),a.numero From temp.ag_rete a Where a.ag_rete = _ag_rete and a.usrmod = _usr_id group by a.numero having count(*)>1;
    If (vcant > 0) Then Insert Into temp.ag_rete_log Values (_ag_rete,0,'-Es conveniente que el Número sea correlativo por año ('||vnumero||').',_usr_id);  End If;

  If (excep = 0) Then
    -- Valido Detalle y proceso
    For vfila, vcuit, vfecha, vnumero, vtcomprob, vbase, valic, vmonto
    In Select a.fila, a.cuit, a.fecha, a.numero, a.tcomprob, a.base, a.alic, a.monto
    From temp.ag_rete a Where a.ag_rete = _ag_rete and a.usrmod = _usr_id Loop

	-- ** Valido CUIT **
	If (vcuit <> '11111111111') Then
	  If (sam.uf_cuit_valida(vcuit)<>'') Then Insert Into temp.ag_rete_log Values (_ag_rete, vfila, 'Fila '||vfila||': CUIT inválido ('||vcuit||').',_usr_id);  End If;
	End If;
	-- ** Valido Fecha **
	-- Verifico si es una fecha correcta
	If (not isValidDate(vfecha,'YYYYMMDD')) Then
	   excep = 1; Insert Into temp.ag_rete_log Values (_ag_rete,vfila, 'Fila '||vfila||': Fecha Inválida.',_usr_id);
	Else
	   dfecha = to_date(vfecha,'YYYYMMDD');
	   If (extract(year from dfecha)<>_anio or extract(month from dfecha)<>_mes) Then
	      excep = 1; Insert Into temp.ag_rete_log Values (_ag_rete,vfila, 'Fila '||vfila||': Fecha no corresponde según Año y mes.',_usr_id);
	   End If;
	End If;
	-- ** Valido numero **
	If not textregexeq(vnumero,'^([[:digit:]])+(\-[[:digit:]]+)?$') Then
           excep = 1; Insert Into temp.ag_rete_log Values (_ag_rete,vfila, 'Fila '||vfila||': Número Inválido.',_usr_id);
        Else
           nnumero = cast(vnumero as integer);
	   Select Into vcant count(*) From ret_det d inner join ret r on d.retdj_id = d.retdj_id and r.est = 'A'
	      Where r.ag_rete = _ag_rete and r.anio = _anio and d.ag_rete = _ag_rete and d.numero = nnumero;
	   If (vcant > 0) Then Insert Into temp.ag_rete_log Values (_ag_rete,vfila, 'Fila '||vfila||': El Numero no debe repetirse para el mismo agente en el año.',_usr_id);  End If;
	End If;
	-- ** Valido Tipo de Comprobante **
	Select Into vcant count(*) from ret_tcomprob t Where t.cod = vtcomprob;
	If (vcant = 0) Then Insert Into temp.ag_rete_log Values (_ag_rete,vfila, 'Fila '||vfila||': El Tipo de Comprobante no corresponde.',_usr_id);  End If;
	-- ** Valido Montos **
	If not textregexeq(vbase,'^([-[:digit:]])+(\-[[:digit:]]+)?$') Then
           excep = 1; Insert Into temp.ag_rete_log Values (_ag_rete, vfila,'Fila '||vfila||': Base Inválida.',_usr_id);
        ElseIf not textregexeq(valic,'^([[:digit:]])+(\-[[:digit:]]+)?$') Then
           excep = 1; Insert Into temp.ag_rete_log Values (_ag_rete,vfila, 'Fila '||vfila||': Alícuota Inválida.',_usr_id);
        ElseIf not textregexeq(vmonto,'^([-[:digit:]])+(\-[[:digit:]]+)?$') Then
           valid_pie = 0; -- No se puede validar el total, si el formato de monto es incorrecto
           excep = 1; Insert Into temp.ag_rete_log Values (_ag_rete,vfila, 'Fila '||vfila||': Monto Inválido.',_usr_id);
        Else
           nbase = cast(vbase as numeric(12,2))/100;
           nalic = cast(valic as numeric(12,2))/100;
           nmonto = cast(vmonto as numeric(12,2))/100;
	   If (round(nbase * (nalic/100),2) not between nmonto-0.1 and nmonto+0.1) Then excep=1; Insert Into temp.ag_rete_log Values (_ag_rete,vfila, 'Fila '||vfila||': El monto no coincide con el cálculo de Base y alícuota.',_usr_id);  End If;
	End If;
    End Loop;
   End If;

   End If; -- fin validacion de existencia de cabecera y pie

    -- Valido Pie
    If (valid_pie = 1) Then
       -- Calculo totales
       Select Into vfilas_calc, vtotal_calc count(*), sum(cast(a.monto as numeric(12,2))/100) From temp.ag_rete a Where a.ag_rete = _ag_rete and a.usrmod = _usr_id;

       If (vfilas <> vfilas_calc) Then excep=1; Insert Into temp.ag_rete_log Values (_ag_rete,0, '-La cantidad de Filas en el Pie es incorrecta (Pie:'||vfilas||'-Calc:'||vfilas_calc||')',_usr_id);  End If;
       If (vtotal not between vtotal_calc-1 and vtotal_calc+1) Then excep=1; Insert Into temp.ag_rete_log Values (_ag_rete, 0,'-El Total indicado en el Pie no coincide con suma del detalle (Pie:'||vtotal||',Calc:'||vtotal_calc||'). ',_usr_id);  End If;
    End If;

    -- Si no hay excepciones proceso el archivo
    If (excep = 0) Then
	Select Into vretdj_id  nextval('seq_ret_id'::regclass);
	Insert Into ret Values (vretdj_id, _ag_rete, _anio, _mes, vfilas, vtotal, _fchpresenta, 'P', 0, current_timestamp, _usr_id);

	For vcuit, dfecha, nnumero, vtcomprob, vcomprob, nbase, nalic, nmonto
	In Select a.cuit, to_date(a.fecha,'YYYYMMDD'), cast(a.numero as integer), a.tcomprob, a.comprob,
	cast(a.base as numeric(12,2))/100, cast(a.alic as numeric(12,2))/100, cast(a.monto as numeric(12,2))/100
	From temp.ag_rete a Where a.ag_rete = _ag_rete and a.usrmod = _usr_id Loop

	    Select Into vret_id  nextval('ret_det_ret_id_seq'::regclass);
	    Select Into vobj_id p.obj_id from persona p where p.cuit = vcuit;
	    Insert Into ret_det Values (vret_id, vretdj_id, coalesce(vobj_id,''), nnumero,
	       case when coalesce(vobj_id,'')='' then vcuit else '' end, dfecha, vtcomprob, vcomprob,
	       nbase, nalic, nmonto, null, 0, 'P', current_timestamp, _usr_id, _ag_rete);
	End Loop;
    End If;

    -- Verifico si hay log
    Select Into vcant count(*) From temp.ag_rete_log a Where a.ag_rete = _ag_rete and a.usrmod = _usr_id;
    If (vcant > 0) Then
       ssql = 'copy (Select mensaje From temp.ag_rete_log a Where a.ag_rete = '||chr(39)||_ag_rete||chr(39)||' and a.usrmod = '||_usr_id||' order by fila,mensaje) to '||chr(39)||vpath||replace(_arch,'txt','log')||chr(39);
       Execute ssql;
       vlog = 1;
    End If;

    -- Retorno Resultados
    retdj_id = vretdj_id;
    Return Next;

End
$_$;


ALTER FUNCTION sam.uf_ret_archivo(_ag_rete character varying, _anio integer, _mes integer, _fchpresenta date, _arch character varying, _usr_id integer) OWNER TO postgres;

--
-- TOC entry 907 (class 1255 OID 5282976)
-- Name: uf_ret_gen_comprob(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ret_gen_comprob(_retdj_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
declare
    vag_rete varchar(10);
    vanio smallint;
    vcuota smallint;
    vmonto numeric(12,2);
    vusr_id smallint;
    vobj_id varchar(8);
    vtrib_id smallint;
    vitem_id smallint;
    vvenc date;
    vliq_id integer;
    vctacte_id integer;
begin
    -- Genera el comprobante para el pago por parte del Agente de Retención, a partir de la DJ respectiva

    -- Obtengo los datos de la retención
    select into vag_rete,vanio,vcuota,vmonto,vusr_id
    r.ag_rete,r.anio,r.mes,r.monto,r.usrmod
    from ret r where r.retdj_id=_retdj_id;

    -- Obtengo el obj_id del agente
    Select into vobj_id p.obj_id from persona p where p.ag_rete=vag_rete;

    -- Obtengo el tributo
    select into vtrib_id agrete_trib_id from sam.config c;
    if coalesce(vtrib_id,0)=0 then
        raise exception 'No hay definido un tributo para Agente de Retención';
    End If;

    -- Obtego el item
    Select into vitem_id min(i.item_id) from item i where i.trib_id=vtrib_id;
    if coalesce(vitem_id,0)=0 then
        raise exception 'No hay definido un ítem para el tributo de Agente de Retención';
    End If;

    -- Obtengo el vencimiento
    Select into vvenc v.fchvenc1 from trib_venc v where v.trib_id=vtrib_id and v.anio=vanio and v.cuota=vcuota;
    if vvenc is null then
        raise exception 'No hay definido un vencimiento para el período que se está declarando';
    End If;

    -- Inserto la liquidación manual
    vliq_id = nextval('temp.seq_ctacte_liq_manual');
    insert into temp.ctacte_liq_manual values (vliq_id,1,vitem_id,'','','','',vmonto);

    -- Genero el comprobante
    vctacte_id = sam.uf_emision(vtrib_id,vanio,vcuota,vobj_id,0,vusr_id,vliq_id,1,vvenc,'','',0);

    -- Guardo el ctacte_id
    update ret r set ctacte_id=vctacte_id where r.retdj_id=_retdj_id;

    -- Retorno
    Return vctacte_id;


end
$$;


ALTER FUNCTION sam.uf_ret_gen_comprob(_retdj_id integer) OWNER TO postgres;

--
-- TOC entry 5708 (class 0 OID 0)
-- Dependencies: 907
-- Name: FUNCTION uf_ret_gen_comprob(_retdj_id integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_ret_gen_comprob(_retdj_id integer) IS 'Genera el comprobante para el pago por parte del Agente de Retención, a partir de la DJ respectiva';


--
-- TOC entry 914 (class 1255 OID 5282977)
-- Name: uf_ret_obj_id(integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_ret_obj_id(_anio integer, _mes integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
declare vcant integer;
declare vret_id integer;
declare vcuit varchar(11);
declare vobj_id varchar(8);
begin
    -- Cargo el obj_id en las retenciones que no se vincularon

    -- Inicializo
    vcant = 0;

    -- Recorro las retenciones sin vincular
    For vret_id, vcuit In select d.ret_id,d.lugar
    from ret r inner join ret_det d on r.retdj_id=d.retdj_id
    Where r.anio=2017 and r.mes=2
    and d.obj_id='' and d.est='P' and d.lugar not in ('11111111111','20111111111','23000000000','') Loop

		vobj_id = '';

        Select into vobj_id min(p.obj_id)
        From persona p inner join objeto o on p.obj_id=o.obj_id
        Where o.est='A' and p.cuit=vcuit;

        If vobj_id <> '' Then
        	Update ret_det d set obj_id=vobj_id Where d.ret_id=vret_id;

            vcant = vcant + 1;
    	End If;

	End Loop;

    Return vcant;

end
$$;


ALTER FUNCTION sam.uf_ret_obj_id(_anio integer, _mes integer) OWNER TO postgres;

--
-- TOC entry 5709 (class 0 OID 0)
-- Dependencies: 914
-- Name: FUNCTION uf_ret_obj_id(_anio integer, _mes integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_ret_obj_id(_anio integer, _mes integer) IS 'Cargo el obj_id en las retenciones que no se vincularon';


--
-- TOC entry 921 (class 1255 OID 5282980)
-- Name: uf_rubro_act(integer, character varying, integer, integer, integer, numeric, numeric, integer, integer, integer, numeric, numeric, numeric, numeric, numeric, numeric, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_rubro_act(_trib_id integer, _rub_lista character varying, _perdesde integer, _perhasta integer, _perorigen integer, _porc_fijo numeric, _porc_min numeric, _decimales integer, _tcalculo integer, _tminimo integer, _alicuota numeric, _minimo numeric, _minalta numeric, _fijo numeric, _canthasta numeric, _porc numeric, _usr_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
	cant smallint;
    ssql varchar;
    vrubro_id integer;
    vperorigen integer;
    vtcalculo smallint;
    vtminimo integer;
    valicuota numeric;
    vminimo numeric;
    vminalta numeric;
    vfijo numeric;
    vcanthasta numeric;
    vporc numeric;
begin
    -- DEF: Procedimiento que crea una nueva vigencia, tomando de un período origen o según parámetros ingresados.

    -- Parámetros:
    -- _trib_id: tributo
    -- _rub_lista: lista de rubros a actualizar (varchar)
  	-- _perdesde, _perhasta: rango nueva vigencia
    -- _perorigen: período que se toma como base para nueva vigencia (0 indica que no se toma período base)
    -- _porc_fijo, _porc_min: incremento sobre fijo y mínimo si se toma un período base.
    -- _decimales: si se toma un período base con porc, se puede indicar 0 sin decimales.
    -- _tcalculo, _tminimo, _alicuota, _minimo, _minalta, _fijo, _canthasta, _porc: parámetros de la nueva vigencia
    -- _usr_id: usuario

    ssql := 'Select count(*) from rubro r inner join rubro_vigencia v on r.rubro_id=v.rubro_id
        		 where r.trib_id='|| _trib_id || ' and
                 (v.perdesde between ' || _perdesde || ' and ' || _perhasta || ' or v.perhasta between '
                 || _perdesde || ' and ' || _perhasta || ')';
        if _rub_lista<>'' Then
            ssql := ssql || ' and r.rubro_id in (' || _rub_lista || ')';
        End If;

    for cant
        In Execute ssql Loop

        if cant>0 then
    		RAISE EXCEPTION 'Existen superposiciones en la nueva vigencia';
    	end if;
    End Loop;


    -- OBTENGO TODOS LOS ITEMS A ACTUALIZAR
    if _perorigen > 0 Then
        ssql := 'select r.rubro_id, v.tcalculo, v.tminimo, v.alicuota, v.minimo, v.minalta, v.fijo, v.canthasta, v.porc
        		 from rubro r inner join rubro_vigencia v on r.rubro_id=v.rubro_id
		         where r.trib_id='|| _trib_id ||' and ' || _perorigen || ' between v.perdesde and v.perhasta';
        if _rub_lista<>'' Then
            ssql := ssql || ' and r.rubro_id in (' || _rub_lista || ')';
        End If;

        for vrubro_id, vtcalculo, vtminimo, valicuota, vminimo, vminalta, vfijo, vcanthasta, vporc
        In Execute ssql Loop

            -- Obtengo los nuevos valores
            vfijo := vfijo + vfijo * _porc_fijo;
            vminimo := vminimo + vminimo * _porc_min;
            vminalta := vminalta + vminalta * _porc_min;

            if (_decimales = 0) then
                vfijo = trunc(vfijo);
                vminimo = trunc(vminimo);
                vminalta = trunc(vminalta);
            End If;

            -- Inserto nueva vigencia
            insert into rubro_vigencia values (vrubro_id, _perdesde, _perhasta,
            vtcalculo, vtminimo, valicuota, valicuota, vminimo, vminalta, vfijo, vcanthasta, vporc,
            current_timestamp, _usr_id);
    	End Loop;
    Else
		-- Si no se toma de un período origen, inserto vigencia s/parámetros
	    ssql := 'Select distinct r.rubro_id from rubro r inner join rubro_vigencia v on r.rubro_id=v.rubro_id
                 Where r.trib_id='|| _trib_id;
        If _rub_lista<>'' Then
            ssql := ssql || ' and r.rubro_id in (' || _rub_lista || ')';
        Else
	        vperorigen := trunc(_perdesde/100) * 100 + 1;
        	ssql := ssql || ' and ' || vperorigen || ' between v.perdesde and v.perhasta';
        End If;

        For vrubro_id in Execute ssql Loop
            Insert into rubro_vigencia
            values (vrubro_id, _perdesde, _perhasta, _tcalculo, _tminimo, _alicuota, _alicuota,
            _minimo, _minalta, _fijo, _canthasta, _porc, current_timestamp, _usr_id);
		End Loop;
    End If;

End
$$;


ALTER FUNCTION sam.uf_rubro_act(_trib_id integer, _rub_lista character varying, _perdesde integer, _perhasta integer, _perorigen integer, _porc_fijo numeric, _porc_min numeric, _decimales integer, _tcalculo integer, _tminimo integer, _alicuota numeric, _minimo numeric, _minalta numeric, _fijo numeric, _canthasta numeric, _porc numeric, _usr_id integer) OWNER TO postgres;

--
-- TOC entry 958 (class 1255 OID 5486541)
-- Name: uf_rubro_act(character varying, character varying, integer, integer, integer, numeric, numeric, integer, integer, integer, numeric, numeric, numeric, numeric, numeric, numeric, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_rubro_act(_nomen_id character varying, _rub_lista character varying, _perdesde integer, _perhasta integer, _perorigen integer, _porc_fijo numeric, _porc_min numeric, _decimales integer, _tcalculo integer, _tminimo integer, _alicuota numeric, _minimo numeric, _minalta numeric, _fijo numeric, _canthasta numeric, _porc numeric, _usr_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    cant smallint;
    ssql varchar;
    vrub_lista varchar;
    vrubro_id varchar;
    vperorigen integer;
    vtcalculo smallint;
    vtminimo integer;
    valicuota numeric;
    vminimo numeric;
    vminalta numeric;
    vfijo numeric;
    vcanthasta numeric;
    vporc numeric;
begin
    -- DEF: Procedimiento que crea una nueva vigencia, tomando de un período origen o según parámetros ingresados.

    -- Parámetros:
    -- _nomen_id: nomenclador
    -- _rub_lista: lista de rubros a actualizar (varchar)
    -- _perdesde, _perhasta: rango nueva vigencia
    -- _perorigen: período que se toma como base para nueva vigencia (0 indica que no se toma período base)
    -- _porc_fijo, _porc_min: incremento sobre fijo y mínimo si se toma un período base.
    -- _decimales: si se toma un período base con porc, se puede indicar 0 sin decimales.
    -- _tcalculo, _tminimo, _alicuota, _minimo, _minalta, _fijo, _canthasta, _porc: parámetros de la nueva vigencia
    -- _usr_id: usuario

    -- Agrego los apóstrofos en _rub_lista
    vrub_lista = chr(39)||replace(_rub_lista,',',chr(39)||','||chr(39))||chr(39);

    ssql = 'Select count(*) from rubro r inner join rubro_vigencia v on r.rubro_id=v.rubro_id
        	 where r.nomen_id='||chr(39)|| _nomen_id ||chr(39)|| ' and
                 (v.perdesde between ' || _perdesde || ' and ' || _perhasta || ' or v.perhasta between '
                 || _perdesde || ' and ' || _perhasta || ')';
        if (vrub_lista<>'') Then
            ssql := ssql || ' and r.rubro_id in (' || vrub_lista || ')';
        End If;

    for cant
        In Execute ssql Loop

        if cant>0 then
    		RAISE EXCEPTION 'Existen superposiciones en la nueva vigencia';
    	end if;
    End Loop;


    -- OBTENGO TODOS LOS ITEMS A ACTUALIZAR
    if (_perorigen > 0) Then
        ssql := 'Select r.rubro_id, v.tcalculo, v.tminimo, v.alicuota, v.minimo, v.minalta, v.fijo, v.canthasta, v.porc
        	 from rubro r inner join rubro_vigencia v on r.rubro_id=v.rubro_id
		 where r.nomen_id='||chr(39)|| _nomen_id|| chr(39)||' and ' || _perorigen || ' between v.perdesde and v.perhasta';
        if vrub_lista<>'' Then
            ssql := ssql || ' and r.rubro_id in (' || vrub_lista || ')';
        End If;

        for vrubro_id, vtcalculo, vtminimo, valicuota, vminimo, vminalta, vfijo, vcanthasta, vporc
        In Execute ssql Loop

            -- Obtengo los nuevos valores
            vfijo := vfijo + vfijo * (_porc_fijo/100);
            vminimo := vminimo + vminimo * (_porc_min/100);
            vminalta := vminalta + vminalta * (_porc_min/100);

            if (_decimales = 0) then
                vfijo = trunc(vfijo);
                vminimo = trunc(vminimo);
                vminalta = trunc(vminalta);
            End If;

            -- Inserto nueva vigencia
            insert into rubro_vigencia values (vrubro_id, _perdesde, _perhasta,
            vtcalculo, vtminimo, valicuota, valicuota, vminimo, vminalta, vfijo, vcanthasta, vporc,
            current_timestamp, _usr_id);
    	End Loop;
    Else
		-- Si no se toma de un período origen, inserto vigencia s/parámetros
	    ssql := 'Select distinct r.rubro_id from rubro r inner join rubro_vigencia v on r.rubro_id=v.rubro_id
                 Where r.nomen_id='|| chr(39) || _trib_id || chr(39);
        If _rub_lista<>'' Then
            ssql := ssql || ' and r.rubro_id in (' || vrub_lista || ')';
        Else
	        vperorigen := trunc(_perdesde/100) * 100 + 1;
        	ssql := ssql || ' and ' || vperorigen || ' between v.perdesde and v.perhasta';
        End If;

        For vrubro_id in Execute ssql Loop
            Insert into rubro_vigencia
            values (vrubro_id, _perdesde, _perhasta, _tcalculo, _tminimo, _alicuota, _alicuota,
            _minimo, _minalta, _fijo, _canthasta, _porc, current_timestamp, _usr_id);
		End Loop;
    End If;

End
$$;


ALTER FUNCTION sam.uf_rubro_act(_nomen_id character varying, _rub_lista character varying, _perdesde integer, _perhasta integer, _perorigen integer, _porc_fijo numeric, _porc_min numeric, _decimales integer, _tcalculo integer, _tminimo integer, _alicuota numeric, _minimo numeric, _minalta numeric, _fijo numeric, _canthasta numeric, _porc numeric, _usr_id integer) OWNER TO postgres;

--
-- TOC entry 922 (class 1255 OID 5282981)
-- Name: uf_rubro_cortar(integer, character varying, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_rubro_cortar(_trib_id integer, _rub_lista character varying, _per_sup integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    per_hasta integer;
    cuota smallint;
    ssql varchar;
begin
    -- DEF: Procedimiento que corta la vigencia de los items de un tributo
    -- a partir de un período límite

    -- Obtengo el período Hasta
    cuota := _per_sup - trunc(_per_sup / 1000) * 1000;
    if cuota=0 or cuota=1 Then
    	per_hasta := (trunc(_per_sup/1000)-1) * 1000 + 99;
    else
	    cuota := cuota-1;
		per_hasta := trunc(_per_sup/1000) * 0100 + cuota;
    end if;
    
    -- Realizo el corte de vigencia
	ssql := 'Delete From rubro_vigencia v where v.perdesde>' || per_hasta;
    if _rub_lista<>'' Then 
    	ssql := ssql || ' and v.rubro_id in (' || _rub_lista || ')';
    else
    	ssql := ssql || ' and v.rubro_id in (select r.rubro_id from rubro r where r.trib_id=' || _trib_id || ')';
    End If;
    Execute ssql;

    ssql := 'Update rubro_vigencia v set perhasta=' || per_hasta || ' where v.perhasta>' || per_hasta;
    if _rub_lista<>'' Then 
    	ssql := ssql || ' and v.rubro_id in (' || _rub_lista || ')';
    else
    	ssql := ssql || ' and v.rubro_id in (select r.rubro_id from rubro r where r.trib_id=' || _trib_id || ')';
    End If;
    Execute ssql;

End
$$;


ALTER FUNCTION sam.uf_rubro_cortar(_trib_id integer, _rub_lista character varying, _per_sup integer) OWNER TO postgres;

--
-- TOC entry 959 (class 1255 OID 5486542)
-- Name: uf_rubro_cortar(character varying, character varying, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_rubro_cortar(_nomen_id character varying, _rub_lista character varying, _per_sup integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    vrub_lista varchar;
    per_hasta integer;
    cuota smallint;
    ssql varchar;
begin
    -- DEF: Procedimiento que corta la vigencia de los rubros de un nomenclador
    -- a partir de un período límite
    -- _per_sup: indica el periodo inicio de una nueva vigencia

    -- Agrego los apóstrofos en _rub_lista
    vrub_lista = chr(39)||replace(_rub_lista,',',chr(39)||','||chr(39))||chr(39);

    -- Obtengo el período Hasta
    cuota := _per_sup - trunc(_per_sup / 1000) * 1000;
    if cuota=0 or cuota=1 Then
    	per_hasta := (trunc(_per_sup/1000)-1) * 1000 + 99;
    else
	cuota := cuota-1;
	per_hasta := trunc(_per_sup/1000) * 0100 + cuota;
    end if;
    
    -- Realizo el corte de vigencia
	ssql := 'Delete From rubro_vigencia v where v.perdesde>' || per_hasta;
    if vrub_lista<>'' Then 
    	ssql := ssql || ' and v.rubro_id in (' || vrub_lista || ')';
    else
    	ssql := ssql || ' and v.rubro_id in (select r.rubro_id from rubro r where r.nomen_id=' ||chr(39)|| _nomen_id ||chr(39)|| ')';
    End If;
    Execute ssql;

    ssql := 'Update rubro_vigencia v set perhasta=' || per_hasta || ' where v.perhasta>' || per_hasta;
    if vrub_lista<>'' Then 
    	ssql := ssql || ' and v.rubro_id in (' || vrub_lista || ')';
    else
    	ssql := ssql || ' and v.rubro_id in (select r.rubro_id from rubro r where r.nomen_id=' ||chr(39)|| _nomen_id ||chr(39)|| ')';
    End If;
    Execute ssql;

End
$$;


ALTER FUNCTION sam.uf_rubro_cortar(_nomen_id character varying, _rub_lista character varying, _per_sup integer) OWNER TO postgres;

--
-- TOC entry 924 (class 1255 OID 5282982)
-- Name: uf_texto_bien(integer, date); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_texto_bien(_bien_id integer, _fecha date) RETURNS TABLE(titulo character varying, detalle character varying)
    LANGUAGE plpgsql
    AS $$
declare
    vtmod_nom varchar(25);
    vdet varchar(250);
    vresp varchar(250);

    vtexto_id smallint;
begin

    -- def: genera el texto de traspaso de bienes,
    -- según la configuración del mismo

    -- recupero los datos del traspaso
	select into vtexto_id t.texto_id from texto t where t.tuso = 18;

    Select Into vtmod_nom,vdet,vresp
    t.nombre,m.det,m.resp
    From fin.bien_mod m
    inner join fin.bien_tmod t on m.tmod = t.cod
    Where m.bien_id = _bien_id and m.fecha = _fecha;

	if (not found) Then
    	Raise Exception 'Bien no encontrado';
    End If;

    -- recupero los datos del texto con las variables
    Select Into titulo, detalle t.titulo, t.detalle
    From texto t Where t.texto_id = vtexto_id;

	if (not found) Then
    	Raise Exception 'No se ha encontrado el texto del contrado';
    End If;

    -- reemplazo las variables en el detalle
    If (strpos(detalle, '@') > 0) Then
        detalle = replace(detalle,'@TModNom',vtmod_nom);
        detalle := replace(detalle,'@Det',vdet);
        detalle := replace(detalle,'@Resp',vresp);

    End if;

    Return next;

    --raise notice '%',detalle;

end
$$;


ALTER FUNCTION sam.uf_texto_bien(_bien_id integer, _fecha date) OWNER TO postgres;

--
-- TOC entry 925 (class 1255 OID 5282983)
-- Name: uf_texto_boleta(integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_texto_boleta(_ctacte_id integer, _texto_id integer) RETURNS TABLE(titulo character varying, detalle character varying)
    LANGUAGE plpgsql
    AS $$
declare
  vucm smallint;
  vtexto_id smallint;

  vobj_id varchar(8);
  vsubcta smallint;
  vanio varchar(7);
  vcuota varchar(3);
  vfchemi date;
  vnum varchar(8);
  vtobj smallint;
  vmonto varchar(15);
  montovenc1 varchar(15);
  montovenc2 varchar(15);
  montoanual varchar(15);
  venc1 date;
  venc2 date;
  vencanual date;
  numsorteo integer;
  trib_nom varchar(50);
  obj_nom varchar(50);
  distrib smallint;
  distrib_nom varchar(40);
  num_nom varchar(50);
  domi varchar(404);
  montodeuda numeric(12,2);
  deuda  varchar(15);
begin
  -- Verifico si es UCM
  Select Into vucm t.ucm From trib t Inner join ctacte c
    On t.trib_id=c.trib_id Where c.ctacte_Id=_ctacte_id;
  If (vucm = 1) Then
    Titulo = '';
    Detalle = 'Sr. Contribuyente: Los valores detallados en la liquidación están expresados en lts. de Nafta.';
  Else
   	vtexto_id=_texto_id;
   	If (vtexto_id = 0) Then
     	Select Into vtexto_id c.texto_id From ctacte c Where c.ctacte_id=_ctacte_id;
	End If;

    -- recupero los datos del texto con las variables
    Select Into titulo, detalle t.titulo, t.detalle
    From texto t Where t.texto_id = vtexto_id;

	if (not found) Then
    	Raise Exception 'No se ha encontrado el texto';
    End If;

    If (strpos(detalle, '@') > 0) Then
    	-- Recupero los datos de la Emisión
    	Select Into vobj_id, vsubcta, vanio, vcuota, vfchemi, vnum, vmonto,
      	montovenc1, montovenc2, montoanual,venc1, venc2, vencanual,
      	trib_nom, obj_nom, distrib, distrib_nom, vtobj, num_nom, domi
      	e.obj_id, e.subcta, e.anio, e.cuota, e.fchemi, e.num, e.monto,
      	e.montovenc1, e.montovenc2, e.montoanual, e.venc1, e.venc2, e.vencanual,
      	e.trib_nom, e.obj_nom, e.distrib, e.distrib_nom, e.tobj, e.num_nom, e.domi
    	From v_emision_print e Where e.ctacte_id=_ctacte_id;

    	-- Reemplazo las Variables en el Detalle
  		detalle := replace(detalle,'@Anio',vanio);
  		detalle := replace(detalle,'@Cuota',vcuota);
  		detalle := replace(detalle,'@Debito',case distrib when 101 then 'SI' else 'NO' end);
  		detalle := replace(detalle,'@Distribuidor',distrib_nom);
  		detalle := replace(detalle,'@DomicilioPostal',domi);
  		detalle := replace(detalle,'@FechaEmision',to_char(vfchemi,'DD/MM/YYYY'));
  		detalle := replace(detalle,'@MontoAnual',montoanual);
        Select Into montodeuda sum(e.total) From temp.ctacte_est_deuda e
        	Where e.obj_id=vobj_id and e.subcta=vsubcta;
        If (strpos(detalle, '@MontoDeuda') > 0) Then
        	detalle := replace(detalle,'@MontoDeuda',to_char(montodeuda,'FM999,999,999.00'));
        End If;
        detalle := replace(detalle,'@MontoVenc1',montovenc1);
  		detalle := replace(detalle,'@MontoVenc2',montovenc2);
  		detalle := replace(detalle,'@Monto',vmonto);
  		detalle := replace(detalle,'@NUM',vnum);
  		detalle := replace(detalle,'@ObjetoNombre',obj_nom);
  		detalle := replace(detalle,'@Objeto',vobj_id);
  		detalle := replace(detalle,'@TitularNombre',num_nom);
  		detalle := replace(detalle,'@TributoNombre',trib_nom);
  		detalle := replace(detalle,'@Venc1',to_char(venc1,'DD/MM/YYYY'));
  		detalle := replace(detalle,'@Venc2',to_char(venc2,'DD/MM/YYYY'));
  		detalle := replace(detalle,'@VencAnual',to_char(vencanual,'DD/MM/YYYY'));
    End If;

  End If;
  Return next;

end
$$;


ALTER FUNCTION sam.uf_texto_boleta(_ctacte_id integer, _texto_id integer) OWNER TO postgres;

--
-- TOC entry 5710 (class 0 OID 0)
-- Dependencies: 925
-- Name: FUNCTION uf_texto_boleta(_ctacte_id integer, _texto_id integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_texto_boleta(_ctacte_id integer, _texto_id integer) IS 'Genera el Texto Para la Boleta según la Emisión.
Parámetros:
  ctacte_id integer: Identificador de la Cuenta Corriente.,
  texto_id integer: Código del Texto.
';


--
-- TOC entry 926 (class 1255 OID 5282984)
-- Name: uf_texto_cem(integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_texto_cem(_alq_id integer, _texto_id integer) RETURNS TABLE(titulo character varying, detalle character varying)
    LANGUAGE plpgsql
    AS $$
declare
	vobj_id varchar(8);
	vresp varchar(50);
    cuadro_nom varchar(20);
    cuerpo_nom varchar(20);
    tipo varchar(20);
    vpiso varchar(3);
    vfila varchar(3);
    vnume varchar(4);
    vcat varchar(15);
	vfchalq varchar(10);
	vfchini varchar(10);
	vfchfin varchar(10);
    vduracion varchar(2);
    alq_titulo varchar(10);
begin

    -- def: genera el texto del contrato de alquiler de cuentas de cementerio
    -- según la configuración del mismo

    -- recupero los datos del alquiler y cuenta

    Select Into  vobj_id, vresp, cuadro_nom, cuerpo_nom, tipo, vpiso, vfila, vnume,
    vcat, vfchalq, vfchini, vfchfin, vduracion, alq_titulo
    c.obj_id, p.nombre, coalesce(ca.nombre,''), coalesce(ce.nombre,''), t.nombre, cast(c.piso as varchar(3)), cast(c.fila as varchar(3)),
    cast(c.nume as varchar(4)), coalesce(tc.nombre,''), to_char(a.fchalq, 'DD/MM/YYYY'::text), to_char(a.fchini, 'DD/MM/YYYY'::text),
    to_char(a.fchfin, 'DD/MM/YYYY'::text), cast(a.duracion as varchar(2)), a.titulo
    From cem_alquiler a
    Inner Join cem c on a.obj_id = c.obj_id
    Left Join objeto o on c.obj_id=o.obj_id
    Left Join objeto p on o.num=p.obj_id
    Left Join cem_cuadro ca on c.cuadro_id=ca.cuadro_id
    Left Join cem_cuerpo ce on c.cuerpo_id=ce.cuerpo_id
    left join cem_tipo t on c.tipo=t.cod
    left join cem_tcat tc on c.tipo=tc.tipo and c.cat=tc.cat
    Where a.alq_id = _alq_id;

	if (not found) Then
    	Raise Exception 'Alquiler no encontrado';
    End If;

    -- recupero los datos del texto con las variables
    Select Into titulo, detalle t.titulo, t.detalle
    From texto t Where t.texto_id = _texto_id;

	if (not found) Then
    	Raise Exception 'No se ha encontrado el texto del contrato';
    End If;

    -- reemplazo las variables en el detalle
    If (strpos(detalle, '@') > 0) Then
        detalle = replace(detalle,'@Objeto',vobj_id);
        detalle := replace(detalle,'@Responsable',vresp);
        detalle := replace(detalle,'@Cuadro',cuadro_nom);
        detalle := replace(detalle,'@Cuerpo',cuerpo_nom);
        detalle := replace(detalle,'@Tipo',tipo);
        detalle := replace(detalle,'@Piso',vpiso);
        detalle := replace(detalle,'@Fila',vfila);
        detalle := replace(detalle,'@Numero',vnume);
        detalle := replace(detalle,'@Categoria',vcat);
        detalle := replace(detalle,'@NroAlquiler',cast(_alq_id as varchar(6)));
        detalle := replace(detalle,'@FchAlquiler',vfchalq);
		detalle := replace(detalle,'@FchInicio',vfchini);
        detalle := replace(detalle,'@FchFin',vfchfin);
        detalle := replace(detalle,'@Duracion',vduracion);
        detalle := replace(detalle,'@Titulo',alq_titulo);

    End if;

    Return next;

    --raise notice '%',detalle;

end
$$;


ALTER FUNCTION sam.uf_texto_cem(_alq_id integer, _texto_id integer) OWNER TO postgres;

--
-- TOC entry 5711 (class 0 OID 0)
-- Dependencies: 926
-- Name: FUNCTION uf_texto_cem(_alq_id integer, _texto_id integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_texto_cem(_alq_id integer, _texto_id integer) IS 'Recupera el texto con los valores de las variables de Rodado';


--
-- TOC entry 927 (class 1255 OID 5282985)
-- Name: uf_texto_debito_adhe(integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_texto_debito_adhe(_adhe_id integer, _texto_id integer) RETURNS TABLE(titulo character varying, detalle character varying)
    LANGUAGE plpgsql
    AS $$
declare
  vtrib_id smallint;
  vtrib_nom varchar;
  vobj_id varchar(8);
  vobj_nom varchar;
  vobj_dato varchar;
  vdompar_dir varchar;
  vsubcta smallint;
  vresp varchar;
  vresptdoc varchar;
  vresptdon_nom varchar;
  vrespndoc varchar;
  vrespsexo varchar;
  vcaja_id integer;
  vcaja_tipo integer;
  vcaja_tipo_nom varchar;
  vcaja_nom varchar;
  vtemple varchar;
  vtemple_nom varchar;
  vtemple_area varchar;
  vbco_ent varchar;
  vbco_suc varchar;
  vbco_suc_nom varchar;
  vbco_tcta varchar;
  vbco_tcta_nom varchar;
  vtpago_nro varchar;
  vcbu varchar;
  vfchalta varchar;
  vfchbaja varchar;
  vest varchar;
  vperdesde varchar;
  vperhasta varchar;
  vobs varchar;
  vmesactual_nombre varchar;
begin

    -- recupero los datos del texto con las variables
    Select Into titulo, detalle t.titulo, t.detalle
    From texto t Where t.texto_id = _texto_id;

	if (not found) Then
    	Raise Exception 'No se ha encontrado el texto';
    End If;

    -- obtengo nombre mes actual
    select into vmesactual_nombre
    case EXTRACT( month from current_date )
    	when 1 then 'Enero'
        when 2 then 'Febrero'
        when 3 then 'Marzo'
        when 4 then 'Abril'
        when 5 then 'Mayo'
        when 6 then 'Junio'
        when 7 then 'Julio'
        when 8 then 'Agosto'
        when 9 then 'Septiembre'
        when 10 then 'Octubre'
        when 11 then 'Noviembre'
        when 12 then 'Diciembre'
    end;

    If (strpos(detalle, '@') > 0) Then
    	-- Recupero los datos de la Emisión
    	Select Into vtrib_id,vtrib_nom,vobj_id,vobj_nom,vobj_dato,vdompar_dir,
        vsubcta,vresp,vresptdoc,vresptdon_nom,vrespndoc,vrespsexo,vcaja_id,
        vcaja_tipo,vcaja_nom,vtemple,vtemple_nom,vtemple_area,vbco_ent,vbco_suc,vbco_suc_nom,
        vbco_tcta,vbco_tcta_nom,vtpago_nro,vcbu,vfchalta,vfchbaja,vest,vperdesde,
        vperhasta,vobs
      	d.trib_id, d.trib_nom, d.obj_id, coalesce(d.obj_nom,''), coalesce(d.obj_dato,''), coalesce(d.dompar_dir,''),
        coalesce(d.subcta,0), coalesce(d.resp,''), coalesce(d.resptdoc,0), coalesce(d.resptdoc_nom,''), coalesce(d.respndoc,0),
        coalesce(d.respsexo,''), coalesce(d.caja_id,0),
        coalesce(d.caja_tipo,0), coalesce(d.caja_nom,''), coalesce(d.temple,0), coalesce(d.temple_nom,''),coalesce(d.temple_area,''),
        coalesce(d.bco_ent,0), coalesce(d.bco_suc,0), coalesce(d.bco_suc_nom,''),
        coalesce(d.bco_tcta,0), coalesce(d.bco_tcta_nom,''), coalesce(d.tpago_nro,''),coalesce(d.cbu,''), coalesce(d.fchalta,''),
        coalesce(d.fchbaja,''), coalesce(d.est,''), coalesce(d.per_desde,''),
        coalesce(d.per_hasta,''), d.obs
    	From v_debito_adhe d Where d.adh_id=_adhe_id;

        select into vcaja_tipo_nom t.nombre from caja_tipo t where t.cod=vcaja_tipo;

    	-- Reemplazo las Variables en el Detalle
  		detalle := replace(detalle,'@NroAdhe',_adhe_id::text);
        detalle := replace(detalle,'@TributoId',vtrib_id::text);
        detalle := replace(detalle,'@TributoNom',vtrib_nom);
        detalle := replace(detalle,'@ObjetoId',vobj_id);
        detalle := replace(detalle,'@ObjetoNom',vobj_nom);
        detalle := replace(detalle,'@ObjetoDato',vobj_dato);
        detalle := replace(detalle,'@Domicilio',vdompar_dir);
        detalle := replace(detalle,'@SubCuenta',vsubcta::text);
        detalle := replace(detalle,'@ResponsableTDocNom',vresptdon_nom);
        detalle := replace(detalle,'@ResponsableTDoc',vresptdoc);
        detalle := replace(detalle,'@ResponsableNroDoc',vrespndoc);
        detalle := replace(detalle,'@ResponsableSexo',vrespsexo);
        detalle := replace(detalle,'@Responsable',vresp);
        detalle := replace(detalle,'@CajaId',vcaja_id::text);
        detalle := replace(detalle,'@CajaTipoNom',vcaja_tipo_nom);
        detalle := replace(detalle,'@CajaTipo',vcaja_tipo::text);
        detalle := replace(detalle,'@CajaNom',vcaja_nom);
        detalle := replace(detalle,'@TipoEmpleNom',vtemple_nom);
        detalle := replace(detalle,'@TipoEmpleArea',vtemple_area);
        detalle := replace(detalle,'@TipoEmple',vtemple);
        detalle := replace(detalle,'@BancoEnt',vbco_ent);
        detalle := replace(detalle,'@BancoSucNom',vbco_suc_nom);
        detalle := replace(detalle,'@BancoSuc',vbco_suc);
        detalle := replace(detalle,'@BancoTipoCtaNom',vbco_tcta_nom);
        detalle := replace(detalle,'@BancoTipoCta',vbco_tcta);
        detalle := replace(detalle,'@TPagoNro',vtpago_nro);
        detalle := replace(detalle,'@CBU',vcbu);
        detalle := replace(detalle,'@FechaAlta',vfchalta);
        detalle := replace(detalle,'@FechaBaja',vfchbaja);
        detalle := replace(detalle,'@Estado',vest);
        detalle := replace(detalle,'@PeriodoDesde',vperdesde);
        detalle := replace(detalle,'@PeriodoHasta',vperhasta);
        detalle := replace(detalle,'@Observacion',vobs);
        detalle := replace(detalle,'@FechaHoyDia', EXTRACT( day from current_date )::text );
        detalle := replace(detalle,'@FechaHoyMesNom',vmesactual_nombre );
        detalle := replace(detalle,'@FechaHoyMes', EXTRACT( day from current_date )::text);
        detalle := replace(detalle,'@FechaHoyAnio',EXTRACT( year from current_date )::text);
        detalle := replace(detalle,'@FechaHoy',to_char(current_date, 'dd/mm/yyyy') );
    End If;

    Return next;

end
$$;


ALTER FUNCTION sam.uf_texto_debito_adhe(_adhe_id integer, _texto_id integer) OWNER TO postgres;

--
-- TOC entry 5712 (class 0 OID 0)
-- Dependencies: 927
-- Name: FUNCTION uf_texto_debito_adhe(_adhe_id integer, _texto_id integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_texto_debito_adhe(_adhe_id integer, _texto_id integer) IS 'Genera el Texto Para Adhesiones a Débito
Parámetros:
  adhe_id integer: Código de Adhesión.,
  texto_id integer: Código del Texto.
';


--
-- TOC entry 928 (class 1255 OID 5282991)
-- Name: uf_texto_mail(character varying, integer, integer, integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_texto_mail(_obj_id character varying, _trib_id integer, _perdesde integer, _perhasta integer, _texto_id integer) RETURNS TABLE(titulo character varying, detalle character varying)
    LANGUAGE plpgsql
    AS $$
DECLARE
    vtributonombre varchar;
	vobjetonombre varchar;
    vobjetodato varchar;
    vdomicilio varchar;
    vresponsable varchar;
    vresponsabletdoc varchar;
    vresponsablendoc varchar;
    vperiododesde varchar;
    vperiodohasta varchar;
    vanio varchar;
BEGIN
    -- Genera el Texto para el envío de boletas por mail

    -- Cargo las variables ...
    Select into vtributonombre t.nombre from trib t Where t.trib_id=_trib_id;

    Select into vobjetonombre, vobjetodato, vresponsable, vresponsabletdoc, vresponsablendoc
    o.nombre, o.obj_dato, o.num, coalesce(d.nombre,''), p.ndoc
    From objeto o inner join persona p on o.num=p.obj_id
    Left join persona_tdoc d on p.tdoc=d.cod
    Where o.obj_id=_obj_id;

    Select Into vdomicilio coalesce(d.direccion,'')
    From v_domi d Where d.torigen='POS' and d.obj_id=_obj_id;

    vperiododesde = substring(_perdesde::text,1,4) || '/' || substring(_perdesde::text,6,2);
    vperiodohasta = substring(_perhasta::text,1,4) || '/' || substring(_perhasta::text,6,2);
    vanio = substring(_perdesde::text,1,4);


     -- reemplazo las variables en el detalle
    If (strpos(detalle, '@') > 0) Then
        detalle = replace(detalle,'@Tributo',to_char(_plan_id,'FM999999'));
        detalle := replace(detalle,'@TributoNombre',vobjetonombre);
        detalle := replace(detalle,'@Objeto',vobj_id);
        detalle := replace(detalle,'@ObjetoNombre',vobjetonombre);
        detalle := replace(detalle,'@ObjetoDato',vobjetodato);
        detalle := replace(detalle,'@Domicilio',vdomicilio);
        detalle := replace(detalle,'@Responsable',vresponsable);
        detalle := replace(detalle,'@ResponsableTDoc',vresponsabletdoc);
        detalle := replace(detalle,'@ResponsableNDoc',vresponsablendoc);
		detalle := replace(detalle,'@PeriodoDesde',vperiododesde);
        detalle := replace(detalle,'@PeriodoHasta',vperiodohasta);
        detalle := replace(detalle,'@Anio',vanio);
    End if;

    Return next;

END;
$$;


ALTER FUNCTION sam.uf_texto_mail(_obj_id character varying, _trib_id integer, _perdesde integer, _perhasta integer, _texto_id integer) OWNER TO postgres;

--
-- TOC entry 5713 (class 0 OID 0)
-- Dependencies: 928
-- Name: FUNCTION uf_texto_mail(_obj_id character varying, _trib_id integer, _perdesde integer, _perhasta integer, _texto_id integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_texto_mail(_obj_id character varying, _trib_id integer, _perdesde integer, _perhasta integer, _texto_id integer) IS 'Genera el Texto el envio de Boletas por Mail
Parámetros:
  obj_id varchar: Objeto.
  trib_id integer: Tributo.
  perdesde integer: Periodo Desde (AAAMMM).
  perhasta integer: Periodo Hasta (AAAAMMM).
  texto_id integer: Código del Texto.
';



--
-- TOC entry 931 (class 1255 OID 5282994)
-- Name: uf_texto_plan(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_texto_plan(_plan_id integer) RETURNS TABLE(titulo character varying, detalle character varying)
    LANGUAGE plpgsql
    AS $$
declare
    accesor varchar(13);
    anticipo varchar(13);
    num_nombre varchar(50);
    cuotas varchar(4);
    descinteres varchar(13);
    descmulta varchar(13);
    descnominal varchar(13);
    diavenc varchar(2);
    fchalta varchar(10);
    financia varchar(13);
    montocuo varchar(13);
    deuda decimal(12,2);
    deudaletras varchar(100);
    multa varchar(13);
    nominal varchar(13);
    num varchar(8);
    obj_id varchar(8);
    obj_dato varchar(25);
    obj_dato_nom varchar(25);
    obs varchar(250);
    periodos varchar;
    tributos varchar;
    respdompos varchar(100);
    respndoc varchar(15);
    respnombre varchar(50);
    resptdoc varchar(15);
    sellado varchar(13);
    interes varchar(13);
    tplan varchar(50);
    tpago varchar(20);
    tpago_nro varchar(22);

    vtexto_id smallint;
begin
    -- def: genera el texto del contrato del plan de pago,
    -- según la configuración del mismo

    -- recupero los datos del plan
    Select Into vtexto_id,
    accesor,anticipo,num_nombre,cuotas,descinteres,descmulta,descnominal,diavenc,
    fchalta,financia,montocuo,deuda,multa,nominal,num,obj_id,obj_dato,obj_dato_nom,
    obs,respdompos,respndoc,respnombre,resptdoc,sellado,interes,tplan,tpago,tpago_nro
    pc.texto_id,
    p.accesor, p.anticipo, pe.nombre, p.cuotas, p.descinteres, p.descmulta, p.descnominal, pc.diavenc,
    to_char(p.fchalta, 'DD/MM/YYYY'::text),
    p.financia,p.montocuo,p.nominal+p.multa+p.accesor,p.multa,p.nominal,p.num,p.obj_id,o.obj_dato,
    case o.tobj when 1 then 'Nomenclatura' when 2 then 'CUIT' when 3 then 'Documento' when 4 then 'Nomenclatura'
    when 5 then 'Dominio' when 6 then 'Dominio' else '' end,
    p.obs,coalesce(dom.direccion,''),p.respndoc,p.resp,td.nombre,
    p.sellado,p.interes,pc.nombre,tp.nombre,p.tpago_nro
    From plan p
    Left Join objeto pe on p.num=pe.obj_id
    Left Join Objeto o on p.obj_id=o.obj_id
    Left Join plan_config pc on p.tplan=pc.cod
    Left Join persona_tdoc td on p.resptdoc = td.cod
    Left Join plan_tpago tp on p.tpago=tp.cod
    Left Join v_domi dom ON dom.torigen = 'PLA' AND dom.id = p.plan_id
    Where p.plan_id = _plan_id;

    if (not found) Then
        Raise Exception 'Plan no encontrado';
    End If;

    -- recupero los datos del texto con las variables
    Select Into titulo, detalle t.titulo, t.detalle
    From texto t Where t.texto_id = vtexto_id;

    if (not found) Then
        Raise Exception 'No se ha encontrado el texto del contrado';
    End If;

    -- reemplazo las variables en el detalle
    If (strpos(detalle, '@') > 0) Then
        detalle = replace(detalle,'@Accesorio',accesor);
        detalle := replace(detalle,'@Anticipo',anticipo);
        detalle := replace(detalle,'@Contribuyente',num_nombre);
        detalle := replace(detalle,'@Cuotas',cuotas);
        detalle := replace(detalle,'@DescInteres',descinteres);
        detalle := replace(detalle,'@DescMulta',descmulta);
        detalle := replace(detalle,'@DescNominal',descnominal);
        detalle := replace(detalle,'@DiaVenc',diavenc);
        detalle := replace(detalle,'@FechaAlta',fchalta);
        detalle := replace(detalle,'@Financiacion',financia);
        detalle := replace(detalle,'@MontoCuota',montocuo);
        detalle := replace(detalle,'@MontoDeuda',to_char(deuda,'FM999,999,999.00'));
        detalle := replace(detalle,'@Multa',multa);
        detalle := replace(detalle,'@Nominal',nominal);
        detalle := replace(detalle,'@NroConvenio',to_char(_plan_id,'FM999999'));
        detalle := replace(detalle,'@NroContribuyente',num);
        detalle := replace(detalle,'@Objeto',obj_id);
        detalle := replace(detalle,'@ObjDato',obj_dato);
        detalle := replace(detalle,'@ObjNomDato',obj_dato_nom);
        detalle := replace(detalle,'@Obs',obs);
        detalle := replace(detalle,'@RespDomicilio',respdompos);
        detalle := replace(detalle,'@RespNroDoc',case respndoc when '0' then '' else respndoc end);
        detalle := replace(detalle,'@RespNombre',respnombre);
        detalle := replace(detalle,'@RespTipoDoc',resptdoc);
        detalle := replace(detalle,'@Sellado',sellado);
        detalle := replace(detalle,'@TasaInteres',interes);
        detalle := replace(detalle,'@TipoConvenio',tplan);
        detalle := replace(detalle,'@TPago',tplan);
        detalle := replace(detalle,'@TPago_Nro',tplan);


        -- Deuda en Letras
        If (strpos(detalle,'@DeudaLetras') > 0) then
            deudaletras := sam.uf_num_letras(deuda);
            detalle := replace(detalle,'@DeudaLetras',deudaletras);
        End If;

        -- Detalle de periodos incluidos
        If (strpos(detalle,'@Periodos') > 0) then
            periodos := sam.uf_plan_periodos(_plan_id);
            detalle := replace(detalle,'@Periodos',periodos);
        End If;

        -- Detalle de tributos incluidos
        If (strpos(detalle,'@Tributos') > 0) then
            tributos := sam.uf_plan_tributos(_plan_id);
            detalle := replace(detalle,'@Tributos',tributos);
        End If;

    End if;

    Return next;

    --raise notice '%',detalle;

end
$$;


ALTER FUNCTION sam.uf_texto_plan(_plan_id integer) OWNER TO postgres;

--
-- TOC entry 932 (class 1255 OID 5282996)
-- Name: uf_texto_rodado(character varying, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_texto_rodado(_obj_id character varying, _texto_id integer) RETURNS TABLE(titulo character varying, detalle character varying)
    LANGUAGE plpgsql
    AS $$
declare
	vobj_id varchar(8);
	vnombre varchar(50);
    vnum varchar(8);
    vndoc bigint;
    vdominio varchar(20);
    vmarca_nom varchar(20);
    vmodelo_nom varchar(50);
    vcat_nom varchar(40);
    vanio smallint;
	vaforo_id varchar(8);
	vaforo_modelo varchar(100);
	vnromotor varchar(30);
    vnrochasis varchar(30);
    vpeso numeric(12,2);
    vcilindrada smallint;
    vuso_nom varchar(20);
    vtalta_nom varchar(40);
    vfchalta varchar(10);
    vfchcompra varchar(10);
    vfchbaja varchar(10);
    vfchactual varchar(10);
    vest_nom varchar(20);
begin
    -- def: genera el texto del contrato de un Rodado

    Select Into vobj_id, vnombre, vnum, vndoc, vdominio, vmarca_nom, vmodelo_nom, vcat_nom,
    vanio, vaforo_id,  vaforo_modelo, vnromotor, vnrochasis, vpeso, vcilindrada, vuso_nom,
    vtalta_nom, vfchalta, vfchcompra, vfchbaja, vfchactual, vest_nom
    r.obj_id, r.num_nom, r.num, r.num_ndoc, r.dominio, r.marca_nom, r.modelo_nom, r.cat_nom,
    r.anio, r.aforo_id, r.aforo_modelo, r.nromotor, r.nrochasis, r.peso, r.cilindrada, r.uso_nom,
    r.talta_nom, to_char(r.fchalta, 'DD/MM/YYYY'::text), to_char(r.fchcompra, 'DD/MM/YYYY'::text),
    to_char(r.fchbaja, 'DD/MM/YYYY'::text), to_char(current_date, 'DD/MM/YYYY'::text), r.est_nom
    From v_rodado r
    Where r.obj_id = _obj_id;

	if (not found) Then
    	Raise Exception 'Rodado no encontrado';
    End If;

    if not vaforo_id is null then
    	select into vmarca_nom a.marca_nom from rodado_aforo a where a.aforo_id = vaforo_id;
    end if;

    -- recupero los datos del texto con las variables
    Select Into titulo, detalle t.titulo, t.detalle
    From texto t Where t.texto_id = _texto_id;

	if (not found) Then
    	Raise Exception 'No se ha encontrado el texto del rodado';
    End If;

    -- reemplazo las variables en el detalle
    If (strpos(detalle, '@') > 0) Then

        detalle = replace(detalle,'@Objeto',vobj_id);
        detalle := replace(detalle,'@Titular',vnombre);
        detalle := replace(detalle,'@NUM',vnum);
        detalle := replace(detalle,'@Documento',vndoc::varchar(8));
        detalle := replace(detalle,'@Dominio',vdominio);
        detalle := replace(detalle,'@Marca',coalesce(vmarca_nom,''));
        detalle := replace(detalle,'@Modelo',vmodelo_nom);
        detalle := replace(detalle,'@Categoria',vcat_nom);
        detalle := replace(detalle,'@Anio',vanio::varchar(4));
        detalle := replace(detalle,'@Aforo',coalesce(vaforo_id,''));
        detalle := replace(detalle,'@AforoModelo',coalesce(vaforo_modelo,''));
        detalle := replace(detalle,'@NroChasis',vnrochasis);
        detalle := replace(detalle,'@NroMotor',vnromotor);
        detalle := replace(detalle,'@Peso',vpeso::varchar);
        detalle := replace(detalle,'@Cilindrada',vcilindrada::varchar);
        detalle := replace(detalle,'@Uso',vuso_nom);
        detalle := replace(detalle,'@TipoAlta',vtalta_nom);
        detalle := replace(detalle,'@FchAlta',coalesce(vfchalta,''));
        detalle := replace(detalle,'@FchCompra',coalesce(vfchcompra,''));
        detalle := replace(detalle,'@FchBaja',coalesce(vfchbaja,''));
        detalle := replace(detalle,'@FchActual',vfchactual);
        detalle := replace(detalle,'@Est',vest_nom);

    End if;

    Return next;

    --raise notice '%',detalle;

end
$$;


ALTER FUNCTION sam.uf_texto_rodado(_obj_id character varying, _texto_id integer) OWNER TO postgres;

--
-- TOC entry 935 (class 1255 OID 5282997)
-- Name: uf_texto_usuarioweb(integer, integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_texto_usuarioweb(_usr_id integer, _texto_id integer) RETURNS TABLE(titulo character varying, detalle character varying)
    LANGUAGE plpgsql
    AS $$
DECLARE
	vnombre varchar;
    vobj_id varchar;
    vacc_contrib char;
    vacc_dj char;
    vacc_proveedor char;
    vacc_agrete char;

    vobj_nom varchar;
    vtdoc_nom varchar;
    vndoc bigint;
    vsexo char;
    vnacionalidad_nom varchar;

BEGIN
	-- recupero los datos del texto con las variables
    Select Into titulo, detalle t.titulo, t.detalle
    From texto t Where t.texto_id = _texto_id;

    if (not found) Then
    	Raise Exception 'No se ha encontrado el texto';
    End If;

    If (strpos(detalle, '@') > 0) Then
    	select into vnombre,vobj_id,vacc_contrib,vacc_dj,vacc_proveedor,vacc_agrete,
        	vobj_nom,vtdoc_nom,vndoc,vsexo,vnacionalidad_nom
            u.nombre,u.obj_id,u.acc_contrib,u.acc_dj,u.acc_proveedor,u.acc_agrete,
            p.nombre,p.tdoc_nom,p.ndoc,p.sexo,p.nacionalidad_nom
         from sam.usuarioweb u inner join v_persona p on u.obj_id = p.obj_id;

         -- Reemplazo las Variables en el Detalle
  		detalle := replace(detalle,'@Nombre',vnombre);
        detalle := replace(detalle,'@Obj_Id',vobj_id);
        detalle := replace(detalle,'@Acc_Contrib',vacc_contrib);
        detalle := replace(detalle,'@Acc_DJ',vacc_dj);
        detalle := replace(detalle,'@Acc_Proveedor',vacc_proveedor);
        detalle := replace(detalle,'@Acc_Agrete',vacc_agrete);
        detalle := replace(detalle,'@Obj_Nombre',vobj_nom);
        detalle := replace(detalle,'@TDoc_Nom',vtdoc_nom);
        detalle := replace(detalle,'@NDoc',vndoc);
        detalle := replace(detalle,'@Sexo',vsexo);
        detalle := replace(detalle,'@Nacionalidad_nom',vnacionalidad_nom);
    end if;

    Return next;
END;
$$;


ALTER FUNCTION sam.uf_texto_usuarioweb(_usr_id integer, _texto_id integer) OWNER TO postgres;

--
-- TOC entry 947 (class 1255 OID 5317071)
-- Name: uf_tr_calc_act(); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_tr_calc_act() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare
    vres varchar;
BEGIN
    -- Funcion de control de rangos de fechas para indices de actualización

    IF (TG_OP = 'INSERT') THEN
        Select Into vres sam.uf_calc_act_control();
        If (vres <> 'OK') Then
        	RAISE EXCEPTION '%',vres;
        Else
		    RETURN NEW;
        End If;
    End If;
END;
$$;


ALTER FUNCTION sam.uf_tr_calc_act() OWNER TO postgres;

--
-- TOC entry 936 (class 1255 OID 5282998)
-- Name: uf_tr_calc_interes(); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_tr_calc_interes() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare 
	vres varchar;
BEGIN
    -- Funcion de control de rangos de fechas para indices de interes
        
    IF (TG_OP = 'INSERT') THEN
    	Select Into vres sam.uf_calc_interes_control();
        If (vres <> 'OK') Then
        	RAISE EXCEPTION '%',vres;
        Else
		    RETURN NEW;
        End If;    
    End If;
END;
$$;


ALTER FUNCTION sam.uf_tr_calc_interes() OWNER TO postgres;

--
-- TOC entry 937 (class 1255 OID 5282999)
-- Name: uf_tr_calc_mm(); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_tr_calc_mm() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare 
	vres varchar;
BEGIN
    -- Funcion de control de rangos de fechas para indices de modulos municipales
        
    IF (TG_OP = 'INSERT') THEN
    	Select Into vres sam.uf_calc_mm_control();
        If (vres <> 'OK') Then
        	RAISE EXCEPTION '%',vres;
        Else
		    RETURN NEW;
        End If;    
    End If;
END;
$$;


ALTER FUNCTION sam.uf_tr_calc_mm() OWNER TO postgres;

--
-- TOC entry 938 (class 1255 OID 5283001)
-- Name: uf_tr_fin_partida(); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_tr_fin_partida() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
Declare
    lniv smallint[];
    largo smallint;
    niv smallint;
    frt varchar(50);
    aux varchar(50);
Begin
    -- Leo de la configuración
    For niv,largo in Select cf.niv,cf.largo From sam.config_fin_part cf Where cf.caracter=new.caracter Loop
    	lniv[niv] := largo;
    End Loop;

    frt = new.caracter::varchar;
    If (new.niv1<>0 or new.niv2<>0) then frt=frt || '.' || case when lniv[1]=0 then cast(new.niv1 as varchar) else lpad(cast(new.niv1 as varchar),lniv[1],'0') end; End If;
    If (new.niv2<>0 or new.niv3<>0) then frt=frt || '.' || case when lniv[2]=0 then cast(new.niv2 as varchar) else lpad(cast(new.niv2 as varchar),lniv[2],'0') end; End If;
    If (new.niv3<>0 or new.niv4<>0) then frt=frt || '.' || case when lniv[3]=0 then cast(new.niv3 as varchar) else lpad(cast(new.niv3 as varchar),lniv[3],'0') end; End If;
    If (new.niv4<>0 or new.niv5<>0) then frt=frt || '.' || case when lniv[4]=0 then cast(new.niv4 as varchar) else lpad(cast(new.niv4 as varchar),lniv[4],'0') end; End If;
    If (new.niv5<>0 or new.niv6<>0) then frt=frt || '.' || case when lniv[5]=0 then cast(new.niv5 as varchar) else lpad(cast(new.niv5 as varchar),lniv[5],'0') end; End If;
    If (new.niv6<>0 or new.niv7<>0) then frt=frt || '.' || case when lniv[6]=0 then cast(new.niv6 as varchar) else lpad(cast(new.niv6 as varchar),lniv[6],'0') end; End If;
    If (new.niv7<>0 or new.niv8<>0) then frt=frt || '.' || case when lniv[7]=0 then cast(new.niv7 as varchar) else lpad(cast(new.niv7 as varchar),lniv[7],'0') end; End If;
    If (new.niv8<>0 or new.niv9<>0) then frt=frt || '.' || case when lniv[8]=0 then cast(new.niv8 as varchar) else lpad(cast(new.niv8 as varchar),lniv[8],'0') end; End If;
    If (new.niv9<>0) then frt=frt || '.' || case when lniv[9]=0 then cast(new.niv9 as varchar) else lpad(cast(new.niv9 as varchar),lniv[9],'0') end; End If;

    aux = cast(new.caracter as varchar);
    If (new.niv1<>0 or new.niv2<>0) then aux=aux || '.' || cast(new.niv1 as varchar); End If;
    If (new.niv2<>0 or new.niv3<>0) then aux=aux || '.' || cast(new.niv2 as varchar); End If;
    If (new.niv3<>0 or new.niv4<>0) then aux=aux || '.' || cast(new.niv3 as varchar); End If;
    If (new.niv4<>0 or new.niv5<>0) then aux=aux || '.' || cast(new.niv4 as varchar); End If;
    If (new.niv5<>0 or new.niv6<>0) then aux=aux || '.' || cast(new.niv5 as varchar); End If;
    If (new.niv6<>0 or new.niv7<>0) then aux=aux || '.' || cast(new.niv6 as varchar); End If;
    If (new.niv7<>0 or new.niv8<>0) then aux=aux || '.' || cast(new.niv7 as varchar); End If;
    If (new.niv8<>0 or new.niv9<>0) then aux=aux || '.' || cast(new.niv8 as varchar); End If;
    If (new.niv9<>0) then aux=aux || '.' || cast(new.niv9 as varchar); End If;

    new.formato = frt;
    new.formatoaux = aux;
	RETURN new;
End
$$;


ALTER FUNCTION sam.uf_tr_fin_partida() OWNER TO postgres;

--
-- TOC entry 939 (class 1255 OID 5283002)
-- Name: uf_tr_his_cem(); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_tr_his_cem() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Funcion de auditoria para los cambios en la tabla cementerio
        
	IF (TG_OP = 'UPDATE' or TG_OP = 'DELETE') THEN
		INSERT INTO his_cem SELECT nextval('public.seq_his_cem'::text::regclass),
        OLD.*, substr(TG_OP,1,1), now(), user;
        RETURN OLD;
/*	ELSEIF (TG_OP = 'INSERT') THEN
		INSERT INTO his_cem SELECT nextval('public.seq_his_cem'::text::regclass),
        NEW.*, substr(TG_OP,1,1), now(), user;
        RETURN OLD;
*/        
	END IF;
    
    RETURN NULL; -- result is ignored since this is an AFTER trigger
END;
$$;


ALTER FUNCTION sam.uf_tr_his_cem() OWNER TO postgres;

--
-- TOC entry 5714 (class 0 OID 0)
-- Dependencies: 939
-- Name: FUNCTION uf_tr_his_cem(); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_tr_his_cem() IS 'Procedimiento de tipo trigger para actualizar la tabla de datos históricos de Cementerio';


--
-- TOC entry 940 (class 1255 OID 5283003)
-- Name: uf_tr_his_comer(); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_tr_his_comer() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
		BEGIN
	    -- Funcion de auditoria para los cambios en la tabla comer
		IF (TG_OP = 'UPDATE' or TG_OP = 'DELETE') THEN
			INSERT INTO his_comer SELECT nextval('public.seq_his_comer'::text::regclass),
        	OLD.*, substr(TG_OP,1,1), now(), user;
        	RETURN OLD;
		ELSEIF (TG_OP = 'INSERT') THEN
			INSERT INTO his_comer SELECT nextval('public.seq_his_comer'::text::regclass),
        	NEW.*, substr(TG_OP,1,1), now(), user;
	        RETURN OLD;
		END IF;
	    RETURN NULL; -- result is ignored since this is an AFTER trigger
		END;
$$;


ALTER FUNCTION sam.uf_tr_his_comer() OWNER TO postgres;

--
-- TOC entry 5715 (class 0 OID 0)
-- Dependencies: 940
-- Name: FUNCTION uf_tr_his_comer(); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_tr_his_comer() IS 'Procedimiento de tipo trigger para actualizar la tabla de datos históricos de Comer';


--
-- TOC entry 941 (class 1255 OID 5283005)
-- Name: uf_tr_his_ctacte_ajuste(); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_tr_his_ctacte_ajuste() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Funcion de auditoria para los cambios de ajuste de ctacte
        
	IF (TG_OP = 'UPDATE' or TG_OP = 'DELETE') THEN
		INSERT INTO his_ctacte_ajuste SELECT nextval('public.seq_his_ctacte_ajuste'::text::regclass),
        OLD.*, substr(TG_OP,1,1), now(), user;
        RETURN OLD;
	END IF;
    RETURN NULL; -- result is ignored since this is an AFTER trigger
END;
$$;


ALTER FUNCTION sam.uf_tr_his_ctacte_ajuste() OWNER TO postgres;

--
-- TOC entry 5716 (class 0 OID 0)
-- Dependencies: 941
-- Name: FUNCTION uf_tr_his_ctacte_ajuste(); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_tr_his_ctacte_ajuste() IS 'Procedimiento de tipo trigger para actualizar la tabla de datos históricos de Ajustes de CtaCte';


--
-- TOC entry 942 (class 1255 OID 5283006)
-- Name: uf_tr_his_domi(); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_tr_his_domi() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Funcion de auditoria para los cambios en la tabla domi
        
	IF (TG_OP = 'UPDATE' or TG_OP = 'DELETE') THEN
		INSERT INTO his_domi SELECT nextval('seq_his_domi'::regclass),
        OLD.*, substr(TG_OP,1,1), now(), user;
        RETURN OLD;
/*	ELSEIF (TG_OP = 'INSERT') THEN
		INSERT INTO his_domi SELECT nextval('seq_his_domi'::regclass),
        NEW.*, substr(TG_OP,1,1), now(), user;
        RETURN OLD;
*/        
	END IF;
    RETURN NULL; -- result is ignored since this is an AFTER trigger
END;
$$;


ALTER FUNCTION sam.uf_tr_his_domi() OWNER TO postgres;

--
-- TOC entry 5717 (class 0 OID 0)
-- Dependencies: 942
-- Name: FUNCTION uf_tr_his_domi(); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_tr_his_domi() IS 'Procedimiento de tipo trigger para actualizar la tabla de datos históricos de Domicilios';


--
-- TOC entry 933 (class 1255 OID 5283007)
-- Name: uf_tr_his_inm(); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_tr_his_inm() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
	vfch_bd timestamp;
BEGIN
    -- Funcion de auditoria para los cambios en la tabla inmueble

	IF (TG_OP = 'UPDATE') THEN
    	Select Into vfch_bd max(h.fch_bd) From his_inm h Where h.obj_id = new.obj_id;
        If (date_trunc('seconds', now()) > date_trunc('seconds', vfch_bd)) Then
			INSERT INTO his_inm SELECT nextval('public.seq_his_inm'::text::regclass),
    	    OLD.*, substr(TG_OP,1,1), now(), user;
        	RETURN OLD;
        End If;
	ELSIF (TG_OP = 'DELETE') THEN
		INSERT INTO his_inm SELECT nextval('public.seq_his_inm'::text::regclass),
        OLD.*, substr(TG_OP,1,1), now(), user;
        RETURN OLD;
	END IF;

    -- Este Procedimiento debería insertar en his_inmueble_mej, usando el mismo his_id

    RETURN NULL; -- result is ignored since this is an AFTER trigger
END;
$$;


ALTER FUNCTION sam.uf_tr_his_inm() OWNER TO postgres;

--
-- TOC entry 5718 (class 0 OID 0)
-- Dependencies: 933
-- Name: FUNCTION uf_tr_his_inm(); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_tr_his_inm() IS 'Procedimiento de tipo trigger para actualizar la tabla de datos históricos de Inmueble';


--
-- TOC entry 934 (class 1255 OID 5283008)
-- Name: uf_tr_his_inm_mej(); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_tr_his_inm_mej() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Funcion de auditoria para los cambios en la tabla inmueble_mej
        
	IF (TG_OP = 'UPDATE' or TG_OP = 'DELETE') THEN
		INSERT INTO his_inm_mej SELECT nextval('public.seq_his_inm_mej'::text::regclass),
        OLD.*, substr(TG_OP,1,1), now(), user;
        RETURN OLD;
/*	ELSEIF (TG_OP = 'INSERT') THEN
		INSERT INTO his_inm_mej SELECT nextval('public.seq_his_inm_mej'::text::regclass),
        NEW.*, substr(TG_OP,1,1), now(), user;
        RETURN OLD;
*/        
	END IF;
    RETURN NULL; -- result is ignored since this is an AFTER trigger
END;
$$;


ALTER FUNCTION sam.uf_tr_his_inm_mej() OWNER TO postgres;

--
-- TOC entry 5719 (class 0 OID 0)
-- Dependencies: 934
-- Name: FUNCTION uf_tr_his_inm_mej(); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_tr_his_inm_mej() IS 'Procedimiento de tipo trigger para actualizar la tabla de datos históricos 
de Mejoras de Inmuebles';


--
-- TOC entry 717 (class 1255 OID 5283009)
-- Name: uf_tr_his_objeto(); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_tr_his_objeto() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Funcion de auditoria para los cambios en la tabla objeto
        
	IF (TG_OP = 'UPDATE') THEN
		INSERT INTO his_objeto SELECT nextval('public.seq_his_objeto'::text::regclass),
        OLD.*, substr(TG_OP,1,1), now(), user;
	ELSEIF (TG_OP = 'INSERT') THEN
    	If (NEW.tobj = 2) Then 
        	NEW.est='A';
        End If;    
	END IF;
    RETURN NEW; -- result is ignored since this is an AFTER trigger
END;
$$;


ALTER FUNCTION sam.uf_tr_his_objeto() OWNER TO postgres;

--
-- TOC entry 5720 (class 0 OID 0)
-- Dependencies: 717
-- Name: FUNCTION uf_tr_his_objeto(); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_tr_his_objeto() IS 'Procedimiento de tipo trigger para actualizar la tabla de datos históricos de Objetos';


--
-- TOC entry 740 (class 1255 OID 5283010)
-- Name: uf_tr_his_objeto_item(); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_tr_his_objeto_item() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Funcion de auditoria para los cambios en la tabla objeto_item
        
	IF (TG_OP = 'UPDATE' or TG_OP = 'DELETE') THEN
		INSERT INTO his_objeto_item SELECT nextval('public.seq_his_objeto_item_id'::text::regclass),
        OLD.*, substr(TG_OP,1,1), now(), user;
        RETURN OLD;
	END IF;
    RETURN NULL; -- result is ignored since this is an AFTER trigger
END;
$$;


ALTER FUNCTION sam.uf_tr_his_objeto_item() OWNER TO postgres;

--
-- TOC entry 5721 (class 0 OID 0)
-- Dependencies: 740
-- Name: FUNCTION uf_tr_his_objeto_item(); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_tr_his_objeto_item() IS 'Procedimiento de tipo trigger para actualizar la tabla de datos históricos de 
Asignación de Items de Objetos';


--
-- TOC entry 863 (class 1255 OID 5283011)
-- Name: uf_tr_his_persona(); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_tr_his_persona() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Funcion de auditoria para los cambios en la tabla persona
        
	IF (TG_OP = 'UPDATE' or TG_OP = 'DELETE') THEN
		INSERT INTO his_persona SELECT nextval('public.seq_his_persona'::text::regclass),
        OLD.*, substr(TG_OP,1,1), now(), user;
        RETURN OLD;
/*	ELSEIF (TG_OP = 'INSERT') THEN
		INSERT INTO his_persona SELECT nextval('public.seq_his_persona'::text::regclass),
        NEW.*, substr(TG_OP,1,1), now(), user;
        RETURN OLD;
*/        
	END IF;
    RETURN NULL; -- result is ignored since this is an AFTER trigger
END;
$$;


ALTER FUNCTION sam.uf_tr_his_persona() OWNER TO postgres;

--
-- TOC entry 5722 (class 0 OID 0)
-- Dependencies: 863
-- Name: FUNCTION uf_tr_his_persona(); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_tr_his_persona() IS 'Procedimiento de tipo trigger para actualizar la tabla de datos históricos 
de Contribuyentes';


--
-- TOC entry 874 (class 1255 OID 5283012)
-- Name: uf_tr_his_plan(); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_tr_his_plan() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Funcion de auditoria para los cambios en la tabla plan

	IF (TG_OP = 'UPDATE' or TG_OP = 'DELETE') THEN
		INSERT INTO his_plan SELECT nextval('public.seq_his_plan'::text::regclass),
        OLD.*, substr(TG_OP,1,1), now(), user;
        RETURN OLD;
	ELSEIF (TG_OP = 'INSERT') THEN
		INSERT INTO his_plan SELECT nextval('public.seq_his_plan'::text::regclass),
        NEW.*, substr(TG_OP,1,1), now(), user;
        RETURN OLD;
	END IF;
    RETURN NULL; -- result is ignored since this is an AFTER trigger
END;
$$;


ALTER FUNCTION sam.uf_tr_his_plan() OWNER TO postgres;

--
-- TOC entry 5723 (class 0 OID 0)
-- Dependencies: 874
-- Name: FUNCTION uf_tr_his_plan(); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_tr_his_plan() IS 'Procedimiento de tipo trigger para actualizar la tabla de datos históricos de Convenios';


--
-- TOC entry 915 (class 1255 OID 5283013)
-- Name: uf_tr_his_rodado(); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_tr_his_rodado() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Funcion de auditoria para los cambios en la tabla rodado
        
	IF (TG_OP = 'UPDATE' or TG_OP = 'DELETE') THEN
		INSERT INTO his_rodado SELECT nextval('public.seq_his_rodado'::text::regclass),
        OLD.*, substr(TG_OP,1,1), now(), user;
        RETURN OLD;
/*	ELSEIF (TG_OP = 'INSERT') THEN
		INSERT INTO his_rodado SELECT nextval('public.seq_his_rodado'::text::regclass),
        NEW.*, substr(TG_OP,1,1), now(), user;
        RETURN OLD;
*/        
	END IF;
    
    RETURN NULL; -- result is ignored since this is an AFTER trigger
END;
$$;


ALTER FUNCTION sam.uf_tr_his_rodado() OWNER TO postgres;

--
-- TOC entry 923 (class 1255 OID 5283014)
-- Name: uf_tr_sis_usuario_acc(); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_tr_sis_usuario_acc() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Funcion de auditoria para los cambios en la tabla objeto
        
	--IF (TG_OP = 'UPDATE' or TG_OP = 'DELETE') THEN
    --	if OLD.usr_id in (29,107) Then
    --    	If (OLD.fchsalida is null) Then 
    --    		OLD.fchsalida=OLD.fchingreso;
    --        End If;
    --    End If;  
	--ELSE
    IF (TG_OP = 'INSERT') THEN
    	if NEW.usr_id in (29,107) Then
        	If (NEW.fchsalida is null) Then 
        		NEW.fchsalida=NEW.fchingreso;
            End If;
        End If;    
	END IF;
    RETURN NEW; -- result is ignored since this is an AFTER trigger
END;
$$;


ALTER FUNCTION sam.uf_tr_sis_usuario_acc() OWNER TO postgres;

--
-- TOC entry 943 (class 1255 OID 5283015)
-- Name: uf_trib_venc(integer, integer, integer, character varying); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_trib_venc(_trib_id integer, _anio integer, _cuota integer, _obj_id character varying DEFAULT ''::character varying) RETURNS TABLE(fchvenc1 date, fchvenc2 date, fchvencanual date)
    LANGUAGE plpgsql
    AS $$
declare
  segterm smallint;
  cuit varchar(11);
  term smallint;
begin

    -- función que devuelve la fecha de vencimiento por periodo
    -- recupera los datos de la tabla standar tributo_venc
    -- o de tributo_venc_cuit, segun terminacion de cuit

    Select into segterm, fchvenc1, fchvenc2, fchvencanual
    v.segun_term, v.fchvenc1, v.fchvenc2, v.fchvencanual
    From trib_venc v Where v.trib_id=_trib_id and v.anio=_anio and v.cuota=_cuota;

    If (segterm = 1) then
        -- verifico el numero de cuit del comercio
        select  into cuit c.cuit from comer c where c.obj_id=_obj_id;
        If (lenght(cuit)=11) then
            term = cast(substr(cuit,11,1) as smallint);
        Else
            term = 0;
        End If;

        Select into fchvenc1, fchvenc2  fchvenc, fchvenc 
        from trib_venc_cuit v
        where v.trib_id=_trib_id and v.anio=_anio and v.cuota=_cuota and v.term=term;
        
        fchvencanual = null;
    End If;
    
    Return Next;
end
$$;


ALTER FUNCTION sam.uf_trib_venc(_trib_id integer, _anio integer, _cuota integer, _obj_id character varying) OWNER TO postgres;

--
-- TOC entry 944 (class 1255 OID 5283016)
-- Name: uf_usuario_sistema(integer); Type: FUNCTION; Schema: sam; Owner: postgres
--

CREATE FUNCTION sam.uf_usuario_sistema(_usr_id integer) RETURNS TABLE(s1_seg boolean, s2_cat boolean, s3_tri boolean, s4_fin boolean, s5_exp boolean, s6_rh boolean, s7_web boolean, s8_rcl boolean)
    LANGUAGE plpgsql
    AS $$
declare
	sis_id smallint;
begin
    -- def: devuelve un informe de los sistemas a los cuales tiene acceso el usuario

	-- Inicio las variables:
    s1_seg = false;
    s2_cat = false;
    s3_tri = false;
    s4_fin = false;
    s5_exp = false;
    s6_rh = false;
    s7_web = false;
    s8_rcl = false;

    -- recupero los datos del alquiler y cuenta
	For sis_id In Select distinct m.sis_id
    From sam.sis_usuario_proceso up
    Inner Join sam.sis_proceso p on up.pro_id=p.pro_id
    Inner Join sam.sis_modulo m on p.mod_id=m.mod_id
    where up.usr_id=_usr_id Loop

		If sis_id=1 Then s1_seg=true; End If;
		If sis_id=2 Then s2_cat=true; End If;
		If sis_id=3 Then s3_tri=true; End If;
		If sis_id=4 Then s4_fin=true; End If;
		If sis_id=5 Then s5_exp=true; End If;
		If sis_id=6 Then s6_rh=true; End If;
		If sis_id=7 Then s7_web=true; End If;
		If sis_id=8 Then s8_rcl=true; End If;

    End Loop;

    Return next;
end
$$;


ALTER FUNCTION sam.uf_usuario_sistema(_usr_id integer) OWNER TO postgres;

--
-- TOC entry 5724 (class 0 OID 0)
-- Dependencies: 944
-- Name: FUNCTION uf_usuario_sistema(_usr_id integer); Type: COMMENT; Schema: sam; Owner: postgres
--

COMMENT ON FUNCTION sam.uf_usuario_sistema(_usr_id integer) IS 'devuelve un informe de los sistemas a los cuales tiene acceso el usuario';



--
-- TOC entry 5420 (class 2620 OID 5317072)
-- Name: calc_act tr_calc_act; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tr_calc_act AFTER INSERT ON public.calc_act FOR EACH ROW EXECUTE PROCEDURE sam.uf_tr_calc_act();


--
-- TOC entry 5408 (class 2620 OID 5316557)
-- Name: calc_interes tr_calc_interes; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tr_calc_interes AFTER INSERT ON public.calc_interes FOR EACH ROW EXECUTE PROCEDURE sam.uf_tr_calc_interes();


--
-- TOC entry 5409 (class 2620 OID 5316558)
-- Name: calc_mm tr_calc_mm; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tr_calc_mm AFTER INSERT ON public.calc_mm FOR EACH ROW EXECUTE PROCEDURE sam.uf_tr_calc_mm();


--
-- TOC entry 5410 (class 2620 OID 5316559)
-- Name: cem tr_his_cementerio; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tr_his_cementerio AFTER INSERT OR DELETE OR UPDATE ON public.cem FOR EACH ROW EXECUTE PROCEDURE sam.uf_tr_his_cem();

ALTER TABLE public.cem DISABLE TRIGGER tr_his_cementerio;


--
-- TOC entry 5411 (class 2620 OID 5316560)
-- Name: comer tr_his_comer; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tr_his_comer AFTER INSERT OR DELETE OR UPDATE ON public.comer FOR EACH ROW EXECUTE PROCEDURE sam.uf_tr_his_comer();


--
-- TOC entry 5412 (class 2620 OID 5316561)
-- Name: ctacte_ajuste tr_his_ctacte_ajuste; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tr_his_ctacte_ajuste AFTER DELETE OR UPDATE ON public.ctacte_ajuste FOR EACH ROW EXECUTE PROCEDURE sam.uf_tr_his_ctacte_ajuste();


--
-- TOC entry 5413 (class 2620 OID 5316562)
-- Name: domi tr_his_domi; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tr_his_domi AFTER DELETE OR UPDATE ON public.domi FOR EACH ROW EXECUTE PROCEDURE sam.uf_tr_his_domi();

ALTER TABLE public.domi DISABLE TRIGGER tr_his_domi;


--
-- TOC entry 5414 (class 2620 OID 5316563)
-- Name: inm tr_his_inmueble; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tr_his_inmueble AFTER INSERT OR DELETE OR UPDATE ON public.inm FOR EACH ROW EXECUTE PROCEDURE sam.uf_tr_his_inm();

ALTER TABLE public.inm DISABLE TRIGGER tr_his_inmueble;


--
-- TOC entry 5415 (class 2620 OID 5316564)
-- Name: inm_mej tr_his_inmueble_mej; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tr_his_inmueble_mej AFTER INSERT OR DELETE OR UPDATE ON public.inm_mej FOR EACH ROW EXECUTE PROCEDURE sam.uf_tr_his_inm_mej();

ALTER TABLE public.inm_mej DISABLE TRIGGER tr_his_inmueble_mej;


--
-- TOC entry 5406 (class 2620 OID 5316565)
-- Name: objeto tr_his_objeto; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tr_his_objeto BEFORE INSERT OR UPDATE ON public.objeto FOR EACH ROW EXECUTE PROCEDURE sam.uf_tr_his_objeto();

ALTER TABLE public.objeto DISABLE TRIGGER tr_his_objeto;


--
-- TOC entry 5416 (class 2620 OID 5316566)
-- Name: objeto_item tr_his_objeto_item; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tr_his_objeto_item AFTER INSERT OR DELETE OR UPDATE ON public.objeto_item FOR EACH ROW EXECUTE PROCEDURE sam.uf_tr_his_objeto_item();

ALTER TABLE public.objeto_item DISABLE TRIGGER tr_his_objeto_item;


--
-- TOC entry 5407 (class 2620 OID 5316567)
-- Name: persona tr_his_persona; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tr_his_persona AFTER INSERT OR DELETE OR UPDATE ON public.persona FOR EACH ROW EXECUTE PROCEDURE sam.uf_tr_his_persona();

ALTER TABLE public.persona DISABLE TRIGGER tr_his_persona;


--
-- TOC entry 5417 (class 2620 OID 5316568)
-- Name: plan tr_his_plan; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tr_his_plan AFTER INSERT OR DELETE OR UPDATE ON public.plan FOR EACH ROW EXECUTE PROCEDURE sam.uf_tr_his_plan();

ALTER TABLE public.plan DISABLE TRIGGER tr_his_plan;


--
-- TOC entry 5418 (class 2620 OID 5316569)
-- Name: rodado tr_his_rodado; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tr_his_rodado AFTER INSERT OR DELETE OR UPDATE ON public.rodado FOR EACH ROW EXECUTE PROCEDURE sam.uf_tr_his_rodado();

ALTER TABLE public.rodado DISABLE TRIGGER tr_his_rodado;


--
-- TOC entry 5419 (class 2620 OID 5316572)
-- Name: sis_usuario_acc sis_usuario_acc_tr; Type: TRIGGER; Schema: sam; Owner: postgres
--

CREATE TRIGGER sis_usuario_acc_tr AFTER INSERT ON sam.sis_usuario_acc FOR EACH ROW EXECUTE PROCEDURE sam.uf_tr_sis_usuario_acc();


--
-- PostgreSQL database dump complete
--

